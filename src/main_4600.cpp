// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Text.UnicodeEncoding
#include "System/Text/UnicodeEncoding.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.UnicodeEncoding m_encoding
System::Text::UnicodeEncoding* System::IO::StringWriter::_get_m_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::_get_m_encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::UnicodeEncoding*>("System.IO", "StringWriter", "m_encoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.UnicodeEncoding m_encoding
void System::IO::StringWriter::_set_m_encoding(System::Text::UnicodeEncoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::_set_m_encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StringWriter", "m_encoding", value));
}
// Autogenerated method: System.IO.StringWriter.Close
void System::IO::StringWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringWriter.Dispose
void System::IO::StringWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StringWriter.get_Encoding
System::Text::Encoding* System::IO::StringWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.ToString
::Il2CppString* System::IO::StringWriter::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.IO.TextReader/NullTextReader
#include "System/IO/TextReader_NullTextReader.hpp"
// Including type: System.IO.TextReader/SyncTextReader
#include "System/IO/TextReader_SyncTextReader.hpp"
// Including type: System.IO.TextReader/<>c
#include "System/IO/TextReader_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Object,System.String> _ReadLineDelegate
System::Func_2<::Il2CppObject*, ::Il2CppString*>* System::IO::TextReader::_get__ReadLineDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_get__ReadLineDelegate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, ::Il2CppString*>*>("System.IO", "TextReader", "_ReadLineDelegate")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Object,System.String> _ReadLineDelegate
void System::IO::TextReader::_set__ReadLineDelegate(System::Func_2<::Il2CppObject*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_set__ReadLineDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "_ReadLineDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Object,System.Int32> _ReadDelegate
System::Func_2<::Il2CppObject*, int>* System::IO::TextReader::_get__ReadDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_get__ReadDelegate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, int>*>("System.IO", "TextReader", "_ReadDelegate")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Object,System.Int32> _ReadDelegate
void System::IO::TextReader::_set__ReadDelegate(System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_set__ReadDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "_ReadDelegate", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextReader Null
System::IO::TextReader* System::IO::TextReader::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::TextReader*>("System.IO", "TextReader", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextReader Null
void System::IO::TextReader::_set_Null(System::IO::TextReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "Null", value));
}
// Autogenerated method: System.IO.TextReader.Close
void System::IO::TextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Close_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Dispose
void System::IO::TextReader::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Dispose
void System::IO::TextReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextReader.Peek
int System::IO::TextReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Peek_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Read
int System::IO::TextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Read_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Read
int System::IO::TextReader::Read(::Array<::Il2CppChar>*& buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Read_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextReader.ReadToEnd
::Il2CppString* System::IO::TextReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::ReadToEnd_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.ReadLine
::Il2CppString* System::IO::TextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::ReadLine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Synchronized
System::IO::TextReader* System::IO::TextReader::Synchronized(System::IO::TextReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Synchronized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "TextReader", "Synchronized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::TextReader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: System.IO.TextReader..cctor
void System::IO::TextReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "TextReader", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader/NullTextReader
#include "System/IO/TextReader_NullTextReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextReader/NullTextReader.Read
int System::IO::TextReader::NullTextReader::Read(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::NullTextReader::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextReader/NullTextReader.ReadLine
::Il2CppString* System::IO::TextReader::NullTextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::NullTextReader::ReadLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader/SyncTextReader
#include "System/IO/TextReader_SyncTextReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextReader/SyncTextReader.Close
void System::IO::TextReader::SyncTextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.Dispose
void System::IO::TextReader::SyncTextReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.Peek
int System::IO::TextReader::SyncTextReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Peek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.Read
int System::IO::TextReader::SyncTextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.Read
int System::IO::TextReader::SyncTextReader::Read(::Array<::Il2CppChar>*& buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.ReadLine
::Il2CppString* System::IO::TextReader::SyncTextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::ReadLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.ReadToEnd
::Il2CppString* System::IO::TextReader::SyncTextReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::ReadToEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader/<>c
#include "System/IO/TextReader_--c.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextReader/<>c <>9
System::IO::TextReader::$$c* System::IO::TextReader::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::IO::TextReader::$$c*>("System.IO", "TextReader/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextReader/<>c <>9
void System::IO::TextReader::$$c::_set_$$9(System::IO::TextReader::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextReader/<>c", "<>9", value)));
}
// Autogenerated method: System.IO.TextReader/<>c..cctor
void System::IO::TextReader::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextReader/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextReader/<>c.<.cctor>b__22_0
::Il2CppString* System::IO::TextReader::$$c::$_cctor$b__22_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::<.cctor>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__22_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextReader/<>c.<.cctor>b__22_1
int System::IO::TextReader::$$c::$_cctor$b__22_1(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::<.cctor>b__22_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__22_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.TextWriter/NullTextWriter
#include "System/IO/TextWriter_NullTextWriter.hpp"
// Including type: System.IO.TextWriter/SyncTextWriter
#include "System/IO/TextWriter_SyncTextWriter.hpp"
// Including type: System.IO.TextWriter/<>c
#include "System/IO/TextWriter_--c.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter Null
System::IO::TextWriter* System::IO::TextWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::TextWriter*>("System.IO", "TextWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter Null
void System::IO::TextWriter::_set_Null(System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteCharDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteCharDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteCharDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteCharDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteCharDelegate
void System::IO::TextWriter::_set__WriteCharDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteCharDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteCharDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteStringDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteStringDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteStringDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteStringDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteStringDelegate
void System::IO::TextWriter::_set__WriteStringDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteStringDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteStringDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteCharArrayRangeDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteCharArrayRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteCharArrayRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteCharArrayRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteCharArrayRangeDelegate
void System::IO::TextWriter::_set__WriteCharArrayRangeDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteCharArrayRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteCharArrayRangeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteLineCharDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteLineCharDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteLineCharDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteLineCharDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteLineCharDelegate
void System::IO::TextWriter::_set__WriteLineCharDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteLineCharDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteLineCharDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteLineStringDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteLineStringDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteLineStringDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteLineStringDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteLineStringDelegate
void System::IO::TextWriter::_set__WriteLineStringDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteLineStringDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteLineStringDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteLineCharArrayRangeDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteLineCharArrayRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteLineCharArrayRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteLineCharArrayRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteLineCharArrayRangeDelegate
void System::IO::TextWriter::_set__WriteLineCharArrayRangeDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteLineCharArrayRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteLineCharArrayRangeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _FlushDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__FlushDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__FlushDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_FlushDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _FlushDelegate
void System::IO::TextWriter::_set__FlushDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__FlushDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_FlushDelegate", value));
}
// Autogenerated method: System.IO.TextWriter.get_InitialNewLine
::Il2CppString* System::IO::TextWriter::get_InitialNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::get_InitialNewLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "TextWriter", "get_InitialNewLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.get_FormatProvider
System::IFormatProvider* System::IO::TextWriter::get_FormatProvider_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::get_FormatProvider_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FormatProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IFormatProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Close
void System::IO::TextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Close_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Dispose
void System::IO::TextWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextWriter.Dispose
void System::IO::TextWriter::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Flush
void System::IO::TextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Flush_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.get_Encoding
System::Text::Encoding* System::IO::TextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::get_Encoding_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Synchronized
System::IO::TextWriter* System::IO::TextWriter::Synchronized(System::IO::TextWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Synchronized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "TextWriter", "Synchronized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::TextWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, writer);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Array<::Il2CppChar>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write_NEW(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write_NEW(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0, arg1, arg2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine_NEW(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine_NEW(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine_NEW(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine_NEW(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine_NEW(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0, arg1)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg0, arg1);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine_NEW(::Il2CppString* format, ::Array<::Il2CppObject*>* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg);
}
// Creating initializer_list -> params proxy for: System.Void WriteLine(System.String format, params System.Object[] arg)
void System::IO::TextWriter::WriteLine_NEW(::Il2CppString* format, std::initializer_list<::Il2CppObject*> arg) {
  System::IO::TextWriter::WriteLine_NEW(format, ::Array<::Il2CppObject*>::New(arg));
}
// Autogenerated method: System.IO.TextWriter..cctor
void System::IO::TextWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "TextWriter", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/NullTextWriter
#include "System/IO/TextWriter_NullTextWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextWriter/NullTextWriter.get_Encoding
System::Text::Encoding* System::IO::TextWriter::NullTextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.Write
void System::IO::TextWriter::NullTextWriter::Write(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.Write
void System::IO::TextWriter::NullTextWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.WriteLine
void System::IO::TextWriter::NullTextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.WriteLine
void System::IO::TextWriter::NullTextWriter::WriteLine(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/SyncTextWriter
#include "System/IO/TextWriter_SyncTextWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.get_Encoding
System::Text::Encoding* System::IO::TextWriter::SyncTextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.get_FormatProvider
System::IFormatProvider* System::IO::TextWriter::SyncTextWriter::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::get_FormatProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FormatProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IFormatProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Close
void System::IO::TextWriter::SyncTextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Dispose
void System::IO::TextWriter::SyncTextWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Flush
void System::IO::TextWriter::SyncTextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Array<::Il2CppChar>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0, arg1, arg2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0, arg1)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg0, arg1);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* format, ::Array<::Il2CppObject*>* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, format, arg);
}
// Creating initializer_list -> params proxy for: System.Void WriteLine(System.String format, params System.Object[] arg)
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* format, std::initializer_list<::Il2CppObject*> arg) {
  System::IO::TextWriter::SyncTextWriter::WriteLine(format, ::Array<::Il2CppObject*>::New(arg));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/<>c
#include "System/IO/TextWriter_--c.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter/<>c <>9
System::IO::TextWriter::$$c* System::IO::TextWriter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::IO::TextWriter::$$c*>("System.IO", "TextWriter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter/<>c <>9
void System::IO::TextWriter::$$c::_set_$$9(System::IO::TextWriter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9", value)));
}
// Autogenerated method: System.IO.TextWriter/<>c..cctor
void System::IO::TextWriter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/<>c.<.cctor>b__73_0
void System::IO::TextWriter::$$c::$_cctor$b__73_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<.cctor>b__73_1
void System::IO::TextWriter::$$c::$_cctor$b__73_1(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<.cctor>b__73_2
void System::IO::TextWriter::$$c::$_cctor$b__73_2(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<.cctor>b__73_3
void System::IO::TextWriter::$$c::$_cctor$b__73_3(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<.cctor>b__73_4
void System::IO::TextWriter::$$c::$_cctor$b__73_4(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<.cctor>b__73_5
void System::IO::TextWriter::$$c::$_cctor$b__73_5(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_5", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<.cctor>b__73_6
void System::IO::TextWriter::$$c::$_cctor$b__73_6(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_6", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.UnmanagedMemoryStream
#include "System/IO/UnmanagedMemoryStream.hpp"
// Including type: System.Runtime.InteropServices.SafeBuffer
#include "System/Runtime/InteropServices/SafeBuffer.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.UnmanagedMemoryStream.Initialize
void System::IO::UnmanagedMemoryStream::Initialize(uint8_t* pointer, int64_t length, int64_t capacity, System::IO::FileAccess access, bool skipSecurityCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pointer, length, capacity, access, skipSecurityCheck)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointer, length, capacity, access, skipSecurityCheck);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_PositionPointer
uint8_t* System::IO::UnmanagedMemoryStream::get_PositionPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_PositionPointer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PositionPointer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanRead
bool System::IO::UnmanagedMemoryStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_CanRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanSeek
bool System::IO::UnmanagedMemoryStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_CanSeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanWrite
bool System::IO::UnmanagedMemoryStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_CanWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Dispose
void System::IO::UnmanagedMemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Flush
void System::IO::UnmanagedMemoryStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_Length
int64_t System::IO::UnmanagedMemoryStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_Position
int64_t System::IO::UnmanagedMemoryStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.set_Position
void System::IO::UnmanagedMemoryStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::set_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Read
int System::IO::UnmanagedMemoryStream::Read(::Array<uint8_t>*& buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::UnmanagedMemoryStream::ReadAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::ReadAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadByte
int System::IO::UnmanagedMemoryStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::ReadByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Seek
int64_t System::IO::UnmanagedMemoryStream::Seek(int64_t offset, System::IO::SeekOrigin loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Seek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset, loc)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, loc);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.SetLength
void System::IO::UnmanagedMemoryStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Write
void System::IO::UnmanagedMemoryStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteAsync
System::Threading::Tasks::Task* System::IO::UnmanagedMemoryStream::WriteAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::WriteAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteByte
void System::IO::UnmanagedMemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::WriteByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.PathInternal
#include "System/IO/PathInternal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.PathInternal.IsPartiallyQualified
bool System::IO::PathInternal::IsPartiallyQualified(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::PathInternal::IsPartiallyQualified");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "PathInternal", "IsPartiallyQualified", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal.HasIllegalCharacters
bool System::IO::PathInternal::HasIllegalCharacters(::Il2CppString* path, bool checkAdditional) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::PathInternal::HasIllegalCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "PathInternal", "HasIllegalCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, checkAdditional)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, checkAdditional);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.DirectoryInfo.Initialize
void System::IO::DirectoryInfo::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.get_Parent
System::IO::DirectoryInfo* System::IO::DirectoryInfo::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::get_Parent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IO::DirectoryInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.Create
void System::IO::DirectoryInfo::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.GetDirectories
::Array<System::IO::DirectoryInfo*>* System::IO::DirectoryInfo::GetDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDirectories", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::IO::DirectoryInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.GetDirectories
::Array<System::IO::DirectoryInfo*>* System::IO::DirectoryInfo::GetDirectories(::Il2CppString* searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDirectories", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(searchPattern)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::IO::DirectoryInfo*>*, false>(this, ___internal__method, searchPattern);
}
// Autogenerated method: System.IO.DirectoryInfo.CheckPath
void System::IO::DirectoryInfo::CheckPath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::CheckPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: System.IO.DirectoryInfo.get_Exists
bool System::IO::DirectoryInfo::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::get_Exists");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Exists", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.get_Name
::Il2CppString* System::IO::DirectoryInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.ToString
::Il2CppString* System::IO::DirectoryInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.File
#include "System/IO/File.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IO.MonoIOStat
#include "System/IO/MonoIOStat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.DateTime> defaultLocalFileTime
System::Nullable_1<System::DateTime> System::IO::File::_get_defaultLocalFileTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::_get_defaultLocalFileTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Nullable_1<System::DateTime>>("System.IO", "File", "defaultLocalFileTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.DateTime> defaultLocalFileTime
void System::IO::File::_set_defaultLocalFileTime(System::Nullable_1<System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::_set_defaultLocalFileTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "File", "defaultLocalFileTime", value));
}
// Autogenerated method: System.IO.File.AppendText
System::IO::StreamWriter* System::IO::File::AppendText(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::AppendText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "AppendText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::StreamWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Create
System::IO::FileStream* System::IO::File::Create(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Create
System::IO::FileStream* System::IO::File::Create(::Il2CppString* path, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, bufferSize)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, bufferSize);
}
// Autogenerated method: System.IO.File.CreateText
System::IO::StreamWriter* System::IO::File::CreateText(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::CreateText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "CreateText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::StreamWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Delete
void System::IO::File::Delete(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Delete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "Delete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Exists
bool System::IO::File::Exists(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Exists");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "Exists", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.GetAttributes
System::IO::FileAttributes System::IO::File::GetAttributes(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "GetAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileAttributes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.GetCreationTime
System::DateTime System::IO::File::GetCreationTime(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::GetCreationTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "GetCreationTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.GetLastWriteTime
System::DateTime System::IO::File::GetLastWriteTime(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::GetLastWriteTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "GetLastWriteTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Open
System::IO::FileStream* System::IO::File::Open(::Il2CppString* path, System::IO::FileMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Open");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "Open", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, mode)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, mode);
}
// Autogenerated method: System.IO.File.Open
System::IO::FileStream* System::IO::File::Open(::Il2CppString* path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Open");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "Open", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, mode, access, share)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, mode, access, share);
}
// Autogenerated method: System.IO.File.OpenRead
System::IO::FileStream* System::IO::File::OpenRead(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::OpenRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "OpenRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.OpenText
System::IO::StreamReader* System::IO::File::OpenText(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::OpenText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "OpenText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::StreamReader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Replace
void System::IO::File::Replace(::Il2CppString* sourceFileName, ::Il2CppString* destinationFileName, ::Il2CppString* destinationBackupFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Replace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "Replace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceFileName, destinationFileName, destinationBackupFileName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName);
}
// Autogenerated method: System.IO.File.Replace
void System::IO::File::Replace(::Il2CppString* sourceFileName, ::Il2CppString* destinationFileName, ::Il2CppString* destinationBackupFileName, bool ignoreMetadataErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Replace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "Replace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors);
}
// Autogenerated method: System.IO.File.ReadAllBytes
::Array<uint8_t>* System::IO::File::ReadAllBytes(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::ReadAllBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.ReadAllLines
::Array<::Il2CppString*>* System::IO::File::ReadAllLines(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::ReadAllLines");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllLines", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.ReadAllLines
::Array<::Il2CppString*>* System::IO::File::ReadAllLines(System::IO::StreamReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::ReadAllLines");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllLines", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: System.IO.File.ReadAllText
::Il2CppString* System::IO::File::ReadAllText(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::ReadAllText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.WriteAllBytes
void System::IO::File::WriteAllBytes(::Il2CppString* path, ::Array<uint8_t>* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, bytes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, bytes);
}
// Autogenerated method: System.IO.File.WriteAllLines
void System::IO::File::WriteAllLines(::Il2CppString* path, ::Array<::Il2CppString*>* contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllLines");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllLines", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, contents)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, contents);
}
// Autogenerated method: System.IO.File.WriteAllLines
void System::IO::File::WriteAllLines(System::IO::StreamWriter* writer, ::Array<::Il2CppString*>* contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllLines");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllLines", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, contents)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, writer, contents);
}
// Autogenerated method: System.IO.File.WriteAllText
void System::IO::File::WriteAllText(::Il2CppString* path, ::Il2CppString* contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, contents)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, contents);
}
// Autogenerated method: System.IO.File.WriteAllText
void System::IO::File::WriteAllText(::Il2CppString* path, ::Il2CppString* contents, System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, contents, encoding)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, contents, encoding);
}
// Autogenerated method: System.IO.File.get_DefaultLocalFileTime
System::DateTime System::IO::File::get_DefaultLocalFileTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::get_DefaultLocalFileTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "get_DefaultLocalFileTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.File.AppendAllLines
void System::IO::File::AppendAllLines(::Il2CppString* path, System::Collections::Generic::IEnumerable_1<::Il2CppString*>* contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::AppendAllLines");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "AppendAllLines", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, contents)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, contents);
}
// Autogenerated method: System.IO.File.FillAttributeInfo
int System::IO::File::FillAttributeInfo(::Il2CppString* path, System::IO::MonoIOStat& data, bool tryagain, bool returnErrorOnNotFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::FillAttributeInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "File", "FillAttributeInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, data, tryagain, returnErrorOnNotFound)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, data, tryagain, returnErrorOnNotFound);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileAccess Read
System::IO::FileAccess System::IO::FileAccess::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAccess>("System.IO", "FileAccess", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAccess Read
void System::IO::FileAccess::_set_Read(System::IO::FileAccess value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAccess", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAccess Write
System::IO::FileAccess System::IO::FileAccess::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAccess>("System.IO", "FileAccess", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAccess Write
void System::IO::FileAccess::_set_Write(System::IO::FileAccess value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAccess", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAccess ReadWrite
System::IO::FileAccess System::IO::FileAccess::_get_ReadWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_get_ReadWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAccess>("System.IO", "FileAccess", "ReadWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAccess ReadWrite
void System::IO::FileAccess::_set_ReadWrite(System::IO::FileAccess value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_set_ReadWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAccess", "ReadWrite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Archive
System::IO::FileAttributes System::IO::FileAttributes::_get_Archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Archive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Archive"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Archive
void System::IO::FileAttributes::_set_Archive(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Archive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Archive", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Compressed
System::IO::FileAttributes System::IO::FileAttributes::_get_Compressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Compressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Compressed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Compressed
void System::IO::FileAttributes::_set_Compressed(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Compressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Compressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Device
System::IO::FileAttributes System::IO::FileAttributes::_get_Device() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Device");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Device"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Device
void System::IO::FileAttributes::_set_Device(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Device");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Device", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Directory
System::IO::FileAttributes System::IO::FileAttributes::_get_Directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Directory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Directory"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Directory
void System::IO::FileAttributes::_set_Directory(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Directory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Directory", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Encrypted
System::IO::FileAttributes System::IO::FileAttributes::_get_Encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Encrypted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Encrypted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Encrypted
void System::IO::FileAttributes::_set_Encrypted(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Encrypted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Encrypted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Hidden
System::IO::FileAttributes System::IO::FileAttributes::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Hidden
void System::IO::FileAttributes::_set_Hidden(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Normal
System::IO::FileAttributes System::IO::FileAttributes::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Normal
void System::IO::FileAttributes::_set_Normal(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes NotContentIndexed
System::IO::FileAttributes System::IO::FileAttributes::_get_NotContentIndexed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_NotContentIndexed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "NotContentIndexed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes NotContentIndexed
void System::IO::FileAttributes::_set_NotContentIndexed(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_NotContentIndexed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "NotContentIndexed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Offline
System::IO::FileAttributes System::IO::FileAttributes::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Offline
void System::IO::FileAttributes::_set_Offline(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Offline", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes ReadOnly
System::IO::FileAttributes System::IO::FileAttributes::_get_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_ReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "ReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes ReadOnly
void System::IO::FileAttributes::_set_ReadOnly(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_ReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "ReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes ReparsePoint
System::IO::FileAttributes System::IO::FileAttributes::_get_ReparsePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_ReparsePoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "ReparsePoint"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes ReparsePoint
void System::IO::FileAttributes::_set_ReparsePoint(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_ReparsePoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "ReparsePoint", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes SparseFile
System::IO::FileAttributes System::IO::FileAttributes::_get_SparseFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_SparseFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "SparseFile"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes SparseFile
void System::IO::FileAttributes::_set_SparseFile(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_SparseFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "SparseFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes System
System::IO::FileAttributes System::IO::FileAttributes::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes System
void System::IO::FileAttributes::_set_System(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Temporary
System::IO::FileAttributes System::IO::FileAttributes::_get_Temporary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Temporary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Temporary"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Temporary
void System::IO::FileAttributes::_set_Temporary(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Temporary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Temporary", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes IntegrityStream
System::IO::FileAttributes System::IO::FileAttributes::_get_IntegrityStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_IntegrityStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "IntegrityStream"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes IntegrityStream
void System::IO::FileAttributes::_set_IntegrityStream(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_IntegrityStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "IntegrityStream", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes NoScrubData
System::IO::FileAttributes System::IO::FileAttributes::_get_NoScrubData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_NoScrubData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "NoScrubData"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes NoScrubData
void System::IO::FileAttributes::_set_NoScrubData(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_NoScrubData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "NoScrubData", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode CreateNew
System::IO::FileMode System::IO::FileMode::_get_CreateNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_CreateNew");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "CreateNew"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode CreateNew
void System::IO::FileMode::_set_CreateNew(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_CreateNew");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "CreateNew", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Create
System::IO::FileMode System::IO::FileMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Create
void System::IO::FileMode::_set_Create(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Open
System::IO::FileMode System::IO::FileMode::_get_Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_Open");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "Open"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Open
void System::IO::FileMode::_set_Open(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_Open");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Open", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode OpenOrCreate
System::IO::FileMode System::IO::FileMode::_get_OpenOrCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_OpenOrCreate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "OpenOrCreate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode OpenOrCreate
void System::IO::FileMode::_set_OpenOrCreate(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_OpenOrCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "OpenOrCreate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Truncate
System::IO::FileMode System::IO::FileMode::_get_Truncate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_Truncate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "Truncate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Truncate
void System::IO::FileMode::_set_Truncate(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_Truncate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Truncate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Append
System::IO::FileMode System::IO::FileMode::_get_Append() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_Append");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "Append"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Append
void System::IO::FileMode::_set_Append(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_Append");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Append", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileOptions
#include "System/IO/FileOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions None
System::IO::FileOptions System::IO::FileOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions None
void System::IO::FileOptions::_set_None(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions Encrypted
System::IO::FileOptions System::IO::FileOptions::_get_Encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_Encrypted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "Encrypted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions Encrypted
void System::IO::FileOptions::_set_Encrypted(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_Encrypted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "Encrypted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions DeleteOnClose
System::IO::FileOptions System::IO::FileOptions::_get_DeleteOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_DeleteOnClose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "DeleteOnClose"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions DeleteOnClose
void System::IO::FileOptions::_set_DeleteOnClose(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_DeleteOnClose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "DeleteOnClose", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions SequentialScan
System::IO::FileOptions System::IO::FileOptions::_get_SequentialScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_SequentialScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "SequentialScan"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions SequentialScan
void System::IO::FileOptions::_set_SequentialScan(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_SequentialScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "SequentialScan", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions RandomAccess
System::IO::FileOptions System::IO::FileOptions::_get_RandomAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_RandomAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "RandomAccess"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions RandomAccess
void System::IO::FileOptions::_set_RandomAccess(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_RandomAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "RandomAccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions Asynchronous
System::IO::FileOptions System::IO::FileOptions::_get_Asynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_Asynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "Asynchronous"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions Asynchronous
void System::IO::FileOptions::_set_Asynchronous(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_Asynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "Asynchronous", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions WriteThrough
System::IO::FileOptions System::IO::FileOptions::_get_WriteThrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_WriteThrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "WriteThrough"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions WriteThrough
void System::IO::FileOptions::_set_WriteThrough(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_WriteThrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "WriteThrough", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare None
System::IO::FileShare System::IO::FileShare::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare None
void System::IO::FileShare::_set_None(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Read
System::IO::FileShare System::IO::FileShare::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Read
void System::IO::FileShare::_set_Read(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Write
System::IO::FileShare System::IO::FileShare::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Write
void System::IO::FileShare::_set_Write(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare ReadWrite
System::IO::FileShare System::IO::FileShare::_get_ReadWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_ReadWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "ReadWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare ReadWrite
void System::IO::FileShare::_set_ReadWrite(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_ReadWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "ReadWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Delete
System::IO::FileShare System::IO::FileShare::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Delete
void System::IO::FileShare::_set_Delete(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Delete", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Inheritable
System::IO::FileShare System::IO::FileShare::_get_Inheritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_Inheritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "Inheritable"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Inheritable
void System::IO::FileShare::_set_Inheritable(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_Inheritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Inheritable", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.FileStream/ReadDelegate
#include "System/IO/FileStream_ReadDelegate.hpp"
// Including type: System.IO.FileStream/WriteDelegate
#include "System/IO/FileStream_WriteDelegate.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeFileHandle
#include "Microsoft/Win32/SafeHandles/SafeFileHandle.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 DefaultBufferSize
int System::IO::FileStream::_get_DefaultBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_get_DefaultBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.IO", "FileStream", "DefaultBufferSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DefaultBufferSize
void System::IO::FileStream::_set_DefaultBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_set_DefaultBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "DefaultBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] buf_recycle
::Array<uint8_t>* System::IO::FileStream::_get_buf_recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_get_buf_recycle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.IO", "FileStream", "buf_recycle"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] buf_recycle
void System::IO::FileStream::_set_buf_recycle(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_set_buf_recycle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "buf_recycle", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object buf_recycle_lock
::Il2CppObject* System::IO::FileStream::_get_buf_recycle_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_get_buf_recycle_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.IO", "FileStream", "buf_recycle_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object buf_recycle_lock
void System::IO::FileStream::_set_buf_recycle_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_set_buf_recycle_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "buf_recycle_lock", value));
}
// Autogenerated method: System.IO.FileStream.Init
void System::IO::FileStream::Init(Microsoft::Win32::SafeHandles::SafeFileHandle* safeHandle, System::IO::FileAccess access, bool ownsHandle, int bufferSize, bool isAsync, bool isConsoleWrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, access, ownsHandle, bufferSize, isAsync, isConsoleWrapper)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, safeHandle, access, ownsHandle, bufferSize, isAsync, isConsoleWrapper);
}
// Autogenerated method: System.IO.FileStream.get_SafeFileHandle
Microsoft::Win32::SafeHandles::SafeFileHandle* System::IO::FileStream::get_SafeFileHandle_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_SafeFileHandle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SafeFileHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeFileHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ExposeHandle
void System::IO::FileStream::ExposeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ExposeHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExposeHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadInternal
int System::IO::FileStream::ReadInternal(::Array<uint8_t>* dest, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, dest, offset, count);
}
// Autogenerated method: System.IO.FileStream.WriteInternal
void System::IO::FileStream::WriteInternal(::Array<uint8_t>* src, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src, offset, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, offset, count);
}
// Autogenerated method: System.IO.FileStream.ReadSegment
int System::IO::FileStream::ReadSegment(::Array<uint8_t>* dest, int dest_offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadSegment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadSegment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, dest_offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, dest, dest_offset, count);
}
// Autogenerated method: System.IO.FileStream.WriteSegment
int System::IO::FileStream::WriteSegment(::Array<uint8_t>* src, int src_offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteSegment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteSegment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(src, src_offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, src, src_offset, count);
}
// Autogenerated method: System.IO.FileStream.FlushBuffer
void System::IO::FileStream::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::FlushBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.FlushBufferIfDirty
void System::IO::FileStream::FlushBufferIfDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::FlushBufferIfDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FlushBufferIfDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.RefillBuffer
void System::IO::FileStream::RefillBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::RefillBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefillBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadData
int System::IO::FileStream::ReadData(System::Runtime::InteropServices::SafeHandle* safeHandle, ::Array<uint8_t>* buf, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, buf, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, safeHandle, buf, offset, count);
}
// Autogenerated method: System.IO.FileStream.InitBuffer
void System::IO::FileStream::InitBuffer(int size, bool isZeroSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::InitBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size, isZeroSize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size, isZeroSize);
}
// Autogenerated method: System.IO.FileStream.GetSecureFileName
::Il2CppString* System::IO::FileStream::GetSecureFileName(::Il2CppString* filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filename)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, filename);
}
// Autogenerated method: System.IO.FileStream.GetSecureFileName
::Il2CppString* System::IO::FileStream::GetSecureFileName(::Il2CppString* filename, bool full) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filename, full)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, filename, full);
}
// Autogenerated method: System.IO.FileStream.get_CanRead
bool System::IO::FileStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_CanRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_CanWrite
bool System::IO::FileStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_CanWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_CanSeek
bool System::IO::FileStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_CanSeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_Length
int64_t System::IO::FileStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_Position
int64_t System::IO::FileStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.set_Position
void System::IO::FileStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::set_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream.ReadByte
int System::IO::FileStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.WriteByte
void System::IO::FileStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream.Read
int System::IO::FileStream::Read(::Array<uint8_t>*& array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.FileStream.BeginRead
System::IAsyncResult* System::IO::FileStream::BeginRead(::Array<uint8_t>* array, int offset, int numBytes, System::AsyncCallback* userCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::BeginRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, offset, numBytes, userCallback, stateObject)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, array, offset, numBytes, userCallback, stateObject);
}
// Autogenerated method: System.IO.FileStream.EndRead
int System::IO::FileStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::EndRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncResult)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.FileStream.Write
void System::IO::FileStream::Write(::Array<uint8_t>* array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, offset, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.FileStream.BeginWrite
System::IAsyncResult* System::IO::FileStream::BeginWrite(::Array<uint8_t>* array, int offset, int numBytes, System::AsyncCallback* userCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::BeginWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, offset, numBytes, userCallback, stateObject)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, array, offset, numBytes, userCallback, stateObject);
}
// Autogenerated method: System.IO.FileStream.EndWrite
void System::IO::FileStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::EndWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncResult)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.FileStream.Seek
int64_t System::IO::FileStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Seek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset, origin)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.FileStream.SetLength
void System::IO::FileStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream.Flush
void System::IO::FileStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.Finalize
void System::IO::FileStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.Dispose
void System::IO::FileStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.FileStream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::FileStream::ReadAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.FileStream.WriteAsync
System::Threading::Tasks::Task* System::IO::FileStream::WriteAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.FileStream..cctor
void System::IO::FileStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "FileStream", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream/ReadDelegate
#include "System/IO/FileStream_ReadDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStream/ReadDelegate.Invoke
int System::IO::FileStream::ReadDelegate::Invoke_NEW(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadDelegate::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.FileStream/ReadDelegate.BeginInvoke
System::IAsyncResult* System::IO::FileStream::ReadDelegate::BeginInvoke_NEW(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadDelegate::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, object);
}
// Autogenerated method: System.IO.FileStream/ReadDelegate.EndInvoke
int System::IO::FileStream::ReadDelegate::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadDelegate::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream/WriteDelegate
#include "System/IO/FileStream_WriteDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStream/WriteDelegate.Invoke
void System::IO::FileStream::WriteDelegate::Invoke_NEW(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteDelegate::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.FileStream/WriteDelegate.BeginInvoke
System::IAsyncResult* System::IO::FileStream::WriteDelegate::BeginInvoke_NEW(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteDelegate::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, object);
}
// Autogenerated method: System.IO.FileStream/WriteDelegate.EndInvoke
void System::IO::FileStream::WriteDelegate::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteDelegate::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStreamAsyncResult
#include "System/IO/FileStreamAsyncResult.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStreamAsyncResult.CBWrapper
void System::IO::FileStreamAsyncResult::CBWrapper(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::CBWrapper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "FileStreamAsyncResult", "CBWrapper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ares)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ares);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncState
::Il2CppObject* System::IO::FileStreamAsyncResult::get_AsyncState_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::get_AsyncState_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_CompletedSynchronously
bool System::IO::FileStreamAsyncResult::get_CompletedSynchronously_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::get_CompletedSynchronously_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::IO::FileStreamAsyncResult::get_AsyncWaitHandle_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::get_AsyncWaitHandle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_IsCompleted
bool System::IO::FileStreamAsyncResult::get_IsCompleted_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::get_IsCompleted_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Unknown
System::IO::MonoFileType System::IO::MonoFileType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Unknown
void System::IO::MonoFileType::_set_Unknown(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Disk
System::IO::MonoFileType System::IO::MonoFileType::_get_Disk() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Disk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Disk"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Disk
void System::IO::MonoFileType::_set_Disk(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Disk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Disk", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Char
System::IO::MonoFileType System::IO::MonoFileType::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Char"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Char
void System::IO::MonoFileType::_set_Char(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Pipe
System::IO::MonoFileType System::IO::MonoFileType::_get_Pipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Pipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Pipe"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Pipe
void System::IO::MonoFileType::_set_Pipe(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Pipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Pipe", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Remote
System::IO::MonoFileType System::IO::MonoFileType::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Remote
void System::IO::MonoFileType::_set_Remote(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Remote", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.MonoIO
#include "System/IO/MonoIO.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.IO.MonoIOError
#include "System/IO/MonoIOError.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IO.MonoIOStat
#include "System/IO/MonoIOStat.hpp"
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
// Including type: System.IO.FileOptions
#include "System/IO/FileOptions.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IntPtr InvalidHandle
System::IntPtr System::IO::MonoIO::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("System.IO", "MonoIO", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IntPtr InvalidHandle
void System::IO::MonoIO::_set_InvalidHandle(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean dump_handles
bool System::IO::MonoIO::_get_dump_handles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::_get_dump_handles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "MonoIO", "dump_handles"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean dump_handles
void System::IO::MonoIO::_set_dump_handles(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::_set_dump_handles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "dump_handles", value));
}
// Autogenerated method: System.IO.MonoIO.GetException
System::Exception* System::IO::MonoIO::GetException(System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(error)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.IO.MonoIO.GetException
System::Exception* System::IO::MonoIO::GetException(::Il2CppString* path, System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.CreateDirectory
bool System::IO::MonoIO::CreateDirectory(::Il2CppChar* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreateDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.CreateDirectory
bool System::IO::MonoIO::CreateDirectory(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreateDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.RemoveDirectory
bool System::IO::MonoIO::RemoveDirectory(::Il2CppChar* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::RemoveDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemoveDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.RemoveDirectory
bool System::IO::MonoIO::RemoveDirectory(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::RemoveDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemoveDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.GetCurrentDirectory
::Il2CppString* System::IO::MonoIO::GetCurrentDirectory(System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetCurrentDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(error)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.IO.MonoIO.DeleteFile
bool System::IO::MonoIO::DeleteFile(::Il2CppChar* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::DeleteFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DeleteFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.DeleteFile
bool System::IO::MonoIO::DeleteFile(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::DeleteFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DeleteFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.ReplaceFile
bool System::IO::MonoIO::ReplaceFile(::Il2CppChar* sourceFileName, ::Il2CppChar* destinationFileName, ::Il2CppChar* destinationBackupFileName, bool ignoreMetadataErrors, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ReplaceFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ReplaceFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, error);
}
// Autogenerated method: System.IO.MonoIO.ReplaceFile
bool System::IO::MonoIO::ReplaceFile(::Il2CppString* sourceFileName, ::Il2CppString* destinationFileName, ::Il2CppString* destinationBackupFileName, bool ignoreMetadataErrors, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ReplaceFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ReplaceFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileAttributes
System::IO::FileAttributes System::IO::MonoIO::GetFileAttributes(::Il2CppChar* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileAttributes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileAttributes
System::IO::FileAttributes System::IO::MonoIO::GetFileAttributes(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileAttributes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileType
System::IO::MonoFileType System::IO::MonoIO::GetFileType(System::IntPtr handle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::MonoFileType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileType
System::IO::MonoFileType System::IO::MonoIO::GetFileType(System::Runtime::InteropServices::SafeHandle* safeHandle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::MonoFileType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, error);
}
// Autogenerated method: System.IO.MonoIO.FindFirstFile
System::IntPtr System::IO::MonoIO::FindFirstFile(::Il2CppChar* pathWithPattern, ::Il2CppString*& fileName, int& fileAttr, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::FindFirstFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindFirstFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pathWithPattern, fileName, fileAttr, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pathWithPattern, fileName, fileAttr, error);
}
// Autogenerated method: System.IO.MonoIO.FindFirstFile
System::IntPtr System::IO::MonoIO::FindFirstFile(::Il2CppString* pathWithPattern, ::Il2CppString*& fileName, int& fileAttr, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::FindFirstFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindFirstFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pathWithPattern, fileName, fileAttr, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pathWithPattern, fileName, fileAttr, error);
}
// Autogenerated method: System.IO.MonoIO.FindNextFile
bool System::IO::MonoIO::FindNextFile(System::IntPtr hnd, ::Il2CppString*& fileName, int& fileAttr, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::FindNextFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindNextFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hnd, fileName, fileAttr, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hnd, fileName, fileAttr, error);
}
// Autogenerated method: System.IO.MonoIO.FindCloseFile
bool System::IO::MonoIO::FindCloseFile(System::IntPtr hnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::FindCloseFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindCloseFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hnd)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hnd);
}
// Autogenerated method: System.IO.MonoIO.ExistsFile
bool System::IO::MonoIO::ExistsFile(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ExistsFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.ExistsDirectory
bool System::IO::MonoIO::ExistsDirectory(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ExistsDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.ExistsSymlink
bool System::IO::MonoIO::ExistsSymlink(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ExistsSymlink");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsSymlink", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileStat
bool System::IO::MonoIO::GetFileStat(::Il2CppChar* path, System::IO::MonoIOStat& stat, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileStat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileStat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, stat, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, stat, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileStat
bool System::IO::MonoIO::GetFileStat(::Il2CppString* path, System::IO::MonoIOStat& stat, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileStat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileStat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, stat, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, stat, error);
}
// Autogenerated method: System.IO.MonoIO.Open
System::IntPtr System::IO::MonoIO::Open(::Il2CppChar* filename, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, System::IO::FileOptions options, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Open");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filename, mode, access, share, options, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, mode, access, share, options, error);
}
// Autogenerated method: System.IO.MonoIO.Open
System::IntPtr System::IO::MonoIO::Open(::Il2CppString* filename, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, System::IO::FileOptions options, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Open");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filename, mode, access, share, options, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, mode, access, share, options, error);
}
// Autogenerated method: System.IO.MonoIO.Close
bool System::IO::MonoIO::Close(System::IntPtr handle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, error);
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(System::IntPtr handle, ::Array<uint8_t>* dest, int dest_offset, int count, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, dest, dest_offset, count, error)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, dest, dest_offset, count, error);
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(System::Runtime::InteropServices::SafeHandle* safeHandle, ::Array<uint8_t>* dest, int dest_offset, int count, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, dest, dest_offset, count, error)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, dest, dest_offset, count, error);
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(System::IntPtr handle, ::Array<uint8_t>*& src, int src_offset, int count, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, src, src_offset, count, error)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, src, src_offset, count, error);
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(System::Runtime::InteropServices::SafeHandle* safeHandle, ::Array<uint8_t>* src, int src_offset, int count, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, src, src_offset, count, error)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, src, src_offset, count, error);
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(System::IntPtr handle, int64_t offset, System::IO::SeekOrigin origin, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Seek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, offset, origin, error)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, offset, origin, error);
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(System::Runtime::InteropServices::SafeHandle* safeHandle, int64_t offset, System::IO::SeekOrigin origin, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Seek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, offset, origin, error)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, offset, origin, error);
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(System::IntPtr handle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, error)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, error);
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(System::Runtime::InteropServices::SafeHandle* safeHandle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, error)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, error);
}
// Autogenerated method: System.IO.MonoIO.SetLength
bool System::IO::MonoIO::SetLength(System::IntPtr handle, int64_t length, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, length, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, length, error);
}
// Autogenerated method: System.IO.MonoIO.SetLength
bool System::IO::MonoIO::SetLength(System::Runtime::InteropServices::SafeHandle* safeHandle, int64_t length, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, length, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, length, error);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleOutput
System::IntPtr System::IO::MonoIO::get_ConsoleOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_ConsoleOutput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleOutput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleInput
System::IntPtr System::IO::MonoIO::get_ConsoleInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_ConsoleInput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleInput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleError
System::IntPtr System::IO::MonoIO::get_ConsoleError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_ConsoleError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.DuplicateHandle
bool System::IO::MonoIO::DuplicateHandle(System::IntPtr source_process_handle, System::IntPtr source_handle, System::IntPtr target_process_handle, System::IntPtr& target_handle, int access, int inherit, int options, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source_process_handle, source_handle, target_process_handle, target_handle, access, inherit, options, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source_process_handle, source_handle, target_process_handle, target_handle, access, inherit, options, error);
}
// Autogenerated method: System.IO.MonoIO.get_VolumeSeparatorChar
::Il2CppChar System::IO::MonoIO::get_VolumeSeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_VolumeSeparatorChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_VolumeSeparatorChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_DirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_DirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_DirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_DirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_AltDirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_AltDirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_AltDirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_AltDirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_PathSeparator
::Il2CppChar System::IO::MonoIO::get_PathSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_PathSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_PathSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.DumpHandles
void System::IO::MonoIO::DumpHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::DumpHandles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DumpHandles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.RemapPath
bool System::IO::MonoIO::RemapPath(::Il2CppString* path, ::Il2CppString*& newPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::RemapPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemapPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, newPath)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, newPath);
}
// Autogenerated method: System.IO.MonoIO..cctor
void System::IO::MonoIO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.MonoIOError
#include "System/IO/MonoIOError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_SUCCESS
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_SUCCESS
void System::IO::MonoIOError::_set_ERROR_SUCCESS(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILE_NOT_FOUND
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILE_NOT_FOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_FILE_NOT_FOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILE_NOT_FOUND"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILE_NOT_FOUND
void System::IO::MonoIOError::_set_ERROR_FILE_NOT_FOUND(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_FILE_NOT_FOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILE_NOT_FOUND", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_PATH_NOT_FOUND
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_PATH_NOT_FOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_PATH_NOT_FOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_PATH_NOT_FOUND"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_PATH_NOT_FOUND
void System::IO::MonoIOError::_set_ERROR_PATH_NOT_FOUND(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_PATH_NOT_FOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_PATH_NOT_FOUND", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_TOO_MANY_OPEN_FILES
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_TOO_MANY_OPEN_FILES() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_TOO_MANY_OPEN_FILES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_TOO_MANY_OPEN_FILES"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_TOO_MANY_OPEN_FILES
void System::IO::MonoIOError::_set_ERROR_TOO_MANY_OPEN_FILES(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_TOO_MANY_OPEN_FILES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_TOO_MANY_OPEN_FILES", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ACCESS_DENIED
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ACCESS_DENIED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_ACCESS_DENIED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ACCESS_DENIED"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ACCESS_DENIED
void System::IO::MonoIOError::_set_ERROR_ACCESS_DENIED(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_ACCESS_DENIED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ACCESS_DENIED", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_HANDLE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_HANDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_INVALID_HANDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_HANDLE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_HANDLE
void System::IO::MonoIOError::_set_ERROR_INVALID_HANDLE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_INVALID_HANDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_HANDLE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_DRIVE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_DRIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_INVALID_DRIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_DRIVE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_DRIVE
void System::IO::MonoIOError::_set_ERROR_INVALID_DRIVE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_INVALID_DRIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_DRIVE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NOT_SAME_DEVICE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NOT_SAME_DEVICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_NOT_SAME_DEVICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NOT_SAME_DEVICE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NOT_SAME_DEVICE
void System::IO::MonoIOError::_set_ERROR_NOT_SAME_DEVICE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_NOT_SAME_DEVICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NOT_SAME_DEVICE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NO_MORE_FILES
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NO_MORE_FILES() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_NO_MORE_FILES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NO_MORE_FILES"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NO_MORE_FILES
void System::IO::MonoIOError::_set_ERROR_NO_MORE_FILES(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_NO_MORE_FILES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NO_MORE_FILES", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NOT_READY
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NOT_READY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_NOT_READY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NOT_READY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NOT_READY
void System::IO::MonoIOError::_set_ERROR_NOT_READY(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_NOT_READY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NOT_READY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_WRITE_FAULT
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_WRITE_FAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_WRITE_FAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_WRITE_FAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_WRITE_FAULT
void System::IO::MonoIOError::_set_ERROR_WRITE_FAULT(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_WRITE_FAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_WRITE_FAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_READ_FAULT
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_READ_FAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_READ_FAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_READ_FAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_READ_FAULT
void System::IO::MonoIOError::_set_ERROR_READ_FAULT(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_READ_FAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_READ_FAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_GEN_FAILURE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_GEN_FAILURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_GEN_FAILURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_GEN_FAILURE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_GEN_FAILURE
void System::IO::MonoIOError::_set_ERROR_GEN_FAILURE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_GEN_FAILURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_GEN_FAILURE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_SHARING_VIOLATION
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_SHARING_VIOLATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_SHARING_VIOLATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_SHARING_VIOLATION"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_SHARING_VIOLATION
void System::IO::MonoIOError::_set_ERROR_SHARING_VIOLATION(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_SHARING_VIOLATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_SHARING_VIOLATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_LOCK_VIOLATION
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_LOCK_VIOLATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_LOCK_VIOLATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_LOCK_VIOLATION"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_LOCK_VIOLATION
void System::IO::MonoIOError::_set_ERROR_LOCK_VIOLATION(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_LOCK_VIOLATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_LOCK_VIOLATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_HANDLE_DISK_FULL
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_HANDLE_DISK_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_HANDLE_DISK_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_HANDLE_DISK_FULL"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_HANDLE_DISK_FULL
void System::IO::MonoIOError::_set_ERROR_HANDLE_DISK_FULL(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_HANDLE_DISK_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_HANDLE_DISK_FULL", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILE_EXISTS
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILE_EXISTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_FILE_EXISTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILE_EXISTS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILE_EXISTS
void System::IO::MonoIOError::_set_ERROR_FILE_EXISTS(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_FILE_EXISTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILE_EXISTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_CANNOT_MAKE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_CANNOT_MAKE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_CANNOT_MAKE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_CANNOT_MAKE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_CANNOT_MAKE
void System::IO::MonoIOError::_set_ERROR_CANNOT_MAKE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_CANNOT_MAKE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_CANNOT_MAKE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_PARAMETER
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_INVALID_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_PARAMETER
void System::IO::MonoIOError::_set_ERROR_INVALID_PARAMETER(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_INVALID_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_BROKEN_PIPE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_BROKEN_PIPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_BROKEN_PIPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_BROKEN_PIPE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_BROKEN_PIPE
void System::IO::MonoIOError::_set_ERROR_BROKEN_PIPE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_BROKEN_PIPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_BROKEN_PIPE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_NAME
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_INVALID_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_NAME
void System::IO::MonoIOError::_set_ERROR_INVALID_NAME(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_INVALID_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_DIR_NOT_EMPTY
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_DIR_NOT_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_DIR_NOT_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_DIR_NOT_EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_DIR_NOT_EMPTY
void System::IO::MonoIOError::_set_ERROR_DIR_NOT_EMPTY(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_DIR_NOT_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_DIR_NOT_EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ALREADY_EXISTS
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ALREADY_EXISTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_ALREADY_EXISTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ALREADY_EXISTS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ALREADY_EXISTS
void System::IO::MonoIOError::_set_ERROR_ALREADY_EXISTS(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_ALREADY_EXISTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ALREADY_EXISTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILENAME_EXCED_RANGE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILENAME_EXCED_RANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_FILENAME_EXCED_RANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILENAME_EXCED_RANGE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILENAME_EXCED_RANGE
void System::IO::MonoIOError::_set_ERROR_FILENAME_EXCED_RANGE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_FILENAME_EXCED_RANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILENAME_EXCED_RANGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_DIRECTORY
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_DIRECTORY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_DIRECTORY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_DIRECTORY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_DIRECTORY
void System::IO::MonoIOError::_set_ERROR_DIRECTORY(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_DIRECTORY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_DIRECTORY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ENCRYPTION_FAILED
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ENCRYPTION_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_ENCRYPTION_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ENCRYPTION_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ENCRYPTION_FAILED
void System::IO::MonoIOError::_set_ERROR_ENCRYPTION_FAILED(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_ENCRYPTION_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ENCRYPTION_FAILED", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Path
#include "System/IO/Path.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ObsoleteAttribute] Offset: 0xC99CB8
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] InvalidPathChars
::Array<::Il2CppChar>* System::IO::Path::_get_InvalidPathChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_InvalidPathChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.IO", "Path", "InvalidPathChars"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] InvalidPathChars
void System::IO::Path::_set_InvalidPathChars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_InvalidPathChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "InvalidPathChars", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char AltDirectorySeparatorChar
::Il2CppChar System::IO::Path::_get_AltDirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_AltDirectorySeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "AltDirectorySeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char AltDirectorySeparatorChar
void System::IO::Path::_set_AltDirectorySeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_AltDirectorySeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "AltDirectorySeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char DirectorySeparatorChar
::Il2CppChar System::IO::Path::_get_DirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_DirectorySeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "DirectorySeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char DirectorySeparatorChar
void System::IO::Path::_set_DirectorySeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_DirectorySeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "DirectorySeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char PathSeparator
::Il2CppChar System::IO::Path::_get_PathSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_PathSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "PathSeparator"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char PathSeparator
void System::IO::Path::_set_PathSeparator(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_PathSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "PathSeparator", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String DirectorySeparatorStr
::Il2CppString* System::IO::Path::_get_DirectorySeparatorStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_DirectorySeparatorStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.IO", "Path", "DirectorySeparatorStr"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String DirectorySeparatorStr
void System::IO::Path::_set_DirectorySeparatorStr(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_DirectorySeparatorStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "DirectorySeparatorStr", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char VolumeSeparatorChar
::Il2CppChar System::IO::Path::_get_VolumeSeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_VolumeSeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "VolumeSeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char VolumeSeparatorChar
void System::IO::Path::_set_VolumeSeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_VolumeSeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "VolumeSeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] PathSeparatorChars
::Array<::Il2CppChar>* System::IO::Path::_get_PathSeparatorChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_PathSeparatorChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.IO", "Path", "PathSeparatorChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] PathSeparatorChars
void System::IO::Path::_set_PathSeparatorChars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_PathSeparatorChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "PathSeparatorChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean dirEqualsVolume
bool System::IO::Path::_get_dirEqualsVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_dirEqualsVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "Path", "dirEqualsVolume"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean dirEqualsVolume
void System::IO::Path::_set_dirEqualsVolume(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_dirEqualsVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "dirEqualsVolume", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] trimEndCharsWindows
::Array<::Il2CppChar>* System::IO::Path::_get_trimEndCharsWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_trimEndCharsWindows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.IO", "Path", "trimEndCharsWindows"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] trimEndCharsWindows
void System::IO::Path::_set_trimEndCharsWindows(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_trimEndCharsWindows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "trimEndCharsWindows", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] trimEndCharsUnix
::Array<::Il2CppChar>* System::IO::Path::_get_trimEndCharsUnix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_trimEndCharsUnix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.IO", "Path", "trimEndCharsUnix"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] trimEndCharsUnix
void System::IO::Path::_set_trimEndCharsUnix(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_trimEndCharsUnix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "trimEndCharsUnix", value));
}
// Autogenerated method: System.IO.Path.ChangeExtension
::Il2CppString* System::IO::Path::ChangeExtension(::Il2CppString* path, ::Il2CppString* extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::ChangeExtension");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "ChangeExtension", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, extension)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, extension);
}
// Autogenerated method: System.IO.Path.Combine
::Il2CppString* System::IO::Path::Combine(::Il2CppString* path1, ::Il2CppString* path2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path1, path2)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path1, path2);
}
// Autogenerated method: System.IO.Path.CleanPath
::Il2CppString* System::IO::Path::CleanPath(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::CleanPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "CleanPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.IO.Path.GetDirectoryName
::Il2CppString* System::IO::Path::GetDirectoryName(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetDirectoryName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetDirectoryName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetExtension
::Il2CppString* System::IO::Path::GetExtension(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetExtension");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetExtension", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFileName
::Il2CppString* System::IO::Path::GetFileName(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFileName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetFileName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFileNameWithoutExtension
::Il2CppString* System::IO::Path::GetFileNameWithoutExtension(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFileNameWithoutExtension");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetFileNameWithoutExtension", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPath
::Il2CppString* System::IO::Path::GetFullPath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFullPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPathInternal
::Il2CppString* System::IO::Path::GetFullPathInternal(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFullPathInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPathName
int System::IO::Path::GetFullPathName(::Il2CppString* path, int numBufferChars, System::Text::StringBuilder* buffer, System::IntPtr& lpFilePartOrNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFullPathName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, numBufferChars, buffer, lpFilePartOrNull)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, numBufferChars, buffer, lpFilePartOrNull);
}
// Autogenerated method: System.IO.Path.GetFullPathName
::Il2CppString* System::IO::Path::GetFullPathName(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFullPathName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.WindowsDriveAdjustment
::Il2CppString* System::IO::Path::WindowsDriveAdjustment(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::WindowsDriveAdjustment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "WindowsDriveAdjustment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.InsecureGetFullPath
::Il2CppString* System::IO::Path::InsecureGetFullPath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::InsecureGetFullPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "InsecureGetFullPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.IsDirectorySeparator
bool System::IO::Path::IsDirectorySeparator(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::IsDirectorySeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "IsDirectorySeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.IO.Path.GetPathRoot
::Il2CppString* System::IO::Path::GetPathRoot(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetPathRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetPathRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.IsPathRooted
bool System::IO::Path::IsPathRooted(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::IsPathRooted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "IsPathRooted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetInvalidFileNameChars
::Array<::Il2CppChar>* System::IO::Path::GetInvalidFileNameChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetInvalidFileNameChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetInvalidFileNameChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.GetInvalidPathChars
::Array<::Il2CppChar>* System::IO::Path::GetInvalidPathChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetInvalidPathChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetInvalidPathChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.findExtension
int System::IO::Path::findExtension(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::findExtension");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "findExtension", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path..cctor
void System::IO::Path::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.GetServerAndShare
::Il2CppString* System::IO::Path::GetServerAndShare(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetServerAndShare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "GetServerAndShare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.SameRoot
bool System::IO::Path::SameRoot(::Il2CppString* root, ::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::SameRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "SameRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root, path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root, path);
}
// Autogenerated method: System.IO.Path.CanonicalizePath
::Il2CppString* System::IO::Path::CanonicalizePath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::CanonicalizePath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "CanonicalizePath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.Combine
::Il2CppString* System::IO::Path::Combine(::Array<::Il2CppString*>* paths) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(paths)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, paths);
}
// Creating initializer_list -> params proxy for: System.String Combine(params System.String[] paths)
::Il2CppString* System::IO::Path::Combine(std::initializer_list<::Il2CppString*> paths) {
  return System::IO::Path::Combine(::Array<::Il2CppString*>::New(paths));
}
// Autogenerated method: System.IO.Path.Combine
::Il2CppString* System::IO::Path::Combine(::Il2CppString* path1, ::Il2CppString* path2, ::Il2CppString* path3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path1, path2, path3)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path1, path2, path3);
}
// Autogenerated method: System.IO.Path.Validate
void System::IO::Path::Validate(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Validate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "Validate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.Validate
void System::IO::Path::Validate(::Il2CppString* path, ::Il2CppString* parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Validate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "Validate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, parameterName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, parameterName);
}
// Autogenerated method: System.IO.Path.get_DirectorySeparatorCharAsString
::Il2CppString* System::IO::Path::get_DirectorySeparatorCharAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::get_DirectorySeparatorCharAsString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "get_DirectorySeparatorCharAsString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.get_TrimEndChars
::Array<::Il2CppChar>* System::IO::Path::get_TrimEndChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::get_TrimEndChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "get_TrimEndChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.CheckSearchPattern
void System::IO::Path::CheckSearchPattern(::Il2CppString* searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::CheckSearchPattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "CheckSearchPattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(searchPattern)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, searchPattern);
}
// Autogenerated method: System.IO.Path.CheckInvalidPathChars
void System::IO::Path::CheckInvalidPathChars(::Il2CppString* path, bool checkAdditional) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::CheckInvalidPathChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "CheckInvalidPathChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, checkAdditional)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, checkAdditional);
}
// Autogenerated method: System.IO.Path.InternalCombine
::Il2CppString* System::IO::Path::InternalCombine(::Il2CppString* path1, ::Il2CppString* path2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::InternalCombine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "Path", "InternalCombine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path1, path2)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path1, path2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SearchOption TopDirectoryOnly
System::IO::SearchOption System::IO::SearchOption::_get_TopDirectoryOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchOption::_get_TopDirectoryOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SearchOption>("System.IO", "SearchOption", "TopDirectoryOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchOption TopDirectoryOnly
void System::IO::SearchOption::_set_TopDirectoryOnly(System::IO::SearchOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchOption::_set_TopDirectoryOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchOption", "TopDirectoryOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchOption AllDirectories
System::IO::SearchOption System::IO::SearchOption::_get_AllDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchOption::_get_AllDirectories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SearchOption>("System.IO", "SearchOption", "AllDirectories"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchOption AllDirectories
void System::IO::SearchOption::_set_AllDirectories(System::IO::SearchOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchOption::_set_AllDirectories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchOption", "AllDirectories", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin Begin
System::IO::SeekOrigin System::IO::SeekOrigin::_get_Begin() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_get_Begin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SeekOrigin>("System.IO", "SeekOrigin", "Begin"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin Begin
void System::IO::SeekOrigin::_set_Begin(System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_set_Begin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "Begin", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin Current
System::IO::SeekOrigin System::IO::SeekOrigin::_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_get_Current");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SeekOrigin>("System.IO", "SeekOrigin", "Current"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin Current
void System::IO::SeekOrigin::_set_Current(System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_set_Current");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "Current", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin End
System::IO::SeekOrigin System::IO::SeekOrigin::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SeekOrigin>("System.IO", "SeekOrigin", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin End
void System::IO::SeekOrigin::_set_End(System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "End", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.UnexceptionalStreamReader
#include "System/IO/UnexceptionalStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean[] newline
::Array<bool>* System::IO::UnexceptionalStreamReader::_get_newline() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::_get_newline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<bool>*>("System.IO", "UnexceptionalStreamReader", "newline"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean[] newline
void System::IO::UnexceptionalStreamReader::_set_newline(::Array<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::_set_newline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "UnexceptionalStreamReader", "newline", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char newlineChar
::Il2CppChar System::IO::UnexceptionalStreamReader::_get_newlineChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::_get_newlineChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "UnexceptionalStreamReader", "newlineChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char newlineChar
void System::IO::UnexceptionalStreamReader::_set_newlineChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::_set_newlineChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "UnexceptionalStreamReader", "newlineChar", value));
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.CheckEOL
bool System::IO::UnexceptionalStreamReader::CheckEOL(::Il2CppChar current) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::CheckEOL");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckEOL", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(current)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, current);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader..cctor
void System::IO::UnexceptionalStreamReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "UnexceptionalStreamReader", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Peek
int System::IO::UnexceptionalStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::Peek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Read
int System::IO::UnexceptionalStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Read
int System::IO::UnexceptionalStreamReader::Read(::Array<::Il2CppChar>*& dest_buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest_buffer, index, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, dest_buffer, index, count);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.ReadLine
::Il2CppString* System::IO::UnexceptionalStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::ReadLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.ReadToEnd
::Il2CppString* System::IO::UnexceptionalStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::ReadToEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.UnexceptionalStreamWriter
#include "System/IO/UnexceptionalStreamWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Flush
void System::IO::UnexceptionalStreamWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.CStreamReader
#include "System/IO/CStreamReader.hpp"
// Including type: System.TermInfoDriver
#include "System/TermInfoDriver.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.CStreamReader.Peek
int System::IO::CStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::Peek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.Read
int System::IO::CStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.Read
int System::IO::CStreamReader::Read(::Array<::Il2CppChar>*& dest, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, index, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, dest, index, count);
}
// Autogenerated method: System.IO.CStreamReader.ReadLine
::Il2CppString* System::IO::CStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::ReadLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.ReadToEnd
::Il2CppString* System::IO::CStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::ReadToEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.CStreamWriter
#include "System/IO/CStreamWriter.hpp"
// Including type: System.TermInfoDriver
#include "System/TermInfoDriver.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.CStreamWriter.InternalWriteString
void System::IO::CStreamWriter::InternalWriteString(::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::InternalWriteString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalWriteString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteChar
void System::IO::CStreamWriter::InternalWriteChar(::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::InternalWriteChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalWriteChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteChars
void System::IO::CStreamWriter::InternalWriteChars(::Array<::Il2CppChar>* buffer, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::InternalWriteChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalWriteChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, n)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, n);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::Array<::Il2CppChar>* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CharUnicodeInfo
#include "System/Globalization/CharUnicodeInfo.hpp"
// Including type: System.Globalization.CharUnicodeInfo/Debug
#include "System/Globalization/CharUnicodeInfo_Debug.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt16[] s_pCategoryLevel1Index
::Array<uint16_t>* System::Globalization::CharUnicodeInfo::_get_s_pCategoryLevel1Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pCategoryLevel1Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint16_t>*>("System.Globalization", "CharUnicodeInfo", "s_pCategoryLevel1Index"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16[] s_pCategoryLevel1Index
void System::Globalization::CharUnicodeInfo::_set_s_pCategoryLevel1Index(::Array<uint16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pCategoryLevel1Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pCategoryLevel1Index", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] s_pCategoriesValue
::Array<uint8_t>* System::Globalization::CharUnicodeInfo::_get_s_pCategoriesValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pCategoriesValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Globalization", "CharUnicodeInfo", "s_pCategoriesValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] s_pCategoriesValue
void System::Globalization::CharUnicodeInfo::_set_s_pCategoriesValue(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pCategoriesValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pCategoriesValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt16[] s_pNumericLevel1Index
::Array<uint16_t>* System::Globalization::CharUnicodeInfo::_get_s_pNumericLevel1Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pNumericLevel1Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint16_t>*>("System.Globalization", "CharUnicodeInfo", "s_pNumericLevel1Index"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16[] s_pNumericLevel1Index
void System::Globalization::CharUnicodeInfo::_set_s_pNumericLevel1Index(::Array<uint16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pNumericLevel1Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pNumericLevel1Index", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] s_pNumericValues
::Array<uint8_t>* System::Globalization::CharUnicodeInfo::_get_s_pNumericValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pNumericValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Globalization", "CharUnicodeInfo", "s_pNumericValues"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] s_pNumericValues
void System::Globalization::CharUnicodeInfo::_set_s_pNumericValues(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pNumericValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pNumericValues", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt16[] s_pDigitValues
::Array<uint16_t>* System::Globalization::CharUnicodeInfo::_get_s_pDigitValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pDigitValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint16_t>*>("System.Globalization", "CharUnicodeInfo", "s_pDigitValues"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16[] s_pDigitValues
void System::Globalization::CharUnicodeInfo::_set_s_pDigitValues(::Array<uint16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pDigitValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pDigitValues", value));
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalConvertToUtf32
int System::Globalization::CharUnicodeInfo::InternalConvertToUtf32(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::InternalConvertToUtf32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalConvertToUtf32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, index)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.IsWhiteSpace
bool System::Globalization::CharUnicodeInfo::IsWhiteSpace(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.IsWhiteSpace
bool System::Globalization::CharUnicodeInfo::IsWhiteSpace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.GetUnicodeCategory
System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::GetUnicodeCategory(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.GetUnicodeCategory
System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::GetUnicodeCategory(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, index)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory
System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetUnicodeCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetCategoryValue
uint8_t System::Globalization::CharUnicodeInfo::InternalGetCategoryValue(int ch, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::InternalGetCategoryValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetCategoryValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, offset)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, offset);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory
System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory(::Il2CppString* value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetUnicodeCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, index)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo..cctor
void System::Globalization::CharUnicodeInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CharUnicodeInfo/Debug
#include "System/Globalization/CharUnicodeInfo_Debug.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.CharUnicodeInfo/Debug.Assert
void System::Globalization::CharUnicodeInfo::Debug::Assert_(bool condition, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::Debug::Assert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo/Debug", "Assert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(condition, message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, condition, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerMillisecond
int64_t System::Globalization::Calendar::_get_TicksPerMillisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerMillisecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerMillisecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerMillisecond
void System::Globalization::Calendar::_set_TicksPerMillisecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerMillisecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerMillisecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerSecond
int64_t System::Globalization::Calendar::_get_TicksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerSecond
void System::Globalization::Calendar::_set_TicksPerSecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerMinute
int64_t System::Globalization::Calendar::_get_TicksPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerMinute"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerMinute
void System::Globalization::Calendar::_set_TicksPerMinute(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerHour
int64_t System::Globalization::Calendar::_get_TicksPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerHour"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerHour
void System::Globalization::Calendar::_set_TicksPerHour(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerHour", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerDay
int64_t System::Globalization::Calendar::_get_TicksPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerDay"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerDay
void System::Globalization::Calendar::_set_TicksPerDay(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerDay", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerSecond
int System::Globalization::Calendar::_get_MillisPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MillisPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerSecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerSecond
void System::Globalization::Calendar::_set_MillisPerSecond(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MillisPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerMinute
int System::Globalization::Calendar::_get_MillisPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MillisPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerMinute"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerMinute
void System::Globalization::Calendar::_set_MillisPerMinute(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MillisPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerHour
int System::Globalization::Calendar::_get_MillisPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MillisPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerHour"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerHour
void System::Globalization::Calendar::_set_MillisPerHour(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MillisPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerHour", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerDay
int System::Globalization::Calendar::_get_MillisPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MillisPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerDay"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerDay
void System::Globalization::Calendar::_set_MillisPerDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MillisPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerDay", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPerYear
int System::Globalization::Calendar::_get_DaysPerYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysPerYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPerYear"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPerYear
void System::Globalization::Calendar::_set_DaysPerYear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysPerYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPerYear", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer4Years
int System::Globalization::Calendar::_get_DaysPer4Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysPer4Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer4Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer4Years
void System::Globalization::Calendar::_set_DaysPer4Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysPer4Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer4Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer100Years
int System::Globalization::Calendar::_get_DaysPer100Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysPer100Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer100Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer100Years
void System::Globalization::Calendar::_set_DaysPer100Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysPer100Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer100Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer400Years
int System::Globalization::Calendar::_get_DaysPer400Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysPer400Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer400Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer400Years
void System::Globalization::Calendar::_set_DaysPer400Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysPer400Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer400Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysTo10000
int System::Globalization::Calendar::_get_DaysTo10000() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysTo10000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysTo10000"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysTo10000
void System::Globalization::Calendar::_set_DaysTo10000(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysTo10000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysTo10000", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 MaxMillis
int64_t System::Globalization::Calendar::_get_MaxMillis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MaxMillis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "MaxMillis"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 MaxMillis
void System::Globalization::Calendar::_set_MaxMillis(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MaxMillis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MaxMillis", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN
int System::Globalization::Calendar::_get_CAL_GREGORIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN
void System::Globalization::Calendar::_set_CAL_GREGORIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_US
int System::Globalization::Calendar::_get_CAL_GREGORIAN_US() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_US");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_US"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_US
void System::Globalization::Calendar::_set_CAL_GREGORIAN_US(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_US");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_US", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JAPAN
int System::Globalization::Calendar::_get_CAL_JAPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_JAPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JAPAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JAPAN
void System::Globalization::Calendar::_set_CAL_JAPAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_JAPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JAPAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_TAIWAN
int System::Globalization::Calendar::_get_CAL_TAIWAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_TAIWAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_TAIWAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_TAIWAN
void System::Globalization::Calendar::_set_CAL_TAIWAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_TAIWAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_TAIWAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_KOREA
int System::Globalization::Calendar::_get_CAL_KOREA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_KOREA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_KOREA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_KOREA
void System::Globalization::Calendar::_set_CAL_KOREA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_KOREA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_KOREA", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_HIJRI
int System::Globalization::Calendar::_get_CAL_HIJRI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_HIJRI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_HIJRI"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_HIJRI
void System::Globalization::Calendar::_set_CAL_HIJRI(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_HIJRI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_HIJRI", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_THAI
int System::Globalization::Calendar::_get_CAL_THAI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_THAI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_THAI"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_THAI
void System::Globalization::Calendar::_set_CAL_THAI(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_THAI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_THAI", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_HEBREW
int System::Globalization::Calendar::_get_CAL_HEBREW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_HEBREW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_HEBREW"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_HEBREW
void System::Globalization::Calendar::_set_CAL_HEBREW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_HEBREW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_HEBREW", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_ME_FRENCH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_ME_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_ME_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_ME_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_ME_FRENCH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_ME_FRENCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_ME_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_ME_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_ARABIC
int System::Globalization::Calendar::_get_CAL_GREGORIAN_ARABIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_ARABIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_ARABIC"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_ARABIC
void System::Globalization::Calendar::_set_CAL_GREGORIAN_ARABIC(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_ARABIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_ARABIC", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_XLIT_ENGLISH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_ENGLISH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_ENGLISH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_ENGLISH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_XLIT_ENGLISH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_ENGLISH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_ENGLISH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_ENGLISH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_XLIT_FRENCH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_XLIT_FRENCH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_FRENCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JULIAN
int System::Globalization::Calendar::_get_CAL_JULIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_JULIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JULIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JULIAN
void System::Globalization::Calendar::_set_CAL_JULIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_JULIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JULIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JAPANESELUNISOLAR
int System::Globalization::Calendar::_get_CAL_JAPANESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_JAPANESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JAPANESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JAPANESELUNISOLAR
void System::Globalization::Calendar::_set_CAL_JAPANESELUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_JAPANESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JAPANESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_CHINESELUNISOLAR
int System::Globalization::Calendar::_get_CAL_CHINESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_CHINESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_CHINESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_CHINESELUNISOLAR
void System::Globalization::Calendar::_set_CAL_CHINESELUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_CHINESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_CHINESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_SAKA
int System::Globalization::Calendar::_get_CAL_SAKA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_SAKA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_SAKA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_SAKA
void System::Globalization::Calendar::_set_CAL_SAKA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_SAKA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_SAKA", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_CHN
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_CHN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_LUNAR_ETO_CHN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_CHN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_CHN
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_CHN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_LUNAR_ETO_CHN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_CHN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_KOR
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_KOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_LUNAR_ETO_KOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_KOR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_KOR
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_KOR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_LUNAR_ETO_KOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_KOR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_ROKUYOU
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_ROKUYOU() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_LUNAR_ETO_ROKUYOU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_ROKUYOU"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_ROKUYOU
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_ROKUYOU(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_LUNAR_ETO_ROKUYOU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_ROKUYOU", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_KOREANLUNISOLAR
int System::Globalization::Calendar::_get_CAL_KOREANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_KOREANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_KOREANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_KOREANLUNISOLAR
void System::Globalization::Calendar::_set_CAL_KOREANLUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_KOREANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_KOREANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_TAIWANLUNISOLAR
int System::Globalization::Calendar::_get_CAL_TAIWANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_TAIWANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_TAIWANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_TAIWANLUNISOLAR
void System::Globalization::Calendar::_set_CAL_TAIWANLUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_TAIWANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_TAIWANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_PERSIAN
int System::Globalization::Calendar::_get_CAL_PERSIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_PERSIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_PERSIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_PERSIAN
void System::Globalization::Calendar::_set_CAL_PERSIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_PERSIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_PERSIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_UMALQURA
int System::Globalization::Calendar::_get_CAL_UMALQURA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_UMALQURA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_UMALQURA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_UMALQURA
void System::Globalization::Calendar::_set_CAL_UMALQURA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_UMALQURA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_UMALQURA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 CurrentEra
int System::Globalization::Calendar::_get_CurrentEra() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CurrentEra");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CurrentEra"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 CurrentEra
void System::Globalization::Calendar::_set_CurrentEra(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CurrentEra");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CurrentEra", value));
}
// Autogenerated method: System.Globalization.Calendar.get_MinSupportedDateTime
System::DateTime System::Globalization::Calendar::get_MinSupportedDateTime_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_MinSupportedDateTime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::Calendar::get_MaxSupportedDateTime_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_MaxSupportedDateTime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_ID
int System::Globalization::Calendar::get_ID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_ID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_BaseCalendarID
int System::Globalization::Calendar::get_BaseCalendarID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_BaseCalendarID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_BaseCalendarID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.Clone
::Il2CppObject* System::Globalization::Calendar::Clone_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::Clone_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.SetReadOnlyState
void System::Globalization::Calendar::SetReadOnlyState(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::SetReadOnlyState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetReadOnlyState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(readOnly)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.Calendar.get_CurrentEraValue
int System::Globalization::Calendar::get_CurrentEraValue_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_CurrentEraValue_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrentEraValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.GetDayOfMonth
int System::Globalization::Calendar::GetDayOfMonth_NEW(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetDayOfMonth_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetDayOfWeek
System::DayOfWeek System::Globalization::Calendar::GetDayOfWeek_NEW(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetDayOfWeek_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetDaysInMonth
int System::Globalization::Calendar::GetDaysInMonth_NEW(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetDaysInMonth_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.Calendar.GetEra
int System::Globalization::Calendar::GetEra_NEW(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetEra_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.get_Eras
::Array<int>* System::Globalization::Calendar::get_Eras_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_Eras_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.GetMonth
int System::Globalization::Calendar::GetMonth_NEW(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetMonth_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetMonthsInYear
int System::Globalization::Calendar::GetMonthsInYear_NEW(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetMonthsInYear_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.GetYear
int System::Globalization::Calendar::GetYear_NEW(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetYear_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.IsLeapYear
bool System::Globalization::Calendar::IsLeapYear_NEW(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsLeapYear_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.Calendar.IsLeapYear
bool System::Globalization::Calendar::IsLeapYear_NEW(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsLeapYear_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.ToDateTime
System::DateTime System::Globalization::Calendar::ToDateTime_NEW(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::ToDateTime_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.Calendar.TryToDateTime
bool System::Globalization::Calendar::TryToDateTime_NEW(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, System::DateTime& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::TryToDateTime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era, result);
}
// Autogenerated method: System.Globalization.Calendar.IsValidYear
bool System::Globalization::Calendar::IsValidYear_NEW(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsValidYear_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValidYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.IsValidMonth
bool System::Globalization::Calendar::IsValidMonth_NEW(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsValidMonth_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValidMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.Calendar.IsValidDay
bool System::Globalization::Calendar::IsValidDay_NEW(int year, int month, int day, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsValidDay_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValidDay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, month, day, era);
}
// Autogenerated method: System.Globalization.Calendar.get_TwoDigitYearMax
int System::Globalization::Calendar::get_TwoDigitYearMax_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_TwoDigitYearMax_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.ToFourDigitYear
int System::Globalization::Calendar::ToFourDigitYear_NEW(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::ToFourDigitYear_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.Calendar.GetSystemTwoDigitYearSetting
int System::Globalization::Calendar::GetSystemTwoDigitYearSetting(int CalID, int defaultYearValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetSystemTwoDigitYearSetting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "Calendar", "GetSystemTwoDigitYearSetting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(CalID, defaultYearValue)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, CalID, defaultYearValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CalendarData
#include "System/Globalization/CalendarData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 MAX_CALENDARS
int System::Globalization::CalendarData::_get_MAX_CALENDARS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::_get_MAX_CALENDARS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CalendarData", "MAX_CALENDARS"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MAX_CALENDARS
void System::Globalization::CalendarData::_set_MAX_CALENDARS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::_set_MAX_CALENDARS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "MAX_CALENDARS", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.CalendarData Invariant
System::Globalization::CalendarData* System::Globalization::CalendarData::_get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::_get_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarData*>("System.Globalization", "CalendarData", "Invariant"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.CalendarData Invariant
void System::Globalization::CalendarData::_set_Invariant(System::Globalization::CalendarData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::_set_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "Invariant", value));
}
// Autogenerated method: System.Globalization.CalendarData..cctor
void System::Globalization::CalendarData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CalendarData.InitializeEraNames
void System::Globalization::CalendarData::InitializeEraNames(::Il2CppString* localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::InitializeEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeEraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localeName, calendarId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.InitializeAbbreviatedEraNames
void System::Globalization::CalendarData::InitializeAbbreviatedEraNames(::Il2CppString* localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::InitializeAbbreviatedEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeAbbreviatedEraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localeName, calendarId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.GetCalendarData
System::Globalization::CalendarData* System::Globalization::CalendarData::GetCalendarData(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::GetCalendarData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "GetCalendarData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CalendarData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.CalendarIdToCultureName
::Il2CppString* System::Globalization::CalendarData::CalendarIdToCultureName(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::CalendarIdToCultureName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "CalendarIdToCultureName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.nativeGetTwoDigitYearMax
int System::Globalization::CalendarData::nativeGetTwoDigitYearMax(int calID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::nativeGetTwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "nativeGetTwoDigitYearMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calID)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, calID);
}
// Autogenerated method: System.Globalization.CalendarData.nativeGetCalendarData
bool System::Globalization::CalendarData::nativeGetCalendarData(System::Globalization::CalendarData* data, ::Il2CppString* localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::nativeGetCalendarData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "nativeGetCalendarData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, localeName, calendarId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.fill_calendar_data
bool System::Globalization::CalendarData::fill_calendar_data(::Il2CppString* localeName, int datetimeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::fill_calendar_data");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "fill_calendar_data", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localeName, datetimeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, localeName, datetimeIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions None
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions None
void System::Globalization::CompareOptions::_set_None(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreCase
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreCase
void System::Globalization::CompareOptions::_set_IgnoreCase(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreNonSpace
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreNonSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreNonSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreNonSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreNonSpace
void System::Globalization::CompareOptions::_set_IgnoreNonSpace(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreNonSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreNonSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreSymbols
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreSymbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreSymbols");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreSymbols"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreSymbols
void System::Globalization::CompareOptions::_set_IgnoreSymbols(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreSymbols");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreSymbols", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreKanaType
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreKanaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreKanaType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreKanaType"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreKanaType
void System::Globalization::CompareOptions::_set_IgnoreKanaType(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreKanaType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreKanaType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreWidth
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreWidth
void System::Globalization::CompareOptions::_set_IgnoreWidth(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions OrdinalIgnoreCase
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_OrdinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_OrdinalIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "OrdinalIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions OrdinalIgnoreCase
void System::Globalization::CompareOptions::_set_OrdinalIgnoreCase(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_OrdinalIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "OrdinalIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions StringSort
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_StringSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_StringSort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "StringSort"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions StringSort
void System::Globalization::CompareOptions::_set_StringSort(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_StringSort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "StringSort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions Ordinal
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_Ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_Ordinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "Ordinal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions Ordinal
void System::Globalization::CompareOptions::_set_Ordinal(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_Ordinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "Ordinal", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.SortVersion
#include "System/Globalization/SortVersion.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator
#include "Mono/Globalization/Unicode/SimpleCollator.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidIndexMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_ValidIndexMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidIndexMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidIndexMaskOffFlags(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_ValidIndexMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidIndexMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidCompareMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_ValidCompareMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidCompareMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidCompareMaskOffFlags(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_ValidCompareMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidCompareMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidHashCodeOfStringMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_ValidHashCodeOfStringMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidHashCodeOfStringMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidHashCodeOfStringMaskOffFlags(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_ValidHashCodeOfStringMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidHashCodeOfStringMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LINGUISTIC_IGNORECASE
int System::Globalization::CompareInfo::_get_LINGUISTIC_IGNORECASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_LINGUISTIC_IGNORECASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "LINGUISTIC_IGNORECASE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LINGUISTIC_IGNORECASE
void System::Globalization::CompareInfo::_set_LINGUISTIC_IGNORECASE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_LINGUISTIC_IGNORECASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "LINGUISTIC_IGNORECASE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNORECASE
int System::Globalization::CompareInfo::_get_NORM_IGNORECASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNORECASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNORECASE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNORECASE
void System::Globalization::CompareInfo::_set_NORM_IGNORECASE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNORECASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNORECASE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNOREKANATYPE
int System::Globalization::CompareInfo::_get_NORM_IGNOREKANATYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNOREKANATYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNOREKANATYPE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNOREKANATYPE
void System::Globalization::CompareInfo::_set_NORM_IGNOREKANATYPE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNOREKANATYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNOREKANATYPE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LINGUISTIC_IGNOREDIACRITIC
int System::Globalization::CompareInfo::_get_LINGUISTIC_IGNOREDIACRITIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_LINGUISTIC_IGNOREDIACRITIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "LINGUISTIC_IGNOREDIACRITIC"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LINGUISTIC_IGNOREDIACRITIC
void System::Globalization::CompareInfo::_set_LINGUISTIC_IGNOREDIACRITIC(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_LINGUISTIC_IGNOREDIACRITIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "LINGUISTIC_IGNOREDIACRITIC", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNORENONSPACE
int System::Globalization::CompareInfo::_get_NORM_IGNORENONSPACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNORENONSPACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNORENONSPACE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNORENONSPACE
void System::Globalization::CompareInfo::_set_NORM_IGNORENONSPACE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNORENONSPACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNORENONSPACE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNORESYMBOLS
int System::Globalization::CompareInfo::_get_NORM_IGNORESYMBOLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNORESYMBOLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNORESYMBOLS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNORESYMBOLS
void System::Globalization::CompareInfo::_set_NORM_IGNORESYMBOLS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNORESYMBOLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNORESYMBOLS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNOREWIDTH
int System::Globalization::CompareInfo::_get_NORM_IGNOREWIDTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNOREWIDTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNOREWIDTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNOREWIDTH
void System::Globalization::CompareInfo::_set_NORM_IGNOREWIDTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNOREWIDTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNOREWIDTH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SORT_STRINGSORT
int System::Globalization::CompareInfo::_get_SORT_STRINGSORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_SORT_STRINGSORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "SORT_STRINGSORT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SORT_STRINGSORT
void System::Globalization::CompareInfo::_set_SORT_STRINGSORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_SORT_STRINGSORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "SORT_STRINGSORT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 COMPARE_OPTIONS_ORDINAL
int System::Globalization::CompareInfo::_get_COMPARE_OPTIONS_ORDINAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_COMPARE_OPTIONS_ORDINAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "COMPARE_OPTIONS_ORDINAL"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 COMPARE_OPTIONS_ORDINAL
void System::Globalization::CompareInfo::_set_COMPARE_OPTIONS_ORDINAL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_COMPARE_OPTIONS_ORDINAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "COMPARE_OPTIONS_ORDINAL", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 NORM_LINGUISTIC_CASING
int System::Globalization::CompareInfo::_get_NORM_LINGUISTIC_CASING() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_LINGUISTIC_CASING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_LINGUISTIC_CASING"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 NORM_LINGUISTIC_CASING
void System::Globalization::CompareInfo::_set_NORM_LINGUISTIC_CASING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_LINGUISTIC_CASING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_LINGUISTIC_CASING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RESERVED_FIND_ASCII_STRING
int System::Globalization::CompareInfo::_get_RESERVED_FIND_ASCII_STRING() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_RESERVED_FIND_ASCII_STRING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "RESERVED_FIND_ASCII_STRING"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RESERVED_FIND_ASCII_STRING
void System::Globalization::CompareInfo::_set_RESERVED_FIND_ASCII_STRING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_RESERVED_FIND_ASCII_STRING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "RESERVED_FIND_ASCII_STRING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SORT_VERSION_WHIDBEY
int System::Globalization::CompareInfo::_get_SORT_VERSION_WHIDBEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_SORT_VERSION_WHIDBEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "SORT_VERSION_WHIDBEY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SORT_VERSION_WHIDBEY
void System::Globalization::CompareInfo::_set_SORT_VERSION_WHIDBEY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_SORT_VERSION_WHIDBEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "SORT_VERSION_WHIDBEY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SORT_VERSION_V4
int System::Globalization::CompareInfo::_get_SORT_VERSION_V4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_SORT_VERSION_V4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "SORT_VERSION_V4"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SORT_VERSION_V4
void System::Globalization::CompareInfo::_set_SORT_VERSION_V4(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_SORT_VERSION_V4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "SORT_VERSION_V4", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,Mono.Globalization.Unicode.SimpleCollator> collators
System::Collections::Generic::Dictionary_2<::Il2CppString*, Mono::Globalization::Unicode::SimpleCollator*>* System::Globalization::CompareInfo::_get_collators() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_collators");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, Mono::Globalization::Unicode::SimpleCollator*>*>("System.Globalization", "CompareInfo", "collators")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,Mono.Globalization.Unicode.SimpleCollator> collators
void System::Globalization::CompareInfo::_set_collators(System::Collections::Generic::Dictionary_2<::Il2CppString*, Mono::Globalization::Unicode::SimpleCollator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_collators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "collators", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean managedCollation
bool System::Globalization::CompareInfo::_get_managedCollation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_managedCollation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CompareInfo", "managedCollation"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean managedCollation
void System::Globalization::CompareInfo::_set_managedCollation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_managedCollation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "managedCollation", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean managedCollationChecked
bool System::Globalization::CompareInfo::_get_managedCollationChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_managedCollationChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CompareInfo", "managedCollationChecked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean managedCollationChecked
void System::Globalization::CompareInfo::_set_managedCollationChecked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_managedCollationChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "managedCollationChecked", value));
}
// Autogenerated method: System.Globalization.CompareInfo.GetCompareInfo
System::Globalization::CompareInfo* System::Globalization::CompareInfo::GetCompareInfo(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetCompareInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "GetCompareInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CompareInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserializing
void System::Globalization::CompareInfo::OnDeserializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserialized
void System::Globalization::CompareInfo::OnDeserialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserialized
void System::Globalization::CompareInfo::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.OnSerializing
void System::Globalization::CompareInfo::OnSerializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Globalization::CompareInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_NEW(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Globalization.CompareInfo.get_Name
::Il2CppString* System::Globalization::CompareInfo::get_Name_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::get_Name_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare_NEW(::Il2CppString* string1, ::Il2CppString* string2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::Compare_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(string1, string2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, string1, string2);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare_NEW(::Il2CppString* string1, ::Il2CppString* string2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::Compare_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(string1, string2, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, string1, string2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare_NEW(::Il2CppString* string1, int offset1, int length1, ::Il2CppString* string2, int offset2, int length2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::Compare_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(string1, offset1, length1, string2, offset2, length2, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, string1, offset1, length1, string2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CompareOrdinal
int System::Globalization::CompareInfo::CompareOrdinal(::Il2CppString* string1, int offset1, int length1, ::Il2CppString* string2, int offset2, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(string1, offset1, length1, string2, offset2, length2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, string1, offset1, length1, string2, offset2, length2);
}
// Autogenerated method: System.Globalization.CompareInfo.IsPrefix
bool System::Globalization::CompareInfo::IsPrefix_NEW(::Il2CppString* source, ::Il2CppString* prefix, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::IsPrefix_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, prefix, options)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, source, prefix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IsSuffix
bool System::Globalization::CompareInfo::IsSuffix_NEW(::Il2CppString* source, ::Il2CppString* suffix, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::IsSuffix_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, suffix, options)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, source, suffix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOf
int System::Globalization::CompareInfo::IndexOf_NEW(::Il2CppString* source, ::Il2CppString* value, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::IndexOf_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, value, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, source, value, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOf
int System::Globalization::CompareInfo::IndexOf_NEW(::Il2CppString* source, ::Il2CppString* value, int startIndex, int count, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::IndexOf_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, value, startIndex, count, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, source, value, startIndex, count, options);
}
// Autogenerated method: System.Globalization.CompareInfo.LastIndexOf
int System::Globalization::CompareInfo::LastIndexOf_NEW(::Il2CppString* source, ::Il2CppString* value, int startIndex, int count, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::LastIndexOf_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, value, startIndex, count, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, source, value, startIndex, count, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetSortKey
System::Globalization::SortKey* System::Globalization::CompareInfo::GetSortKey_NEW(::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetSortKey_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, options)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CreateSortKey
System::Globalization::SortKey* System::Globalization::CompareInfo::CreateSortKey(::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::CreateSortKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSortKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, options)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCodeOfString
int System::Globalization::CompareInfo::GetHashCodeOfString(::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCodeOfString
int System::Globalization::CompareInfo::GetHashCodeOfString(::Il2CppString* source, System::Globalization::CompareOptions options, bool forceRandomizedHashing, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, options, forceRandomizedHashing, additionalEntropy)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, source, options, forceRandomizedHashing, additionalEntropy);
}
// Autogenerated method: System.Globalization.CompareInfo.get_UseManagedCollation
bool System::Globalization::CompareInfo::get_UseManagedCollation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::get_UseManagedCollation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "get_UseManagedCollation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.GetCollator
Mono::Globalization::Unicode::SimpleCollator* System::Globalization::CompareInfo::GetCollator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetCollator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCollator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Globalization::Unicode::SimpleCollator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.CreateSortKeyCore
System::Globalization::SortKey* System::Globalization::CompareInfo::CreateSortKeyCore(::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::CreateSortKeyCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSortKeyCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, options)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index_switch
int System::Globalization::CompareInfo::internal_index_switch(::Il2CppString* s1, int sindex, int count, ::Il2CppString* s2, System::Globalization::CompareOptions opt, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_index_switch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internal_index_switch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s1, sindex, count, s2, opt, first)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s1, sindex, count, s2, opt, first);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare_switch
int System::Globalization::CompareInfo::internal_compare_switch(::Il2CppString* str1, int offset1, int length1, ::Il2CppString* str2, int offset2, int length2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_compare_switch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internal_compare_switch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str1, offset1, length1, str2, offset2, length2, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare_managed
int System::Globalization::CompareInfo::internal_compare_managed(::Il2CppString* str1, int offset1, int length1, ::Il2CppString* str2, int offset2, int length2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_compare_managed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internal_compare_managed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str1, offset1, length1, str2, offset2, length2, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index_managed
int System::Globalization::CompareInfo::internal_index_managed(::Il2CppString* s1, int sindex, int count, ::Il2CppString* s2, System::Globalization::CompareOptions opt, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_index_managed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internal_index_managed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s1, sindex, count, s2, opt, first)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s1, sindex, count, s2, opt, first);
}
// Autogenerated method: System.Globalization.CompareInfo.assign_sortkey
void System::Globalization::CompareInfo::assign_sortkey(::Il2CppObject* key, ::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::assign_sortkey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "assign_sortkey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, source, options)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare
int System::Globalization::CompareInfo::internal_compare(::Il2CppString* str1, int offset1, int length1, ::Il2CppString* str2, int offset2, int length2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internal_compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str1, offset1, length1, str2, offset2, length2, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index
int System::Globalization::CompareInfo::internal_index(::Il2CppString* source, int sindex, int count, ::Il2CppString* value, System::Globalization::CompareOptions options, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_index");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internal_index", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, sindex, count, value, options, first)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, source, sindex, count, value, options, first);
}
// Autogenerated method: System.Globalization.CompareInfo.Equals
bool System::Globalization::CompareInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCode
int System::Globalization::CompareInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.ToString
::Il2CppString* System::Globalization::CompareInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CultureNotFoundException
#include "System/Globalization/CultureNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.CultureNotFoundException.get_InvalidCultureId
System::Nullable_1<int> System::Globalization::CultureNotFoundException::get_InvalidCultureId_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_InvalidCultureId_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InvalidCultureId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_InvalidCultureName
::Il2CppString* System::Globalization::CultureNotFoundException::get_InvalidCultureName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_InvalidCultureName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InvalidCultureName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_DefaultMessage
::Il2CppString* System::Globalization::CultureNotFoundException::get_DefaultMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_DefaultMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureNotFoundException", "get_DefaultMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_FormatedInvalidCultureId
::Il2CppString* System::Globalization::CultureNotFoundException::get_FormatedInvalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_FormatedInvalidCultureId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FormatedInvalidCultureId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.GetObjectData
void System::Globalization::CultureNotFoundException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_Message
::Il2CppString* System::Globalization::CultureNotFoundException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_Message");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.MonthNameStyles
#include "System/Globalization/MonthNameStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles Regular
System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles Regular
void System::Globalization::MonthNameStyles::_set_Regular(System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles Genitive
System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_Genitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_get_Genitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "Genitive"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles Genitive
void System::Globalization::MonthNameStyles::_set_Genitive(System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_set_Genitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "Genitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles LeapYear
System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_LeapYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_get_LeapYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "LeapYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles LeapYear
void System::Globalization::MonthNameStyles::_set_LeapYear(System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_set_LeapYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "LeapYear", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatFlags
#include "System/Globalization/DateTimeFormatFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags None
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags None
void System::Globalization::DateTimeFormatFlags::_set_None(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseGenitiveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseGenitiveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
void System::Globalization::DateTimeFormatFlags::_set_UseGenitiveMonth(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseGenitiveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseLeapYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseLeapYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
void System::Globalization::DateTimeFormatFlags::_set_UseLeapYearMonth(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseLeapYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseSpacesInMonthNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInMonthNames(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseSpacesInMonthNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseHebrewRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseHebrewRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
void System::Globalization::DateTimeFormatFlags::_set_UseHebrewRule(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseHebrewRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseSpacesInDayNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInDayNames(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseSpacesInDayNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseDigitPrefixInTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseDigitPrefixInTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
void System::Globalization::DateTimeFormatFlags::_set_UseDigitPrefixInTokens(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseDigitPrefixInTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
void System::Globalization::DateTimeFormatFlags::_set_NotInitialized(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "NotInitialized", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.TokenHashValue
#include "System/Globalization/TokenHashValue.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.MonthNameStyles
#include "System/Globalization/MonthNameStyles.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.TokenType
#include "System/TokenType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo invariantInfo
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_invariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_invariantInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "invariantInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo invariantInfo
void System::Globalization::DateTimeFormatInfo::_set_invariantInfo(System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_invariantInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.String rfc1123Pattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_rfc1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_rfc1123Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "rfc1123Pattern"));
}
// Autogenerated static field setter
// Set static field: static System.String rfc1123Pattern
void System::Globalization::DateTimeFormatInfo::_set_rfc1123Pattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_rfc1123Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "rfc1123Pattern", value));
}
// Autogenerated static field getter
// Get static field: static System.String sortableDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_sortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_sortableDateTimePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "sortableDateTimePattern"));
}
// Autogenerated static field setter
// Set static field: static System.String sortableDateTimePattern
void System::Globalization::DateTimeFormatInfo::_set_sortableDateTimePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_sortableDateTimePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "sortableDateTimePattern", value));
}
// Autogenerated static field getter
// Get static field: static System.String universalSortableDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_universalSortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_universalSortableDateTimePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "universalSortableDateTimePattern"));
}
// Autogenerated static field setter
// Set static field: static System.String universalSortableDateTimePattern
void System::Globalization::DateTimeFormatInfo::_set_universalSortableDateTimePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_universalSortableDateTimePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "universalSortableDateTimePattern", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_ALL_DATETIMES_SIZE
int System::Globalization::DateTimeFormatInfo::_get_DEFAULT_ALL_DATETIMES_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_DEFAULT_ALL_DATETIMES_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "DEFAULT_ALL_DATETIMES_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_ALL_DATETIMES_SIZE
void System::Globalization::DateTimeFormatInfo::_set_DEFAULT_ALL_DATETIMES_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_DEFAULT_ALL_DATETIMES_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "DEFAULT_ALL_DATETIMES_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean preferExistingTokens
bool System::Globalization::DateTimeFormatInfo::_get_preferExistingTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_preferExistingTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "DateTimeFormatInfo", "preferExistingTokens"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean preferExistingTokens
void System::Globalization::DateTimeFormatInfo::_set_preferExistingTokens(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_preferExistingTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "preferExistingTokens", value));
}
// [OptionalFieldAttribute] Offset: 0xC9A1C0
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable s_calendarNativeNames
System::Collections::Hashtable* System::Globalization::DateTimeFormatInfo::_get_s_calendarNativeNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_s_calendarNativeNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Globalization", "DateTimeFormatInfo", "s_calendarNativeNames"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable s_calendarNativeNames
void System::Globalization::DateTimeFormatInfo::_set_s_calendarNativeNames(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_s_calendarNativeNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_calendarNativeNames", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.DateTimeStyles InvalidDateTimeStyles
System::Globalization::DateTimeStyles System::Globalization::DateTimeFormatInfo::_get_InvalidDateTimeStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_InvalidDateTimeStyles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeFormatInfo", "InvalidDateTimeStyles"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.DateTimeStyles InvalidDateTimeStyles
void System::Globalization::DateTimeFormatInfo::_set_InvalidDateTimeStyles(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_InvalidDateTimeStyles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "InvalidDateTimeStyles", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TOKEN_HASH_SIZE
int System::Globalization::DateTimeFormatInfo::_get_TOKEN_HASH_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_TOKEN_HASH_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "TOKEN_HASH_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TOKEN_HASH_SIZE
void System::Globalization::DateTimeFormatInfo::_set_TOKEN_HASH_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_TOKEN_HASH_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "TOKEN_HASH_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SECOND_PRIME
int System::Globalization::DateTimeFormatInfo::_get_SECOND_PRIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_SECOND_PRIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "SECOND_PRIME"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SECOND_PRIME
void System::Globalization::DateTimeFormatInfo::_set_SECOND_PRIME(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_SECOND_PRIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "SECOND_PRIME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String dateSeparatorOrTimeZoneOffset
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_dateSeparatorOrTimeZoneOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_dateSeparatorOrTimeZoneOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "dateSeparatorOrTimeZoneOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.String dateSeparatorOrTimeZoneOffset
void System::Globalization::DateTimeFormatInfo::_set_dateSeparatorOrTimeZoneOffset(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_dateSeparatorOrTimeZoneOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "dateSeparatorOrTimeZoneOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.String invariantDateSeparator
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_invariantDateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_invariantDateSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "invariantDateSeparator"));
}
// Autogenerated static field setter
// Set static field: static private System.String invariantDateSeparator
void System::Globalization::DateTimeFormatInfo::_set_invariantDateSeparator(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_invariantDateSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantDateSeparator", value));
}
// Autogenerated static field getter
// Get static field: static private System.String invariantTimeSeparator
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_invariantTimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_invariantTimeSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "invariantTimeSeparator"));
}
// Autogenerated static field setter
// Set static field: static private System.String invariantTimeSeparator
void System::Globalization::DateTimeFormatInfo::_set_invariantTimeSeparator(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_invariantTimeSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantTimeSeparator", value));
}
// Autogenerated static field getter
// Get static field: static System.String IgnorablePeriod
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_IgnorablePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_IgnorablePeriod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "IgnorablePeriod"));
}
// Autogenerated static field setter
// Set static field: static System.String IgnorablePeriod
void System::Globalization::DateTimeFormatInfo::_set_IgnorablePeriod(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_IgnorablePeriod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "IgnorablePeriod", value));
}
// Autogenerated static field getter
// Get static field: static System.String IgnorableComma
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_IgnorableComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_IgnorableComma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "IgnorableComma"));
}
// Autogenerated static field setter
// Set static field: static System.String IgnorableComma
void System::Globalization::DateTimeFormatInfo::_set_IgnorableComma(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_IgnorableComma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "IgnorableComma", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKYearSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKYearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKYearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKYearSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKYearSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKYearSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKYearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKYearSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKMonthSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKMonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKMonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKMonthSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKMonthSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKMonthSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKMonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKMonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKDaySuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKDaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKDaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKDaySuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKDaySuff
void System::Globalization::DateTimeFormatInfo::_set_CJKDaySuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKDaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKDaySuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanYearSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanYearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanYearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanYearSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanYearSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanYearSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanYearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanYearSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanMonthSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanMonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanMonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanMonthSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanMonthSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanMonthSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanMonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanMonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanDaySuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanDaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanDaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanDaySuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanDaySuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanDaySuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanDaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanDaySuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanHourSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanHourSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanHourSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanMinuteSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanMinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanMinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanMinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanMinuteSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanMinuteSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanMinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanMinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanSecondSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanSecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanSecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanSecondSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanSecondSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanSecondSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanSecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanSecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKHourSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKHourSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKHourSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String ChineseHourSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_ChineseHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_ChineseHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "ChineseHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String ChineseHourSuff
void System::Globalization::DateTimeFormatInfo::_set_ChineseHourSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_ChineseHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "ChineseHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKMinuteSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKMinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKMinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKMinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKMinuteSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKMinuteSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKMinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKMinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKSecondSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKSecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKSecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKSecondSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKSecondSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKSecondSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKSecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKSecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String LocalTimeMark
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_LocalTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_LocalTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "LocalTimeMark"));
}
// Autogenerated static field setter
// Set static field: static System.String LocalTimeMark
void System::Globalization::DateTimeFormatInfo::_set_LocalTimeMark(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_LocalTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "LocalTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanLangName
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanLangName
void System::Globalization::DateTimeFormatInfo::_set_KoreanLangName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanLangName", value));
}
// Autogenerated static field getter
// Get static field: static System.String JapaneseLangName
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_JapaneseLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_JapaneseLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "JapaneseLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String JapaneseLangName
void System::Globalization::DateTimeFormatInfo::_set_JapaneseLangName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_JapaneseLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "JapaneseLangName", value));
}
// Autogenerated static field getter
// Get static field: static System.String EnglishLangName
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_EnglishLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_EnglishLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "EnglishLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String EnglishLangName
void System::Globalization::DateTimeFormatInfo::_set_EnglishLangName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_EnglishLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "EnglishLangName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo s_jajpDTFI
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_s_jajpDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_s_jajpDTFI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "s_jajpDTFI"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo s_jajpDTFI
void System::Globalization::DateTimeFormatInfo::_set_s_jajpDTFI(System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_s_jajpDTFI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_jajpDTFI", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo s_zhtwDTFI
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_s_zhtwDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_s_zhtwDTFI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "s_zhtwDTFI"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo s_zhtwDTFI
void System::Globalization::DateTimeFormatInfo::_set_s_zhtwDTFI(System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_s_zhtwDTFI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_zhtwDTFI", value));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InitPreferExistingTokens
bool System::Globalization::DateTimeFormatInfo::InitPreferExistingTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::InitPreferExistingTokens");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "InitPreferExistingTokens", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CultureName
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_Culture
System::Globalization::CultureInfo* System::Globalization::DateTimeFormatInfo::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_Culture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LanguageName
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_LanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_LanguageName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LanguageName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedDayOfWeekNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedDayOfWeekNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetDayOfWeekNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internalGetDayOfWeekNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedMonthNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetMonthNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::internalGetMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internalGetMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InitializeOverridableProperties
void System::Globalization::DateTimeFormatInfo::InitializeOverridableProperties(System::Globalization::CultureData* cultureData, int calendarID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::InitializeOverridableProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeOverridableProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cultureData, calendarID)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cultureData, calendarID);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.OnDeserialized
void System::Globalization::DateTimeFormatInfo::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.OnSerializing
void System::Globalization::DateTimeFormatInfo::OnSerializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_InvariantInfo
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::get_InvariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_InvariantInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "get_InvariantInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CurrentInfo
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::get_CurrentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_CurrentInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "get_CurrentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetInstance
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetInstance(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetFormat
::Il2CppObject* System::Globalization::DateTimeFormatInfo::GetFormat_NEW(System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetFormat_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(formatType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.Clone
::Il2CppObject* System::Globalization::DateTimeFormatInfo::Clone_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::Clone_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AMDesignator
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_AMDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AMDesignator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AMDesignator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_Calendar
System::Globalization::Calendar* System::Globalization::DateTimeFormatInfo::get_Calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_Calendar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Calendar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_Calendar
void System::Globalization::DateTimeFormatInfo::set_Calendar(System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_Calendar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Calendar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_OptionalCalendars
::Array<int>* System::Globalization::DateTimeFormatInfo::get_OptionalCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_OptionalCalendars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_OptionalCalendars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_EraNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_EraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_EraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_EraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetEraName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetEraName(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetEraName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEraName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(era)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, era);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedEraNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_AbbreviatedEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AbbreviatedEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AbbreviatedEraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetAbbreviatedEraName(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetAbbreviatedEraName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAbbreviatedEraName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(era)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, era);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedEnglishEraNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_AbbreviatedEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AbbreviatedEnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AbbreviatedEnglishEraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DateSeparator
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_DateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_DateSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DateSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_FullDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_FullDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FullDateTimePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LongDatePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_LongDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_LongDatePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LongDatePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_LongDatePattern
void System::Globalization::DateTimeFormatInfo::set_LongDatePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_LongDatePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_LongDatePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LongTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_LongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_LongTimePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LongTimePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_LongTimePattern
void System::Globalization::DateTimeFormatInfo::set_LongTimePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_LongTimePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_LongTimePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthDayPattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_MonthDayPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_MonthDayPattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MonthDayPattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_PMDesignator
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_PMDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_PMDesignator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PMDesignator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_RFC1123Pattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_RFC1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_RFC1123Pattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RFC1123Pattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_ShortDatePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_ShortDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_ShortDatePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShortDatePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_ShortDatePattern
void System::Globalization::DateTimeFormatInfo::set_ShortDatePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_ShortDatePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ShortDatePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_ShortTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_ShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_ShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShortTimePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_ShortTimePattern
void System::Globalization::DateTimeFormatInfo::set_ShortTimePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_ShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ShortTimePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_SortableDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_SortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_SortableDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SortableDateTimePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_GeneralShortTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_GeneralShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_GeneralShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GeneralShortTimePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_GeneralLongTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_GeneralLongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_GeneralLongTimePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GeneralLongTimePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DateTimeOffsetPattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_DateTimeOffsetPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_DateTimeOffsetPattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DateTimeOffsetPattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_TimeSeparator
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_TimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_TimeSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TimeSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UniversalSortableDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_UniversalSortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UniversalSortableDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UniversalSortableDateTimePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_YearMonthPattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_YearMonthPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_YearMonthPattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_YearMonthPattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_YearMonthPattern
void System::Globalization::DateTimeFormatInfo::set_YearMonthPattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_YearMonthPattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_YearMonthPattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedDayNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_AbbreviatedDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AbbreviatedDayNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AbbreviatedDayNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DayNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_DayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_DayNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DayNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedMonthNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_AbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_MonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_MonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasSpacesInMonthNames
bool System::Globalization::DateTimeFormatInfo::get_HasSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_HasSpacesInMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasSpacesInMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasSpacesInDayNames
bool System::Globalization::DateTimeFormatInfo::get_HasSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_HasSpacesInDayNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasSpacesInDayNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetMonthName
::Il2CppString* System::Globalization::DateTimeFormatInfo::internalGetMonthName(int month, System::Globalization::MonthNameStyles style, bool abbreviated) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetMonthName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internalGetMonthName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(month, style, abbreviated)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, month, style, abbreviated);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetGenitiveMonthNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::internalGetGenitiveMonthNames(bool abbreviated) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetGenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internalGetGenitiveMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(abbreviated)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, abbreviated);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetLeapYearMonthNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::internalGetLeapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetLeapYearMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "internalGetLeapYearMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetAbbreviatedDayName(System::DayOfWeek dayofweek) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetAbbreviatedDayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAbbreviatedDayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dayofweek)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, dayofweek);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetCombinedPatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::GetCombinedPatterns(::Array<::Il2CppString*>* patterns1, ::Array<::Il2CppString*>* patterns2, ::Il2CppString* connectString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetCombinedPatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetCombinedPatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(patterns1, patterns2, connectString)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, patterns1, patterns2, connectString);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::GetAllDateTimePatterns(::Il2CppChar format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetAllDateTimePatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllDateTimePatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetDayName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetDayName(System::DayOfWeek dayofweek) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetDayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dayofweek)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, dayofweek);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetAbbreviatedMonthName(int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetAbbreviatedMonthName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAbbreviatedMonthName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(month)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, month);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetMonthName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetMonthName(int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetMonthName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonthName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(month)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, month);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetMergedPatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::GetMergedPatterns(::Array<::Il2CppString*>* patterns, ::Il2CppString* defaultPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetMergedPatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetMergedPatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(patterns, defaultPattern)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, patterns, defaultPattern);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllYearMonthPatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_AllYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllYearMonthPatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllYearMonthPatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllShortDatePatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_AllShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllShortDatePatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllShortDatePatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllShortTimePatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_AllShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllShortTimePatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllShortTimePatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllLongDatePatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_AllLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllLongDatePatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllLongDatePatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllLongTimePatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_AllLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllLongTimePatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllLongTimePatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedYearMonthPatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_UnclonedYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedYearMonthPatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UnclonedYearMonthPatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedShortDatePatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_UnclonedShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedShortDatePatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UnclonedShortDatePatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedLongDatePatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_UnclonedLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedLongDatePatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UnclonedLongDatePatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedShortTimePatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_UnclonedShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedShortTimePatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UnclonedShortTimePatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedLongTimePatterns
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_UnclonedLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedLongTimePatterns");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UnclonedLongTimePatterns", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_IsReadOnly
bool System::Globalization::DateTimeFormatInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthGenitiveNames
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfo::get_MonthGenitiveNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_MonthGenitiveNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MonthGenitiveNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullTimeSpanPositivePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_FullTimeSpanPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_FullTimeSpanPositivePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FullTimeSpanPositivePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullTimeSpanNegativePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_FullTimeSpanNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_FullTimeSpanNegativePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FullTimeSpanNegativePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CompareInfo
System::Globalization::CompareInfo* System::Globalization::DateTimeFormatInfo::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_CompareInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CompareInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CompareInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.ValidateStyles
void System::Globalization::DateTimeFormatInfo::ValidateStyles(System::Globalization::DateTimeStyles style, ::Il2CppString* parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::ValidateStyles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "ValidateStyles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(style, parameterName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, style, parameterName);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FormatFlags
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatInfo::get_FormatFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_FormatFlags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FormatFlags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasForceTwoDigitYears
bool System::Globalization::DateTimeFormatInfo::get_HasForceTwoDigitYears() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_HasForceTwoDigitYears");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasForceTwoDigitYears", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasYearMonthAdjustment
bool System::Globalization::DateTimeFormatInfo::get_HasYearMonthAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_HasYearMonthAdjustment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasYearMonthAdjustment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.YearMonthAdjustment
bool System::Globalization::DateTimeFormatInfo::YearMonthAdjustment(int& year, int& month, bool parsedMonthName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::YearMonthAdjustment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "YearMonthAdjustment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, parsedMonthName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, month, parsedMonthName);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetJapaneseCalendarDTFI
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetJapaneseCalendarDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetJapaneseCalendarDTFI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetJapaneseCalendarDTFI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetTaiwanCalendarDTFI
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetTaiwanCalendarDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetTaiwanCalendarDTFI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetTaiwanCalendarDTFI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.ClearTokenHashTable
void System::Globalization::DateTimeFormatInfo::ClearTokenHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::ClearTokenHashTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearTokenHashTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.CreateTokenHashTable
::Array<System::Globalization::TokenHashValue*>* System::Globalization::DateTimeFormatInfo::CreateTokenHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::CreateTokenHashTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTokenHashTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Globalization::TokenHashValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.AddMonthNames
void System::Globalization::DateTimeFormatInfo::AddMonthNames(::Array<System::Globalization::TokenHashValue*>* temp, ::Il2CppString* monthPostfix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::AddMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(temp, monthPostfix)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, temp, monthPostfix);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.TryParseHebrewNumber
bool System::Globalization::DateTimeFormatInfo::TryParseHebrewNumber(System::__DTString& str, bool& badFormat, int& number) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::TryParseHebrewNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "TryParseHebrewNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, badFormat, number)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, badFormat, number);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.IsHebrewChar
bool System::Globalization::DateTimeFormatInfo::IsHebrewChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::IsHebrewChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "IsHebrewChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.Tokenize
bool System::Globalization::DateTimeFormatInfo::Tokenize(System::TokenType TokenMask, System::TokenType& tokenType, int& tokenValue, System::__DTString& str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::Tokenize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Tokenize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(TokenMask, tokenType, tokenValue, str)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, TokenMask, tokenType, tokenValue, str);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InsertAtCurrentHashNode
void System::Globalization::DateTimeFormatInfo::InsertAtCurrentHashNode(::Array<System::Globalization::TokenHashValue*>* hashTable, ::Il2CppString* str, ::Il2CppChar ch, System::TokenType tokenType, int tokenValue, int pos, int hashcode, int hashProbe) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::InsertAtCurrentHashNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InsertAtCurrentHashNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashTable, str, ch, tokenType, tokenValue, pos, hashcode, hashProbe)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hashTable, str, ch, tokenType, tokenValue, pos, hashcode, hashProbe);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InsertHash
void System::Globalization::DateTimeFormatInfo::InsertHash(::Array<System::Globalization::TokenHashValue*>* hashTable, ::Il2CppString* str, System::TokenType tokenType, int tokenValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::InsertHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InsertHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashTable, str, tokenType, tokenValue)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hashTable, str, tokenType, tokenValue);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo..cctor
void System::Globalization::DateTimeFormatInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TokenHashValue
#include "System/Globalization/TokenHashValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FORMATFLAGS
#include "System/Globalization/FORMATFLAGS.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS None
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS None
void System::Globalization::FORMATFLAGS::_set_None(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseGenitiveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseGenitiveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseGenitiveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
void System::Globalization::FORMATFLAGS::_set_UseGenitiveMonth(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseGenitiveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseGenitiveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseLeapYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseLeapYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseLeapYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
void System::Globalization::FORMATFLAGS::_set_UseLeapYearMonth(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseLeapYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseLeapYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseSpacesInMonthNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseSpacesInMonthNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
void System::Globalization::FORMATFLAGS::_set_UseSpacesInMonthNames(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseSpacesInMonthNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseSpacesInMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseHebrewParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseHebrewParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseHebrewParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
void System::Globalization::FORMATFLAGS::_set_UseHebrewParsing(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseHebrewParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseHebrewParsing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseSpacesInDayNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseSpacesInDayNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
void System::Globalization::FORMATFLAGS::_set_UseSpacesInDayNames(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseSpacesInDayNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseSpacesInDayNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseDigitPrefixInTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseDigitPrefixInTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseDigitPrefixInTokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
void System::Globalization::FORMATFLAGS::_set_UseDigitPrefixInTokens(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseDigitPrefixInTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseDigitPrefixInTokens", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CalendarId
#include "System/Globalization/CalendarId.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN
void System::Globalization::CalendarId::_set_GREGORIAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_US
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_US() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_US");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_US"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_US
void System::Globalization::CalendarId::_set_GREGORIAN_US(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_US");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_US", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JAPAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_JAPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_JAPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JAPAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JAPAN
void System::Globalization::CalendarId::_set_JAPAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_JAPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JAPAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId TAIWAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_TAIWAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_TAIWAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "TAIWAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId TAIWAN
void System::Globalization::CalendarId::_set_TAIWAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_TAIWAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "TAIWAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId KOREA
System::Globalization::CalendarId System::Globalization::CalendarId::_get_KOREA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_KOREA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "KOREA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId KOREA
void System::Globalization::CalendarId::_set_KOREA(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_KOREA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "KOREA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId HIJRI
System::Globalization::CalendarId System::Globalization::CalendarId::_get_HIJRI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_HIJRI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "HIJRI"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId HIJRI
void System::Globalization::CalendarId::_set_HIJRI(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_HIJRI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "HIJRI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId THAI
System::Globalization::CalendarId System::Globalization::CalendarId::_get_THAI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_THAI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "THAI"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId THAI
void System::Globalization::CalendarId::_set_THAI(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_THAI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "THAI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId HEBREW
System::Globalization::CalendarId System::Globalization::CalendarId::_get_HEBREW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_HEBREW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "HEBREW"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId HEBREW
void System::Globalization::CalendarId::_set_HEBREW(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_HEBREW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "HEBREW", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_ME_FRENCH
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_ME_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_ME_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_ME_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_ME_FRENCH
void System::Globalization::CalendarId::_set_GREGORIAN_ME_FRENCH(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_ME_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_ME_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_ARABIC
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_ARABIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_ARABIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_ARABIC"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_ARABIC
void System::Globalization::CalendarId::_set_GREGORIAN_ARABIC(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_ARABIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_ARABIC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_ENGLISH
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_XLIT_ENGLISH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_XLIT_ENGLISH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_XLIT_ENGLISH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_ENGLISH
void System::Globalization::CalendarId::_set_GREGORIAN_XLIT_ENGLISH(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_XLIT_ENGLISH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_XLIT_ENGLISH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_FRENCH
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_XLIT_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_XLIT_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_XLIT_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_FRENCH
void System::Globalization::CalendarId::_set_GREGORIAN_XLIT_FRENCH(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_XLIT_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_XLIT_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JULIAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_JULIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_JULIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JULIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JULIAN
void System::Globalization::CalendarId::_set_JULIAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_JULIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JULIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JAPANESELUNISOLAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_JAPANESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_JAPANESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JAPANESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JAPANESELUNISOLAR
void System::Globalization::CalendarId::_set_JAPANESELUNISOLAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_JAPANESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JAPANESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId CHINESELUNISOLAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_CHINESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_CHINESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "CHINESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId CHINESELUNISOLAR
void System::Globalization::CalendarId::_set_CHINESELUNISOLAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_CHINESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "CHINESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId SAKA
System::Globalization::CalendarId System::Globalization::CalendarId::_get_SAKA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_SAKA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "SAKA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId SAKA
void System::Globalization::CalendarId::_set_SAKA(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_SAKA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "SAKA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_CHN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_CHN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_LUNAR_ETO_CHN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_CHN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_CHN
void System::Globalization::CalendarId::_set_LUNAR_ETO_CHN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_LUNAR_ETO_CHN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_CHN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_KOR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_KOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_LUNAR_ETO_KOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_KOR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_KOR
void System::Globalization::CalendarId::_set_LUNAR_ETO_KOR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_LUNAR_ETO_KOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_KOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_ROKUYOU
System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_ROKUYOU() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_LUNAR_ETO_ROKUYOU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_ROKUYOU"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_ROKUYOU
void System::Globalization::CalendarId::_set_LUNAR_ETO_ROKUYOU(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_LUNAR_ETO_ROKUYOU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_ROKUYOU", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId KOREANLUNISOLAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_KOREANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_KOREANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "KOREANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId KOREANLUNISOLAR
void System::Globalization::CalendarId::_set_KOREANLUNISOLAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_KOREANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "KOREANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId TAIWANLUNISOLAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_TAIWANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_TAIWANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "TAIWANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId TAIWANLUNISOLAR
void System::Globalization::CalendarId::_set_TAIWANLUNISOLAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_TAIWANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "TAIWANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId PERSIAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_PERSIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_PERSIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "PERSIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId PERSIAN
void System::Globalization::CalendarId::_set_PERSIAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_PERSIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "PERSIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId UMALQURA
System::Globalization::CalendarId System::Globalization::CalendarId::_get_UMALQURA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_UMALQURA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "UMALQURA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId UMALQURA
void System::Globalization::CalendarId::_set_UMALQURA(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_UMALQURA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "UMALQURA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LAST_CALENDAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_LAST_CALENDAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_LAST_CALENDAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LAST_CALENDAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LAST_CALENDAR
void System::Globalization::CalendarId::_set_LAST_CALENDAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_LAST_CALENDAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LAST_CALENDAR", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.DateTimeFormatInfoScanner
#include "System/Globalization/DateTimeFormatInfoScanner.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.FORMATFLAGS
#include "System/Globalization/FORMATFLAGS.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> s_knownWords
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* System::Globalization::DateTimeFormatInfoScanner::_get_s_knownWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::_get_s_knownWords");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>("System.Globalization", "DateTimeFormatInfoScanner", "s_knownWords")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> s_knownWords
void System::Globalization::DateTimeFormatInfoScanner::_set_s_knownWords(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::_set_s_knownWords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner", "s_knownWords", value));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.get_KnownWords
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* System::Globalization::DateTimeFormatInfoScanner::get_KnownWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::get_KnownWords");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "get_KnownWords", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.SkipWhiteSpacesAndNonLetter
int System::Globalization::DateTimeFormatInfoScanner::SkipWhiteSpacesAndNonLetter(::Il2CppString* pattern, int currentIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::SkipWhiteSpacesAndNonLetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "SkipWhiteSpacesAndNonLetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pattern, currentIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pattern, currentIndex);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddDateWordOrPostfix
void System::Globalization::DateTimeFormatInfoScanner::AddDateWordOrPostfix(::Il2CppString* formatPostfix, ::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::AddDateWordOrPostfix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDateWordOrPostfix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(formatPostfix, str)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, formatPostfix, str);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddDateWords
int System::Globalization::DateTimeFormatInfoScanner::AddDateWords(::Il2CppString* pattern, int index, ::Il2CppString* formatPostfix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::AddDateWords");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDateWords", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pattern, index, formatPostfix)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, pattern, index, formatPostfix);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ScanRepeatChar
int System::Globalization::DateTimeFormatInfoScanner::ScanRepeatChar(::Il2CppString* pattern, ::Il2CppChar ch, int index, int& count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::ScanRepeatChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ScanRepeatChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pattern, ch, index, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pattern, ch, index, count);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddIgnorableSymbols
void System::Globalization::DateTimeFormatInfoScanner::AddIgnorableSymbols(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::AddIgnorableSymbols");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddIgnorableSymbols", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ScanDateWord
void System::Globalization::DateTimeFormatInfoScanner::ScanDateWord(::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::ScanDateWord");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanDateWord", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pattern)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetDateWordsOfDTFI
::Array<::Il2CppString*>* System::Globalization::DateTimeFormatInfoScanner::GetDateWordsOfDTFI(System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetDateWordsOfDTFI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDateWordsOfDTFI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dtfi)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, dtfi);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagGenitiveMonth
System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagGenitiveMonth(::Array<::Il2CppString*>* monthNames, ::Array<::Il2CppString*>* genitveMonthNames, ::Array<::Il2CppString*>* abbrevMonthNames, ::Array<::Il2CppString*>* genetiveAbbrevMonthNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagGenitiveMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagGenitiveMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInMonthNames
System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInMonthNames(::Array<::Il2CppString*>* monthNames, ::Array<::Il2CppString*>* genitveMonthNames, ::Array<::Il2CppString*>* abbrevMonthNames, ::Array<::Il2CppString*>* genetiveAbbrevMonthNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseSpaceInMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInDayNames
System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInDayNames(::Array<::Il2CppString*>* dayNames, ::Array<::Il2CppString*>* abbrevDayNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInDayNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseSpaceInDayNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dayNames, abbrevDayNames)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dayNames, abbrevDayNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseHebrewCalendar
System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseHebrewCalendar(int calID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseHebrewCalendar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseHebrewCalendar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calID)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, calID);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.EqualStringArrays
bool System::Globalization::DateTimeFormatInfoScanner::EqualStringArrays(::Array<::Il2CppString*>* array1, ::Array<::Il2CppString*>* array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::EqualStringArrays");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "EqualStringArrays", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array1, array2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array1, array2);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ArrayElementsHaveSpace
bool System::Globalization::DateTimeFormatInfoScanner::ArrayElementsHaveSpace(::Array<::Il2CppString*>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::ArrayElementsHaveSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ArrayElementsHaveSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ArrayElementsBeginWithDigit
bool System::Globalization::DateTimeFormatInfoScanner::ArrayElementsBeginWithDigit(::Array<::Il2CppString*>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::ArrayElementsBeginWithDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ArrayElementsBeginWithDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern
#include "System/Globalization/DateTimeFormatInfoScanner.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern None
System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern None
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_None(System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundYearPatternFlag
System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYearPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYearPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYearPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundYearPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYearPatternFlag(System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYearPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYearPatternFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundMonthPatternFlag
System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundMonthPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundMonthPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundMonthPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundMonthPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundMonthPatternFlag(System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundMonthPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundMonthPatternFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundDayPatternFlag
System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundDayPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundDayPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundDayPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundDayPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundDayPatternFlag(System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundDayPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundDayPatternFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundYMDPatternFlag
System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYMDPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYMDPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYMDPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundYMDPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYMDPatternFlag(System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYMDPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYMDPatternFlag", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeStyles
#include "System/Globalization/DateTimeStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles None
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles None
void System::Globalization::DateTimeStyles::_set_None(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowLeadingWhite
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowLeadingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_AllowLeadingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowLeadingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowLeadingWhite
void System::Globalization::DateTimeStyles::_set_AllowLeadingWhite(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_AllowLeadingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowLeadingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowTrailingWhite
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowTrailingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_AllowTrailingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowTrailingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowTrailingWhite
void System::Globalization::DateTimeStyles::_set_AllowTrailingWhite(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_AllowTrailingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowTrailingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowInnerWhite
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowInnerWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_AllowInnerWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowInnerWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowInnerWhite
void System::Globalization::DateTimeStyles::_set_AllowInnerWhite(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_AllowInnerWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowInnerWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowWhiteSpaces
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowWhiteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_AllowWhiteSpaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowWhiteSpaces"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowWhiteSpaces
void System::Globalization::DateTimeStyles::_set_AllowWhiteSpaces(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_AllowWhiteSpaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowWhiteSpaces", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles NoCurrentDateDefault
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_NoCurrentDateDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_NoCurrentDateDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "NoCurrentDateDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles NoCurrentDateDefault
void System::Globalization::DateTimeStyles::_set_NoCurrentDateDefault(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_NoCurrentDateDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "NoCurrentDateDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AdjustToUniversal
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AdjustToUniversal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_AdjustToUniversal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AdjustToUniversal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AdjustToUniversal
void System::Globalization::DateTimeStyles::_set_AdjustToUniversal(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_AdjustToUniversal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AdjustToUniversal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AssumeLocal
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AssumeLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_AssumeLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AssumeLocal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AssumeLocal
void System::Globalization::DateTimeStyles::_set_AssumeLocal(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_AssumeLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AssumeLocal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AssumeUniversal
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AssumeUniversal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_AssumeUniversal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AssumeUniversal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AssumeUniversal
void System::Globalization::DateTimeStyles::_set_AssumeUniversal(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_AssumeUniversal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AssumeUniversal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles RoundtripKind
System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_RoundtripKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_get_RoundtripKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "RoundtripKind"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles RoundtripKind
void System::Globalization::DateTimeStyles::_set_RoundtripKind(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeStyles::_set_RoundtripKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "RoundtripKind", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.GregorianCalendar
#include "System/Globalization/GregorianCalendar.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth365
::Array<int>* System::Globalization::GregorianCalendar::_get_DaysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::_get_DaysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendar", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth365
void System::Globalization::GregorianCalendar::_set_DaysToMonth365(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::_set_DaysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth366
::Array<int>* System::Globalization::GregorianCalendar::_get_DaysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::_get_DaysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendar", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth366
void System::Globalization::GregorianCalendar::_set_DaysToMonth366(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::_set_DaysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth366", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.Calendar s_defaultInstance
System::Globalization::Calendar* System::Globalization::GregorianCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::Calendar*>("System.Globalization", "GregorianCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.Calendar s_defaultInstance
void System::Globalization::GregorianCalendar::_set_s_defaultInstance(System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "s_defaultInstance", value));
}
// Autogenerated method: System.Globalization.GregorianCalendar.OnDeserialized
void System::Globalization::GregorianCalendar::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDefaultInstance
System::Globalization::Calendar* System::Globalization::GregorianCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDatePart
int System::Globalization::GregorianCalendar::GetDatePart_NEW(int64_t ticks, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::GetDatePart_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDatePart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ticks, part)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ticks, part);
}
// Autogenerated method: System.Globalization.GregorianCalendar..cctor
void System::Globalization::GregorianCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MinSupportedDateTime
System::DateTime System::Globalization::GregorianCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::get_MinSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::GregorianCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::get_MaxSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_ID
int System::Globalization::GregorianCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::get_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfMonth
int System::Globalization::GregorianCalendar::GetDayOfMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfWeek
System::DayOfWeek System::Globalization::GregorianCalendar::GetDayOfWeek(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDaysInMonth
int System::Globalization::GregorianCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetEra
int System::Globalization::GregorianCalendar::GetEra(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::GetEra");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_Eras
::Array<int>* System::Globalization::GregorianCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::get_Eras");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonth
int System::Globalization::GregorianCalendar::GetMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::GetMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonthsInYear
int System::Globalization::GregorianCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetYear
int System::Globalization::GregorianCalendar::GetYear(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::GetYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.IsLeapYear
bool System::Globalization::GregorianCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToDateTime
System::DateTime System::Globalization::GregorianCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.TryToDateTime
bool System::Globalization::GregorianCalendar::TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, System::DateTime& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::TryToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era, result);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_TwoDigitYearMax
int System::Globalization::GregorianCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::get_TwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToFourDigitYear
int System::Globalization::GregorianCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendar::ToFourDigitYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth365
::Array<int>* System::Globalization::GregorianCalendarHelper::_get_DaysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::_get_DaysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendarHelper", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth365
void System::Globalization::GregorianCalendarHelper::_set_DaysToMonth365(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::_set_DaysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarHelper", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth366
::Array<int>* System::Globalization::GregorianCalendarHelper::_get_DaysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::_get_DaysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendarHelper", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth366
void System::Globalization::GregorianCalendarHelper::_set_DaysToMonth366(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::_set_DaysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarHelper", "DaysToMonth366", value));
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.get_MaxYear
int System::Globalization::GregorianCalendarHelper::get_MaxYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::get_MaxYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MaxYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetGregorianYear
int System::Globalization::GregorianCalendarHelper::GetGregorianYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetGregorianYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGregorianYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.IsValidYear
bool System::Globalization::GregorianCalendarHelper::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::IsValidYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValidYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDatePart
int System::Globalization::GregorianCalendarHelper::GetDatePart_NEW(int64_t ticks, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetDatePart_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDatePart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ticks, part)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ticks, part);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetAbsoluteDate
int64_t System::Globalization::GregorianCalendarHelper::GetAbsoluteDate(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetAbsoluteDate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "GetAbsoluteDate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.DateToTicks
int64_t System::Globalization::GregorianCalendarHelper::DateToTicks(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::DateToTicks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "DateToTicks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.TimeToTicks
int64_t System::Globalization::GregorianCalendarHelper::TimeToTicks(int hour, int minute, int second, int millisecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::TimeToTicks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "TimeToTicks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hour, minute, second, millisecond)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hour, minute, second, millisecond);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.CheckTicksRange
void System::Globalization::GregorianCalendarHelper::CheckTicksRange(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::CheckTicksRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckTicksRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ticks)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ticks);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDayOfMonth
int System::Globalization::GregorianCalendarHelper::GetDayOfMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDayOfWeek
System::DayOfWeek System::Globalization::GregorianCalendarHelper::GetDayOfWeek(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDaysInMonth
int System::Globalization::GregorianCalendarHelper::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetEra
int System::Globalization::GregorianCalendarHelper::GetEra(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetEra");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.get_Eras
::Array<int>* System::Globalization::GregorianCalendarHelper::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::get_Eras");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetMonth
int System::Globalization::GregorianCalendarHelper::GetMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetMonthsInYear
int System::Globalization::GregorianCalendarHelper::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetYear
int System::Globalization::GregorianCalendarHelper::GetYear(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::GetYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.IsLeapYear
bool System::Globalization::GregorianCalendarHelper::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.ToDateTime
System::DateTime System::Globalization::GregorianCalendarHelper::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper..cctor
void System::Globalization::GregorianCalendarHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.GregorianCalendarTypes
#include "System/Globalization/GregorianCalendarTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes Localized
System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_Localized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_get_Localized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "Localized"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes Localized
void System::Globalization::GregorianCalendarTypes::_set_Localized(System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_set_Localized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "Localized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes USEnglish
System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_USEnglish() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_get_USEnglish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "USEnglish"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes USEnglish
void System::Globalization::GregorianCalendarTypes::_set_USEnglish(System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_set_USEnglish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "USEnglish", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes MiddleEastFrench
System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_MiddleEastFrench() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_get_MiddleEastFrench");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "MiddleEastFrench"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes MiddleEastFrench
void System::Globalization::GregorianCalendarTypes::_set_MiddleEastFrench(System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_set_MiddleEastFrench");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "MiddleEastFrench", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes Arabic
System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_Arabic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_get_Arabic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "Arabic"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes Arabic
void System::Globalization::GregorianCalendarTypes::_set_Arabic(System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_set_Arabic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "Arabic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes TransliteratedEnglish
System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_TransliteratedEnglish() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_get_TransliteratedEnglish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "TransliteratedEnglish"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes TransliteratedEnglish
void System::Globalization::GregorianCalendarTypes::_set_TransliteratedEnglish(System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_set_TransliteratedEnglish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "TransliteratedEnglish", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes TransliteratedFrench
System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_TransliteratedFrench() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_get_TransliteratedFrench");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "TransliteratedFrench"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes TransliteratedFrench
void System::Globalization::GregorianCalendarTypes::_set_TransliteratedFrench(System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::GregorianCalendarTypes::_set_TransliteratedFrench");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "TransliteratedFrench", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumberParsingContext
#include "System/Globalization/HebrewNumberParsingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumberParsingState
#include "System/Globalization/HebrewNumberParsingState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState InvalidHebrewNumber
System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_InvalidHebrewNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumberParsingState::_get_InvalidHebrewNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "InvalidHebrewNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState InvalidHebrewNumber
void System::Globalization::HebrewNumberParsingState::_set_InvalidHebrewNumber(System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumberParsingState::_set_InvalidHebrewNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "InvalidHebrewNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState NotHebrewDigit
System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_NotHebrewDigit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumberParsingState::_get_NotHebrewDigit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "NotHebrewDigit"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState NotHebrewDigit
void System::Globalization::HebrewNumberParsingState::_set_NotHebrewDigit(System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumberParsingState::_set_NotHebrewDigit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "NotHebrewDigit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState FoundEndOfHebrewNumber
System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_FoundEndOfHebrewNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumberParsingState::_get_FoundEndOfHebrewNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "FoundEndOfHebrewNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState FoundEndOfHebrewNumber
void System::Globalization::HebrewNumberParsingState::_set_FoundEndOfHebrewNumber(System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumberParsingState::_set_FoundEndOfHebrewNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "FoundEndOfHebrewNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState ContinueParsing
System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_ContinueParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumberParsingState::_get_ContinueParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "ContinueParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState ContinueParsing
void System::Globalization::HebrewNumberParsingState::_set_ContinueParsing(System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumberParsingState::_set_ContinueParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "ContinueParsing", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.HebrewNumber
#include "System/Globalization/HebrewNumber.hpp"
// Including type: System.Globalization.HebrewNumber/HebrewToken
#include "System/Globalization/HebrewNumber_HebrewToken.hpp"
// Including type: System.Globalization.HebrewNumber/HebrewValue
#include "System/Globalization/HebrewNumber_HebrewValue.hpp"
// Including type: System.Globalization.HebrewNumberParsingState
#include "System/Globalization/HebrewNumberParsingState.hpp"
// Including type: System.Globalization.HebrewNumberParsingContext
#include "System/Globalization/HebrewNumberParsingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.HebrewNumber/HebrewValue[] HebrewValues
::Array<System::Globalization::HebrewNumber::HebrewValue*>* System::Globalization::HebrewNumber::_get_HebrewValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::_get_HebrewValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Globalization::HebrewNumber::HebrewValue*>*>("System.Globalization", "HebrewNumber", "HebrewValues"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.HebrewNumber/HebrewValue[] HebrewValues
void System::Globalization::HebrewNumber::_set_HebrewValues(::Array<System::Globalization::HebrewNumber::HebrewValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::_set_HebrewValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber", "HebrewValues", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char maxHebrewNumberCh
::Il2CppChar System::Globalization::HebrewNumber::_get_maxHebrewNumberCh() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::_get_maxHebrewNumberCh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.Globalization", "HebrewNumber", "maxHebrewNumberCh"));
}
// Autogenerated static field setter
// Set static field: static private System.Char maxHebrewNumberCh
void System::Globalization::HebrewNumber::_set_maxHebrewNumberCh(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::_set_maxHebrewNumberCh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber", "maxHebrewNumberCh", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.HebrewNumber/HS[][] NumberPasingState
::Array<::Array<System::Globalization::HebrewNumber::HS>*>* System::Globalization::HebrewNumber::_get_NumberPasingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::_get_NumberPasingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Array<System::Globalization::HebrewNumber::HS>*>*>("System.Globalization", "HebrewNumber", "NumberPasingState"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.HebrewNumber/HS[][] NumberPasingState
void System::Globalization::HebrewNumber::_set_NumberPasingState(::Array<::Array<System::Globalization::HebrewNumber::HS>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::_set_NumberPasingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber", "NumberPasingState", value));
}
// Autogenerated method: System.Globalization.HebrewNumber.ToString
::Il2CppString* System::Globalization::HebrewNumber::ToString(int Number) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(Number)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, Number);
}
// Autogenerated method: System.Globalization.HebrewNumber.ParseByChar
System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumber::ParseByChar(::Il2CppChar ch, System::Globalization::HebrewNumberParsingContext& context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::ParseByChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", "ParseByChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, context)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::HebrewNumberParsingState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, context);
}
// Autogenerated method: System.Globalization.HebrewNumber.IsDigit
bool System::Globalization::HebrewNumber::IsDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::IsDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", "IsDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.HebrewNumber..cctor
void System::Globalization::HebrewNumber::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber/HebrewToken
#include "System/Globalization/HebrewNumber_HebrewToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Invalid
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Invalid
void System::Globalization::HebrewNumber::HebrewToken::_set_Invalid(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit400
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit400() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_Digit400");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit400"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit400
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit400(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_Digit400");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit400", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit200_300
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit200_300() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_Digit200_300");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit200_300"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit200_300
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit200_300(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_Digit200_300");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit200_300", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit100
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit100() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_Digit100");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit100"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit100
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit100(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_Digit100");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit100", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit10
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit10() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_Digit10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit10"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit10
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit10(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_Digit10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit10", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit1
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_Digit1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit1"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit1
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit1(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_Digit1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit6_7
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit6_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_Digit6_7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit6_7"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit6_7
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit6_7(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_Digit6_7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit6_7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit7
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit7() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_Digit7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit7"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit7
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit7(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_Digit7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit9
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_Digit9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit9"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit9
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit9(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_Digit9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit9", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken SingleQuote
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_SingleQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_SingleQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "SingleQuote"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken SingleQuote
void System::Globalization::HebrewNumber::HebrewToken::_set_SingleQuote(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_SingleQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "SingleQuote", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken DoubleQuote
System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_DoubleQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_get_DoubleQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "DoubleQuote"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken DoubleQuote
void System::Globalization::HebrewNumber::HebrewToken::_set_DoubleQuote(System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HebrewToken::_set_DoubleQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "DoubleQuote", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber/HebrewValue
#include "System/Globalization/HebrewNumber_HebrewValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber/HS
#include "System/Globalization/HebrewNumber.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS _err
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get__err() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get__err");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "_err"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS _err
void System::Globalization::HebrewNumber::HS::_set__err(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set__err");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "_err", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS Start
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS Start
void System::Globalization::HebrewNumber::HS::_set_Start(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S400");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400
void System::Globalization::HebrewNumber::HS::_set_S400(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S400");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_400
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_400() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S400_400");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_400"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_400
void System::Globalization::HebrewNumber::HS::_set_S400_400(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S400_400");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_400", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_X00
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_X00() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S400_X00");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_X00"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_X00
void System::Globalization::HebrewNumber::HS::_set_S400_X00(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S400_X00");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_X00", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_X0
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_X0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S400_X0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_X0"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_X0
void System::Globalization::HebrewNumber::HS::_set_S400_X0(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S400_X0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_X0", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X00_DQ
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X00_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_X00_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X00_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X00_DQ
void System::Globalization::HebrewNumber::HS::_set_X00_DQ(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_X00_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X00_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_X00_X0
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_X00_X0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S400_X00_X0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_X00_X0"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_X00_X0
void System::Globalization::HebrewNumber::HS::_set_S400_X00_X0(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S400_X00_X0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_X00_X0", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X0_DQ
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X0_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_X0_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X0_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X0_DQ
void System::Globalization::HebrewNumber::HS::_set_X0_DQ(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_X0_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X0_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X
void System::Globalization::HebrewNumber::HS::_set_X(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X0
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_X0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X0"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X0
void System::Globalization::HebrewNumber::HS::_set_X0(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_X0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X0", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X00
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X00() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_X00");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X00"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X00
void System::Globalization::HebrewNumber::HS::_set_X00(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_X00");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X00", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_DQ
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S400_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_DQ
void System::Globalization::HebrewNumber::HS::_set_S400_DQ(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S400_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_400_DQ
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_400_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S400_400_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_400_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_400_DQ
void System::Globalization::HebrewNumber::HS::_set_S400_400_DQ(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S400_400_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_400_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_400_100
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_400_100() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S400_400_100");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_400_100"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_400_100
void System::Globalization::HebrewNumber::HS::_set_S400_400_100(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S400_400_100");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_400_100", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S9
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S9"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S9
void System::Globalization::HebrewNumber::HS::_set_S9(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S9", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X00_S9
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X00_S9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_X00_S9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X00_S9"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X00_S9
void System::Globalization::HebrewNumber::HS::_set_X00_S9(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_X00_S9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X00_S9", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S9_DQ
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S9_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_S9_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S9_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S9_DQ
void System::Globalization::HebrewNumber::HS::_set_S9_DQ(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_S9_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S9_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS END
System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_get_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "END"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS END
void System::Globalization::HebrewNumber::HS::_set_END(System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::HebrewNumber::HS::_set_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "END", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.JapaneseCalendar
#include "System/Globalization/JapaneseCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
System::DateTime System::Globalization::JapaneseCalendar::_get_calendarMinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::_get_calendarMinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("System.Globalization", "JapaneseCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::JapaneseCalendar::_set_calendarMinValue(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::_set_calendarMinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "calendarMinValue", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] japaneseEraInfo
::Array<System::Globalization::EraInfo*>* System::Globalization::JapaneseCalendar::_get_japaneseEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::_get_japaneseEraInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Globalization::EraInfo*>*>("System.Globalization", "JapaneseCalendar", "japaneseEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] japaneseEraInfo
void System::Globalization::JapaneseCalendar::_set_japaneseEraInfo(::Array<System::Globalization::EraInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::_set_japaneseEraInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "japaneseEraInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.Calendar s_defaultInstance
System::Globalization::Calendar* System::Globalization::JapaneseCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::Calendar*>("System.Globalization", "JapaneseCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.Calendar s_defaultInstance
void System::Globalization::JapaneseCalendar::_set_s_defaultInstance(System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "s_defaultInstance", value));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEraInfo
::Array<System::Globalization::EraInfo*>* System::Globalization::JapaneseCalendar::GetEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetEraInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "GetEraInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Globalization::EraInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetErasFromRegistry
::Array<System::Globalization::EraInfo*>* System::Globalization::JapaneseCalendar::GetErasFromRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetErasFromRegistry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "GetErasFromRegistry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Globalization::EraInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDefaultInstance
System::Globalization::Calendar* System::Globalization::JapaneseCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EraNames
::Array<::Il2CppString*>* System::Globalization::JapaneseCalendar::EraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::EraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "EraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.AbbrevEraNames
::Array<::Il2CppString*>* System::Globalization::JapaneseCalendar::AbbrevEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::AbbrevEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "AbbrevEraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EnglishEraNames
::Array<::Il2CppString*>* System::Globalization::JapaneseCalendar::EnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::EnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "EnglishEraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar..cctor
void System::Globalization::JapaneseCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MinSupportedDateTime
System::DateTime System::Globalization::JapaneseCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::get_MinSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::JapaneseCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::get_MaxSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_ID
int System::Globalization::JapaneseCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::get_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDaysInMonth
int System::Globalization::JapaneseCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfMonth
int System::Globalization::JapaneseCalendar::GetDayOfMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfWeek
System::DayOfWeek System::Globalization::JapaneseCalendar::GetDayOfWeek(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonthsInYear
int System::Globalization::JapaneseCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEra
int System::Globalization::JapaneseCalendar::GetEra(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetEra");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonth
int System::Globalization::JapaneseCalendar::GetMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetYear
int System::Globalization::JapaneseCalendar::GetYear(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::GetYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsLeapYear
bool System::Globalization::JapaneseCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToDateTime
System::DateTime System::Globalization::JapaneseCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToFourDigitYear
int System::Globalization::JapaneseCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::ToFourDigitYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_Eras
::Array<int>* System::Globalization::JapaneseCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::get_Eras");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsValidYear
bool System::Globalization::JapaneseCalendar::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::IsValidYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValidYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_TwoDigitYearMax
int System::Globalization::JapaneseCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::JapaneseCalendar::get_TwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.NumberFormatInfo invariantInfo
System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::_get_invariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::_get_invariantInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberFormatInfo*>("System.Globalization", "NumberFormatInfo", "invariantInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.NumberFormatInfo invariantInfo
void System::Globalization::NumberFormatInfo::_set_invariantInfo(System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::_set_invariantInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberFormatInfo", "invariantInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.NumberStyles InvalidNumberStyles
System::Globalization::NumberStyles System::Globalization::NumberFormatInfo::_get_InvalidNumberStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::_get_InvalidNumberStyles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberFormatInfo", "InvalidNumberStyles"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.NumberStyles InvalidNumberStyles
void System::Globalization::NumberFormatInfo::_set_InvalidNumberStyles(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::_set_InvalidNumberStyles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberFormatInfo", "InvalidNumberStyles", value));
}
// Autogenerated method: System.Globalization.NumberFormatInfo.OnSerializing
void System::Globalization::NumberFormatInfo::OnSerializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.OnDeserializing
void System::Globalization::NumberFormatInfo::OnDeserializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.OnDeserialized
void System::Globalization::NumberFormatInfo::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.VerifyGroupSeparator
void System::Globalization::NumberFormatInfo::VerifyGroupSeparator(::Il2CppString* groupSep, ::Il2CppString* propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::VerifyGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "VerifyGroupSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(groupSep, propertyName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, groupSep, propertyName);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.VerifyWritable
void System::Globalization::NumberFormatInfo::VerifyWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::VerifyWritable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "VerifyWritable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_InvariantInfo
System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::get_InvariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_InvariantInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "get_InvariantInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.GetInstance
System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::GetInstance(System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "GetInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(formatProvider)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, formatProvider);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.Clone
::Il2CppObject* System::Globalization::NumberFormatInfo::Clone_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::Clone_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyDecimalDigits
int System::Globalization::NumberFormatInfo::get_CurrencyDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_CurrencyDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencyDecimalDigits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyDecimalSeparator
::Il2CppString* System::Globalization::NumberFormatInfo::get_CurrencyDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_CurrencyDecimalSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencyDecimalSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_IsReadOnly
bool System::Globalization::NumberFormatInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyGroupSizes
::Array<int>* System::Globalization::NumberFormatInfo::get_CurrencyGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_CurrencyGroupSizes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencyGroupSizes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberGroupSizes
::Array<int>* System::Globalization::NumberFormatInfo::get_NumberGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_NumberGroupSizes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumberGroupSizes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentGroupSizes
::Array<int>* System::Globalization::NumberFormatInfo::get_PercentGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PercentGroupSizes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PercentGroupSizes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyGroupSeparator
::Il2CppString* System::Globalization::NumberFormatInfo::get_CurrencyGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_CurrencyGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencyGroupSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.set_CurrencyGroupSeparator
void System::Globalization::NumberFormatInfo::set_CurrencyGroupSeparator(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::set_CurrencyGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_CurrencyGroupSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencySymbol
::Il2CppString* System::Globalization::NumberFormatInfo::get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_CurrencySymbol");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencySymbol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrentInfo
System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::get_CurrentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_CurrentInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "get_CurrentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NaNSymbol
::Il2CppString* System::Globalization::NumberFormatInfo::get_NaNSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_NaNSymbol");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NaNSymbol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyNegativePattern
int System::Globalization::NumberFormatInfo::get_CurrencyNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_CurrencyNegativePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencyNegativePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberNegativePattern
int System::Globalization::NumberFormatInfo::get_NumberNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_NumberNegativePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumberNegativePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentPositivePattern
int System::Globalization::NumberFormatInfo::get_PercentPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PercentPositivePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PercentPositivePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentNegativePattern
int System::Globalization::NumberFormatInfo::get_PercentNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PercentNegativePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PercentNegativePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NegativeInfinitySymbol
::Il2CppString* System::Globalization::NumberFormatInfo::get_NegativeInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_NegativeInfinitySymbol");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NegativeInfinitySymbol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NegativeSign
::Il2CppString* System::Globalization::NumberFormatInfo::get_NegativeSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_NegativeSign");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NegativeSign", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberDecimalDigits
int System::Globalization::NumberFormatInfo::get_NumberDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_NumberDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumberDecimalDigits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberDecimalSeparator
::Il2CppString* System::Globalization::NumberFormatInfo::get_NumberDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_NumberDecimalSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumberDecimalSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberGroupSeparator
::Il2CppString* System::Globalization::NumberFormatInfo::get_NumberGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_NumberGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumberGroupSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.set_NumberGroupSeparator
void System::Globalization::NumberFormatInfo::set_NumberGroupSeparator(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::set_NumberGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_NumberGroupSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyPositivePattern
int System::Globalization::NumberFormatInfo::get_CurrencyPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_CurrencyPositivePattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencyPositivePattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PositiveInfinitySymbol
::Il2CppString* System::Globalization::NumberFormatInfo::get_PositiveInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PositiveInfinitySymbol");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PositiveInfinitySymbol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PositiveSign
::Il2CppString* System::Globalization::NumberFormatInfo::get_PositiveSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PositiveSign");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PositiveSign", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentDecimalDigits
int System::Globalization::NumberFormatInfo::get_PercentDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PercentDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PercentDecimalDigits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentDecimalSeparator
::Il2CppString* System::Globalization::NumberFormatInfo::get_PercentDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PercentDecimalSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PercentDecimalSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentGroupSeparator
::Il2CppString* System::Globalization::NumberFormatInfo::get_PercentGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PercentGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PercentGroupSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.set_PercentGroupSeparator
void System::Globalization::NumberFormatInfo::set_PercentGroupSeparator(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::set_PercentGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_PercentGroupSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentSymbol
::Il2CppString* System::Globalization::NumberFormatInfo::get_PercentSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PercentSymbol");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PercentSymbol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PerMilleSymbol
::Il2CppString* System::Globalization::NumberFormatInfo::get_PerMilleSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::get_PerMilleSymbol");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PerMilleSymbol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.GetFormat
::Il2CppObject* System::Globalization::NumberFormatInfo::GetFormat_NEW(System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::GetFormat_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(formatType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.ReadOnly
System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::ReadOnly(System::Globalization::NumberFormatInfo* nfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "ReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nfi)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nfi);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.ValidateParseStyleInteger
void System::Globalization::NumberFormatInfo::ValidateParseStyleInteger(System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::ValidateParseStyleInteger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "ValidateParseStyleInteger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(style)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, style);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.ValidateParseStyleFloatingPoint
void System::Globalization::NumberFormatInfo::ValidateParseStyleFloatingPoint(System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberFormatInfo::ValidateParseStyleFloatingPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "ValidateParseStyleFloatingPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(style)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, style);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles None
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles None
void System::Globalization::NumberStyles::_set_None(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowLeadingWhite
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowLeadingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowLeadingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowLeadingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowLeadingWhite
void System::Globalization::NumberStyles::_set_AllowLeadingWhite(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowLeadingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowLeadingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowTrailingWhite
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowTrailingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowTrailingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowTrailingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowTrailingWhite
void System::Globalization::NumberStyles::_set_AllowTrailingWhite(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowTrailingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowTrailingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowLeadingSign
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowLeadingSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowLeadingSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowLeadingSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowLeadingSign
void System::Globalization::NumberStyles::_set_AllowLeadingSign(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowLeadingSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowLeadingSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowTrailingSign
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowTrailingSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowTrailingSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowTrailingSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowTrailingSign
void System::Globalization::NumberStyles::_set_AllowTrailingSign(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowTrailingSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowTrailingSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowParentheses
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowParentheses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowParentheses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowParentheses"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowParentheses
void System::Globalization::NumberStyles::_set_AllowParentheses(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowParentheses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowParentheses", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowDecimalPoint
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowDecimalPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowDecimalPoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowDecimalPoint"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowDecimalPoint
void System::Globalization::NumberStyles::_set_AllowDecimalPoint(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowDecimalPoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowDecimalPoint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowThousands
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowThousands() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowThousands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowThousands"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowThousands
void System::Globalization::NumberStyles::_set_AllowThousands(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowThousands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowThousands", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowExponent
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowExponent"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowExponent
void System::Globalization::NumberStyles::_set_AllowExponent(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowExponent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowCurrencySymbol
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowCurrencySymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowCurrencySymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowCurrencySymbol
void System::Globalization::NumberStyles::_set_AllowCurrencySymbol(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowCurrencySymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowCurrencySymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowHexSpecifier
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowHexSpecifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_AllowHexSpecifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowHexSpecifier"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowHexSpecifier
void System::Globalization::NumberStyles::_set_AllowHexSpecifier(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_AllowHexSpecifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowHexSpecifier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Integer
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Integer
void System::Globalization::NumberStyles::_set_Integer(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles HexNumber
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_HexNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_HexNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "HexNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles HexNumber
void System::Globalization::NumberStyles::_set_HexNumber(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_HexNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "HexNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Number
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Number"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Number
void System::Globalization::NumberStyles::_set_Number(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Float
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Float
void System::Globalization::NumberStyles::_set_Float(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Currency
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Currency() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_Currency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Currency"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Currency
void System::Globalization::NumberStyles::_set_Currency(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_Currency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Currency", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Any
System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Any
void System::Globalization::NumberStyles::_set_Any(System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::NumberStyles::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Any", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TaiwanCalendar
#include "System/Globalization/TaiwanCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] taiwanEraInfo
::Array<System::Globalization::EraInfo*>* System::Globalization::TaiwanCalendar::_get_taiwanEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::_get_taiwanEraInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Globalization::EraInfo*>*>("System.Globalization", "TaiwanCalendar", "taiwanEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] taiwanEraInfo
void System::Globalization::TaiwanCalendar::_set_taiwanEraInfo(::Array<System::Globalization::EraInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::_set_taiwanEraInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "taiwanEraInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.Calendar s_defaultInstance
System::Globalization::Calendar* System::Globalization::TaiwanCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::Calendar*>("System.Globalization", "TaiwanCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.Calendar s_defaultInstance
void System::Globalization::TaiwanCalendar::_set_s_defaultInstance(System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "s_defaultInstance", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
System::DateTime System::Globalization::TaiwanCalendar::_get_calendarMinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::_get_calendarMinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("System.Globalization", "TaiwanCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::TaiwanCalendar::_set_calendarMinValue(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::_set_calendarMinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "calendarMinValue", value));
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDefaultInstance
System::Globalization::Calendar* System::Globalization::TaiwanCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TaiwanCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar..cctor
void System::Globalization::TaiwanCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TaiwanCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_MinSupportedDateTime
System::DateTime System::Globalization::TaiwanCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::get_MinSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::TaiwanCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::get_MaxSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_ID
int System::Globalization::TaiwanCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::get_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDaysInMonth
int System::Globalization::TaiwanCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDayOfMonth
int System::Globalization::TaiwanCalendar::GetDayOfMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDayOfWeek
System::DayOfWeek System::Globalization::TaiwanCalendar::GetDayOfWeek(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetMonthsInYear
int System::Globalization::TaiwanCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetEra
int System::Globalization::TaiwanCalendar::GetEra(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::GetEra");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetMonth
int System::Globalization::TaiwanCalendar::GetMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::GetMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetYear
int System::Globalization::TaiwanCalendar::GetYear(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::GetYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.IsLeapYear
bool System::Globalization::TaiwanCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.ToDateTime
System::DateTime System::Globalization::TaiwanCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_Eras
::Array<int>* System::Globalization::TaiwanCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::get_Eras");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_TwoDigitYearMax
int System::Globalization::TaiwanCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::get_TwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.ToFourDigitYear
int System::Globalization::TaiwanCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TaiwanCalendar::ToFourDigitYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.TextInfo s_Invariant
System::Globalization::TextInfo* System::Globalization::TextInfo::_get_s_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::_get_s_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::TextInfo*>("System.Globalization", "TextInfo", "s_Invariant"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.TextInfo s_Invariant
void System::Globalization::TextInfo::_set_s_Invariant(System::Globalization::TextInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::_set_s_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfo", "s_Invariant", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 wordSeparatorMask
int System::Globalization::TextInfo::_get_wordSeparatorMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::_get_wordSeparatorMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "TextInfo", "wordSeparatorMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 wordSeparatorMask
void System::Globalization::TextInfo::_set_wordSeparatorMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::_set_wordSeparatorMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfo", "wordSeparatorMask", value));
}
// Autogenerated method: System.Globalization.TextInfo.get_Invariant
System::Globalization::TextInfo* System::Globalization::TextInfo::get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::get_Invariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "get_Invariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::TextInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.OnDeserializing
void System::Globalization::TextInfo::OnDeserializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.TextInfo.OnDeserialized
void System::Globalization::TextInfo::OnDeserialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.OnDeserialized
void System::Globalization::TextInfo::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.TextInfo.OnSerializing
void System::Globalization::TextInfo::OnSerializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.TextInfo.GetHashCodeOrdinalIgnoreCase
int System::Globalization::TextInfo::GetHashCodeOrdinalIgnoreCase(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::GetHashCodeOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "GetHashCodeOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Globalization.TextInfo.GetHashCodeOrdinalIgnoreCase
int System::Globalization::TextInfo::GetHashCodeOrdinalIgnoreCase(::Il2CppString* s, bool forceRandomizedHashing, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::GetHashCodeOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "GetHashCodeOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, forceRandomizedHashing, additionalEntropy)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, forceRandomizedHashing, additionalEntropy);
}
// Autogenerated method: System.Globalization.TextInfo.CompareOrdinalIgnoreCase
int System::Globalization::TextInfo::CompareOrdinalIgnoreCase(::Il2CppString* str1, ::Il2CppString* str2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::CompareOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "CompareOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str1, str2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str1, str2);
}
// Autogenerated method: System.Globalization.TextInfo.CompareOrdinalIgnoreCaseEx
int System::Globalization::TextInfo::CompareOrdinalIgnoreCaseEx(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int lengthA, int lengthB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::CompareOrdinalIgnoreCaseEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "CompareOrdinalIgnoreCaseEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, indexA, strB, indexB, lengthA, lengthB)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, lengthA, lengthB);
}
// Autogenerated method: System.Globalization.TextInfo.IndexOfStringOrdinalIgnoreCase
int System::Globalization::TextInfo::IndexOfStringOrdinalIgnoreCase(::Il2CppString* source, ::Il2CppString* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::IndexOfStringOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "IndexOfStringOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, value, startIndex, count);
}
// Autogenerated method: System.Globalization.TextInfo.LastIndexOfStringOrdinalIgnoreCase
int System::Globalization::TextInfo::LastIndexOfStringOrdinalIgnoreCase(::Il2CppString* source, ::Il2CppString* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::LastIndexOfStringOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "LastIndexOfStringOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, value, startIndex, count);
}
// Autogenerated method: System.Globalization.TextInfo.get_CultureName
::Il2CppString* System::Globalization::TextInfo::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.Clone
::Il2CppObject* System::Globalization::TextInfo::Clone_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::Clone_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.SetReadOnlyState
void System::Globalization::TextInfo::SetReadOnlyState(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::SetReadOnlyState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetReadOnlyState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(readOnly)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.TextInfo.ToLower
::Il2CppChar System::Globalization::TextInfo::ToLower_NEW(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToLower_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToLower
::Il2CppString* System::Globalization::TextInfo::ToLower_NEW(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToLower_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToLowerAsciiInvariant
::Il2CppChar System::Globalization::TextInfo::ToLowerAsciiInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToLowerAsciiInvariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "ToLowerAsciiInvariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpper
::Il2CppChar System::Globalization::TextInfo::ToUpper_NEW(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToUpper_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpper
::Il2CppString* System::Globalization::TextInfo::ToUpper_NEW(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToUpper_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperAsciiInvariant
::Il2CppChar System::Globalization::TextInfo::ToUpperAsciiInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToUpperAsciiInvariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "ToUpperAsciiInvariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.IsAscii
bool System::Globalization::TextInfo::IsAscii(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::IsAscii");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "IsAscii", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.get_IsAsciiCasingSameAsInvariant
bool System::Globalization::TextInfo::get_IsAsciiCasingSameAsInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::get_IsAsciiCasingSameAsInvariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsAsciiCasingSameAsInvariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Globalization::TextInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_NEW(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Globalization.TextInfo.GetCaseInsensitiveHashCode
int System::Globalization::TextInfo::GetCaseInsensitiveHashCode(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::GetCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.GetCaseInsensitiveHashCode
int System::Globalization::TextInfo::GetCaseInsensitiveHashCode(::Il2CppString* str, bool forceRandomizedHashing, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::GetCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, forceRandomizedHashing, additionalEntropy)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, str, forceRandomizedHashing, additionalEntropy);
}
// Autogenerated method: System.Globalization.TextInfo.GetInvariantCaseInsensitiveHashCode
int System::Globalization::TextInfo::GetInvariantCaseInsensitiveHashCode(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::GetInvariantCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInvariantCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperInternal
::Il2CppString* System::Globalization::TextInfo::ToUpperInternal(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToUpperInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToUpperInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToLowerInternal
::Il2CppString* System::Globalization::TextInfo::ToLowerInternal(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToLowerInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLowerInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperInternal
::Il2CppChar System::Globalization::TextInfo::ToUpperInternal(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToUpperInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToUpperInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToLowerInternal
::Il2CppChar System::Globalization::TextInfo::ToLowerInternal(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToLowerInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLowerInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.InternalCompareStringOrdinalIgnoreCase
int System::Globalization::TextInfo::InternalCompareStringOrdinalIgnoreCase(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int lenA, int lenB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::InternalCompareStringOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "InternalCompareStringOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, indexA, strB, indexB, lenA, lenB)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, lenA, lenB);
}
// Autogenerated method: System.Globalization.TextInfo.Equals
bool System::Globalization::TextInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Globalization.TextInfo.GetHashCode
int System::Globalization::TextInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.ToString
::Il2CppString* System::Globalization::TextInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfo::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TimeSpanFormat
#include "System/Globalization/TimeSpanFormat.hpp"
// Including type: System.Globalization.TimeSpanFormat/Pattern
#include "System/Globalization/TimeSpanFormat_Pattern.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Globalization.TimeSpanFormat/FormatLiterals PositiveInvariantFormatLiterals
System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanFormat::_get_PositiveInvariantFormatLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::_get_PositiveInvariantFormatLiterals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::TimeSpanFormat::FormatLiterals>("System.Globalization", "TimeSpanFormat", "PositiveInvariantFormatLiterals"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Globalization.TimeSpanFormat/FormatLiterals PositiveInvariantFormatLiterals
void System::Globalization::TimeSpanFormat::_set_PositiveInvariantFormatLiterals(System::Globalization::TimeSpanFormat::FormatLiterals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::_set_PositiveInvariantFormatLiterals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat", "PositiveInvariantFormatLiterals", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Globalization.TimeSpanFormat/FormatLiterals NegativeInvariantFormatLiterals
System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanFormat::_get_NegativeInvariantFormatLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::_get_NegativeInvariantFormatLiterals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::TimeSpanFormat::FormatLiterals>("System.Globalization", "TimeSpanFormat", "NegativeInvariantFormatLiterals"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Globalization.TimeSpanFormat/FormatLiterals NegativeInvariantFormatLiterals
void System::Globalization::TimeSpanFormat::_set_NegativeInvariantFormatLiterals(System::Globalization::TimeSpanFormat::FormatLiterals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::_set_NegativeInvariantFormatLiterals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat", "NegativeInvariantFormatLiterals", value));
}
// Autogenerated method: System.Globalization.TimeSpanFormat.IntToString
::Il2CppString* System::Globalization::TimeSpanFormat::IntToString(int n, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::IntToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "IntToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, digits)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, digits);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.Format
::Il2CppString* System::Globalization::TimeSpanFormat::Format(System::TimeSpan value, ::Il2CppString* format, System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, format, formatProvider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, formatProvider);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.FormatStandard
::Il2CppString* System::Globalization::TimeSpanFormat::FormatStandard(System::TimeSpan value, bool isInvariant, ::Il2CppString* format, System::Globalization::TimeSpanFormat::Pattern pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatStandard");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "FormatStandard", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, isInvariant, format, pattern)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, isInvariant, format, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.FormatCustomized
::Il2CppString* System::Globalization::TimeSpanFormat::FormatCustomized(System::TimeSpan value, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatCustomized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "FormatCustomized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, format, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, dtfi);
}
// Autogenerated method: System.Globalization.TimeSpanFormat..cctor
void System::Globalization::TimeSpanFormat::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanFormat/Pattern
#include "System/Globalization/TimeSpanFormat_Pattern.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanFormat/Pattern None
System::Globalization::TimeSpanFormat::Pattern System::Globalization::TimeSpanFormat::Pattern::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::Pattern::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::TimeSpanFormat::Pattern>("System.Globalization", "TimeSpanFormat/Pattern", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanFormat/Pattern None
void System::Globalization::TimeSpanFormat::Pattern::_set_None(System::Globalization::TimeSpanFormat::Pattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::Pattern::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat/Pattern", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanFormat/Pattern Minimum
System::Globalization::TimeSpanFormat::Pattern System::Globalization::TimeSpanFormat::Pattern::_get_Minimum() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::Pattern::_get_Minimum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::TimeSpanFormat::Pattern>("System.Globalization", "TimeSpanFormat/Pattern", "Minimum"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanFormat/Pattern Minimum
void System::Globalization::TimeSpanFormat::Pattern::_set_Minimum(System::Globalization::TimeSpanFormat::Pattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::Pattern::_set_Minimum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat/Pattern", "Minimum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanFormat/Pattern Full
System::Globalization::TimeSpanFormat::Pattern System::Globalization::TimeSpanFormat::Pattern::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::Pattern::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::TimeSpanFormat::Pattern>("System.Globalization", "TimeSpanFormat/Pattern", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanFormat/Pattern Full
void System::Globalization::TimeSpanFormat::Pattern::_set_Full(System::Globalization::TimeSpanFormat::Pattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::Pattern::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat/Pattern", "Full", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TimeSpanFormat/FormatLiterals
#include "System/Globalization/TimeSpanFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_Start
::Il2CppString* System::Globalization::TimeSpanFormat::FormatLiterals::get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatLiterals::get_Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_DayHourSep
::Il2CppString* System::Globalization::TimeSpanFormat::FormatLiterals::get_DayHourSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatLiterals::get_DayHourSep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_DayHourSep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_HourMinuteSep
::Il2CppString* System::Globalization::TimeSpanFormat::FormatLiterals::get_HourMinuteSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatLiterals::get_HourMinuteSep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_HourMinuteSep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_MinuteSecondSep
::Il2CppString* System::Globalization::TimeSpanFormat::FormatLiterals::get_MinuteSecondSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatLiterals::get_MinuteSecondSep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_MinuteSecondSep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_SecondFractionSep
::Il2CppString* System::Globalization::TimeSpanFormat::FormatLiterals::get_SecondFractionSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatLiterals::get_SecondFractionSep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_SecondFractionSep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_End
::Il2CppString* System::Globalization::TimeSpanFormat::FormatLiterals::get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatLiterals::get_End");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_End", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.InitInvariant
System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanFormat::FormatLiterals::InitInvariant(bool isNegative) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatLiterals::InitInvariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat/FormatLiterals", "InitInvariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isNegative)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::TimeSpanFormat::FormatLiterals, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isNegative);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.Init
void System::Globalization::TimeSpanFormat::FormatLiterals::Init(::Il2CppString* format, bool useInvariantFieldLengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TimeSpanFormat::FormatLiterals::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, useInvariantFieldLengths)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, format, useInvariantFieldLengths);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory UppercaseLetter
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_UppercaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_UppercaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "UppercaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory UppercaseLetter
void System::Globalization::UnicodeCategory::_set_UppercaseLetter(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_UppercaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "UppercaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LowercaseLetter
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LowercaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_LowercaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LowercaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LowercaseLetter
void System::Globalization::UnicodeCategory::_set_LowercaseLetter(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_LowercaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LowercaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory TitlecaseLetter
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_TitlecaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_TitlecaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "TitlecaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory TitlecaseLetter
void System::Globalization::UnicodeCategory::_set_TitlecaseLetter(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_TitlecaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "TitlecaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ModifierLetter
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ModifierLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_ModifierLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ModifierLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ModifierLetter
void System::Globalization::UnicodeCategory::_set_ModifierLetter(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_ModifierLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ModifierLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherLetter
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_OtherLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherLetter
void System::Globalization::UnicodeCategory::_set_OtherLetter(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_OtherLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory NonSpacingMark
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_NonSpacingMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_NonSpacingMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "NonSpacingMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory NonSpacingMark
void System::Globalization::UnicodeCategory::_set_NonSpacingMark(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_NonSpacingMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "NonSpacingMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory SpacingCombiningMark
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_SpacingCombiningMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_SpacingCombiningMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "SpacingCombiningMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory SpacingCombiningMark
void System::Globalization::UnicodeCategory::_set_SpacingCombiningMark(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_SpacingCombiningMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "SpacingCombiningMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory EnclosingMark
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_EnclosingMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_EnclosingMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "EnclosingMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory EnclosingMark
void System::Globalization::UnicodeCategory::_set_EnclosingMark(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_EnclosingMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "EnclosingMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory DecimalDigitNumber
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_DecimalDigitNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_DecimalDigitNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "DecimalDigitNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory DecimalDigitNumber
void System::Globalization::UnicodeCategory::_set_DecimalDigitNumber(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_DecimalDigitNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "DecimalDigitNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LetterNumber
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LetterNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_LetterNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LetterNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LetterNumber
void System::Globalization::UnicodeCategory::_set_LetterNumber(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_LetterNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LetterNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherNumber
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_OtherNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherNumber
void System::Globalization::UnicodeCategory::_set_OtherNumber(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_OtherNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory SpaceSeparator
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_SpaceSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_SpaceSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "SpaceSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory SpaceSeparator
void System::Globalization::UnicodeCategory::_set_SpaceSeparator(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_SpaceSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "SpaceSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LineSeparator
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LineSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_LineSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LineSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LineSeparator
void System::Globalization::UnicodeCategory::_set_LineSeparator(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_LineSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LineSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ParagraphSeparator
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ParagraphSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_ParagraphSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ParagraphSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ParagraphSeparator
void System::Globalization::UnicodeCategory::_set_ParagraphSeparator(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_ParagraphSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ParagraphSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Control
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Control() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_Control");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Control"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Control
void System::Globalization::UnicodeCategory::_set_Control(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_Control");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Control", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Format
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Format
void System::Globalization::UnicodeCategory::_set_Format(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Surrogate
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Surrogate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_Surrogate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Surrogate"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Surrogate
void System::Globalization::UnicodeCategory::_set_Surrogate(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_Surrogate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Surrogate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory PrivateUse
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_PrivateUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_PrivateUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "PrivateUse"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory PrivateUse
void System::Globalization::UnicodeCategory::_set_PrivateUse(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_PrivateUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "PrivateUse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ConnectorPunctuation
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ConnectorPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_ConnectorPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ConnectorPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ConnectorPunctuation
void System::Globalization::UnicodeCategory::_set_ConnectorPunctuation(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_ConnectorPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ConnectorPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory DashPunctuation
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_DashPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_DashPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "DashPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory DashPunctuation
void System::Globalization::UnicodeCategory::_set_DashPunctuation(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_DashPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "DashPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OpenPunctuation
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OpenPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_OpenPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OpenPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OpenPunctuation
void System::Globalization::UnicodeCategory::_set_OpenPunctuation(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_OpenPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OpenPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ClosePunctuation
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ClosePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_ClosePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ClosePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ClosePunctuation
void System::Globalization::UnicodeCategory::_set_ClosePunctuation(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_ClosePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ClosePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory InitialQuotePunctuation
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_InitialQuotePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_InitialQuotePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "InitialQuotePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory InitialQuotePunctuation
void System::Globalization::UnicodeCategory::_set_InitialQuotePunctuation(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_InitialQuotePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "InitialQuotePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory FinalQuotePunctuation
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_FinalQuotePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_FinalQuotePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "FinalQuotePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory FinalQuotePunctuation
void System::Globalization::UnicodeCategory::_set_FinalQuotePunctuation(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_FinalQuotePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "FinalQuotePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherPunctuation
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_OtherPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherPunctuation
void System::Globalization::UnicodeCategory::_set_OtherPunctuation(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_OtherPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory MathSymbol
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_MathSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_MathSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "MathSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory MathSymbol
void System::Globalization::UnicodeCategory::_set_MathSymbol(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_MathSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "MathSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory CurrencySymbol
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_CurrencySymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "CurrencySymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory CurrencySymbol
void System::Globalization::UnicodeCategory::_set_CurrencySymbol(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_CurrencySymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "CurrencySymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ModifierSymbol
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ModifierSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_ModifierSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ModifierSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ModifierSymbol
void System::Globalization::UnicodeCategory::_set_ModifierSymbol(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_ModifierSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ModifierSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherSymbol
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_OtherSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherSymbol
void System::Globalization::UnicodeCategory::_set_OtherSymbol(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_OtherSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherNotAssigned
System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherNotAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_get_OtherNotAssigned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherNotAssigned"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherNotAssigned
void System::Globalization::UnicodeCategory::_set_OtherNotAssigned(System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::UnicodeCategory::_set_OtherNotAssigned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherNotAssigned", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.SortKey.Compare
int System::Globalization::SortKey::Compare(System::Globalization::SortKey* sortkey1, System::Globalization::SortKey* sortkey2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::SortKey::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "SortKey", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sortkey1, sortkey2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sortkey1, sortkey2);
}
// Autogenerated method: System.Globalization.SortKey.get_OriginalString
::Il2CppString* System::Globalization::SortKey::get_OriginalString_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::SortKey::get_OriginalString_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_OriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.get_KeyData
::Array<uint8_t>* System::Globalization::SortKey::get_KeyData_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::SortKey::get_KeyData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_KeyData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.Equals
bool System::Globalization::SortKey::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::SortKey::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.SortKey.GetHashCode
int System::Globalization::SortKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::SortKey::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.ToString
::Il2CppString* System::Globalization::SortKey::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::SortKey::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Globalization.CalendarData
#include "System/Globalization/CalendarData.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureData s_Invariant
System::Globalization::CultureData* System::Globalization::CultureData::_get_s_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::_get_s_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CultureData*>("System.Globalization", "CultureData", "s_Invariant"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureData s_Invariant
void System::Globalization::CultureData::_set_s_Invariant(System::Globalization::CultureData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::_set_s_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureData", "s_Invariant", value));
}
// Autogenerated method: System.Globalization.CultureData.get_Invariant
System::Globalization::CultureData* System::Globalization::CultureData::get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_Invariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "get_Invariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(::Il2CppString* cultureName, bool useUserOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cultureName, useUserOverride)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cultureName, useUserOverride);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(::Il2CppString* cultureName, bool useUserOverride, int datetimeIndex, int calendarId, int numberIndex, ::Il2CppString* iso2lang, int ansiCodePage, int oemCodePage, int macCodePage, int ebcdicCodePage, bool rightToLeft, ::Il2CppString* listSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cultureName, useUserOverride, datetimeIndex, calendarId, numberIndex, iso2lang, ansiCodePage, oemCodePage, macCodePage, ebcdicCodePage, rightToLeft, listSeparator)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cultureName, useUserOverride, datetimeIndex, calendarId, numberIndex, iso2lang, ansiCodePage, oemCodePage, macCodePage, ebcdicCodePage, rightToLeft, listSeparator);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(int culture, bool bUseUserOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture, bUseUserOverride)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, culture, bUseUserOverride);
}
// Autogenerated method: System.Globalization.CultureData.fill_culture_data
void System::Globalization::CultureData::fill_culture_data(int datetimeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::fill_culture_data");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "fill_culture_data", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(datetimeIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, datetimeIndex);
}
// Autogenerated method: System.Globalization.CultureData.GetCalendar
System::Globalization::CalendarData* System::Globalization::CultureData::GetCalendar(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::GetCalendar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCalendar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CalendarData*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.get_LongTimes
::Array<::Il2CppString*>* System::Globalization::CultureData::get_LongTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_LongTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LongTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_ShortTimes
::Array<::Il2CppString*>* System::Globalization::CultureData::get_ShortTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_ShortTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShortTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SISO639LANGNAME
::Il2CppString* System::Globalization::CultureData::get_SISO639LANGNAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_SISO639LANGNAME");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SISO639LANGNAME", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IFIRSTDAYOFWEEK
int System::Globalization::CultureData::get_IFIRSTDAYOFWEEK() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_IFIRSTDAYOFWEEK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IFIRSTDAYOFWEEK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IFIRSTWEEKOFYEAR
int System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IFIRSTWEEKOFYEAR", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SAM1159
::Il2CppString* System::Globalization::CultureData::get_SAM1159() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_SAM1159");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SAM1159", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SPM2359
::Il2CppString* System::Globalization::CultureData::get_SPM2359() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_SPM2359");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SPM2359", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_TimeSeparator
::Il2CppString* System::Globalization::CultureData::get_TimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_TimeSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TimeSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_CalendarIds
::Array<int>* System::Globalization::CultureData::get_CalendarIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_CalendarIds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CalendarIds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IsInvariantCulture
bool System::Globalization::CultureData::get_IsInvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_IsInvariantCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsInvariantCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_CultureName
::Il2CppString* System::Globalization::CultureData::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SCOMPAREINFO
::Il2CppString* System::Globalization::CultureData::get_SCOMPAREINFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_SCOMPAREINFO");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SCOMPAREINFO", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_STEXTINFO
::Il2CppString* System::Globalization::CultureData::get_STEXTINFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_STEXTINFO");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_STEXTINFO", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_ILANGUAGE
int System::Globalization::CultureData::get_ILANGUAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_ILANGUAGE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ILANGUAGE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_UseUserOverride
bool System::Globalization::CultureData::get_UseUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::get_UseUserOverride");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UseUserOverride", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.EraNames
::Array<::Il2CppString*>* System::Globalization::CultureData::EraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::EraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbrevEraNames
::Array<::Il2CppString*>* System::Globalization::CultureData::AbbrevEraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::AbbrevEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AbbrevEraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedEnglishEraNames
::Array<::Il2CppString*>* System::Globalization::CultureData::AbbreviatedEnglishEraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::AbbreviatedEnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AbbreviatedEnglishEraNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.ShortDates
::Array<::Il2CppString*>* System::Globalization::CultureData::ShortDates(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::ShortDates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShortDates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.LongDates
::Array<::Il2CppString*>* System::Globalization::CultureData::LongDates(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::LongDates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LongDates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.YearMonths
::Array<::Il2CppString*>* System::Globalization::CultureData::YearMonths(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::YearMonths");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "YearMonths", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.DayNames
::Array<::Il2CppString*>* System::Globalization::CultureData::DayNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::DayNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DayNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedDayNames
::Array<::Il2CppString*>* System::Globalization::CultureData::AbbreviatedDayNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::AbbreviatedDayNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AbbreviatedDayNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.MonthNames
::Array<::Il2CppString*>* System::Globalization::CultureData::MonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::MonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.GenitiveMonthNames
::Array<::Il2CppString*>* System::Globalization::CultureData::GenitiveMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::GenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenitiveMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedMonthNames
::Array<::Il2CppString*>* System::Globalization::CultureData::AbbreviatedMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::AbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedGenitiveMonthNames
::Array<::Il2CppString*>* System::Globalization::CultureData::AbbreviatedGenitiveMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::AbbreviatedGenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AbbreviatedGenitiveMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.LeapYearMonthNames
::Array<::Il2CppString*>* System::Globalization::CultureData::LeapYearMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::LeapYearMonthNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LeapYearMonthNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.MonthDay
::Il2CppString* System::Globalization::CultureData::MonthDay(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::MonthDay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MonthDay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.DateSeparator
::Il2CppString* System::Globalization::CultureData::DateSeparator(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::DateSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DateSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarId)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.GetDateSeparator
::Il2CppString* System::Globalization::CultureData::GetDateSeparator(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::GetDateSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetDateSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format);
}
// Autogenerated method: System.Globalization.CultureData.GetSeparator
::Il2CppString* System::Globalization::CultureData::GetSeparator(::Il2CppString* format, ::Il2CppString* timeParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::GetSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, timeParts)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, timeParts);
}
// Autogenerated method: System.Globalization.CultureData.IndexOfTimePart
int System::Globalization::CultureData::IndexOfTimePart(::Il2CppString* format, int startIndex, ::Il2CppString* timeParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::IndexOfTimePart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "IndexOfTimePart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, startIndex, timeParts)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, startIndex, timeParts);
}
// Autogenerated method: System.Globalization.CultureData.UnescapeNlsString
::Il2CppString* System::Globalization::CultureData::UnescapeNlsString(::Il2CppString* str, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::UnescapeNlsString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "UnescapeNlsString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, start, end)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, start, end);
}
// Autogenerated method: System.Globalization.CultureData.ReescapeWin32Strings
::Array<::Il2CppString*>* System::Globalization::CultureData::ReescapeWin32Strings(::Array<::Il2CppString*>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::ReescapeWin32Strings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "ReescapeWin32Strings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Globalization.CultureData.ReescapeWin32String
::Il2CppString* System::Globalization::CultureData::ReescapeWin32String(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::ReescapeWin32String");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "ReescapeWin32String", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Globalization.CultureData.GetNFIValues
void System::Globalization::CultureData::GetNFIValues(System::Globalization::NumberFormatInfo* nfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::GetNFIValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNFIValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nfi)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nfi);
}
// Autogenerated method: System.Globalization.CultureData.fill_number_data
void System::Globalization::CultureData::fill_number_data(System::Globalization::NumberFormatInfo* nfi, int numberIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::fill_number_data");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "fill_number_data", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nfi, numberIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nfi, numberIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CodePageDataItem
#include "System/Globalization/CodePageDataItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] sep
::Array<::Il2CppChar>* System::Globalization::CodePageDataItem::_get_sep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CodePageDataItem::_get_sep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "CodePageDataItem", "sep"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] sep
void System::Globalization::CodePageDataItem::_set_sep(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CodePageDataItem::_set_sep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CodePageDataItem", "sep", value));
}
// Autogenerated method: System.Globalization.CodePageDataItem.CreateString
::Il2CppString* System::Globalization::CodePageDataItem::CreateString(::Il2CppString* pStrings, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CodePageDataItem::CreateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CodePageDataItem", "CreateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pStrings, index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pStrings, index);
}
// Autogenerated method: System.Globalization.CodePageDataItem.get_WebName
::Il2CppString* System::Globalization::CodePageDataItem::get_WebName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CodePageDataItem::get_WebName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_WebName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CodePageDataItem..cctor
void System::Globalization::CodePageDataItem::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CodePageDataItem::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CodePageDataItem", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.EncodingTable
#include "System/Globalization/EncodingTable.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Globalization.CodePageDataItem
#include "System/Globalization/CodePageDataItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
::Array<System::Globalization::InternalEncodingDataItem>* System::Globalization::EncodingTable::_get_encodingDataPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_get_encodingDataPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Globalization::InternalEncodingDataItem>*>("System.Globalization", "EncodingTable", "encodingDataPtr"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
void System::Globalization::EncodingTable::_set_encodingDataPtr(::Array<System::Globalization::InternalEncodingDataItem>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_set_encodingDataPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "encodingDataPtr", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
::Array<System::Globalization::InternalCodePageDataItem>* System::Globalization::EncodingTable::_get_codePageDataPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_get_codePageDataPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Globalization::InternalCodePageDataItem>*>("System.Globalization", "EncodingTable", "codePageDataPtr"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
void System::Globalization::EncodingTable::_set_codePageDataPtr(::Array<System::Globalization::InternalCodePageDataItem>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_set_codePageDataPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "codePageDataPtr", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 lastEncodingItem
int System::Globalization::EncodingTable::_get_lastEncodingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_get_lastEncodingItem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "EncodingTable", "lastEncodingItem"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastEncodingItem
void System::Globalization::EncodingTable::_set_lastEncodingItem(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_set_lastEncodingItem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "lastEncodingItem", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable hashByName
System::Collections::Hashtable* System::Globalization::EncodingTable::_get_hashByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_get_hashByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Globalization", "EncodingTable", "hashByName"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable hashByName
void System::Globalization::EncodingTable::_set_hashByName(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_set_hashByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "hashByName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable hashByCodePage
System::Collections::Hashtable* System::Globalization::EncodingTable::_get_hashByCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_get_hashByCodePage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Globalization", "EncodingTable", "hashByCodePage"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable hashByCodePage
void System::Globalization::EncodingTable::_set_hashByCodePage(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::_set_hashByCodePage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "hashByCodePage", value));
}
// Autogenerated method: System.Globalization.EncodingTable.GetNumEncodingItems
int System::Globalization::EncodingTable::GetNumEncodingItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::GetNumEncodingItems");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetNumEncodingItems", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.EncodingTable.ENC
System::Globalization::InternalEncodingDataItem System::Globalization::EncodingTable::ENC(::Il2CppString* name, uint16_t cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::ENC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "ENC", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, cp)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::InternalEncodingDataItem, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, cp);
}
// Autogenerated method: System.Globalization.EncodingTable.MapCodePageDataItem
System::Globalization::InternalCodePageDataItem System::Globalization::EncodingTable::MapCodePageDataItem(uint16_t cp, uint16_t fcp, ::Il2CppString* names, uint flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::MapCodePageDataItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "MapCodePageDataItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cp, fcp, names, flags)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::InternalCodePageDataItem, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp, fcp, names, flags);
}
// Autogenerated method: System.Globalization.EncodingTable..cctor
void System::Globalization::EncodingTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.EncodingTable.internalGetCodePageFromName
int System::Globalization::EncodingTable::internalGetCodePageFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::internalGetCodePageFromName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "internalGetCodePageFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.EncodingTable.GetCodePageFromName
int System::Globalization::EncodingTable::GetCodePageFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::GetCodePageFromName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetCodePageFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.EncodingTable.GetCodePageDataItem
System::Globalization::CodePageDataItem* System::Globalization::EncodingTable::GetCodePageDataItem(int codepage) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::EncodingTable::GetCodePageDataItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetCodePageDataItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(codepage)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CodePageDataItem*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, codepage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TextInfoToUpperData
#include "System/Globalization/TextInfoToUpperData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_00e0_0586
::Array<::Il2CppChar>* System::Globalization::TextInfoToUpperData::_get_range_00e0_0586() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_get_range_00e0_0586");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToUpperData", "range_00e0_0586"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_00e0_0586
void System::Globalization::TextInfoToUpperData::_set_range_00e0_0586(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_set_range_00e0_0586");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_00e0_0586", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_1e01_1ff3
::Array<::Il2CppChar>* System::Globalization::TextInfoToUpperData::_get_range_1e01_1ff3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_get_range_1e01_1ff3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToUpperData", "range_1e01_1ff3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_1e01_1ff3
void System::Globalization::TextInfoToUpperData::_set_range_1e01_1ff3(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_set_range_1e01_1ff3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_1e01_1ff3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2170_2184
::Array<::Il2CppChar>* System::Globalization::TextInfoToUpperData::_get_range_2170_2184() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_get_range_2170_2184");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToUpperData", "range_2170_2184"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2170_2184
void System::Globalization::TextInfoToUpperData::_set_range_2170_2184(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_set_range_2170_2184");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2170_2184", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_24d0_24e9
::Array<::Il2CppChar>* System::Globalization::TextInfoToUpperData::_get_range_24d0_24e9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_get_range_24d0_24e9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToUpperData", "range_24d0_24e9"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_24d0_24e9
void System::Globalization::TextInfoToUpperData::_set_range_24d0_24e9(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_set_range_24d0_24e9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_24d0_24e9", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c30_2ce3
::Array<::Il2CppChar>* System::Globalization::TextInfoToUpperData::_get_range_2c30_2ce3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_get_range_2c30_2ce3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToUpperData", "range_2c30_2ce3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c30_2ce3
void System::Globalization::TextInfoToUpperData::_set_range_2c30_2ce3(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_set_range_2c30_2ce3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2c30_2ce3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2d00_2d25
::Array<::Il2CppChar>* System::Globalization::TextInfoToUpperData::_get_range_2d00_2d25() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_get_range_2d00_2d25");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToUpperData", "range_2d00_2d25"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2d00_2d25
void System::Globalization::TextInfoToUpperData::_set_range_2d00_2d25(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_set_range_2d00_2d25");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2d00_2d25", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a641_a697
::Array<::Il2CppChar>* System::Globalization::TextInfoToUpperData::_get_range_a641_a697() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_get_range_a641_a697");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToUpperData", "range_a641_a697"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a641_a697
void System::Globalization::TextInfoToUpperData::_set_range_a641_a697(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_set_range_a641_a697");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_a641_a697", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a723_a78c
::Array<::Il2CppChar>* System::Globalization::TextInfoToUpperData::_get_range_a723_a78c() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_get_range_a723_a78c");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToUpperData", "range_a723_a78c"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a723_a78c
void System::Globalization::TextInfoToUpperData::_set_range_a723_a78c(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::_set_range_a723_a78c");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_a723_a78c", value));
}
// Autogenerated method: System.Globalization.TextInfoToUpperData..cctor
void System::Globalization::TextInfoToUpperData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToUpperData::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfoToUpperData", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TextInfoToLowerData
#include "System/Globalization/TextInfoToLowerData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_00c0_0556
::Array<::Il2CppChar>* System::Globalization::TextInfoToLowerData::_get_range_00c0_0556() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_get_range_00c0_0556");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToLowerData", "range_00c0_0556"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_00c0_0556
void System::Globalization::TextInfoToLowerData::_set_range_00c0_0556(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_set_range_00c0_0556");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_00c0_0556", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_10a0_10c5
::Array<::Il2CppChar>* System::Globalization::TextInfoToLowerData::_get_range_10a0_10c5() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_get_range_10a0_10c5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToLowerData", "range_10a0_10c5"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_10a0_10c5
void System::Globalization::TextInfoToLowerData::_set_range_10a0_10c5(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_set_range_10a0_10c5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_10a0_10c5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_1e00_1ffc
::Array<::Il2CppChar>* System::Globalization::TextInfoToLowerData::_get_range_1e00_1ffc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_get_range_1e00_1ffc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToLowerData", "range_1e00_1ffc"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_1e00_1ffc
void System::Globalization::TextInfoToLowerData::_set_range_1e00_1ffc(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_set_range_1e00_1ffc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_1e00_1ffc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2160_216f
::Array<::Il2CppChar>* System::Globalization::TextInfoToLowerData::_get_range_2160_216f() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_get_range_2160_216f");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToLowerData", "range_2160_216f"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2160_216f
void System::Globalization::TextInfoToLowerData::_set_range_2160_216f(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_set_range_2160_216f");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2160_216f", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_24b6_24cf
::Array<::Il2CppChar>* System::Globalization::TextInfoToLowerData::_get_range_24b6_24cf() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_get_range_24b6_24cf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToLowerData", "range_24b6_24cf"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_24b6_24cf
void System::Globalization::TextInfoToLowerData::_set_range_24b6_24cf(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_set_range_24b6_24cf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_24b6_24cf", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c00_2c2e
::Array<::Il2CppChar>* System::Globalization::TextInfoToLowerData::_get_range_2c00_2c2e() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_get_range_2c00_2c2e");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToLowerData", "range_2c00_2c2e"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c00_2c2e
void System::Globalization::TextInfoToLowerData::_set_range_2c00_2c2e(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_set_range_2c00_2c2e");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2c00_2c2e", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c60_2ce2
::Array<::Il2CppChar>* System::Globalization::TextInfoToLowerData::_get_range_2c60_2ce2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_get_range_2c60_2ce2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToLowerData", "range_2c60_2ce2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c60_2ce2
void System::Globalization::TextInfoToLowerData::_set_range_2c60_2ce2(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_set_range_2c60_2ce2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2c60_2ce2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a640_a696
::Array<::Il2CppChar>* System::Globalization::TextInfoToLowerData::_get_range_a640_a696() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_get_range_a640_a696");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToLowerData", "range_a640_a696"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a640_a696
void System::Globalization::TextInfoToLowerData::_set_range_a640_a696(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_set_range_a640_a696");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_a640_a696", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a722_a78b
::Array<::Il2CppChar>* System::Globalization::TextInfoToLowerData::_get_range_a722_a78b() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_get_range_a722_a78b");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Globalization", "TextInfoToLowerData", "range_a722_a78b"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a722_a78b
void System::Globalization::TextInfoToLowerData::_set_range_a722_a78b(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::_set_range_a722_a78b");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_a722_a78b", value));
}
// Autogenerated method: System.Globalization.TextInfoToLowerData..cctor
void System::Globalization::TextInfoToLowerData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TextInfoToLowerData::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TextInfoToLowerData", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CultureInfo/Data
#include "System/Globalization/CultureInfo_Data.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo invariant_culture_info
System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_invariant_culture_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_invariant_culture_info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "invariant_culture_info"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo invariant_culture_info
void System::Globalization::CultureInfo::_set_invariant_culture_info(System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_invariant_culture_info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "invariant_culture_info", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object shared_table_lock
::Il2CppObject* System::Globalization::CultureInfo::_get_shared_table_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_shared_table_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Globalization", "CultureInfo", "shared_table_lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object shared_table_lock
void System::Globalization::CultureInfo::_set_shared_table_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_shared_table_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_table_lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo default_current_culture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_default_current_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_default_current_culture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "default_current_culture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo default_current_culture
void System::Globalization::CultureInfo::_set_default_current_culture(System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_default_current_culture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "default_current_culture", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 InvariantCultureId
int System::Globalization::CultureInfo::_get_InvariantCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_InvariantCultureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CultureInfo", "InvariantCultureId"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 InvariantCultureId
void System::Globalization::CultureInfo::_set_InvariantCultureId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_InvariantCultureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "InvariantCultureId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CalendarTypeBits
int System::Globalization::CultureInfo::_get_CalendarTypeBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_CalendarTypeBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CultureInfo", "CalendarTypeBits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CalendarTypeBits
void System::Globalization::CultureInfo::_set_CalendarTypeBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_CalendarTypeBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "CalendarTypeBits", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MSG_READONLY
::Il2CppString* System::Globalization::CultureInfo::_get_MSG_READONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_MSG_READONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "CultureInfo", "MSG_READONLY"));
}
// Autogenerated static field setter
// Set static field: static private System.String MSG_READONLY
void System::Globalization::CultureInfo::_set_MSG_READONLY(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_MSG_READONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "MSG_READONLY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentUICulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentUICulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentUICulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentUICulture
void System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentUICulture(System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentUICulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentUICulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentCulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentCulture
void System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentCulture(System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentCulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> shared_by_number
System::Collections::Generic::Dictionary_2<int, System::Globalization::CultureInfo*>* System::Globalization::CultureInfo::_get_shared_by_number() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_shared_by_number");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<int, System::Globalization::CultureInfo*>*>("System.Globalization", "CultureInfo", "shared_by_number")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> shared_by_number
void System::Globalization::CultureInfo::_set_shared_by_number(System::Collections::Generic::Dictionary_2<int, System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_shared_by_number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_by_number", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> shared_by_name
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Globalization::CultureInfo*>* System::Globalization::CultureInfo::_get_shared_by_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_shared_by_name");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Globalization::CultureInfo*>*>("System.Globalization", "CultureInfo", "shared_by_name")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> shared_by_name
void System::Globalization::CultureInfo::_set_shared_by_name(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_shared_by_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_by_name", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsTaiwanSku
bool System::Globalization::CultureInfo::_get_IsTaiwanSku() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_get_IsTaiwanSku");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CultureInfo", "IsTaiwanSku"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsTaiwanSku
void System::Globalization::CultureInfo::_set_IsTaiwanSku(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::_set_IsTaiwanSku");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "IsTaiwanSku", value));
}
// Autogenerated method: System.Globalization.CultureInfo.get_InvariantCulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_InvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_InvariantCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_InvariantCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CurrentCulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_CurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_CurrentCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_CurrentCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CurrentUICulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_CurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_CurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_CurrentUICulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructCurrentCulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::ConstructCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::ConstructCurrentCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "ConstructCurrentCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructCurrentUICulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::ConstructCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::ConstructCurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "ConstructCurrentUICulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Territory
::Il2CppString* System::Globalization::CultureInfo::get_Territory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_Territory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Territory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_LCID
int System::Globalization::CultureInfo::get_LCID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_LCID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LCID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Name
::Il2CppString* System::Globalization::CultureInfo::get_Name_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_Name_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Calendar
System::Globalization::Calendar* System::Globalization::CultureInfo::get_Calendar_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_Calendar_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Calendar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Parent
System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_Parent_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_Parent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_TextInfo
System::Globalization::TextInfo* System::Globalization::CultureInfo::get_TextInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_TextInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TextInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::TextInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.Clone
::Il2CppObject* System::Globalization::CultureInfo::Clone_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::Clone_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.GetTextInfoData
System::Globalization::CultureInfo::Data System::Globalization::CultureInfo::GetTextInfoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::GetTextInfoData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextInfoData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo::Data, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CompareInfo
System::Globalization::CompareInfo* System::Globalization::CultureInfo::get_CompareInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_CompareInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CompareInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CompareInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_IsNeutralCulture
bool System::Globalization::CultureInfo::get_IsNeutralCulture_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_IsNeutralCulture_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsNeutralCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.CheckNeutral
void System::Globalization::CultureInfo::CheckNeutral() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::CheckNeutral");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckNeutral", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_NumberFormat
System::Globalization::NumberFormatInfo* System::Globalization::CultureInfo::get_NumberFormat_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_NumberFormat_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NumberFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::NumberFormatInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.set_NumberFormat
void System::Globalization::CultureInfo::set_NumberFormat_NEW(System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::set_NumberFormat_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_NumberFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DateTimeFormat
System::Globalization::DateTimeFormatInfo* System::Globalization::CultureInfo::get_DateTimeFormat_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_DateTimeFormat_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DateTimeFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.set_DateTimeFormat
void System::Globalization::CultureInfo::set_DateTimeFormat_NEW(System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::set_DateTimeFormat_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_DateTimeFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.get_EnglishName
::Il2CppString* System::Globalization::CultureInfo::get_EnglishName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_EnglishName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_EnglishName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_IsReadOnly
bool System::Globalization::CultureInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.GetFormat
::Il2CppObject* System::Globalization::CultureInfo::GetFormat_NEW(System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::GetFormat_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(formatType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.CultureInfo.Construct
void System::Globalization::CultureInfo::Construct() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::Construct");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.construct_internal_locale_from_lcid
bool System::Globalization::CultureInfo::construct_internal_locale_from_lcid(int lcid) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::construct_internal_locale_from_lcid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "construct_internal_locale_from_lcid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lcid)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, lcid);
}
// Autogenerated method: System.Globalization.CultureInfo.construct_internal_locale_from_name
bool System::Globalization::CultureInfo::construct_internal_locale_from_name(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::construct_internal_locale_from_name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "construct_internal_locale_from_name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.get_current_locale_name
::Il2CppString* System::Globalization::CultureInfo::get_current_locale_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_current_locale_name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_current_locale_name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructInvariant
void System::Globalization::CultureInfo::ConstructInvariant(bool read_only) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::ConstructInvariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConstructInvariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(read_only)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, read_only);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateTextInfo
System::Globalization::TextInfo* System::Globalization::CultureInfo::CreateTextInfo(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::CreateTextInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTextInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(readOnly)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::TextInfo*, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.CultureInfo.insert_into_shared_tables
void System::Globalization::CultureInfo::insert_into_shared_tables(System::Globalization::CultureInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::insert_into_shared_tables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "insert_into_shared_tables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultureInfo
System::Globalization::CultureInfo* System::Globalization::CultureInfo::GetCultureInfo(int culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::GetCultureInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultureInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, culture);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultureInfo
System::Globalization::CultureInfo* System::Globalization::CultureInfo::GetCultureInfo(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::GetCultureInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultureInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateCulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateCulture(::Il2CppString* name, bool reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::CreateCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, reference)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, reference);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateSpecificCulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateSpecificCulture(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::CreateSpecificCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateSpecificCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateSpecificCultureFromNeutral
System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateSpecificCultureFromNeutral(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::CreateSpecificCultureFromNeutral");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateSpecificCultureFromNeutral", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CalendarType
int System::Globalization::CultureInfo::get_CalendarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_CalendarType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CalendarType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateCalendar
System::Globalization::Calendar* System::Globalization::CultureInfo::CreateCalendar(int calendarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::CreateCalendar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateCalendar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calendarType)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, calendarType);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateNotFoundException
System::Exception* System::Globalization::CultureInfo::CreateNotFoundException(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::CreateNotFoundException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateNotFoundException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DefaultThreadCurrentCulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_DefaultThreadCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_DefaultThreadCurrentCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_DefaultThreadCurrentCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DefaultThreadCurrentUICulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_DefaultThreadCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_DefaultThreadCurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_DefaultThreadCurrentUICulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_SortName
::Il2CppString* System::Globalization::CultureInfo::get_SortName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_SortName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SortName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_UserDefaultUICulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_UserDefaultUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_UserDefaultUICulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_UserDefaultUICulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_UserDefaultCulture
System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_UserDefaultCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::get_UserDefaultCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_UserDefaultCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.CheckDomainSafetyObject
void System::Globalization::CultureInfo::CheckDomainSafetyObject(::Il2CppObject* obj, ::Il2CppObject* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::CheckDomainSafetyObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CheckDomainSafetyObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, container);
}
// Autogenerated method: System.Globalization.CultureInfo..cctor
void System::Globalization::CultureInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.Equals
bool System::Globalization::CultureInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.GetHashCode
int System::Globalization::CultureInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ToString
::Il2CppString* System::Globalization::CultureInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureInfo::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.IdnMapping
#include "System/Globalization/IdnMapping.hpp"
// Including type: System.Globalization.Punycode
#include "System/Globalization/Punycode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.IdnMapping.GetAscii
::Il2CppString* System::Globalization::IdnMapping::GetAscii(::Il2CppString* unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::GetAscii");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAscii", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unicode)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, unicode);
}
// Autogenerated method: System.Globalization.IdnMapping.GetAscii
::Il2CppString* System::Globalization::IdnMapping::GetAscii(::Il2CppString* unicode, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::GetAscii");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAscii", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unicode, index, count)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, unicode, index, count);
}
// Autogenerated method: System.Globalization.IdnMapping.Convert
::Il2CppString* System::Globalization::IdnMapping::Convert(::Il2CppString* input, int index, int count, bool toAscii) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::Convert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, index, count, toAscii)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, input, index, count, toAscii);
}
// Autogenerated method: System.Globalization.IdnMapping.ToAscii
::Il2CppString* System::Globalization::IdnMapping::ToAscii(::Il2CppString* s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::ToAscii");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToAscii", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, offset)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyLength
void System::Globalization::IdnMapping::VerifyLength(::Il2CppString* s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::VerifyLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "VerifyLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.NamePrep
::Il2CppString* System::Globalization::IdnMapping::NamePrep(::Il2CppString* s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::NamePrep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NamePrep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, offset)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyProhibitedCharacters
void System::Globalization::IdnMapping::VerifyProhibitedCharacters(::Il2CppString* s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::VerifyProhibitedCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "VerifyProhibitedCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyStd3AsciiRules
void System::Globalization::IdnMapping::VerifyStd3AsciiRules(::Il2CppString* s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::VerifyStd3AsciiRules");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "VerifyStd3AsciiRules", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.GetUnicode
::Il2CppString* System::Globalization::IdnMapping::GetUnicode(::Il2CppString* ascii) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::GetUnicode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUnicode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ascii)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ascii);
}
// Autogenerated method: System.Globalization.IdnMapping.GetUnicode
::Il2CppString* System::Globalization::IdnMapping::GetUnicode(::Il2CppString* ascii, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::GetUnicode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUnicode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ascii, index, count)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ascii, index, count);
}
// Autogenerated method: System.Globalization.IdnMapping.ToUnicode
::Il2CppString* System::Globalization::IdnMapping::ToUnicode(::Il2CppString* s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::ToUnicode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToUnicode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, offset)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.Equals
bool System::Globalization::IdnMapping::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Globalization.IdnMapping.GetHashCode
int System::Globalization::IdnMapping::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::IdnMapping::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.Bootstring
#include "System/Globalization/Bootstring.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.Bootstring.Encode
::Il2CppString* System::Globalization::Bootstring::Encode(::Il2CppString* s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Bootstring::Encode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, offset)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.Bootstring.EncodeDigit
::Il2CppChar System::Globalization::Bootstring::EncodeDigit(int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Bootstring::EncodeDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EncodeDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, d);
}
// Autogenerated method: System.Globalization.Bootstring.DecodeDigit
int System::Globalization::Bootstring::DecodeDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Bootstring::DecodeDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DecodeDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.Bootstring.Adapt
int System::Globalization::Bootstring::Adapt(int delta, int numPoints, bool firstTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Bootstring::Adapt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Adapt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delta, numPoints, firstTime)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, delta, numPoints, firstTime);
}
// Autogenerated method: System.Globalization.Bootstring.Decode
::Il2CppString* System::Globalization::Bootstring::Decode(::Il2CppString* s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Bootstring::Decode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, offset)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, s, offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.Punycode
#include "System/Globalization/Punycode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.RegionInfo
#include "System/Globalization/RegionInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.RegionInfo currentRegion
System::Globalization::RegionInfo* System::Globalization::RegionInfo::_get_currentRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::_get_currentRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::RegionInfo*>("System.Globalization", "RegionInfo", "currentRegion"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.RegionInfo currentRegion
void System::Globalization::RegionInfo::_set_currentRegion(System::Globalization::RegionInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::_set_currentRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "RegionInfo", "currentRegion", value));
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrentRegion
System::Globalization::RegionInfo* System::Globalization::RegionInfo::get_CurrentRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_CurrentRegion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "RegionInfo", "get_CurrentRegion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::RegionInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.GetByTerritory
bool System::Globalization::RegionInfo::GetByTerritory(System::Globalization::CultureInfo* ci) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::GetByTerritory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetByTerritory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ci)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ci);
}
// Autogenerated method: System.Globalization.RegionInfo.construct_internal_region_from_name
bool System::Globalization::RegionInfo::construct_internal_region_from_name(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::construct_internal_region_from_name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "construct_internal_region_from_name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencyEnglishName
::Il2CppString* System::Globalization::RegionInfo::get_CurrencyEnglishName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_CurrencyEnglishName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencyEnglishName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencySymbol
::Il2CppString* System::Globalization::RegionInfo::get_CurrencySymbol_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_CurrencySymbol_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencySymbol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_DisplayName
::Il2CppString* System::Globalization::RegionInfo::get_DisplayName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_DisplayName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_EnglishName
::Il2CppString* System::Globalization::RegionInfo::get_EnglishName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_EnglishName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_EnglishName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_GeoId
int System::Globalization::RegionInfo::get_GeoId_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_GeoId_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GeoId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_IsMetric
bool System::Globalization::RegionInfo::get_IsMetric_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_IsMetric_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsMetric", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ISOCurrencySymbol
::Il2CppString* System::Globalization::RegionInfo::get_ISOCurrencySymbol_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_ISOCurrencySymbol_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ISOCurrencySymbol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_NativeName
::Il2CppString* System::Globalization::RegionInfo::get_NativeName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_NativeName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NativeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencyNativeName
::Il2CppString* System::Globalization::RegionInfo::get_CurrencyNativeName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_CurrencyNativeName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrencyNativeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_Name
::Il2CppString* System::Globalization::RegionInfo::get_Name_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_Name_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ThreeLetterISORegionName
::Il2CppString* System::Globalization::RegionInfo::get_ThreeLetterISORegionName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_ThreeLetterISORegionName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ThreeLetterISORegionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ThreeLetterWindowsRegionName
::Il2CppString* System::Globalization::RegionInfo::get_ThreeLetterWindowsRegionName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_ThreeLetterWindowsRegionName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ThreeLetterWindowsRegionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_TwoLetterISORegionName
::Il2CppString* System::Globalization::RegionInfo::get_TwoLetterISORegionName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::get_TwoLetterISORegionName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TwoLetterISORegionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.ClearCachedData
void System::Globalization::RegionInfo::ClearCachedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::ClearCachedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "RegionInfo", "ClearCachedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.Equals
bool System::Globalization::RegionInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.RegionInfo.GetHashCode
int System::Globalization::RegionInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.ToString
::Il2CppString* System::Globalization::RegionInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::RegionInfo::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.Hashing.HashHelpers
#include "System/Numerics/Hashing/HashHelpers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 RandomSeed
int System::Numerics::Hashing::HashHelpers::_get_RandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::Hashing::HashHelpers::_get_RandomSeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics.Hashing", "HashHelpers", "RandomSeed"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 RandomSeed
void System::Numerics::Hashing::HashHelpers::_set_RandomSeed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::Hashing::HashHelpers::_set_RandomSeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics.Hashing", "HashHelpers", "RandomSeed", value));
}
// Autogenerated method: System.Numerics.Hashing.HashHelpers.Combine
int System::Numerics::Hashing::HashHelpers::Combine(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::Hashing::HashHelpers::Combine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Numerics.Hashing", "HashHelpers", "Combine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.Numerics.Hashing.HashHelpers..cctor
void System::Numerics::Hashing::HashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::Hashing::HashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Numerics.Hashing", "HashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.AtomicBoolean
#include "System/Threading/AtomicBoolean.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.AtomicBoolean.TryRelaxedSet
bool System::Threading::AtomicBoolean::TryRelaxedSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::AtomicBoolean::TryRelaxedSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryRelaxedSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.AtomicBoolean.Exchange
bool System::Threading::AtomicBoolean::Exchange(bool newVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::AtomicBoolean::Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Exchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newVal)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, newVal);
}
// Autogenerated method: System.Threading.AtomicBoolean.Equals
bool System::Threading::AtomicBoolean::Equals(System::Threading::AtomicBoolean* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::AtomicBoolean::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rhs);
}
// Autogenerated method: System.Threading.AtomicBoolean.Equals
bool System::Threading::AtomicBoolean::Equals(::Il2CppObject* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::AtomicBoolean::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rhs);
}
// Autogenerated method: System.Threading.AtomicBoolean.GetHashCode
int System::Threading::AtomicBoolean::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::AtomicBoolean::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenRegistration
#include "System/Threading/CancellationTokenRegistration.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Action`1<System.Object> s_ActionToActionObjShunt
System::Action_1<::Il2CppObject*>* System::Threading::CancellationToken::_get_s_ActionToActionObjShunt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::_get_s_ActionToActionObjShunt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.Threading", "CancellationToken", "s_ActionToActionObjShunt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Action`1<System.Object> s_ActionToActionObjShunt
void System::Threading::CancellationToken::_set_s_ActionToActionObjShunt(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::_set_s_ActionToActionObjShunt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationToken", "s_ActionToActionObjShunt", value));
}
// Autogenerated method: System.Threading.CancellationToken.get_None
System::Threading::CancellationToken System::Threading::CancellationToken::get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::get_None");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "get_None", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationToken, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.get_IsCancellationRequested
bool System::Threading::CancellationToken::get_IsCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::get_IsCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsCancellationRequested", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.get_CanBeCanceled
bool System::Threading::CancellationToken::get_CanBeCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::get_CanBeCanceled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_CanBeCanceled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ActionToActionObjShunt
void System::Threading::CancellationToken::ActionToActionObjShunt(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::ActionToActionObjShunt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "ActionToActionObjShunt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationToken.Register
System::Threading::CancellationTokenRegistration System::Threading::CancellationToken::Register(System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::Register");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Register", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationTokenRegistration, false>(*this, ___internal__method, callback);
}
// Autogenerated method: System.Threading.CancellationToken.Register
System::Threading::CancellationTokenRegistration System::Threading::CancellationToken::Register(System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::Register");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Register", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, state)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationTokenRegistration, false>(*this, ___internal__method, callback, state);
}
// Autogenerated method: System.Threading.CancellationToken.InternalRegisterWithoutEC
System::Threading::CancellationTokenRegistration System::Threading::CancellationToken::InternalRegisterWithoutEC(System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::InternalRegisterWithoutEC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "InternalRegisterWithoutEC", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, state)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationTokenRegistration, false>(*this, ___internal__method, callback, state);
}
// Autogenerated method: System.Threading.CancellationToken.Register
System::Threading::CancellationTokenRegistration System::Threading::CancellationToken::Register(System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* state, bool useSynchronizationContext, bool useExecutionContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::Register");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Register", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, state, useSynchronizationContext, useExecutionContext)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationTokenRegistration, false>(*this, ___internal__method, callback, state, useSynchronizationContext, useExecutionContext);
}
// Autogenerated method: System.Threading.CancellationToken.Equals
bool System::Threading::CancellationToken::Equals(System::Threading::CancellationToken other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowIfCancellationRequested
void System::Threading::CancellationToken::ThrowIfCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::ThrowIfCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ThrowIfCancellationRequested", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowIfSourceDisposed
void System::Threading::CancellationToken::ThrowIfSourceDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::ThrowIfSourceDisposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ThrowIfSourceDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowOperationCanceledException
void System::Threading::CancellationToken::ThrowOperationCanceledException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::ThrowOperationCanceledException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ThrowOperationCanceledException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowObjectDisposedException
void System::Threading::CancellationToken::ThrowObjectDisposedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::ThrowObjectDisposedException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "ThrowObjectDisposedException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken..cctor
void System::Threading::CancellationToken::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.Equals
bool System::Threading::CancellationToken::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.Threading.CancellationToken.GetHashCode
int System::Threading::CancellationToken::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.op_Equality
bool System::Threading::operator ==(const System::Threading::CancellationToken& left, const System::Threading::CancellationToken& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Threading.CancellationToken.op_Inequality
bool System::Threading::operator !=(const System::Threading::CancellationToken& left, const System::Threading::CancellationToken& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationToken::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationTokenRegistration
#include "System/Threading/CancellationTokenRegistration.hpp"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.CancellationTokenRegistration.TryDeregister
bool System::Threading::CancellationTokenRegistration::TryDeregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenRegistration::TryDeregister");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryDeregister", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.Dispose
void System::Threading::CancellationTokenRegistration::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenRegistration::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.Equals
bool System::Threading::CancellationTokenRegistration::Equals_NEW(System::Threading::CancellationTokenRegistration other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenRegistration::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.Equals
bool System::Threading::CancellationTokenRegistration::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenRegistration::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.GetHashCode
int System::Threading::CancellationTokenRegistration::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenRegistration::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.SparselyPopulatedArray`1
#include "System/Threading/SparselyPopulatedArray_1.hpp"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.CancellationCallbackCoreWorkArguments
#include "System/Threading/CancellationCallbackCoreWorkArguments.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.CancellationTokenSource _staticSource_Set
System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::_get__staticSource_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_get__staticSource_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::CancellationTokenSource*>("System.Threading", "CancellationTokenSource", "_staticSource_Set"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.CancellationTokenSource _staticSource_Set
void System::Threading::CancellationTokenSource::_set__staticSource_Set(System::Threading::CancellationTokenSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_set__staticSource_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "_staticSource_Set", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.CancellationTokenSource _staticSource_NotCancelable
System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::_get__staticSource_NotCancelable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_get__staticSource_NotCancelable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::CancellationTokenSource*>("System.Threading", "CancellationTokenSource", "_staticSource_NotCancelable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.CancellationTokenSource _staticSource_NotCancelable
void System::Threading::CancellationTokenSource::_set__staticSource_NotCancelable(System::Threading::CancellationTokenSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_set__staticSource_NotCancelable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "_staticSource_NotCancelable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_nLists
int System::Threading::CancellationTokenSource::_get_s_nLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_get_s_nLists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "s_nLists"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_nLists
void System::Threading::CancellationTokenSource::_set_s_nLists(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_set_s_nLists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "s_nLists", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CANNOT_BE_CANCELED
int System::Threading::CancellationTokenSource::_get_CANNOT_BE_CANCELED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_get_CANNOT_BE_CANCELED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "CANNOT_BE_CANCELED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CANNOT_BE_CANCELED
void System::Threading::CancellationTokenSource::_set_CANNOT_BE_CANCELED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_set_CANNOT_BE_CANCELED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "CANNOT_BE_CANCELED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NOT_CANCELED
int System::Threading::CancellationTokenSource::_get_NOT_CANCELED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_get_NOT_CANCELED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "NOT_CANCELED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NOT_CANCELED
void System::Threading::CancellationTokenSource::_set_NOT_CANCELED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_set_NOT_CANCELED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "NOT_CANCELED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NOTIFYING
int System::Threading::CancellationTokenSource::_get_NOTIFYING() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_get_NOTIFYING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "NOTIFYING"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NOTIFYING
void System::Threading::CancellationTokenSource::_set_NOTIFYING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_set_NOTIFYING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "NOTIFYING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NOTIFYINGCOMPLETE
int System::Threading::CancellationTokenSource::_get_NOTIFYINGCOMPLETE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_get_NOTIFYINGCOMPLETE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "NOTIFYINGCOMPLETE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NOTIFYINGCOMPLETE
void System::Threading::CancellationTokenSource::_set_NOTIFYINGCOMPLETE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_set_NOTIFYINGCOMPLETE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "NOTIFYINGCOMPLETE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Action`1<System.Object> s_LinkedTokenCancelDelegate
System::Action_1<::Il2CppObject*>* System::Threading::CancellationTokenSource::_get_s_LinkedTokenCancelDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_get_s_LinkedTokenCancelDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.Threading", "CancellationTokenSource", "s_LinkedTokenCancelDelegate"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Action`1<System.Object> s_LinkedTokenCancelDelegate
void System::Threading::CancellationTokenSource::_set_s_LinkedTokenCancelDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_set_s_LinkedTokenCancelDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "s_LinkedTokenCancelDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.TimerCallback s_timerCallback
System::Threading::TimerCallback* System::Threading::CancellationTokenSource::_get_s_timerCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_get_s_timerCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::TimerCallback*>("System.Threading", "CancellationTokenSource", "s_timerCallback"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.TimerCallback s_timerCallback
void System::Threading::CancellationTokenSource::_set_s_timerCallback(System::Threading::TimerCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::_set_s_timerCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "s_timerCallback", value));
}
// Autogenerated method: System.Threading.CancellationTokenSource.LinkedTokenCancelDelegate
void System::Threading::CancellationTokenSource::LinkedTokenCancelDelegate(::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::LinkedTokenCancelDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "LinkedTokenCancelDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_IsCancellationRequested
bool System::Threading::CancellationTokenSource::get_IsCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::get_IsCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCancellationRequested", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_IsCancellationCompleted
bool System::Threading::CancellationTokenSource::get_IsCancellationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::get_IsCancellationCompleted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCancellationCompleted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_IsDisposed
bool System::Threading::CancellationTokenSource::get_IsDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::get_IsDisposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.set_ThreadIDExecutingCallbacks
void System::Threading::CancellationTokenSource::set_ThreadIDExecutingCallbacks(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::set_ThreadIDExecutingCallbacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ThreadIDExecutingCallbacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_ThreadIDExecutingCallbacks
int System::Threading::CancellationTokenSource::get_ThreadIDExecutingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::get_ThreadIDExecutingCallbacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ThreadIDExecutingCallbacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_Token
System::Threading::CancellationToken System::Threading::CancellationTokenSource::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::get_Token");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_CanBeCanceled
bool System::Threading::CancellationTokenSource::get_CanBeCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::get_CanBeCanceled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanBeCanceled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_ExecutingCallback
System::Threading::CancellationCallbackInfo* System::Threading::CancellationTokenSource::get_ExecutingCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::get_ExecutingCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExecutingCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationCallbackInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Cancel
void System::Threading::CancellationTokenSource::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::Cancel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Cancel
void System::Threading::CancellationTokenSource::Cancel(bool throwOnFirstException) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::Cancel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(throwOnFirstException)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, throwOnFirstException);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CancelAfter
void System::Threading::CancellationTokenSource::CancelAfter(System::TimeSpan delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::CancelAfter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancelAfter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delay)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, delay);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CancelAfter
void System::Threading::CancellationTokenSource::CancelAfter(int millisecondsDelay) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::CancelAfter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancelAfter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsDelay)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, millisecondsDelay);
}
// Autogenerated method: System.Threading.CancellationTokenSource.TimerCallbackLogic
void System::Threading::CancellationTokenSource::TimerCallbackLogic(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::TimerCallbackLogic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "TimerCallbackLogic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Dispose
void System::Threading::CancellationTokenSource::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Dispose
void System::Threading::CancellationTokenSource::Dispose_NEW(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.CancellationTokenSource.ThrowIfDisposed
void System::Threading::CancellationTokenSource::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.ThrowObjectDisposedException
void System::Threading::CancellationTokenSource::ThrowObjectDisposedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::ThrowObjectDisposedException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "ThrowObjectDisposedException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.InternalGetStaticSource
System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::InternalGetStaticSource(bool set) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::InternalGetStaticSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "InternalGetStaticSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationTokenSource*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Threading.CancellationTokenSource.InternalRegister
System::Threading::CancellationTokenRegistration System::Threading::CancellationTokenSource::InternalRegister(System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* stateForCallback, System::Threading::SynchronizationContext* targetSyncContext, System::Threading::ExecutionContext* executionContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::InternalRegister");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRegister", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, stateForCallback, targetSyncContext, executionContext)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationTokenRegistration, false>(this, ___internal__method, callback, stateForCallback, targetSyncContext, executionContext);
}
// Autogenerated method: System.Threading.CancellationTokenSource.NotifyCancellation
void System::Threading::CancellationTokenSource::NotifyCancellation(bool throwOnFirstException) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::NotifyCancellation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NotifyCancellation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(throwOnFirstException)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, throwOnFirstException);
}
// Autogenerated method: System.Threading.CancellationTokenSource.ExecuteCallbackHandlers
void System::Threading::CancellationTokenSource::ExecuteCallbackHandlers(bool throwOnFirstException) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::ExecuteCallbackHandlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExecuteCallbackHandlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(throwOnFirstException)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, throwOnFirstException);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CancellationCallbackCoreWork_OnSyncContext
void System::Threading::CancellationTokenSource::CancellationCallbackCoreWork_OnSyncContext(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::CancellationCallbackCoreWork_OnSyncContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancellationCallbackCoreWork_OnSyncContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CancellationCallbackCoreWork
void System::Threading::CancellationTokenSource::CancellationCallbackCoreWork(System::Threading::CancellationCallbackCoreWorkArguments args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::CancellationCallbackCoreWork");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancellationCallbackCoreWork", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CreateLinkedTokenSource
System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::CreateLinkedTokenSource(System::Threading::CancellationToken token1, System::Threading::CancellationToken token2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::CreateLinkedTokenSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "CreateLinkedTokenSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(token1, token2)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationTokenSource*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, token1, token2);
}
// Autogenerated method: System.Threading.CancellationTokenSource.WaitForCallbackToComplete
void System::Threading::CancellationTokenSource::WaitForCallbackToComplete(System::Threading::CancellationCallbackInfo* callbackInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::WaitForCallbackToComplete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitForCallbackToComplete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackInfo);
}
// Autogenerated method: System.Threading.CancellationTokenSource..cctor
void System::Threading::CancellationTokenSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationTokenSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.CancellationCallbackCoreWorkArguments
#include "System/Threading/CancellationCallbackCoreWorkArguments.hpp"
// Including type: System.Threading.SparselyPopulatedArrayFragment`1
#include "System/Threading/SparselyPopulatedArrayFragment_1.hpp"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_executionContextCallback
System::Threading::ContextCallback* System::Threading::CancellationCallbackInfo::_get_s_executionContextCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationCallbackInfo::_get_s_executionContextCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ContextCallback*>("System.Threading", "CancellationCallbackInfo", "s_executionContextCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_executionContextCallback
void System::Threading::CancellationCallbackInfo::_set_s_executionContextCallback(System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationCallbackInfo::_set_s_executionContextCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationCallbackInfo", "s_executionContextCallback", value));
}
// Autogenerated method: System.Threading.CancellationCallbackInfo.ExecuteCallback
void System::Threading::CancellationCallbackInfo::ExecuteCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationCallbackInfo::ExecuteCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExecuteCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationCallbackInfo.ExecutionContextCallback
void System::Threading::CancellationCallbackInfo::ExecutionContextCallback(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::CancellationCallbackInfo::ExecutionContextCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "CancellationCallbackInfo", "ExecutionContextCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LazyThreadSafetyMode
#include "System/Threading/LazyThreadSafetyMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.LazyThreadSafetyMode None
System::Threading::LazyThreadSafetyMode System::Threading::LazyThreadSafetyMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LazyThreadSafetyMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::LazyThreadSafetyMode>("System.Threading", "LazyThreadSafetyMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LazyThreadSafetyMode None
void System::Threading::LazyThreadSafetyMode::_set_None(System::Threading::LazyThreadSafetyMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LazyThreadSafetyMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LazyThreadSafetyMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LazyThreadSafetyMode PublicationOnly
System::Threading::LazyThreadSafetyMode System::Threading::LazyThreadSafetyMode::_get_PublicationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LazyThreadSafetyMode::_get_PublicationOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::LazyThreadSafetyMode>("System.Threading", "LazyThreadSafetyMode", "PublicationOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LazyThreadSafetyMode PublicationOnly
void System::Threading::LazyThreadSafetyMode::_set_PublicationOnly(System::Threading::LazyThreadSafetyMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LazyThreadSafetyMode::_set_PublicationOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LazyThreadSafetyMode", "PublicationOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LazyThreadSafetyMode ExecutionAndPublication
System::Threading::LazyThreadSafetyMode System::Threading::LazyThreadSafetyMode::_get_ExecutionAndPublication() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LazyThreadSafetyMode::_get_ExecutionAndPublication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::LazyThreadSafetyMode>("System.Threading", "LazyThreadSafetyMode", "ExecutionAndPublication"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LazyThreadSafetyMode ExecutionAndPublication
void System::Threading::LazyThreadSafetyMode::_set_ExecutionAndPublication(System::Threading::LazyThreadSafetyMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LazyThreadSafetyMode::_set_ExecutionAndPublication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LazyThreadSafetyMode", "ExecutionAndPublication", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LazyInitializer
#include "System/Threading/LazyInitializer.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ManualResetEventSlim
#include "System/Threading/ManualResetEventSlim.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_SPIN_SP
int System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_SP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_SP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_SP"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_SPIN_SP
void System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_SP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_SP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_SP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_SPIN_MP
int System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_MP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_MP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_MP"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_SPIN_MP
void System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_MP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_MP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_MP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SignalledState_BitMask
int System::Threading::ManualResetEventSlim::_get_SignalledState_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_SignalledState_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SignalledState_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SignalledState_BitMask
void System::Threading::ManualResetEventSlim::_set_SignalledState_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_SignalledState_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SignalledState_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SignalledState_ShiftCount
int System::Threading::ManualResetEventSlim::_get_SignalledState_ShiftCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_SignalledState_ShiftCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SignalledState_ShiftCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SignalledState_ShiftCount
void System::Threading::ManualResetEventSlim::_set_SignalledState_ShiftCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_SignalledState_ShiftCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SignalledState_ShiftCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Dispose_BitMask
int System::Threading::ManualResetEventSlim::_get_Dispose_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_Dispose_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "Dispose_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Dispose_BitMask
void System::Threading::ManualResetEventSlim::_set_Dispose_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_Dispose_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "Dispose_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SpinCountState_BitMask
int System::Threading::ManualResetEventSlim::_get_SpinCountState_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_SpinCountState_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SpinCountState_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SpinCountState_BitMask
void System::Threading::ManualResetEventSlim::_set_SpinCountState_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_SpinCountState_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SpinCountState_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SpinCountState_ShiftCount
int System::Threading::ManualResetEventSlim::_get_SpinCountState_ShiftCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_SpinCountState_ShiftCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SpinCountState_ShiftCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SpinCountState_ShiftCount
void System::Threading::ManualResetEventSlim::_set_SpinCountState_ShiftCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_SpinCountState_ShiftCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SpinCountState_ShiftCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SpinCountState_MaxValue
int System::Threading::ManualResetEventSlim::_get_SpinCountState_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_SpinCountState_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SpinCountState_MaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SpinCountState_MaxValue
void System::Threading::ManualResetEventSlim::_set_SpinCountState_MaxValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_SpinCountState_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SpinCountState_MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NumWaitersState_BitMask
int System::Threading::ManualResetEventSlim::_get_NumWaitersState_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_NumWaitersState_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "NumWaitersState_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumWaitersState_BitMask
void System::Threading::ManualResetEventSlim::_set_NumWaitersState_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_NumWaitersState_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "NumWaitersState_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NumWaitersState_ShiftCount
int System::Threading::ManualResetEventSlim::_get_NumWaitersState_ShiftCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_NumWaitersState_ShiftCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "NumWaitersState_ShiftCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumWaitersState_ShiftCount
void System::Threading::ManualResetEventSlim::_set_NumWaitersState_ShiftCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_NumWaitersState_ShiftCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "NumWaitersState_ShiftCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NumWaitersState_MaxValue
int System::Threading::ManualResetEventSlim::_get_NumWaitersState_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_NumWaitersState_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "NumWaitersState_MaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumWaitersState_MaxValue
void System::Threading::ManualResetEventSlim::_set_NumWaitersState_MaxValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_NumWaitersState_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "NumWaitersState_MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> s_cancellationTokenCallback
System::Action_1<::Il2CppObject*>* System::Threading::ManualResetEventSlim::_get_s_cancellationTokenCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_get_s_cancellationTokenCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.Threading", "ManualResetEventSlim", "s_cancellationTokenCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> s_cancellationTokenCallback
void System::Threading::ManualResetEventSlim::_set_s_cancellationTokenCallback(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::_set_s_cancellationTokenCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "s_cancellationTokenCallback", value));
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_WaitHandle
System::Threading::WaitHandle* System::Threading::ManualResetEventSlim::get_WaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::get_WaitHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_WaitHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_IsSet
bool System::Threading::ManualResetEventSlim::get_IsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::get_IsSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.set_IsSet
void System::Threading::ManualResetEventSlim::set_IsSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::set_IsSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_SpinCount
int System::Threading::ManualResetEventSlim::get_SpinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::get_SpinCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SpinCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.set_SpinCount
void System::Threading::ManualResetEventSlim::set_SpinCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::set_SpinCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SpinCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_Waiters
int System::Threading::ManualResetEventSlim::get_Waiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::get_Waiters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Waiters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.set_Waiters
void System::Threading::ManualResetEventSlim::set_Waiters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::set_Waiters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Waiters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Initialize
void System::Threading::ManualResetEventSlim::Initialize(bool initialState, int spinCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(initialState, spinCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, initialState, spinCount);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.EnsureLockObjectCreated
void System::Threading::ManualResetEventSlim::EnsureLockObjectCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::EnsureLockObjectCreated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureLockObjectCreated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.LazyInitializeEvent
bool System::Threading::ManualResetEventSlim::LazyInitializeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::LazyInitializeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazyInitializeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Set
void System::Threading::ManualResetEventSlim::Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::Set");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Set
void System::Threading::ManualResetEventSlim::Set(bool duringCancellation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::Set");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duringCancellation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duringCancellation);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Wait
bool System::Threading::ManualResetEventSlim::Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::Wait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Dispose
void System::Threading::ManualResetEventSlim::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Dispose
void System::Threading::ManualResetEventSlim::Dispose_NEW(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.ThrowIfDisposed
void System::Threading::ManualResetEventSlim::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.CancellationTokenCallback
void System::Threading::ManualResetEventSlim::CancellationTokenCallback(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::CancellationTokenCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", "CancellationTokenCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.UpdateStateAtomically
void System::Threading::ManualResetEventSlim::UpdateStateAtomically(int newBits, int updateBitsMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::UpdateStateAtomically");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStateAtomically", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newBits, updateBitsMask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newBits, updateBitsMask);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.ExtractStatePortionAndShiftRight
int System::Threading::ManualResetEventSlim::ExtractStatePortionAndShiftRight(int state, int mask, int rightBitShiftCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::ExtractStatePortionAndShiftRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", "ExtractStatePortionAndShiftRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, mask, rightBitShiftCount)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state, mask, rightBitShiftCount);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.ExtractStatePortion
int System::Threading::ManualResetEventSlim::ExtractStatePortion(int state, int mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::ExtractStatePortion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", "ExtractStatePortion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, mask)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state, mask);
}
// Autogenerated method: System.Threading.ManualResetEventSlim..cctor
void System::Threading::ManualResetEventSlim::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ManualResetEventSlim::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.SemaphoreSlim/TaskNode
#include "System/Threading/SemaphoreSlim_TaskNode.hpp"
// Including type: System.Threading.SemaphoreSlim/<WaitUntilCountOrTimeoutAsync>d__31
#include "System/Threading/SemaphoreSlim_-WaitUntilCountOrTimeoutAsync-d__31.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Tasks.Task`1<System.Boolean> s_trueTask
System::Threading::Tasks::Task_1<bool>* System::Threading::SemaphoreSlim::_get_s_trueTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::_get_s_trueTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task_1<bool>*>("System.Threading", "SemaphoreSlim", "s_trueTask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Tasks.Task`1<System.Boolean> s_trueTask
void System::Threading::SemaphoreSlim::_set_s_trueTask(System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::_set_s_trueTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SemaphoreSlim", "s_trueTask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NO_MAXIMUM
int System::Threading::SemaphoreSlim::_get_NO_MAXIMUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::_get_NO_MAXIMUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "SemaphoreSlim", "NO_MAXIMUM"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NO_MAXIMUM
void System::Threading::SemaphoreSlim::_set_NO_MAXIMUM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::_set_NO_MAXIMUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SemaphoreSlim", "NO_MAXIMUM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> s_cancellationTokenCanceledEventHandler
System::Action_1<::Il2CppObject*>* System::Threading::SemaphoreSlim::_get_s_cancellationTokenCanceledEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::_get_s_cancellationTokenCanceledEventHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.Threading", "SemaphoreSlim", "s_cancellationTokenCanceledEventHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> s_cancellationTokenCanceledEventHandler
void System::Threading::SemaphoreSlim::_set_s_cancellationTokenCanceledEventHandler(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::_set_s_cancellationTokenCanceledEventHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SemaphoreSlim", "s_cancellationTokenCanceledEventHandler", value));
}
// Autogenerated method: System.Threading.SemaphoreSlim.Wait
void System::Threading::SemaphoreSlim::Wait() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::Wait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Wait
bool System::Threading::SemaphoreSlim::Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::Wait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitUntilCountOrTimeout
bool System::Threading::SemaphoreSlim::WaitUntilCountOrTimeout(int millisecondsTimeout, uint startTime, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::WaitUntilCountOrTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitUntilCountOrTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, startTime, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout, startTime, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitAsync
System::Threading::Tasks::Task* System::Threading::SemaphoreSlim::WaitAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::WaitAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitAsync
System::Threading::Tasks::Task* System::Threading::SemaphoreSlim::WaitAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::WaitAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitAsync
System::Threading::Tasks::Task_1<bool>* System::Threading::SemaphoreSlim::WaitAsync(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::WaitAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.CreateAndAddAsyncWaiter
System::Threading::SemaphoreSlim::TaskNode* System::Threading::SemaphoreSlim::CreateAndAddAsyncWaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::CreateAndAddAsyncWaiter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateAndAddAsyncWaiter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SemaphoreSlim::TaskNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.RemoveAsyncWaiter
bool System::Threading::SemaphoreSlim::RemoveAsyncWaiter(System::Threading::SemaphoreSlim::TaskNode* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::RemoveAsyncWaiter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAsyncWaiter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(task)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync
System::Threading::Tasks::Task_1<bool>* System::Threading::SemaphoreSlim::WaitUntilCountOrTimeoutAsync(System::Threading::SemaphoreSlim::TaskNode* asyncWaiter, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::WaitUntilCountOrTimeoutAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitUntilCountOrTimeoutAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncWaiter, millisecondsTimeout, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, asyncWaiter, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Release
int System::Threading::SemaphoreSlim::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Release
int System::Threading::SemaphoreSlim::Release(int releaseCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(releaseCount)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, releaseCount);
}
// Autogenerated method: System.Threading.SemaphoreSlim.QueueWaiterTask
void System::Threading::SemaphoreSlim::QueueWaiterTask(System::Threading::SemaphoreSlim::TaskNode* waiterTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::QueueWaiterTask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", "QueueWaiterTask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waiterTask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waiterTask);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Dispose
void System::Threading::SemaphoreSlim::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Dispose
void System::Threading::SemaphoreSlim::Dispose_NEW(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.SemaphoreSlim.CancellationTokenCanceledEventHandler
void System::Threading::SemaphoreSlim::CancellationTokenCanceledEventHandler(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::CancellationTokenCanceledEventHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", "CancellationTokenCanceledEventHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.SemaphoreSlim.CheckDispose
void System::Threading::SemaphoreSlim::CheckDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::CheckDispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckDispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.GetResourceString
::Il2CppString* System::Threading::SemaphoreSlim::GetResourceString(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::GetResourceString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", "GetResourceString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Threading.SemaphoreSlim..cctor
void System::Threading::SemaphoreSlim::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SemaphoreSlim/TaskNode
#include "System/Threading/SemaphoreSlim_TaskNode.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.SemaphoreSlim/TaskNode.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::SemaphoreSlim::TaskNode::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::TaskNode::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim/TaskNode.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::SemaphoreSlim::TaskNode::System_Threading_IThreadPoolWorkItem_MarkAborted_NEW(System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::TaskNode::System.Threading.IThreadPoolWorkItem.MarkAborted_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tae)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SemaphoreSlim/<WaitUntilCountOrTimeoutAsync>d__31
#include "System/Threading/SemaphoreSlim_-WaitUntilCountOrTimeoutAsync-d__31.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.SemaphoreSlim/TaskNode
#include "System/Threading/SemaphoreSlim_TaskNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.SemaphoreSlim/<WaitUntilCountOrTimeoutAsync>d__31.MoveNext
void System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim/<WaitUntilCountOrTimeoutAsync>d__31.SetStateMachine
void System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SpinLock
#include "System/Threading/SpinLock.hpp"
// Including type: System.Threading.SpinLock/SystemThreading_SpinLockDebugView
#include "System/Threading/SpinLock_SystemThreading_SpinLockDebugView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MAXIMUM_WAITERS
int System::Threading::SpinLock::_get_MAXIMUM_WAITERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::_get_MAXIMUM_WAITERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "SpinLock", "MAXIMUM_WAITERS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAXIMUM_WAITERS
void System::Threading::SpinLock::_set_MAXIMUM_WAITERS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::_set_MAXIMUM_WAITERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SpinLock", "MAXIMUM_WAITERS", value));
}
// Autogenerated method: System.Threading.SpinLock.Enter
void System::Threading::SpinLock::Enter(bool& lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::Enter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Enter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lockTaken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lockTaken);
}
// Autogenerated method: System.Threading.SpinLock.TryEnter
void System::Threading::SpinLock::TryEnter(int millisecondsTimeout, bool& lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::TryEnter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, lockTaken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, millisecondsTimeout, lockTaken);
}
// Autogenerated method: System.Threading.SpinLock.ContinueTryEnter
void System::Threading::SpinLock::ContinueTryEnter(int millisecondsTimeout, bool& lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::ContinueTryEnter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ContinueTryEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, lockTaken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, millisecondsTimeout, lockTaken);
}
// Autogenerated method: System.Threading.SpinLock.DecrementWaiters
void System::Threading::SpinLock::DecrementWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::DecrementWaiters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "DecrementWaiters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock.ContinueTryEnterWithThreadTracking
void System::Threading::SpinLock::ContinueTryEnterWithThreadTracking(int millisecondsTimeout, uint startTime, bool& lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::ContinueTryEnterWithThreadTracking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ContinueTryEnterWithThreadTracking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, startTime, lockTaken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, millisecondsTimeout, startTime, lockTaken);
}
// Autogenerated method: System.Threading.SpinLock.Exit
void System::Threading::SpinLock::Exit(bool useMemoryBarrier) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::Exit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Exit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(useMemoryBarrier)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, useMemoryBarrier);
}
// Autogenerated method: System.Threading.SpinLock.ExitSlowPath
void System::Threading::SpinLock::ExitSlowPath(bool useMemoryBarrier) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::ExitSlowPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ExitSlowPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(useMemoryBarrier)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, useMemoryBarrier);
}
// Autogenerated method: System.Threading.SpinLock.get_IsHeldByCurrentThread
bool System::Threading::SpinLock::get_IsHeldByCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::get_IsHeldByCurrentThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsHeldByCurrentThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock.get_IsThreadOwnerTrackingEnabled
bool System::Threading::SpinLock::get_IsThreadOwnerTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::get_IsThreadOwnerTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsThreadOwnerTrackingEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock..cctor
void System::Threading::SpinLock::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinLock::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "SpinLock", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SpinWait
#include "System/Threading/SpinWait.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.SpinWait.get_NextSpinWillYield
bool System::Threading::SpinWait::get_NextSpinWillYield() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinWait::get_NextSpinWillYield");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_NextSpinWillYield", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinWait.SpinOnce
void System::Threading::SpinWait::SpinOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SpinWait::SpinOnce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SpinOnce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.PlatformHelper
#include "System/Threading/PlatformHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_processorCount
int System::Threading::PlatformHelper::_get_s_processorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::PlatformHelper::_get_s_processorCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "PlatformHelper", "s_processorCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_processorCount
void System::Threading::PlatformHelper::_set_s_processorCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::PlatformHelper::_set_s_processorCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "PlatformHelper", "s_processorCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_lastProcessorCountRefreshTicks
int System::Threading::PlatformHelper::_get_s_lastProcessorCountRefreshTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::PlatformHelper::_get_s_lastProcessorCountRefreshTicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "PlatformHelper", "s_lastProcessorCountRefreshTicks"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_lastProcessorCountRefreshTicks
void System::Threading::PlatformHelper::_set_s_lastProcessorCountRefreshTicks(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::PlatformHelper::_set_s_lastProcessorCountRefreshTicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "PlatformHelper", "s_lastProcessorCountRefreshTicks", value));
}
// Autogenerated method: System.Threading.PlatformHelper.get_ProcessorCount
int System::Threading::PlatformHelper::get_ProcessorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::PlatformHelper::get_ProcessorCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "PlatformHelper", "get_ProcessorCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.PlatformHelper.get_IsSingleProcessor
bool System::Threading::PlatformHelper::get_IsSingleProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::PlatformHelper::get_IsSingleProcessor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "PlatformHelper", "get_IsSingleProcessor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.TimeoutHelper
#include "System/Threading/TimeoutHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.TimeoutHelper.GetTime
uint System::Threading::TimeoutHelper::GetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::TimeoutHelper::GetTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "TimeoutHelper", "GetTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.TimeoutHelper.UpdateTimeOut
int System::Threading::TimeoutHelper::UpdateTimeOut(uint startTime, int originalWaitMillisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::TimeoutHelper::UpdateTimeOut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "TimeoutHelper", "UpdateTimeOut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startTime, originalWaitMillisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, startTime, originalWaitMillisecondsTimeout);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.AbandonedMutexException
#include "System/Threading/AbandonedMutexException.hpp"
// Including type: System.Threading.Mutex
#include "System/Threading/Mutex.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.AbandonedMutexException.SetupException
void System::Threading::AbandonedMutexException::SetupException(int location, System::Threading::WaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::AbandonedMutexException::SetupException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetupException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location, handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, location, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.IAsyncLocal
#include "System/Threading/IAsyncLocal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.IAsyncLocal.OnValueChanged
void System::Threading::IAsyncLocal::OnValueChanged_NEW(::Il2CppObject* previousValue, ::Il2CppObject* currentValue, bool contextChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::IAsyncLocal::OnValueChanged_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValueChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previousValue, currentValue, contextChanged)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, previousValue, currentValue, contextChanged);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.EventResetMode
#include "System/Threading/EventResetMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.EventResetMode AutoReset
System::Threading::EventResetMode System::Threading::EventResetMode::_get_AutoReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::EventResetMode::_get_AutoReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::EventResetMode>("System.Threading", "EventResetMode", "AutoReset"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.EventResetMode AutoReset
void System::Threading::EventResetMode::_set_AutoReset(System::Threading::EventResetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::EventResetMode::_set_AutoReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "EventResetMode", "AutoReset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.EventResetMode ManualReset
System::Threading::EventResetMode System::Threading::EventResetMode::_get_ManualReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::EventResetMode::_get_ManualReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::EventResetMode>("System.Threading", "EventResetMode", "ManualReset"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.EventResetMode ManualReset
void System::Threading::EventResetMode::_set_ManualReset(System::Threading::EventResetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::EventResetMode::_set_ManualReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "EventResetMode", "ManualReset", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.EventWaitHandle
#include "System/Threading/EventWaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.EventWaitHandle.Reset
bool System::Threading::EventWaitHandle::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::EventWaitHandle::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.EventWaitHandle.Set
bool System::Threading::EventWaitHandle::Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::EventWaitHandle::Set");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ContextCallback.Invoke
void System::Threading::ContextCallback::Invoke_NEW(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ContextCallback::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.ContextCallback.BeginInvoke
System::IAsyncResult* System::Threading::ContextCallback::BeginInvoke_NEW(::Il2CppObject* state, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ContextCallback::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: System.Threading.ContextCallback.EndInvoke
void System::Threading::ContextCallback::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ContextCallback::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ExecutionContextSwitcher
#include "System/Threading/ExecutionContextSwitcher.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ExecutionContextSwitcher.UndoNoThrow
bool System::Threading::ExecutionContextSwitcher::UndoNoThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContextSwitcher::UndoNoThrow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "UndoNoThrow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContextSwitcher.Undo
void System::Threading::ExecutionContextSwitcher::Undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContextSwitcher::Undo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Undo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.ExecutionContext/Reader
#include "System/Threading/ExecutionContext_Reader.hpp"
// Including type: System.Threading.ExecutionContext/CaptureOptions
#include "System/Threading/ExecutionContext_CaptureOptions.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.IllogicalCallContext
#include "System/Runtime/Remoting/Messaging/IllogicalCallContext.hpp"
// Including type: System.Threading.IAsyncLocal
#include "System/Threading/IAsyncLocal.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Threading.ExecutionContextSwitcher
#include "System/Threading/ExecutionContextSwitcher.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.ExecutionContext s_dummyDefaultEC
System::Threading::ExecutionContext* System::Threading::ExecutionContext::_get_s_dummyDefaultEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::_get_s_dummyDefaultEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ExecutionContext*>("System.Threading", "ExecutionContext", "s_dummyDefaultEC"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.ExecutionContext s_dummyDefaultEC
void System::Threading::ExecutionContext::_set_s_dummyDefaultEC(System::Threading::ExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::_set_s_dummyDefaultEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext", "s_dummyDefaultEC", value));
}
// Autogenerated method: System.Threading.ExecutionContext.get_isNewCapture
bool System::Threading::ExecutionContext::get_isNewCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::get_isNewCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isNewCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_isNewCapture
void System::Threading::ExecutionContext::set_isNewCapture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::set_isNewCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isNewCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_isFlowSuppressed
bool System::Threading::ExecutionContext::get_isFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::get_isFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isFlowSuppressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_isFlowSuppressed
void System::Threading::ExecutionContext::set_isFlowSuppressed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::set_isFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isFlowSuppressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_PreAllocatedDefault
System::Threading::ExecutionContext* System::Threading::ExecutionContext::get_PreAllocatedDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::get_PreAllocatedDefault");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "get_PreAllocatedDefault", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.get_IsPreAllocatedDefault
bool System::Threading::ExecutionContext::get_IsPreAllocatedDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::get_IsPreAllocatedDefault");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsPreAllocatedDefault", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.OnAsyncLocalContextChanged
void System::Threading::ExecutionContext::OnAsyncLocalContextChanged(System::Threading::ExecutionContext* previous, System::Threading::ExecutionContext* current) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::OnAsyncLocalContextChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "OnAsyncLocalContextChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previous, current)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, previous, current);
}
// Autogenerated method: System.Threading.ExecutionContext.get_LogicalCallContext
System::Runtime::Remoting::Messaging::LogicalCallContext* System::Threading::ExecutionContext::get_LogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::get_LogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LogicalCallContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::LogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_LogicalCallContext
void System::Threading::ExecutionContext::set_LogicalCallContext(System::Runtime::Remoting::Messaging::LogicalCallContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::set_LogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_LogicalCallContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_IllogicalCallContext
System::Runtime::Remoting::Messaging::IllogicalCallContext* System::Threading::ExecutionContext::get_IllogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::get_IllogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IllogicalCallContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IllogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_IllogicalCallContext
void System::Threading::ExecutionContext::set_IllogicalCallContext(System::Runtime::Remoting::Messaging::IllogicalCallContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::set_IllogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IllogicalCallContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_SynchronizationContext
System::Threading::SynchronizationContext* System::Threading::ExecutionContext::get_SynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::get_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SynchronizationContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_SynchronizationContext
void System::Threading::ExecutionContext::set_SynchronizationContext(System::Threading::SynchronizationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::set_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SynchronizationContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_SynchronizationContextNoFlow
System::Threading::SynchronizationContext* System::Threading::ExecutionContext::get_SynchronizationContextNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::get_SynchronizationContextNoFlow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SynchronizationContextNoFlow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_SynchronizationContextNoFlow
void System::Threading::ExecutionContext::set_SynchronizationContextNoFlow(System::Threading::SynchronizationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::set_SynchronizationContextNoFlow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SynchronizationContextNoFlow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.Dispose
void System::Threading::ExecutionContext::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.Run
void System::Threading::ExecutionContext::Run(System::Threading::ExecutionContext* executionContext, System::Threading::ContextCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(executionContext, callback, state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, executionContext, callback, state);
}
// Autogenerated method: System.Threading.ExecutionContext.Run
void System::Threading::ExecutionContext::Run(System::Threading::ExecutionContext* executionContext, System::Threading::ContextCallback* callback, ::Il2CppObject* state, bool preserveSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(executionContext, callback, state, preserveSyncCtx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, executionContext, callback, state, preserveSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext.RunInternal
void System::Threading::ExecutionContext::RunInternal(System::Threading::ExecutionContext* executionContext, System::Threading::ContextCallback* callback, ::Il2CppObject* state, bool preserveSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::RunInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "RunInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(executionContext, callback, state, preserveSyncCtx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, executionContext, callback, state, preserveSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext.EstablishCopyOnWriteScope
void System::Threading::ExecutionContext::EstablishCopyOnWriteScope(System::Threading::ExecutionContextSwitcher& ecsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::EstablishCopyOnWriteScope");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "EstablishCopyOnWriteScope", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ecsw)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ecsw);
}
// Autogenerated method: System.Threading.ExecutionContext.EstablishCopyOnWriteScope
void System::Threading::ExecutionContext::EstablishCopyOnWriteScope(System::Threading::Thread* currentThread, bool knownNullWindowsIdentity, System::Threading::ExecutionContextSwitcher& ecsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::EstablishCopyOnWriteScope");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "EstablishCopyOnWriteScope", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(currentThread, knownNullWindowsIdentity, ecsw)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, currentThread, knownNullWindowsIdentity, ecsw);
}
// Autogenerated method: System.Threading.ExecutionContext.SetExecutionContext
System::Threading::ExecutionContextSwitcher System::Threading::ExecutionContext::SetExecutionContext(System::Threading::ExecutionContext* executionContext, bool preserveSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::SetExecutionContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "SetExecutionContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(executionContext, preserveSyncCtx)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContextSwitcher, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, executionContext, preserveSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext.CreateCopy
System::Threading::ExecutionContext* System::Threading::ExecutionContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::CreateCopy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.CreateMutableCopy
System::Threading::ExecutionContext* System::Threading::ExecutionContext::CreateMutableCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::CreateMutableCopy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateMutableCopy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.IsFlowSuppressed
bool System::Threading::ExecutionContext::IsFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::IsFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "IsFlowSuppressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.Capture
System::Threading::ExecutionContext* System::Threading::ExecutionContext::Capture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Capture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Capture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.FastCapture
System::Threading::ExecutionContext* System::Threading::ExecutionContext::FastCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::FastCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "FastCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.Capture
System::Threading::ExecutionContext* System::Threading::ExecutionContext::Capture(System::Threading::StackCrawlMark& stackMark, System::Threading::ExecutionContext::CaptureOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Capture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Capture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stackMark, options)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stackMark, options);
}
// Autogenerated method: System.Threading.ExecutionContext.GetObjectData
void System::Threading::ExecutionContext::GetObjectData_NEW(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::GetObjectData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Threading.ExecutionContext.IsDefaultFTContext
bool System::Threading::ExecutionContext::IsDefaultFTContext(bool ignoreSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::IsDefaultFTContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsDefaultFTContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ignoreSyncCtx)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ignoreSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext..cctor
void System::Threading::ExecutionContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ExecutionContext/Flags
#include "System/Threading/ExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/Flags None
System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Flags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/Flags None
void System::Threading::ExecutionContext::Flags::_set_None(System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Flags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/Flags IsNewCapture
System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_IsNewCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Flags::_get_IsNewCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "IsNewCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/Flags IsNewCapture
void System::Threading::ExecutionContext::Flags::_set_IsNewCapture(System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Flags::_set_IsNewCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "IsNewCapture", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/Flags IsFlowSuppressed
System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_IsFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Flags::_get_IsFlowSuppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "IsFlowSuppressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/Flags IsFlowSuppressed
void System::Threading::ExecutionContext::Flags::_set_IsFlowSuppressed(System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Flags::_set_IsFlowSuppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "IsFlowSuppressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/Flags IsPreAllocatedDefault
System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_IsPreAllocatedDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Flags::_get_IsPreAllocatedDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "IsPreAllocatedDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/Flags IsPreAllocatedDefault
void System::Threading::ExecutionContext::Flags::_set_IsPreAllocatedDefault(System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Flags::_set_IsPreAllocatedDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "IsPreAllocatedDefault", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ExecutionContext/Reader
#include "System/Threading/ExecutionContext_Reader.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext/Reader
#include "System/Runtime/Remoting/Messaging/LogicalCallContext_Reader.hpp"
// Including type: System.Runtime.Remoting.Messaging.IllogicalCallContext/Reader
#include "System/Runtime/Remoting/Messaging/IllogicalCallContext_Reader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ExecutionContext/Reader.DangerousGetRawExecutionContext
System::Threading::ExecutionContext* System::Threading::ExecutionContext::Reader::DangerousGetRawExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Reader::DangerousGetRawExecutionContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "DangerousGetRawExecutionContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/Reader.get_IsNull
bool System::Threading::ExecutionContext::Reader::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Reader::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsNull", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/Reader.IsDefaultFTContext
bool System::Threading::ExecutionContext::Reader::IsDefaultFTContext(bool ignoreSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Reader::IsDefaultFTContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "IsDefaultFTContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ignoreSyncCtx)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, ignoreSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext/Reader.get_IsFlowSuppressed
bool System::Threading::ExecutionContext::Reader::get_IsFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Reader::get_IsFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsFlowSuppressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/Reader.get_SynchronizationContext
System::Threading::SynchronizationContext* System::Threading::ExecutionContext::Reader::get_SynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Reader::get_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_SynchronizationContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SynchronizationContext*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/Reader.get_SynchronizationContextNoFlow
System::Threading::SynchronizationContext* System::Threading::ExecutionContext::Reader::get_SynchronizationContextNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Reader::get_SynchronizationContextNoFlow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_SynchronizationContextNoFlow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SynchronizationContext*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/Reader.get_LogicalCallContext
System::Runtime::Remoting::Messaging::LogicalCallContext::Reader System::Threading::ExecutionContext::Reader::get_LogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Reader::get_LogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_LogicalCallContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::LogicalCallContext::Reader, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/Reader.get_IllogicalCallContext
System::Runtime::Remoting::Messaging::IllogicalCallContext::Reader System::Threading::ExecutionContext::Reader::get_IllogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Reader::get_IllogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IllogicalCallContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IllogicalCallContext::Reader, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/Reader.HasSameLocalValues
bool System::Threading::ExecutionContext::Reader::HasSameLocalValues(System::Threading::ExecutionContext* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::Reader::HasSameLocalValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "HasSameLocalValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ExecutionContext/CaptureOptions
#include "System/Threading/ExecutionContext_CaptureOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/CaptureOptions None
System::Threading::ExecutionContext::CaptureOptions System::Threading::ExecutionContext::CaptureOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::CaptureOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ExecutionContext::CaptureOptions>("System.Threading", "ExecutionContext/CaptureOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/CaptureOptions None
void System::Threading::ExecutionContext::CaptureOptions::_set_None(System::Threading::ExecutionContext::CaptureOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::CaptureOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/CaptureOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/CaptureOptions IgnoreSyncCtx
System::Threading::ExecutionContext::CaptureOptions System::Threading::ExecutionContext::CaptureOptions::_get_IgnoreSyncCtx() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::CaptureOptions::_get_IgnoreSyncCtx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ExecutionContext::CaptureOptions>("System.Threading", "ExecutionContext/CaptureOptions", "IgnoreSyncCtx"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/CaptureOptions IgnoreSyncCtx
void System::Threading::ExecutionContext::CaptureOptions::_set_IgnoreSyncCtx(System::Threading::ExecutionContext::CaptureOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::CaptureOptions::_set_IgnoreSyncCtx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/CaptureOptions", "IgnoreSyncCtx", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/CaptureOptions OptimizeDefaultCase
System::Threading::ExecutionContext::CaptureOptions System::Threading::ExecutionContext::CaptureOptions::_get_OptimizeDefaultCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::CaptureOptions::_get_OptimizeDefaultCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ExecutionContext::CaptureOptions>("System.Threading", "ExecutionContext/CaptureOptions", "OptimizeDefaultCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/CaptureOptions OptimizeDefaultCase
void System::Threading::ExecutionContext::CaptureOptions::_set_OptimizeDefaultCase(System::Threading::ExecutionContext::CaptureOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ExecutionContext::CaptureOptions::_set_OptimizeDefaultCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/CaptureOptions", "OptimizeDefaultCase", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.LockRecursionException
#include "System/Threading/LockRecursionException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Monitor
#include "System/Threading/Monitor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Monitor.Enter
void System::Threading::Monitor::Enter(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Enter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Enter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Enter
void System::Threading::Monitor::Enter(::Il2CppObject* obj, bool& lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Enter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Enter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, lockTaken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, lockTaken);
}
// Autogenerated method: System.Threading.Monitor.ThrowLockTakenException
void System::Threading::Monitor::ThrowLockTakenException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::ThrowLockTakenException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ThrowLockTakenException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Monitor.Exit
void System::Threading::Monitor::Exit(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Exit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Exit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Wait
bool System::Threading::Monitor::Wait(::Il2CppObject* obj, int millisecondsTimeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Wait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Wait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, millisecondsTimeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, millisecondsTimeout, exitContext);
}
// Autogenerated method: System.Threading.Monitor.Wait
bool System::Threading::Monitor::Wait(::Il2CppObject* obj, int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Wait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Wait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, millisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, millisecondsTimeout);
}
// Autogenerated method: System.Threading.Monitor.Pulse
void System::Threading::Monitor::Pulse(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Pulse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Pulse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.PulseAll
void System::Threading::Monitor::PulseAll(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::PulseAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "PulseAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_test_synchronised
bool System::Threading::Monitor::Monitor_test_synchronised(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Monitor_test_synchronised");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_test_synchronised", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_pulse
void System::Threading::Monitor::Monitor_pulse(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Monitor_pulse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_pulse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.ObjPulse
void System::Threading::Monitor::ObjPulse(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::ObjPulse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ObjPulse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_pulse_all
void System::Threading::Monitor::Monitor_pulse_all(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Monitor_pulse_all");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_pulse_all", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.ObjPulseAll
void System::Threading::Monitor::ObjPulseAll(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::ObjPulseAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ObjPulseAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_wait
bool System::Threading::Monitor::Monitor_wait(::Il2CppObject* obj, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::Monitor_wait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_wait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, ms)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, ms);
}
// Autogenerated method: System.Threading.Monitor.ObjWait
bool System::Threading::Monitor::ObjWait(bool exitContext, int millisecondsTimeout, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::ObjWait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ObjWait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exitContext, millisecondsTimeout, obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exitContext, millisecondsTimeout, obj);
}
// Autogenerated method: System.Threading.Monitor.try_enter_with_atomic_var
void System::Threading::Monitor::try_enter_with_atomic_var(::Il2CppObject* obj, int millisecondsTimeout, bool& lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::try_enter_with_atomic_var");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "try_enter_with_atomic_var", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, millisecondsTimeout, lockTaken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, millisecondsTimeout, lockTaken);
}
// Autogenerated method: System.Threading.Monitor.ReliableEnterTimeout
void System::Threading::Monitor::ReliableEnterTimeout(::Il2CppObject* obj, int timeout, bool& lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::ReliableEnterTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ReliableEnterTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, timeout, lockTaken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, timeout, lockTaken);
}
// Autogenerated method: System.Threading.Monitor.ReliableEnter
void System::Threading::Monitor::ReliableEnter(::Il2CppObject* obj, bool& lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Monitor::ReliableEnter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ReliableEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, lockTaken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, lockTaken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ParameterizedThreadStart
#include "System/Threading/ParameterizedThreadStart.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ParameterizedThreadStart.Invoke
void System::Threading::ParameterizedThreadStart::Invoke_NEW(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ParameterizedThreadStart::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ParameterizedThreadStart.BeginInvoke
System::IAsyncResult* System::Threading::ParameterizedThreadStart::BeginInvoke_NEW(::Il2CppObject* obj, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ParameterizedThreadStart::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, obj, callback, object);
}
// Autogenerated method: System.Threading.ParameterizedThreadStart.EndInvoke
void System::Threading::ParameterizedThreadStart::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ParameterizedThreadStart::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SemaphoreFullException
#include "System/Threading/SemaphoreFullException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.SendOrPostCallback.Invoke
void System::Threading::SendOrPostCallback::Invoke_NEW(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SendOrPostCallback::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.SendOrPostCallback.BeginInvoke
System::IAsyncResult* System::Threading::SendOrPostCallback::BeginInvoke_NEW(::Il2CppObject* state, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SendOrPostCallback::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: System.Threading.SendOrPostCallback.EndInvoke
void System::Threading::SendOrPostCallback::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SendOrPostCallback::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SynchronizationContextProperties
#include "System/Threading/SynchronizationContextProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.SynchronizationContextProperties None
System::Threading::SynchronizationContextProperties System::Threading::SynchronizationContextProperties::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContextProperties::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::SynchronizationContextProperties>("System.Threading", "SynchronizationContextProperties", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.SynchronizationContextProperties None
void System::Threading::SynchronizationContextProperties::_set_None(System::Threading::SynchronizationContextProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContextProperties::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContextProperties", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.SynchronizationContextProperties RequireWaitNotification
System::Threading::SynchronizationContextProperties System::Threading::SynchronizationContextProperties::_get_RequireWaitNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContextProperties::_get_RequireWaitNotification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::SynchronizationContextProperties>("System.Threading", "SynchronizationContextProperties", "RequireWaitNotification"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.SynchronizationContextProperties RequireWaitNotification
void System::Threading::SynchronizationContextProperties::_set_RequireWaitNotification(System::Threading::SynchronizationContextProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContextProperties::_set_RequireWaitNotification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContextProperties", "RequireWaitNotification", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType1
System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_get_s_cachedPreparedType1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType1"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType1
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType1(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_set_s_cachedPreparedType1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType2
System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_get_s_cachedPreparedType2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType2"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType2
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType2(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_set_s_cachedPreparedType2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType3
System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_get_s_cachedPreparedType3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType3"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType3
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType3(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_set_s_cachedPreparedType3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType4
System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_get_s_cachedPreparedType4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType4"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType4
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType4(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_set_s_cachedPreparedType4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType4", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType5
System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType5() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_get_s_cachedPreparedType5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType5"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType5
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType5(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::_set_s_cachedPreparedType5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType5", value));
}
// Autogenerated method: System.Threading.SynchronizationContext.Send
void System::Threading::SynchronizationContext::Send_NEW(System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::Send_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d, state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: System.Threading.SynchronizationContext.Post
void System::Threading::SynchronizationContext::Post_NEW(System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::Post_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Post", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d, state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: System.Threading.SynchronizationContext.OperationStarted
void System::Threading::SynchronizationContext::OperationStarted_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::OperationStarted_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OperationStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.OperationCompleted
void System::Threading::SynchronizationContext::OperationCompleted_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::OperationCompleted_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OperationCompleted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.SetSynchronizationContext
void System::Threading::SynchronizationContext::SetSynchronizationContext(System::Threading::SynchronizationContext* syncContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::SetSynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "SetSynchronizationContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syncContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, syncContext);
}
// Autogenerated method: System.Threading.SynchronizationContext.get_Current
System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SynchronizationContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.get_CurrentNoFlow
System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::get_CurrentNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::get_CurrentNoFlow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "get_CurrentNoFlow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SynchronizationContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.GetThreadLocalContext
System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::GetThreadLocalContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::GetThreadLocalContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "GetThreadLocalContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SynchronizationContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.CreateCopy
System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::CreateCopy_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::SynchronizationContext::CreateCopy_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext
#include "System/Threading/OSSpecificSynchronizationContext.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/InvocationEntryDelegate
#include "System/Threading/OSSpecificSynchronizationContext_InvocationEntryDelegate.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/MonoPInvokeCallbackAttribute
#include "System/Threading/OSSpecificSynchronizationContext_MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/InvocationContext
#include "System/Threading/OSSpecificSynchronizationContext_InvocationContext.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/<>c
#include "System/Threading/OSSpecificSynchronizationContext_--c.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Threading.OSSpecificSynchronizationContext> s_ContextCache
System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Threading::OSSpecificSynchronizationContext*>* System::Threading::OSSpecificSynchronizationContext::_get_s_ContextCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::_get_s_ContextCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Threading::OSSpecificSynchronizationContext*>*>("System.Threading", "OSSpecificSynchronizationContext", "s_ContextCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Threading.OSSpecificSynchronizationContext> s_ContextCache
void System::Threading::OSSpecificSynchronizationContext::_set_s_ContextCache(System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Threading::OSSpecificSynchronizationContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::_set_s_ContextCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "OSSpecificSynchronizationContext", "s_ContextCache", value));
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.Get
System::Threading::OSSpecificSynchronizationContext* System::Threading::OSSpecificSynchronizationContext::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::OSSpecificSynchronizationContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.InvocationEntry
void System::Threading::OSSpecificSynchronizationContext::InvocationEntry(System::IntPtr arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::InvocationEntry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "InvocationEntry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(arg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.GetOSContext
::Il2CppObject* System::Threading::OSSpecificSynchronizationContext::GetOSContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::GetOSContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "GetOSContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.PostInternal
void System::Threading::OSSpecificSynchronizationContext::PostInternal(::Il2CppObject* osSynchronizationContext, System::IntPtr callback, System::IntPtr arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::PostInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "PostInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(osSynchronizationContext, callback, arg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, osSynchronizationContext, callback, arg);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext..cctor
void System::Threading::OSSpecificSynchronizationContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.CreateCopy
System::Threading::SynchronizationContext* System::Threading::OSSpecificSynchronizationContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::CreateCopy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.Send
void System::Threading::OSSpecificSynchronizationContext::Send(System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::Send");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d, state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.Post
void System::Threading::OSSpecificSynchronizationContext::Post(System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::Post");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Post", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d, state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext/InvocationEntryDelegate
#include "System/Threading/OSSpecificSynchronizationContext_InvocationEntryDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/InvocationEntryDelegate.Invoke
void System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::Invoke_NEW(System::IntPtr arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(arg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, arg);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/InvocationEntryDelegate.BeginInvoke
System::IAsyncResult* System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::BeginInvoke_NEW(System::IntPtr arg, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(arg, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, arg, callback, object);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/InvocationEntryDelegate.EndInvoke
void System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.OSSpecificSynchronizationContext/MonoPInvokeCallbackAttribute
#include "System/Threading/OSSpecificSynchronizationContext_MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext/InvocationContext
#include "System/Threading/OSSpecificSynchronizationContext_InvocationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/InvocationContext.Invoke
void System::Threading::OSSpecificSynchronizationContext::InvocationContext::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::InvocationContext::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext/<>c
#include "System/Threading/OSSpecificSynchronizationContext_--c.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.OSSpecificSynchronizationContext/<>c <>9
System::Threading::OSSpecificSynchronizationContext::$$c* System::Threading::OSSpecificSynchronizationContext::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Threading::OSSpecificSynchronizationContext::$$c*>("System.Threading", "OSSpecificSynchronizationContext/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.OSSpecificSynchronizationContext/<>c <>9
void System::Threading::OSSpecificSynchronizationContext::$$c::_set_$$9(System::Threading::OSSpecificSynchronizationContext::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading", "OSSpecificSynchronizationContext/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<System.Object,System.Threading.OSSpecificSynchronizationContext> <>9__3_0
typename System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Threading::OSSpecificSynchronizationContext*>::CreateValueCallback* System::Threading::OSSpecificSynchronizationContext::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Threading::OSSpecificSynchronizationContext*>::CreateValueCallback*>("System.Threading", "OSSpecificSynchronizationContext/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<System.Object,System.Threading.OSSpecificSynchronizationContext> <>9__3_0
void System::Threading::OSSpecificSynchronizationContext::$$c::_set_$$9__3_0(typename System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Threading::OSSpecificSynchronizationContext*>::CreateValueCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading", "OSSpecificSynchronizationContext/<>c", "<>9__3_0", value)));
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/<>c..cctor
void System::Threading::OSSpecificSynchronizationContext::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/<>c.<Get>b__3_0
System::Threading::OSSpecificSynchronizationContext* System::Threading::OSSpecificSynchronizationContext::$$c::$Get$b__3_0(::Il2CppObject* _osContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::OSSpecificSynchronizationContext::$$c::<Get>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Get>b__3_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_osContext))));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::OSSpecificSynchronizationContext*, false>(this, ___internal__method, _osContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SynchronizationLockException
#include "System/Threading/SynchronizationLockException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadHelper
#include "System/Threading/ThreadHelper.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Threading.ContextCallback _ccb
System::Threading::ContextCallback* System::Threading::ThreadHelper::_get__ccb() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadHelper::_get__ccb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ContextCallback*>("System.Threading", "ThreadHelper", "_ccb"));
}
// Autogenerated static field setter
// Set static field: static System.Threading.ContextCallback _ccb
void System::Threading::ThreadHelper::_set__ccb(System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadHelper::_set__ccb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadHelper", "_ccb", value));
}
// Autogenerated method: System.Threading.ThreadHelper..cctor
void System::Threading::ThreadHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadHelper", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadHelper.SetExecutionContextHelper
void System::Threading::ThreadHelper::SetExecutionContextHelper(System::Threading::ExecutionContext* ec) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadHelper::SetExecutionContextHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetExecutionContextHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ec)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ec);
}
// Autogenerated method: System.Threading.ThreadHelper.ThreadStart_Context
void System::Threading::ThreadHelper::ThreadStart_Context(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadHelper::ThreadStart_Context");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadHelper", "ThreadStart_Context", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Threading.ThreadHelper.ThreadStart
void System::Threading::ThreadHelper::ThreadStart(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadHelper::ThreadStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ThreadStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ThreadHelper.ThreadStart
void System::Threading::ThreadHelper::ThreadStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadHelper::ThreadStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ThreadStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Threading.InternalThread
#include "System/Threading/InternalThread.hpp"
// Including type: System.Security.Principal.IPrincipal
#include "System/Security/Principal/IPrincipal.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
// Including type: System.Threading.ThreadPriority
#include "System/Threading/ThreadPriority.hpp"
// Including type: System.LocalDataStoreMgr
#include "System/LocalDataStoreMgr.hpp"
// Including type: System.LocalDataStoreHolder
#include "System/LocalDataStoreHolder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Threading.AsyncLocal`1
#include "System/Threading/AsyncLocal_1.hpp"
// Including type: System.Threading.ThreadStart
#include "System/Threading/ThreadStart.hpp"
// Including type: System.Threading.ParameterizedThreadStart
#include "System/Threading/ParameterizedThreadStart.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.AppDomain
#include "System/AppDomain.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Threading.ThreadState
#include "System/Threading/ThreadState.hpp"
// Including type: System.Threading.ExecutionContext/Reader
#include "System/Threading/ExecutionContext_Reader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.LocalDataStoreMgr s_LocalDataStoreMgr
System::LocalDataStoreMgr* System::Threading::Thread::_get_s_LocalDataStoreMgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_get_s_LocalDataStoreMgr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::LocalDataStoreMgr*>("System.Threading", "Thread", "s_LocalDataStoreMgr"));
}
// Autogenerated static field setter
// Set static field: static private System.LocalDataStoreMgr s_LocalDataStoreMgr
void System::Threading::Thread::_set_s_LocalDataStoreMgr(System::LocalDataStoreMgr* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_set_s_LocalDataStoreMgr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "s_LocalDataStoreMgr", value));
}
// [ThreadStaticAttribute] Offset: 0xC9A730
// Autogenerated static field getter
// Get static field: static private System.LocalDataStoreHolder s_LocalDataStore
System::LocalDataStoreHolder* System::Threading::Thread::_get_s_LocalDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_get_s_LocalDataStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::LocalDataStoreHolder*>("System.Threading", "Thread", "s_LocalDataStore"));
}
// Autogenerated static field setter
// Set static field: static private System.LocalDataStoreHolder s_LocalDataStore
void System::Threading::Thread::_set_s_LocalDataStore(System::LocalDataStoreHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_set_s_LocalDataStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "s_LocalDataStore", value));
}
// [ThreadStaticAttribute] Offset: 0xC9A740
// Autogenerated static field getter
// Get static field: static System.Globalization.CultureInfo m_CurrentCulture
System::Globalization::CultureInfo* System::Threading::Thread::_get_m_CurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_get_m_CurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CultureInfo*>("System.Threading", "Thread", "m_CurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.CultureInfo m_CurrentCulture
void System::Threading::Thread::_set_m_CurrentCulture(System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_set_m_CurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "m_CurrentCulture", value));
}
// [ThreadStaticAttribute] Offset: 0xC9A750
// Autogenerated static field getter
// Get static field: static System.Globalization.CultureInfo m_CurrentUICulture
System::Globalization::CultureInfo* System::Threading::Thread::_get_m_CurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_get_m_CurrentUICulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CultureInfo*>("System.Threading", "Thread", "m_CurrentUICulture"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.CultureInfo m_CurrentUICulture
void System::Threading::Thread::_set_m_CurrentUICulture(System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_set_m_CurrentUICulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "m_CurrentUICulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AsyncLocal`1<System.Globalization.CultureInfo> s_asyncLocalCurrentCulture
System::Threading::AsyncLocal_1<System::Globalization::CultureInfo*>* System::Threading::Thread::_get_s_asyncLocalCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_get_s_asyncLocalCurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::AsyncLocal_1<System::Globalization::CultureInfo*>*>("System.Threading", "Thread", "s_asyncLocalCurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AsyncLocal`1<System.Globalization.CultureInfo> s_asyncLocalCurrentCulture
void System::Threading::Thread::_set_s_asyncLocalCurrentCulture(System::Threading::AsyncLocal_1<System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_set_s_asyncLocalCurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "s_asyncLocalCurrentCulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AsyncLocal`1<System.Globalization.CultureInfo> s_asyncLocalCurrentUICulture
System::Threading::AsyncLocal_1<System::Globalization::CultureInfo*>* System::Threading::Thread::_get_s_asyncLocalCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_get_s_asyncLocalCurrentUICulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::AsyncLocal_1<System::Globalization::CultureInfo*>*>("System.Threading", "Thread", "s_asyncLocalCurrentUICulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AsyncLocal`1<System.Globalization.CultureInfo> s_asyncLocalCurrentUICulture
void System::Threading::Thread::_set_s_asyncLocalCurrentUICulture(System::Threading::AsyncLocal_1<System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_set_s_asyncLocalCurrentUICulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "s_asyncLocalCurrentUICulture", value));
}
// [ThreadStaticAttribute] Offset: 0xC9A760
// Autogenerated static field getter
// Get static field: static private System.Threading.Thread current_thread
System::Threading::Thread* System::Threading::Thread::_get_current_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_get_current_thread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Thread*>("System.Threading", "Thread", "current_thread"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Thread current_thread
void System::Threading::Thread::_set_current_thread(System::Threading::Thread* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::_set_current_thread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Thread", "current_thread", value));
}
// Autogenerated method: System.Threading.Thread.Start
void System::Threading::Thread::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Start
void System::Threading::Thread::Start(::Il2CppObject* parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parameter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameter);
}
// Autogenerated method: System.Threading.Thread.Start
void System::Threading::Thread::Start(System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stackMark)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stackMark);
}
// Autogenerated method: System.Threading.Thread.GetExecutionContextReader
System::Threading::ExecutionContext::Reader System::Threading::Thread::GetExecutionContextReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetExecutionContextReader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetExecutionContextReader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext::Reader, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_ExecutionContextBelongsToCurrentScope
bool System::Threading::Thread::get_ExecutionContextBelongsToCurrentScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_ExecutionContextBelongsToCurrentScope");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExecutionContextBelongsToCurrentScope", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.set_ExecutionContextBelongsToCurrentScope
void System::Threading::Thread::set_ExecutionContextBelongsToCurrentScope(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::set_ExecutionContextBelongsToCurrentScope");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ExecutionContextBelongsToCurrentScope", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Thread.GetMutableExecutionContext
System::Threading::ExecutionContext* System::Threading::Thread::GetMutableExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetMutableExecutionContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMutableExecutionContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.SetExecutionContext
void System::Threading::Thread::SetExecutionContext(System::Threading::ExecutionContext* value, bool belongsToCurrentScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SetExecutionContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetExecutionContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, belongsToCurrentScope)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, belongsToCurrentScope);
}
// Autogenerated method: System.Threading.Thread.SetExecutionContext
void System::Threading::Thread::SetExecutionContext(System::Threading::ExecutionContext::Reader value, bool belongsToCurrentScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SetExecutionContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetExecutionContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, belongsToCurrentScope)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, belongsToCurrentScope);
}
// Autogenerated method: System.Threading.Thread.ResetAbort
void System::Threading::Thread::ResetAbort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::ResetAbort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "ResetAbort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.ResetAbortNative
void System::Threading::Thread::ResetAbortNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::ResetAbortNative");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetAbortNative", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.set_Priority
void System::Threading::Thread::set_Priority(System::Threading::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::set_Priority");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Priority", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Thread.SetPriorityNative
void System::Threading::Thread::SetPriorityNative(int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SetPriorityNative");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPriorityNative", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(priority)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, priority);
}
// Autogenerated method: System.Threading.Thread.JoinInternal
bool System::Threading::Thread::JoinInternal(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::JoinInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "JoinInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.Thread.Join
void System::Threading::Thread::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Join");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.SleepInternal
void System::Threading::Thread::SleepInternal(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SleepInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "SleepInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.Thread.Sleep
void System::Threading::Thread::Sleep(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Sleep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "Sleep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.Thread.YieldInternal
bool System::Threading::Thread::YieldInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::YieldInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "YieldInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Yield
bool System::Threading::Thread::Yield() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Yield");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "Yield", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.SetStartHelper
void System::Threading::Thread::SetStartHelper(System::Delegate* start, int maxStackSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SetStartHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetStartHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start, maxStackSize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, maxStackSize);
}
// Autogenerated method: System.Threading.Thread.get_CurrentUICulture
System::Globalization::CultureInfo* System::Threading::Thread::get_CurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_CurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrentUICulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetCurrentUICultureNoAppX
System::Globalization::CultureInfo* System::Threading::Thread::GetCurrentUICultureNoAppX() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetCurrentUICultureNoAppX");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCurrentUICultureNoAppX", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_CurrentCulture
System::Globalization::CultureInfo* System::Threading::Thread::get_CurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_CurrentCulture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrentCulture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetCurrentCultureNoAppX
System::Globalization::CultureInfo* System::Threading::Thread::GetCurrentCultureNoAppX() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetCurrentCultureNoAppX");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCurrentCultureNoAppX", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.MemoryBarrier
void System::Threading::Thread::MemoryBarrier() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::MemoryBarrier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "MemoryBarrier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.ConstructInternalThread
void System::Threading::Thread::ConstructInternalThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::ConstructInternalThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConstructInternalThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_Internal
System::Threading::InternalThread* System::Threading::Thread::get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_Internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::InternalThread*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_CurrentContext
System::Runtime::Remoting::Contexts::Context* System::Threading::Thread::get_CurrentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "get_CurrentContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.ByteArrayToCurrentDomain
::Array<uint8_t>* System::Threading::Thread::ByteArrayToCurrentDomain(::Array<uint8_t>* arr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::ByteArrayToCurrentDomain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "ByteArrayToCurrentDomain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(arr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arr);
}
// Autogenerated method: System.Threading.Thread.DeserializePrincipal
void System::Threading::Thread::DeserializePrincipal(System::Threading::Thread* th) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::DeserializePrincipal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "DeserializePrincipal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(th)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, th);
}
// Autogenerated method: System.Threading.Thread.get_CurrentPrincipal
System::Security::Principal::IPrincipal* System::Threading::Thread::get_CurrentPrincipal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_CurrentPrincipal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "get_CurrentPrincipal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Principal::IPrincipal*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetCurrentThread
System::Threading::Thread* System::Threading::Thread::GetCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetCurrentThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "GetCurrentThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Thread*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_CurrentThread
System::Threading::Thread* System::Threading::Thread::get_CurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_CurrentThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "get_CurrentThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Thread*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetDomain
System::AppDomain* System::Threading::Thread::GetDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetDomain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "GetDomain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::AppDomain*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetDomainID
int System::Threading::Thread::GetDomainID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetDomainID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "GetDomainID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Thread_internal
System::IntPtr System::Threading::Thread::Thread_internal(System::MulticastDelegate* start) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Thread_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Thread_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Threading.Thread.get_IsThreadPoolThread
bool System::Threading::Thread::get_IsThreadPoolThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_IsThreadPoolThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsThreadPoolThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.get_IsThreadPoolThreadInternal
bool System::Threading::Thread::get_IsThreadPoolThreadInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_IsThreadPoolThreadInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsThreadPoolThreadInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.set_IsBackground
void System::Threading::Thread::set_IsBackground(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::set_IsBackground");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsBackground", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Thread.SetName_internal
void System::Threading::Thread::SetName_internal(System::Threading::InternalThread* thread, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SetName_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "SetName_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thread, name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thread, name);
}
// Autogenerated method: System.Threading.Thread.set_Name
void System::Threading::Thread::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::set_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Thread.get_ThreadState
System::Threading::ThreadState System::Threading::Thread::get_ThreadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_ThreadState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ThreadState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ThreadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Abort_internal
void System::Threading::Thread::Abort_internal(System::Threading::InternalThread* thread, ::Il2CppObject* stateInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Abort_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "Abort_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thread, stateInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thread, stateInfo);
}
// Autogenerated method: System.Threading.Thread.Abort
void System::Threading::Thread::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Abort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.ClearAbortReason
void System::Threading::Thread::ClearAbortReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::ClearAbortReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearAbortReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.SpinWait_nop
void System::Threading::Thread::SpinWait_nop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SpinWait_nop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "SpinWait_nop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.SpinWait
void System::Threading::Thread::SpinWait(int iterations) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SpinWait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "SpinWait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(iterations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, iterations);
}
// Autogenerated method: System.Threading.Thread.StartInternal
void System::Threading::Thread::StartInternal(System::Security::Principal::IPrincipal* principal, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::StartInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(principal, stackMark)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, principal, stackMark);
}
// Autogenerated method: System.Threading.Thread.SetState
void System::Threading::Thread::SetState(System::Threading::InternalThread* thread, System::Threading::ThreadState set) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SetState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "SetState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thread, set)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thread, set);
}
// Autogenerated method: System.Threading.Thread.ClrState
void System::Threading::Thread::ClrState(System::Threading::InternalThread* thread, System::Threading::ThreadState clr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::ClrState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "ClrState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thread, clr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thread, clr);
}
// Autogenerated method: System.Threading.Thread.GetState
System::Threading::ThreadState System::Threading::Thread::GetState(System::Threading::InternalThread* thread) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "GetState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thread)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ThreadState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thread);
}
// Autogenerated method: System.Threading.Thread.SystemMaxStackStize
int System::Threading::Thread::SystemMaxStackStize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SystemMaxStackStize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "SystemMaxStackStize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetProcessDefaultStackSize
int System::Threading::Thread::GetProcessDefaultStackSize(int maxStackSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetProcessDefaultStackSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "GetProcessDefaultStackSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(maxStackSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, maxStackSize);
}
// Autogenerated method: System.Threading.Thread.SetStart
void System::Threading::Thread::SetStart(System::MulticastDelegate* start, int maxStackSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::SetStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start, maxStackSize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, maxStackSize);
}
// Autogenerated method: System.Threading.Thread.get_ManagedThreadId
int System::Threading::Thread::get_ManagedThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::get_ManagedThreadId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ManagedThreadId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.BeginCriticalRegion
void System::Threading::Thread::BeginCriticalRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::BeginCriticalRegion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "BeginCriticalRegion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.EndCriticalRegion
void System::Threading::Thread::EndCriticalRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::EndCriticalRegion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Thread", "EndCriticalRegion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Thread.ValidateThreadState
System::Threading::ThreadState System::Threading::Thread::ValidateThreadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::ValidateThreadState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateThreadState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ThreadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.Finalize
void System::Threading::Thread::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Thread.GetHashCode
int System::Threading::Thread::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Thread::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.StackCrawlMark LookForMe
System::Threading::StackCrawlMark System::Threading::StackCrawlMark::_get_LookForMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::StackCrawlMark::_get_LookForMe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::StackCrawlMark>("System.Threading", "StackCrawlMark", "LookForMe"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.StackCrawlMark LookForMe
void System::Threading::StackCrawlMark::_set_LookForMe(System::Threading::StackCrawlMark value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::StackCrawlMark::_set_LookForMe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "StackCrawlMark", "LookForMe", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.StackCrawlMark LookForMyCaller
System::Threading::StackCrawlMark System::Threading::StackCrawlMark::_get_LookForMyCaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::StackCrawlMark::_get_LookForMyCaller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::StackCrawlMark>("System.Threading", "StackCrawlMark", "LookForMyCaller"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.StackCrawlMark LookForMyCaller
void System::Threading::StackCrawlMark::_set_LookForMyCaller(System::Threading::StackCrawlMark value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::StackCrawlMark::_set_LookForMyCaller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "StackCrawlMark", "LookForMyCaller", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.StackCrawlMark LookForMyCallersCaller
System::Threading::StackCrawlMark System::Threading::StackCrawlMark::_get_LookForMyCallersCaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::StackCrawlMark::_get_LookForMyCallersCaller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::StackCrawlMark>("System.Threading", "StackCrawlMark", "LookForMyCallersCaller"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.StackCrawlMark LookForMyCallersCaller
void System::Threading::StackCrawlMark::_set_LookForMyCallersCaller(System::Threading::StackCrawlMark value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::StackCrawlMark::_set_LookForMyCallersCaller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "StackCrawlMark", "LookForMyCallersCaller", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.StackCrawlMark LookForThread
System::Threading::StackCrawlMark System::Threading::StackCrawlMark::_get_LookForThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::StackCrawlMark::_get_LookForThread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::StackCrawlMark>("System.Threading", "StackCrawlMark", "LookForThread"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.StackCrawlMark LookForThread
void System::Threading::StackCrawlMark::_set_LookForThread(System::Threading::StackCrawlMark value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::StackCrawlMark::_set_LookForThread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "StackCrawlMark", "LookForThread", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadInterruptedException
#include "System/Threading/ThreadInterruptedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::IThreadPoolWorkItem::ExecuteWorkItem_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::IThreadPoolWorkItem::ExecuteWorkItem_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::IThreadPoolWorkItem::MarkAborted_NEW(System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::IThreadPoolWorkItem::MarkAborted_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkAborted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tae)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.WaitCallback.Invoke
void System::Threading::WaitCallback::Invoke_NEW(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitCallback::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.WaitCallback.BeginInvoke
System::IAsyncResult* System::Threading::WaitCallback::BeginInvoke_NEW(::Il2CppObject* state, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitCallback::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: System.Threading.WaitCallback.EndInvoke
void System::Threading::WaitCallback::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitCallback::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.WaitOrTimerCallback
#include "System/Threading/WaitOrTimerCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.WaitOrTimerCallback.Invoke
void System::Threading::WaitOrTimerCallback::Invoke_NEW(::Il2CppObject* state, bool timedOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitOrTimerCallback::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, timedOut)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, timedOut);
}
// Autogenerated method: System.Threading.WaitOrTimerCallback.BeginInvoke
System::IAsyncResult* System::Threading::WaitOrTimerCallback::BeginInvoke_NEW(::Il2CppObject* state, bool timedOut, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitOrTimerCallback::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, timedOut, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, state, timedOut, callback, object);
}
// Autogenerated method: System.Threading.WaitOrTimerCallback.EndInvoke
void System::Threading::WaitOrTimerCallback::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitOrTimerCallback::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadPoolGlobals
#include "System/Threading/ThreadPoolGlobals.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue
#include "System/Threading/ThreadPoolWorkQueue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 tpQuantum
uint System::Threading::ThreadPoolGlobals::_get_tpQuantum() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_get_tpQuantum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ThreadPoolGlobals", "tpQuantum"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 tpQuantum
void System::Threading::ThreadPoolGlobals::_set_tpQuantum(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_set_tpQuantum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "tpQuantum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 processorCount
int System::Threading::ThreadPoolGlobals::_get_processorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_get_processorCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ThreadPoolGlobals", "processorCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 processorCount
void System::Threading::ThreadPoolGlobals::_set_processorCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_set_processorCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "processorCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean tpHosted
bool System::Threading::ThreadPoolGlobals::_get_tpHosted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_get_tpHosted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading", "ThreadPoolGlobals", "tpHosted"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean tpHosted
void System::Threading::ThreadPoolGlobals::_set_tpHosted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_set_tpHosted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "tpHosted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean vmTpInitialized
bool System::Threading::ThreadPoolGlobals::_get_vmTpInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_get_vmTpInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading", "ThreadPoolGlobals", "vmTpInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean vmTpInitialized
void System::Threading::ThreadPoolGlobals::_set_vmTpInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_set_vmTpInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "vmTpInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean enableWorkerTracking
bool System::Threading::ThreadPoolGlobals::_get_enableWorkerTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_get_enableWorkerTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading", "ThreadPoolGlobals", "enableWorkerTracking"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean enableWorkerTracking
void System::Threading::ThreadPoolGlobals::_set_enableWorkerTracking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_set_enableWorkerTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "enableWorkerTracking", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPoolWorkQueue workQueue
System::Threading::ThreadPoolWorkQueue* System::Threading::ThreadPoolGlobals::_get_workQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_get_workQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadPoolWorkQueue*>("System.Threading", "ThreadPoolGlobals", "workQueue"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPoolWorkQueue workQueue
void System::Threading::ThreadPoolGlobals::_set_workQueue(System::Threading::ThreadPoolWorkQueue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::_set_workQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "workQueue", value));
}
// Autogenerated method: System.Threading.ThreadPoolGlobals..cctor
void System::Threading::ThreadPoolGlobals::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolGlobals::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPoolGlobals", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadPoolWorkQueue
#include "System/Threading/ThreadPoolWorkQueue.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue/SparseArray`1
#include "System/Threading/ThreadPoolWorkQueue_SparseArray_1.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue
#include "System/Threading/ThreadPoolWorkQueue_WorkStealingQueue.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue/QueueSegment
#include "System/Threading/ThreadPoolWorkQueue_QueueSegment.hpp"
// Including type: System.Threading.ThreadPoolWorkQueueThreadLocals
#include "System/Threading/ThreadPoolWorkQueueThreadLocals.hpp"
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Threading.ThreadPoolWorkQueue/SparseArray`1<System.Threading.ThreadPoolWorkQueue/WorkStealingQueue> allThreadQueues
System::Threading::ThreadPoolWorkQueue::SparseArray_1<System::Threading::ThreadPoolWorkQueue::WorkStealingQueue*>* System::Threading::ThreadPoolWorkQueue::_get_allThreadQueues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::_get_allThreadQueues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadPoolWorkQueue::SparseArray_1<System::Threading::ThreadPoolWorkQueue::WorkStealingQueue*>*>("System.Threading", "ThreadPoolWorkQueue", "allThreadQueues"));
}
// Autogenerated static field setter
// Set static field: static System.Threading.ThreadPoolWorkQueue/SparseArray`1<System.Threading.ThreadPoolWorkQueue/WorkStealingQueue> allThreadQueues
void System::Threading::ThreadPoolWorkQueue::_set_allThreadQueues(System::Threading::ThreadPoolWorkQueue::SparseArray_1<System::Threading::ThreadPoolWorkQueue::WorkStealingQueue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::_set_allThreadQueues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolWorkQueue", "allThreadQueues", value));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.EnsureCurrentThreadHasQueue
System::Threading::ThreadPoolWorkQueueThreadLocals* System::Threading::ThreadPoolWorkQueue::EnsureCurrentThreadHasQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::EnsureCurrentThreadHasQueue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureCurrentThreadHasQueue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ThreadPoolWorkQueueThreadLocals*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.EnsureThreadRequested
void System::Threading::ThreadPoolWorkQueue::EnsureThreadRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::EnsureThreadRequested");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureThreadRequested", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.MarkThreadRequestSatisfied
void System::Threading::ThreadPoolWorkQueue::MarkThreadRequestSatisfied() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::MarkThreadRequestSatisfied");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkThreadRequestSatisfied", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.Enqueue
void System::Threading::ThreadPoolWorkQueue::Enqueue(System::Threading::IThreadPoolWorkItem* callback, bool forceGlobal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::Enqueue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, forceGlobal)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback, forceGlobal);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.LocalFindAndPop
bool System::Threading::ThreadPoolWorkQueue::LocalFindAndPop(System::Threading::IThreadPoolWorkItem* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::LocalFindAndPop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LocalFindAndPop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, callback);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.Dequeue
void System::Threading::ThreadPoolWorkQueue::Dequeue(System::Threading::ThreadPoolWorkQueueThreadLocals* tl, System::Threading::IThreadPoolWorkItem*& callback, bool& missedSteal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::Dequeue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dequeue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tl, callback, missedSteal)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tl, callback, missedSteal);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue.Dispatch
bool System::Threading::ThreadPoolWorkQueue::Dispatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::Dispatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPoolWorkQueue", "Dispatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue..cctor
void System::Threading::ThreadPoolWorkQueue::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPoolWorkQueue", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue
#include "System/Threading/ThreadPoolWorkQueue_WorkStealingQueue.hpp"
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue.LocalPush
void System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalPush(System::Threading::IThreadPoolWorkItem* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalPush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LocalPush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue.LocalFindAndPop
bool System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalFindAndPop(System::Threading::IThreadPoolWorkItem* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalFindAndPop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LocalFindAndPop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue.LocalPop
bool System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalPop(System::Threading::IThreadPoolWorkItem*& obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::LocalPop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LocalPop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue.TrySteal
bool System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::TrySteal(System::Threading::IThreadPoolWorkItem*& obj, bool& missedSteal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::TrySteal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrySteal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, missedSteal)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj, missedSteal);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue.TrySteal
bool System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::TrySteal(System::Threading::IThreadPoolWorkItem*& obj, bool& missedSteal, int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::WorkStealingQueue::TrySteal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrySteal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, missedSteal, millisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj, missedSteal, millisecondsTimeout);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadPoolWorkQueue/QueueSegment
#include "System/Threading/ThreadPoolWorkQueue_QueueSegment.hpp"
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.GetIndexes
void System::Threading::ThreadPoolWorkQueue::QueueSegment::GetIndexes(int& upper, int& lower) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::QueueSegment::GetIndexes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIndexes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(upper, lower)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, upper, lower);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.CompareExchangeIndexes
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::CompareExchangeIndexes(int& prevUpper, int newUpper, int& prevLower, int newLower) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::QueueSegment::CompareExchangeIndexes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareExchangeIndexes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prevUpper, newUpper, prevLower, newLower)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, prevUpper, newUpper, prevLower, newLower);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.IsUsedUp
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::IsUsedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::QueueSegment::IsUsedUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsUsedUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.TryEnqueue
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::TryEnqueue(System::Threading::IThreadPoolWorkItem* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::QueueSegment::TryEnqueue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnqueue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.TryDequeue
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::TryDequeue(System::Threading::IThreadPoolWorkItem*& node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueue::QueueSegment::TryDequeue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryDequeue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadPoolWorkQueueThreadLocals
#include "System/Threading/ThreadPoolWorkQueueThreadLocals.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue
#include "System/Threading/ThreadPoolWorkQueue_WorkStealingQueue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ThreadStaticAttribute] Offset: 0xC9A770
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPoolWorkQueueThreadLocals threadLocals
System::Threading::ThreadPoolWorkQueueThreadLocals* System::Threading::ThreadPoolWorkQueueThreadLocals::_get_threadLocals() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueueThreadLocals::_get_threadLocals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadPoolWorkQueueThreadLocals*>("System.Threading", "ThreadPoolWorkQueueThreadLocals", "threadLocals"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPoolWorkQueueThreadLocals threadLocals
void System::Threading::ThreadPoolWorkQueueThreadLocals::_set_threadLocals(System::Threading::ThreadPoolWorkQueueThreadLocals* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueueThreadLocals::_set_threadLocals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolWorkQueueThreadLocals", "threadLocals", value));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueueThreadLocals.CleanUp
void System::Threading::ThreadPoolWorkQueueThreadLocals::CleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueueThreadLocals::CleanUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueueThreadLocals.Finalize
void System::Threading::ThreadPoolWorkQueueThreadLocals::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPoolWorkQueueThreadLocals::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading._ThreadPoolWaitCallback
#include "System/Threading/_ThreadPoolWaitCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading._ThreadPoolWaitCallback.PerformWaitCallback
bool System::Threading::_ThreadPoolWaitCallback::PerformWaitCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::_ThreadPoolWaitCallback::PerformWaitCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "_ThreadPoolWaitCallback", "PerformWaitCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.QueueUserWorkItemCallback
#include "System/Threading/QueueUserWorkItemCallback.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Threading.ContextCallback ccb
System::Threading::ContextCallback* System::Threading::QueueUserWorkItemCallback::_get_ccb() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::QueueUserWorkItemCallback::_get_ccb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ContextCallback*>("System.Threading", "QueueUserWorkItemCallback", "ccb"));
}
// Autogenerated static field setter
// Set static field: static System.Threading.ContextCallback ccb
void System::Threading::QueueUserWorkItemCallback::_set_ccb(System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::QueueUserWorkItemCallback::_set_ccb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "QueueUserWorkItemCallback", "ccb", value));
}
// Autogenerated method: System.Threading.QueueUserWorkItemCallback..cctor
void System::Threading::QueueUserWorkItemCallback::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::QueueUserWorkItemCallback::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "QueueUserWorkItemCallback", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::QueueUserWorkItemCallback::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::QueueUserWorkItemCallback::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::QueueUserWorkItemCallback::System_Threading_IThreadPoolWorkItem_MarkAborted_NEW(System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::QueueUserWorkItemCallback::System.Threading.IThreadPoolWorkItem.MarkAborted_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tae)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated method: System.Threading.QueueUserWorkItemCallback.WaitCallback_Context
void System::Threading::QueueUserWorkItemCallback::WaitCallback_Context(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::QueueUserWorkItemCallback::WaitCallback_Context");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "QueueUserWorkItemCallback", "WaitCallback_Context", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadPool
#include "System/Threading/ThreadPool.hpp"
// Including type: System.Threading.RegisteredWaitHandle
#include "System/Threading/RegisteredWaitHandle.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.WaitOrTimerCallback
#include "System/Threading/WaitOrTimerCallback.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ThreadPool.RegisterWaitForSingleObject
System::Threading::RegisteredWaitHandle* System::Threading::ThreadPool::RegisterWaitForSingleObject(System::Threading::WaitHandle* waitObject, System::Threading::WaitOrTimerCallback* callBack, ::Il2CppObject* state, uint millisecondsTimeOutInterval, bool executeOnlyOnce, System::Threading::StackCrawlMark& stackMark, bool compressStack) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::RegisterWaitForSingleObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "RegisterWaitForSingleObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitObject, callBack, state, millisecondsTimeOutInterval, executeOnlyOnce, stackMark, compressStack)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::RegisteredWaitHandle*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitObject, callBack, state, millisecondsTimeOutInterval, executeOnlyOnce, stackMark, compressStack);
}
// Autogenerated method: System.Threading.ThreadPool.RegisterWaitForSingleObject
System::Threading::RegisteredWaitHandle* System::Threading::ThreadPool::RegisterWaitForSingleObject(System::Threading::WaitHandle* waitObject, System::Threading::WaitOrTimerCallback* callBack, ::Il2CppObject* state, System::TimeSpan timeout, bool executeOnlyOnce) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::RegisterWaitForSingleObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "RegisterWaitForSingleObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitObject, callBack, state, timeout, executeOnlyOnce)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::RegisteredWaitHandle*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitObject, callBack, state, timeout, executeOnlyOnce);
}
// Autogenerated method: System.Threading.ThreadPool.QueueUserWorkItem
bool System::Threading::ThreadPool::QueueUserWorkItem(System::Threading::WaitCallback* callBack, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::QueueUserWorkItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "QueueUserWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callBack, state)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callBack, state);
}
// Autogenerated method: System.Threading.ThreadPool.QueueUserWorkItem
bool System::Threading::ThreadPool::QueueUserWorkItem(System::Threading::WaitCallback* callBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::QueueUserWorkItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "QueueUserWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callBack)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callBack);
}
// Autogenerated method: System.Threading.ThreadPool.UnsafeQueueUserWorkItem
bool System::Threading::ThreadPool::UnsafeQueueUserWorkItem(System::Threading::WaitCallback* callBack, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::UnsafeQueueUserWorkItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "UnsafeQueueUserWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callBack, state)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callBack, state);
}
// Autogenerated method: System.Threading.ThreadPool.QueueUserWorkItemHelper
bool System::Threading::ThreadPool::QueueUserWorkItemHelper(System::Threading::WaitCallback* callBack, ::Il2CppObject* state, System::Threading::StackCrawlMark& stackMark, bool compressStack) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::QueueUserWorkItemHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "QueueUserWorkItemHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callBack, state, stackMark, compressStack)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callBack, state, stackMark, compressStack);
}
// Autogenerated method: System.Threading.ThreadPool.UnsafeQueueCustomWorkItem
void System::Threading::ThreadPool::UnsafeQueueCustomWorkItem(System::Threading::IThreadPoolWorkItem* workItem, bool forceGlobal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::UnsafeQueueCustomWorkItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "UnsafeQueueCustomWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(workItem, forceGlobal)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, workItem, forceGlobal);
}
// Autogenerated method: System.Threading.ThreadPool.TryPopCustomWorkItem
bool System::Threading::ThreadPool::TryPopCustomWorkItem(System::Threading::IThreadPoolWorkItem* workItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::TryPopCustomWorkItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "TryPopCustomWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(workItem)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, workItem);
}
// Autogenerated method: System.Threading.ThreadPool.RequestWorkerThread
bool System::Threading::ThreadPool::RequestWorkerThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::RequestWorkerThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "RequestWorkerThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.EnsureVMInitialized
void System::Threading::ThreadPool::EnsureVMInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::EnsureVMInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "EnsureVMInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.NotifyWorkItemComplete
bool System::Threading::ThreadPool::NotifyWorkItemComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::NotifyWorkItemComplete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "NotifyWorkItemComplete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.ReportThreadStatus
void System::Threading::ThreadPool::ReportThreadStatus(bool isWorking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::ReportThreadStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "ReportThreadStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isWorking)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isWorking);
}
// Autogenerated method: System.Threading.ThreadPool.NotifyWorkItemProgress
void System::Threading::ThreadPool::NotifyWorkItemProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::NotifyWorkItemProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "NotifyWorkItemProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.NotifyWorkItemProgressNative
void System::Threading::ThreadPool::NotifyWorkItemProgressNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::NotifyWorkItemProgressNative");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "NotifyWorkItemProgressNative", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.IsThreadPoolHosted
bool System::Threading::ThreadPool::IsThreadPoolHosted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::IsThreadPoolHosted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "IsThreadPoolHosted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ThreadPool.InitializeVMTp
void System::Threading::ThreadPool::InitializeVMTp(bool& enableWorkerTracking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPool::InitializeVMTp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ThreadPool", "InitializeVMTp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(enableWorkerTracking)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enableWorkerTracking);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadPriority
#include "System/Threading/ThreadPriority.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPriority Lowest
System::Threading::ThreadPriority System::Threading::ThreadPriority::_get_Lowest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_get_Lowest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadPriority>("System.Threading", "ThreadPriority", "Lowest"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPriority Lowest
void System::Threading::ThreadPriority::_set_Lowest(System::Threading::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_set_Lowest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPriority", "Lowest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPriority BelowNormal
System::Threading::ThreadPriority System::Threading::ThreadPriority::_get_BelowNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_get_BelowNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadPriority>("System.Threading", "ThreadPriority", "BelowNormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPriority BelowNormal
void System::Threading::ThreadPriority::_set_BelowNormal(System::Threading::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_set_BelowNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPriority", "BelowNormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPriority Normal
System::Threading::ThreadPriority System::Threading::ThreadPriority::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadPriority>("System.Threading", "ThreadPriority", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPriority Normal
void System::Threading::ThreadPriority::_set_Normal(System::Threading::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPriority", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPriority AboveNormal
System::Threading::ThreadPriority System::Threading::ThreadPriority::_get_AboveNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_get_AboveNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadPriority>("System.Threading", "ThreadPriority", "AboveNormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPriority AboveNormal
void System::Threading::ThreadPriority::_set_AboveNormal(System::Threading::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_set_AboveNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPriority", "AboveNormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPriority Highest
System::Threading::ThreadPriority System::Threading::ThreadPriority::_get_Highest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_get_Highest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadPriority>("System.Threading", "ThreadPriority", "Highest"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPriority Highest
void System::Threading::ThreadPriority::_set_Highest(System::Threading::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadPriority::_set_Highest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPriority", "Highest", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadStart
#include "System/Threading/ThreadStart.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ThreadStart.Invoke
void System::Threading::ThreadStart::Invoke_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadStart::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ThreadStart.BeginInvoke
System::IAsyncResult* System::Threading::ThreadStart::BeginInvoke_NEW(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadStart::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: System.Threading.ThreadStart.EndInvoke
void System::Threading::ThreadStart::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadStart::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadState
#include "System/Threading/ThreadState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Running
System::Threading::ThreadState System::Threading::ThreadState::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "Running"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Running
void System::Threading::ThreadState::_set_Running(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState StopRequested
System::Threading::ThreadState System::Threading::ThreadState::_get_StopRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_StopRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "StopRequested"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState StopRequested
void System::Threading::ThreadState::_set_StopRequested(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_StopRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "StopRequested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState SuspendRequested
System::Threading::ThreadState System::Threading::ThreadState::_get_SuspendRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_SuspendRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "SuspendRequested"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState SuspendRequested
void System::Threading::ThreadState::_set_SuspendRequested(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_SuspendRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "SuspendRequested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Background
System::Threading::ThreadState System::Threading::ThreadState::_get_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "Background"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Background
void System::Threading::ThreadState::_set_Background(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Background", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Unstarted
System::Threading::ThreadState System::Threading::ThreadState::_get_Unstarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_Unstarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "Unstarted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Unstarted
void System::Threading::ThreadState::_set_Unstarted(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_Unstarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Unstarted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Stopped
System::Threading::ThreadState System::Threading::ThreadState::_get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_Stopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "Stopped"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Stopped
void System::Threading::ThreadState::_set_Stopped(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_Stopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Stopped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState WaitSleepJoin
System::Threading::ThreadState System::Threading::ThreadState::_get_WaitSleepJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_WaitSleepJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "WaitSleepJoin"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState WaitSleepJoin
void System::Threading::ThreadState::_set_WaitSleepJoin(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_WaitSleepJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "WaitSleepJoin", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Suspended
System::Threading::ThreadState System::Threading::ThreadState::_get_Suspended() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_Suspended");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "Suspended"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Suspended
void System::Threading::ThreadState::_set_Suspended(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_Suspended");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Suspended", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState AbortRequested
System::Threading::ThreadState System::Threading::ThreadState::_get_AbortRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_AbortRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "AbortRequested"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState AbortRequested
void System::Threading::ThreadState::_set_AbortRequested(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_AbortRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "AbortRequested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadState Aborted
System::Threading::ThreadState System::Threading::ThreadState::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadState>("System.Threading", "ThreadState", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadState Aborted
void System::Threading::ThreadState::_set_Aborted(System::Threading::ThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ThreadState::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadState", "Aborted", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadStateException
#include "System/Threading/ThreadStateException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Timeout
#include "System/Threading/Timeout.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ComVisibleAttribute] Offset: 0xC9A780
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan InfiniteTimeSpan
System::TimeSpan System::Threading::Timeout::_get_InfiniteTimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timeout::_get_InfiniteTimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Threading", "Timeout", "InfiniteTimeSpan"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan InfiniteTimeSpan
void System::Threading::Timeout::_set_InfiniteTimeSpan(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timeout::_set_InfiniteTimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timeout", "InfiniteTimeSpan", value));
}
// Autogenerated method: System.Threading.Timeout..cctor
void System::Threading::Timeout::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timeout::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timeout", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 WaitTimeout
int System::Threading::WaitHandle::_get_WaitTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_get_WaitTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WaitTimeout"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WaitTimeout
void System::Threading::WaitHandle::_set_WaitTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_set_WaitTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WaitTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_WAITHANDLES
int System::Threading::WaitHandle::_get_MAX_WAITHANDLES() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_get_MAX_WAITHANDLES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "MAX_WAITHANDLES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_WAITHANDLES
void System::Threading::WaitHandle::_set_MAX_WAITHANDLES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_set_MAX_WAITHANDLES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "MAX_WAITHANDLES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WAIT_OBJECT_0
int System::Threading::WaitHandle::_get_WAIT_OBJECT_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_get_WAIT_OBJECT_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WAIT_OBJECT_0"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WAIT_OBJECT_0
void System::Threading::WaitHandle::_set_WAIT_OBJECT_0(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_set_WAIT_OBJECT_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WAIT_OBJECT_0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WAIT_ABANDONED
int System::Threading::WaitHandle::_get_WAIT_ABANDONED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_get_WAIT_ABANDONED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WAIT_ABANDONED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WAIT_ABANDONED
void System::Threading::WaitHandle::_set_WAIT_ABANDONED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_set_WAIT_ABANDONED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WAIT_ABANDONED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WAIT_FAILED
int System::Threading::WaitHandle::_get_WAIT_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_get_WAIT_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WAIT_FAILED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WAIT_FAILED
void System::Threading::WaitHandle::_set_WAIT_FAILED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_set_WAIT_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WAIT_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ERROR_TOO_MANY_POSTS
int System::Threading::WaitHandle::_get_ERROR_TOO_MANY_POSTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_get_ERROR_TOO_MANY_POSTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "ERROR_TOO_MANY_POSTS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ERROR_TOO_MANY_POSTS
void System::Threading::WaitHandle::_set_ERROR_TOO_MANY_POSTS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_set_ERROR_TOO_MANY_POSTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "ERROR_TOO_MANY_POSTS", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.IntPtr InvalidHandle
System::IntPtr System::Threading::WaitHandle::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("System.Threading", "WaitHandle", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.IntPtr InvalidHandle
void System::Threading::WaitHandle::_set_InvalidHandle(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MaxWaitHandles
int System::Threading::WaitHandle::_get_MaxWaitHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_get_MaxWaitHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "MaxWaitHandles"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MaxWaitHandles
void System::Threading::WaitHandle::_set_MaxWaitHandles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::_set_MaxWaitHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "MaxWaitHandles", value));
}
// Autogenerated method: System.Threading.WaitHandle.Init
void System::Threading::WaitHandle::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.set_Handle
void System::Threading::WaitHandle::set_Handle_NEW(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::set_Handle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Handle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.WaitHandle.get_SafeWaitHandle
Microsoft::Win32::SafeHandles::SafeWaitHandle* System::Threading::WaitHandle::get_SafeWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::get_SafeWaitHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SafeWaitHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeWaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.set_SafeWaitHandle
void System::Threading::WaitHandle::set_SafeWaitHandle(Microsoft::Win32::SafeHandles::SafeWaitHandle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::set_SafeWaitHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SafeWaitHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.WaitHandle.SetHandleInternal
void System::Threading::WaitHandle::SetHandleInternal(Microsoft::Win32::SafeHandles::SafeWaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::SetHandleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetHandleInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne_NEW(int millisecondsTimeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitOne_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne_NEW(System::TimeSpan timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitOne_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitOne_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne_NEW(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitOne_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne_NEW(System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitOne_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(int64_t timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.InternalWaitOne
bool System::Threading::WaitHandle::InternalWaitOne(System::Runtime::InteropServices::SafeHandle* waitableSafeHandle, int64_t millisecondsTimeout, bool hasThreadAffinity, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::InternalWaitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "InternalWaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitAny
int System::Threading::WaitHandle::WaitAny(::Array<System::Threading::WaitHandle*>* waitHandles, int millisecondsTimeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitHandles, millisecondsTimeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitHandles, millisecondsTimeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitAny
int System::Threading::WaitHandle::WaitAny(::Array<System::Threading::WaitHandle*>* waitHandles, System::TimeSpan timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitHandles, timeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitHandles, timeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.ThrowAbandonedMutexException
void System::Threading::WaitHandle::ThrowAbandonedMutexException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::ThrowAbandonedMutexException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "ThrowAbandonedMutexException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.ThrowAbandonedMutexException
void System::Threading::WaitHandle::ThrowAbandonedMutexException(int location, System::Threading::WaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::ThrowAbandonedMutexException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "ThrowAbandonedMutexException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location, handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location, handle);
}
// Autogenerated method: System.Threading.WaitHandle.Close
void System::Threading::WaitHandle::Close_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::Close_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.Dispose
void System::Threading::WaitHandle::Dispose_NEW(bool explicitDisposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(explicitDisposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, explicitDisposing);
}
// Autogenerated method: System.Threading.WaitHandle.Dispose
void System::Threading::WaitHandle::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.WaitMultiple
int System::Threading::WaitHandle::WaitMultiple(::Array<System::Threading::WaitHandle*>* waitHandles, int millisecondsTimeout, bool exitContext, bool WaitAll) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitMultiple");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitMultiple", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitHandles, millisecondsTimeout, exitContext, WaitAll)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitHandles, millisecondsTimeout, exitContext, WaitAll);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOneNative
int System::Threading::WaitHandle::WaitOneNative(System::Runtime::InteropServices::SafeHandle* waitableSafeHandle, uint millisecondsTimeout, bool hasThreadAffinity, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::WaitOneNative");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitOneNative", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.Wait_internal
int System::Threading::WaitHandle::Wait_internal(System::IntPtr* handles, int numHandles, bool waitAll, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::Wait_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "Wait_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handles, numHandles, waitAll, ms)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handles, numHandles, waitAll, ms);
}
// Autogenerated method: System.Threading.WaitHandle..cctor
void System::Threading::WaitHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::WaitHandle::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.WaitHandleCannotBeOpenedException
#include "System/Threading/WaitHandleCannotBeOpenedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Interlocked
#include "System/Threading/Interlocked.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Interlocked.CompareExchange
int System::Threading::Interlocked::CompareExchange(int& location1, int value, int comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
int System::Threading::Interlocked::CompareExchange(int& location1, int value, int comparand, bool& succeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value, comparand, succeeded)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand, succeeded);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
::Il2CppObject* System::Threading::Interlocked::CompareExchange(::Il2CppObject*& location1, ::Il2CppObject* value, ::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
float System::Threading::Interlocked::CompareExchange(float& location1, float value, float comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.Decrement
int System::Threading::Interlocked::Decrement(int& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Decrement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Decrement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Interlocked.Increment
int System::Threading::Interlocked::Increment(int& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Increment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Increment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Interlocked.Increment
int64_t System::Threading::Interlocked::Increment(int64_t& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Increment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Increment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
int System::Threading::Interlocked::Exchange(int& location1, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
::Il2CppObject* System::Threading::Interlocked::Exchange(::Il2CppObject*& location1, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
float System::Threading::Interlocked::Exchange(float& location1, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
int64_t System::Threading::Interlocked::CompareExchange(int64_t& location1, int64_t value, int64_t comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
System::IntPtr System::Threading::Interlocked::CompareExchange(System::IntPtr& location1, System::IntPtr value, System::IntPtr comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
double System::Threading::Interlocked::CompareExchange(double& location1, double value, double comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "CompareExchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
int64_t System::Threading::Interlocked::Exchange(int64_t& location1, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
System::IntPtr System::Threading::Interlocked::Exchange(System::IntPtr& location1, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
double System::Threading::Interlocked::Exchange(double& location1, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Exchange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Read
int64_t System::Threading::Interlocked::Read(int64_t& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Interlocked.Add
int System::Threading::Interlocked::Add(int& location1, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Add
int64_t System::Threading::Interlocked::Add(int64_t& location1, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Interlocked::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.NativeEventCalls
#include "System/Threading/NativeEventCalls.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.NativeEventCalls.CreateEvent_internal
System::IntPtr System::Threading::NativeEventCalls::CreateEvent_internal(bool manual, bool initial, ::Il2CppString* name, int& errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::NativeEventCalls::CreateEvent_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "CreateEvent_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(manual, initial, name, errorCode)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, manual, initial, name, errorCode);
}
// Autogenerated method: System.Threading.NativeEventCalls.SetEvent
bool System::Threading::NativeEventCalls::SetEvent(Microsoft::Win32::SafeHandles::SafeWaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::NativeEventCalls::SetEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "SetEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Threading.NativeEventCalls.SetEvent_internal
bool System::Threading::NativeEventCalls::SetEvent_internal(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::NativeEventCalls::SetEvent_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "SetEvent_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Threading.NativeEventCalls.ResetEvent
bool System::Threading::NativeEventCalls::ResetEvent(Microsoft::Win32::SafeHandles::SafeWaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::NativeEventCalls::ResetEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "ResetEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Threading.NativeEventCalls.ResetEvent_internal
bool System::Threading::NativeEventCalls::ResetEvent_internal(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::NativeEventCalls::ResetEvent_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "ResetEvent_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Threading.NativeEventCalls.CloseEvent_internal
void System::Threading::NativeEventCalls::CloseEvent_internal(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::NativeEventCalls::CloseEvent_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "NativeEventCalls", "CloseEvent_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.RegisteredWaitHandle
#include "System/Threading/RegisteredWaitHandle.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.WaitOrTimerCallback
#include "System/Threading/WaitOrTimerCallback.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.RegisteredWaitHandle.Wait
void System::Threading::RegisteredWaitHandle::Wait(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::RegisteredWaitHandle::Wait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.RegisteredWaitHandle.DoCallBack
void System::Threading::RegisteredWaitHandle::DoCallBack(::Il2CppObject* timedOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::RegisteredWaitHandle::DoCallBack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoCallBack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timedOut)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timedOut);
}
// Autogenerated method: System.Threading.RegisteredWaitHandle.Unregister
bool System::Threading::RegisteredWaitHandle::Unregister(System::Threading::WaitHandle* waitObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::RegisteredWaitHandle::Unregister");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Unregister", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitObject)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, waitObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.InternalThread
#include "System/Threading/InternalThread.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.InternalThread.Thread_free_internal
void System::Threading::InternalThread::Thread_free_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::InternalThread::Thread_free_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Thread_free_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.InternalThread.Finalize
void System::Threading::InternalThread::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::InternalThread::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Threading.Timer/TimerComparer
#include "System/Threading/Timer_TimerComparer.hpp"
// Including type: System.Threading.Timer/Scheduler
#include "System/Threading/Timer_Scheduler.hpp"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Timer/Scheduler scheduler
System::Threading::Timer::Scheduler* System::Threading::Timer::_get_scheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::_get_scheduler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Timer::Scheduler*>("System.Threading", "Timer", "scheduler"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Timer/Scheduler scheduler
void System::Threading::Timer::_set_scheduler(System::Threading::Timer::Scheduler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::_set_scheduler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timer", "scheduler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 MaxValue
int64_t System::Threading::Timer::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Threading", "Timer", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 MaxValue
void System::Threading::Timer::_set_MaxValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timer", "MaxValue", value));
}
// Autogenerated method: System.Threading.Timer.Init
void System::Threading::Timer::Init(System::Threading::TimerCallback* callback, ::Il2CppObject* state, int64_t dueTime, int64_t period) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, state, dueTime, period)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback, state, dueTime, period);
}
// Autogenerated method: System.Threading.Timer.Change
bool System::Threading::Timer::Change(int dueTime, int period) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Change");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Change", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dueTime, period)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dueTime, period);
}
// Autogenerated method: System.Threading.Timer.Change
bool System::Threading::Timer::Change(System::TimeSpan dueTime, System::TimeSpan period) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Change");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Change", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dueTime, period)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dueTime, period);
}
// Autogenerated method: System.Threading.Timer.Dispose
void System::Threading::Timer::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Timer.Change
bool System::Threading::Timer::Change(int64_t dueTime, int64_t period, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Change");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Change", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dueTime, period, first)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dueTime, period, first);
}
// Autogenerated method: System.Threading.Timer.KeepRootedWhileScheduled
void System::Threading::Timer::KeepRootedWhileScheduled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::KeepRootedWhileScheduled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "KeepRootedWhileScheduled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Timer.GetTimeMonotonic
int64_t System::Threading::Timer::GetTimeMonotonic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::GetTimeMonotonic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer", "GetTimeMonotonic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Timer..cctor
void System::Threading::Timer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Timer/TimerComparer
#include "System/Threading/Timer_TimerComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Timer/TimerComparer.Compare
int System::Threading::Timer::TimerComparer::Compare_NEW(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::TimerComparer::Compare_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Timer/Scheduler
#include "System/Threading/Timer_Scheduler.hpp"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.Timer/Scheduler instance
System::Threading::Timer::Scheduler* System::Threading::Timer::Scheduler::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Timer::Scheduler*>("System.Threading", "Timer/Scheduler", "instance"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Timer/Scheduler instance
void System::Threading::Timer::Scheduler::_set_instance(System::Threading::Timer::Scheduler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timer/Scheduler", "instance", value));
}
// Autogenerated method: System.Threading.Timer/Scheduler..cctor
void System::Threading::Timer::Scheduler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer/Scheduler", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Timer/Scheduler.get_Instance
System::Threading::Timer::Scheduler* System::Threading::Timer::Scheduler::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::get_Instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer/Scheduler", "get_Instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Timer::Scheduler*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Timer/Scheduler.Remove
void System::Threading::Timer::Scheduler::Remove(System::Threading::Timer* timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timer);
}
// Autogenerated method: System.Threading.Timer/Scheduler.Change
void System::Threading::Timer::Scheduler::Change(System::Threading::Timer* timer, int64_t new_next_run) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::Change");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Change", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timer, new_next_run)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timer, new_next_run);
}
// Autogenerated method: System.Threading.Timer/Scheduler.FindByDueTime
int System::Threading::Timer::Scheduler::FindByDueTime(int64_t nr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::FindByDueTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindByDueTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nr)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, nr);
}
// Autogenerated method: System.Threading.Timer/Scheduler.Add
void System::Threading::Timer::Scheduler::Add(System::Threading::Timer* timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timer);
}
// Autogenerated method: System.Threading.Timer/Scheduler.InternalRemove
int System::Threading::Timer::Scheduler::InternalRemove(System::Threading::Timer* timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::InternalRemove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRemove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, timer);
}
// Autogenerated method: System.Threading.Timer/Scheduler.TimerCB
void System::Threading::Timer::Scheduler::TimerCB(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::TimerCB");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer/Scheduler", "TimerCB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, o);
}
// Autogenerated method: System.Threading.Timer/Scheduler.SchedulerThread
void System::Threading::Timer::Scheduler::SchedulerThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::SchedulerThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SchedulerThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Timer/Scheduler.ShrinkIfNeeded
void System::Threading::Timer::Scheduler::ShrinkIfNeeded(System::Collections::Generic::List_1<System::Threading::Timer*>* list, int initial) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Timer::Scheduler::ShrinkIfNeeded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShrinkIfNeeded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, initial)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, list, initial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.TimerCallback.Invoke
void System::Threading::TimerCallback::Invoke_NEW(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::TimerCallback::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.TimerCallback.BeginInvoke
System::IAsyncResult* System::Threading::TimerCallback::BeginInvoke_NEW(::Il2CppObject* state, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::TimerCallback::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: System.Threading.TimerCallback.EndInvoke
void System::Threading::TimerCallback::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::TimerCallback::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Volatile
#include "System/Threading/Volatile.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Volatile.Read
bool System::Threading::Volatile::Read(bool& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Volatile::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Volatile", "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Volatile.Read
int System::Threading::Volatile::Read(int& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Volatile::Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Volatile", "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Volatile.Write
void System::Threading::Volatile::Write(bool& location, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Volatile::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Volatile", "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location, value);
}
// Autogenerated method: System.Threading.Volatile.Write
void System::Threading::Volatile::Write(int& location, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Volatile::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Volatile", "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.CausalityTraceLevel
#include "System/Threading/Tasks/CausalityTraceLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityTraceLevel Required
System::Threading::Tasks::CausalityTraceLevel System::Threading::Tasks::CausalityTraceLevel::_get_Required() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityTraceLevel::_get_Required");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityTraceLevel>("System.Threading.Tasks", "CausalityTraceLevel", "Required"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityTraceLevel Required
void System::Threading::Tasks::CausalityTraceLevel::_set_Required(System::Threading::Tasks::CausalityTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityTraceLevel::_set_Required");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityTraceLevel", "Required", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityTraceLevel Important
System::Threading::Tasks::CausalityTraceLevel System::Threading::Tasks::CausalityTraceLevel::_get_Important() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityTraceLevel::_get_Important");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityTraceLevel>("System.Threading.Tasks", "CausalityTraceLevel", "Important"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityTraceLevel Important
void System::Threading::Tasks::CausalityTraceLevel::_set_Important(System::Threading::Tasks::CausalityTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityTraceLevel::_set_Important");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityTraceLevel", "Important", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityTraceLevel Verbose
System::Threading::Tasks::CausalityTraceLevel System::Threading::Tasks::CausalityTraceLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityTraceLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityTraceLevel>("System.Threading.Tasks", "CausalityTraceLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityTraceLevel Verbose
void System::Threading::Tasks::CausalityTraceLevel::_set_Verbose(System::Threading::Tasks::CausalityTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityTraceLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityTraceLevel", "Verbose", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.AsyncCausalityStatus
#include "System/Threading/Tasks/AsyncCausalityStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.AsyncCausalityStatus Started
System::Threading::Tasks::AsyncCausalityStatus System::Threading::Tasks::AsyncCausalityStatus::_get_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityStatus::_get_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::AsyncCausalityStatus>("System.Threading.Tasks", "AsyncCausalityStatus", "Started"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.AsyncCausalityStatus Started
void System::Threading::Tasks::AsyncCausalityStatus::_set_Started(System::Threading::Tasks::AsyncCausalityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityStatus::_set_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AsyncCausalityStatus", "Started", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.AsyncCausalityStatus Completed
System::Threading::Tasks::AsyncCausalityStatus System::Threading::Tasks::AsyncCausalityStatus::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityStatus::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::AsyncCausalityStatus>("System.Threading.Tasks", "AsyncCausalityStatus", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.AsyncCausalityStatus Completed
void System::Threading::Tasks::AsyncCausalityStatus::_set_Completed(System::Threading::Tasks::AsyncCausalityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityStatus::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AsyncCausalityStatus", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.AsyncCausalityStatus Canceled
System::Threading::Tasks::AsyncCausalityStatus System::Threading::Tasks::AsyncCausalityStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::AsyncCausalityStatus>("System.Threading.Tasks", "AsyncCausalityStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.AsyncCausalityStatus Canceled
void System::Threading::Tasks::AsyncCausalityStatus::_set_Canceled(System::Threading::Tasks::AsyncCausalityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AsyncCausalityStatus", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.AsyncCausalityStatus Error
System::Threading::Tasks::AsyncCausalityStatus System::Threading::Tasks::AsyncCausalityStatus::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityStatus::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::AsyncCausalityStatus>("System.Threading.Tasks", "AsyncCausalityStatus", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.AsyncCausalityStatus Error
void System::Threading::Tasks::AsyncCausalityStatus::_set_Error(System::Threading::Tasks::AsyncCausalityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityStatus::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AsyncCausalityStatus", "Error", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.CausalityRelation
#include "System/Threading/Tasks/CausalityRelation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation AssignDelegate
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_AssignDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_get_AssignDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "AssignDelegate"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation AssignDelegate
void System::Threading::Tasks::CausalityRelation::_set_AssignDelegate(System::Threading::Tasks::CausalityRelation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_set_AssignDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "AssignDelegate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation Join
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_get_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "Join"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation Join
void System::Threading::Tasks::CausalityRelation::_set_Join(System::Threading::Tasks::CausalityRelation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_set_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "Join", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation Choice
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_Choice() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_get_Choice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "Choice"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation Choice
void System::Threading::Tasks::CausalityRelation::_set_Choice(System::Threading::Tasks::CausalityRelation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_set_Choice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "Choice", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation Cancel
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation Cancel
void System::Threading::Tasks::CausalityRelation::_set_Cancel(System::Threading::Tasks::CausalityRelation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation Error
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation Error
void System::Threading::Tasks::CausalityRelation::_set_Error(System::Threading::Tasks::CausalityRelation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalityRelation::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "Error", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.CausalitySynchronousWork
#include "System/Threading/Tasks/CausalitySynchronousWork.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalitySynchronousWork CompletionNotification
System::Threading::Tasks::CausalitySynchronousWork System::Threading::Tasks::CausalitySynchronousWork::_get_CompletionNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalitySynchronousWork::_get_CompletionNotification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalitySynchronousWork>("System.Threading.Tasks", "CausalitySynchronousWork", "CompletionNotification"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalitySynchronousWork CompletionNotification
void System::Threading::Tasks::CausalitySynchronousWork::_set_CompletionNotification(System::Threading::Tasks::CausalitySynchronousWork value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalitySynchronousWork::_set_CompletionNotification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalitySynchronousWork", "CompletionNotification", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalitySynchronousWork ProgressNotification
System::Threading::Tasks::CausalitySynchronousWork System::Threading::Tasks::CausalitySynchronousWork::_get_ProgressNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalitySynchronousWork::_get_ProgressNotification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalitySynchronousWork>("System.Threading.Tasks", "CausalitySynchronousWork", "ProgressNotification"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalitySynchronousWork ProgressNotification
void System::Threading::Tasks::CausalitySynchronousWork::_set_ProgressNotification(System::Threading::Tasks::CausalitySynchronousWork value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalitySynchronousWork::_set_ProgressNotification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalitySynchronousWork", "ProgressNotification", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalitySynchronousWork Execution
System::Threading::Tasks::CausalitySynchronousWork System::Threading::Tasks::CausalitySynchronousWork::_get_Execution() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalitySynchronousWork::_get_Execution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalitySynchronousWork>("System.Threading.Tasks", "CausalitySynchronousWork", "Execution"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalitySynchronousWork Execution
void System::Threading::Tasks::CausalitySynchronousWork::_set_Execution(System::Threading::Tasks::CausalitySynchronousWork value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CausalitySynchronousWork::_set_Execution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalitySynchronousWork", "Execution", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.AsyncCausalityTracer
#include "System/Threading/Tasks/AsyncCausalityTracer.hpp"
// Including type: System.Threading.Tasks.CausalityTraceLevel
#include "System/Threading/Tasks/CausalityTraceLevel.hpp"
// Including type: System.Threading.Tasks.AsyncCausalityStatus
#include "System/Threading/Tasks/AsyncCausalityStatus.hpp"
// Including type: System.Threading.Tasks.CausalityRelation
#include "System/Threading/Tasks/CausalityRelation.hpp"
// Including type: System.Threading.Tasks.CausalitySynchronousWork
#include "System/Threading/Tasks/CausalitySynchronousWork.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.AsyncCausalityTracer.get_LoggingOn
bool System::Threading::Tasks::AsyncCausalityTracer::get_LoggingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityTracer::get_LoggingOn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "AsyncCausalityTracer", "get_LoggingOn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AsyncCausalityTracer.TraceOperationCreation
void System::Threading::Tasks::AsyncCausalityTracer::TraceOperationCreation(System::Threading::Tasks::CausalityTraceLevel traceLevel, int taskId, ::Il2CppString* operationName, uint64_t relatedContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityTracer::TraceOperationCreation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "AsyncCausalityTracer", "TraceOperationCreation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(traceLevel, taskId, operationName, relatedContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, traceLevel, taskId, operationName, relatedContext);
}
// Autogenerated method: System.Threading.Tasks.AsyncCausalityTracer.TraceOperationCompletion
void System::Threading::Tasks::AsyncCausalityTracer::TraceOperationCompletion(System::Threading::Tasks::CausalityTraceLevel traceLevel, int taskId, System::Threading::Tasks::AsyncCausalityStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityTracer::TraceOperationCompletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "AsyncCausalityTracer", "TraceOperationCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(traceLevel, taskId, status)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, traceLevel, taskId, status);
}
// Autogenerated method: System.Threading.Tasks.AsyncCausalityTracer.TraceOperationRelation
void System::Threading::Tasks::AsyncCausalityTracer::TraceOperationRelation(System::Threading::Tasks::CausalityTraceLevel traceLevel, int taskId, System::Threading::Tasks::CausalityRelation relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityTracer::TraceOperationRelation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "AsyncCausalityTracer", "TraceOperationRelation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(traceLevel, taskId, relation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, traceLevel, taskId, relation);
}
// Autogenerated method: System.Threading.Tasks.AsyncCausalityTracer.TraceSynchronousWorkStart
void System::Threading::Tasks::AsyncCausalityTracer::TraceSynchronousWorkStart(System::Threading::Tasks::CausalityTraceLevel traceLevel, int taskId, System::Threading::Tasks::CausalitySynchronousWork work) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityTracer::TraceSynchronousWorkStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "AsyncCausalityTracer", "TraceSynchronousWorkStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(traceLevel, taskId, work)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, traceLevel, taskId, work);
}
// Autogenerated method: System.Threading.Tasks.AsyncCausalityTracer.TraceSynchronousWorkCompletion
void System::Threading::Tasks::AsyncCausalityTracer::TraceSynchronousWorkCompletion(System::Threading::Tasks::CausalityTraceLevel traceLevel, System::Threading::Tasks::CausalitySynchronousWork work) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::AsyncCausalityTracer::TraceSynchronousWorkCompletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "AsyncCausalityTracer", "TraceSynchronousWorkCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(traceLevel, work)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, traceLevel, work);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskStatus
#include "System/Threading/Tasks/TaskStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskStatus Created
System::Threading::Tasks::TaskStatus System::Threading::Tasks::TaskStatus::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskStatus>("System.Threading.Tasks", "TaskStatus", "Created"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskStatus Created
void System::Threading::Tasks::TaskStatus::_set_Created(System::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskStatus", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskStatus WaitingForActivation
System::Threading::Tasks::TaskStatus System::Threading::Tasks::TaskStatus::_get_WaitingForActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_get_WaitingForActivation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskStatus>("System.Threading.Tasks", "TaskStatus", "WaitingForActivation"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskStatus WaitingForActivation
void System::Threading::Tasks::TaskStatus::_set_WaitingForActivation(System::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_set_WaitingForActivation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskStatus", "WaitingForActivation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskStatus WaitingToRun
System::Threading::Tasks::TaskStatus System::Threading::Tasks::TaskStatus::_get_WaitingToRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_get_WaitingToRun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskStatus>("System.Threading.Tasks", "TaskStatus", "WaitingToRun"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskStatus WaitingToRun
void System::Threading::Tasks::TaskStatus::_set_WaitingToRun(System::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_set_WaitingToRun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskStatus", "WaitingToRun", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskStatus Running
System::Threading::Tasks::TaskStatus System::Threading::Tasks::TaskStatus::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskStatus>("System.Threading.Tasks", "TaskStatus", "Running"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskStatus Running
void System::Threading::Tasks::TaskStatus::_set_Running(System::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskStatus", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskStatus WaitingForChildrenToComplete
System::Threading::Tasks::TaskStatus System::Threading::Tasks::TaskStatus::_get_WaitingForChildrenToComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_get_WaitingForChildrenToComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskStatus>("System.Threading.Tasks", "TaskStatus", "WaitingForChildrenToComplete"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskStatus WaitingForChildrenToComplete
void System::Threading::Tasks::TaskStatus::_set_WaitingForChildrenToComplete(System::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_set_WaitingForChildrenToComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskStatus", "WaitingForChildrenToComplete", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskStatus RanToCompletion
System::Threading::Tasks::TaskStatus System::Threading::Tasks::TaskStatus::_get_RanToCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_get_RanToCompletion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskStatus>("System.Threading.Tasks", "TaskStatus", "RanToCompletion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskStatus RanToCompletion
void System::Threading::Tasks::TaskStatus::_set_RanToCompletion(System::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_set_RanToCompletion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskStatus", "RanToCompletion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskStatus Canceled
System::Threading::Tasks::TaskStatus System::Threading::Tasks::TaskStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskStatus>("System.Threading.Tasks", "TaskStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskStatus Canceled
void System::Threading::Tasks::TaskStatus::_set_Canceled(System::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskStatus", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskStatus Faulted
System::Threading::Tasks::TaskStatus System::Threading::Tasks::TaskStatus::_get_Faulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_get_Faulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskStatus>("System.Threading.Tasks", "TaskStatus", "Faulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskStatus Faulted
void System::Threading::Tasks::TaskStatus::_set_Faulted(System::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskStatus::_set_Faulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskStatus", "Faulted", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task/ContingentProperties
#include "System/Threading/Tasks/Task_ContingentProperties.hpp"
// Including type: System.Threading.Tasks.Task/SetOnInvokeMres
#include "System/Threading/Tasks/Task_SetOnInvokeMres.hpp"
// Including type: System.Threading.Tasks.Task/DelayPromise
#include "System/Threading/Tasks/Task_DelayPromise.hpp"
// Including type: System.Threading.Tasks.Task/WhenAllPromise
#include "System/Threading/Tasks/Task_WhenAllPromise.hpp"
// Including type: System.Threading.Tasks.Task/WhenAllPromise`1
#include "System/Threading/Tasks/Task_WhenAllPromise_1.hpp"
// Including type: System.Threading.Tasks.Task/<>c__DisplayClass178_0
#include "System/Threading/Tasks/Task_--c__DisplayClass178_0.hpp"
// Including type: System.Threading.Tasks.Task/<>c
#include "System/Threading/Tasks/Task_--c.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Threading.Tasks.StackGuard
#include "System/Threading/Tasks/StackGuard.hpp"
// Including type: System.Threading.Tasks.TaskFactory
#include "System/Threading/Tasks/TaskFactory.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Threading.Tasks.TaskContinuation
#include "System/Threading/Tasks/TaskContinuation.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
// Including type: System.Threading.Tasks.TaskStatus
#include "System/Threading/Tasks/TaskStatus.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.ManualResetEventSlim
#include "System/Threading/ManualResetEventSlim.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.CompilerServices.TaskAwaiter
#include "System/Runtime/CompilerServices/TaskAwaiter.hpp"
// Including type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable
#include "System/Runtime/CompilerServices/ConfiguredTaskAwaitable.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Runtime.CompilerServices.YieldAwaitable
#include "System/Runtime/CompilerServices/YieldAwaitable.hpp"
// Including type: System.Threading.Tasks.TaskContinuationOptions
#include "System/Threading/Tasks/TaskContinuationOptions.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Threading.Tasks.ITaskCompletionAction
#include "System/Threading/Tasks/ITaskCompletionAction.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.OperationCanceledException
#include "System/OperationCanceledException.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ThreadStaticAttribute] Offset: 0xC9A794
// Autogenerated static field getter
// Get static field: static System.Threading.Tasks.Task t_currentTask
System::Threading::Tasks::Task* System::Threading::Tasks::Task::_get_t_currentTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_t_currentTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task*>("System.Threading.Tasks", "Task", "t_currentTask"));
}
// Autogenerated static field setter
// Set static field: static System.Threading.Tasks.Task t_currentTask
void System::Threading::Tasks::Task::_set_t_currentTask(System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_t_currentTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "t_currentTask", value));
}
// [ThreadStaticAttribute] Offset: 0xC9A7A4
// Autogenerated static field getter
// Get static field: static private System.Threading.Tasks.StackGuard t_stackGuard
System::Threading::Tasks::StackGuard* System::Threading::Tasks::Task::_get_t_stackGuard() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_t_stackGuard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::StackGuard*>("System.Threading.Tasks", "Task", "t_stackGuard"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Tasks.StackGuard t_stackGuard
void System::Threading::Tasks::Task::_set_t_stackGuard(System::Threading::Tasks::StackGuard* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_t_stackGuard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "t_stackGuard", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 s_taskIdCounter
int System::Threading::Tasks::Task::_get_s_taskIdCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_taskIdCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "s_taskIdCounter"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 s_taskIdCounter
void System::Threading::Tasks::Task::_set_s_taskIdCounter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_taskIdCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_taskIdCounter", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Tasks.TaskFactory s_factory
System::Threading::Tasks::TaskFactory* System::Threading::Tasks::Task::_get_s_factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_factory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskFactory*>("System.Threading.Tasks", "Task", "s_factory"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Tasks.TaskFactory s_factory
void System::Threading::Tasks::Task::_set_s_factory(System::Threading::Tasks::TaskFactory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_factory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_factory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 OptionsMask
int System::Threading::Tasks::Task::_get_OptionsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_OptionsMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "OptionsMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 OptionsMask
void System::Threading::Tasks::Task::_set_OptionsMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_OptionsMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "OptionsMask", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_STARTED
int System::Threading::Tasks::Task::_get_TASK_STATE_STARTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_STARTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_STARTED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_STARTED
void System::Threading::Tasks::Task::_set_TASK_STATE_STARTED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_STARTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_STARTED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_DELEGATE_INVOKED
int System::Threading::Tasks::Task::_get_TASK_STATE_DELEGATE_INVOKED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_DELEGATE_INVOKED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_DELEGATE_INVOKED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_DELEGATE_INVOKED
void System::Threading::Tasks::Task::_set_TASK_STATE_DELEGATE_INVOKED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_DELEGATE_INVOKED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_DELEGATE_INVOKED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_DISPOSED
int System::Threading::Tasks::Task::_get_TASK_STATE_DISPOSED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_DISPOSED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_DISPOSED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_DISPOSED
void System::Threading::Tasks::Task::_set_TASK_STATE_DISPOSED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_DISPOSED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_DISPOSED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_EXCEPTIONOBSERVEDBYPARENT
int System::Threading::Tasks::Task::_get_TASK_STATE_EXCEPTIONOBSERVEDBYPARENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_EXCEPTIONOBSERVEDBYPARENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_EXCEPTIONOBSERVEDBYPARENT"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_EXCEPTIONOBSERVEDBYPARENT
void System::Threading::Tasks::Task::_set_TASK_STATE_EXCEPTIONOBSERVEDBYPARENT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_EXCEPTIONOBSERVEDBYPARENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_EXCEPTIONOBSERVEDBYPARENT", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_CANCELLATIONACKNOWLEDGED
int System::Threading::Tasks::Task::_get_TASK_STATE_CANCELLATIONACKNOWLEDGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_CANCELLATIONACKNOWLEDGED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_CANCELLATIONACKNOWLEDGED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_CANCELLATIONACKNOWLEDGED
void System::Threading::Tasks::Task::_set_TASK_STATE_CANCELLATIONACKNOWLEDGED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_CANCELLATIONACKNOWLEDGED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_CANCELLATIONACKNOWLEDGED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_FAULTED
int System::Threading::Tasks::Task::_get_TASK_STATE_FAULTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_FAULTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_FAULTED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_FAULTED
void System::Threading::Tasks::Task::_set_TASK_STATE_FAULTED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_FAULTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_FAULTED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_CANCELED
int System::Threading::Tasks::Task::_get_TASK_STATE_CANCELED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_CANCELED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_CANCELED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_CANCELED
void System::Threading::Tasks::Task::_set_TASK_STATE_CANCELED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_CANCELED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_CANCELED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_WAITING_ON_CHILDREN
int System::Threading::Tasks::Task::_get_TASK_STATE_WAITING_ON_CHILDREN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_WAITING_ON_CHILDREN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_WAITING_ON_CHILDREN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_WAITING_ON_CHILDREN
void System::Threading::Tasks::Task::_set_TASK_STATE_WAITING_ON_CHILDREN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_WAITING_ON_CHILDREN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_WAITING_ON_CHILDREN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_RAN_TO_COMPLETION
int System::Threading::Tasks::Task::_get_TASK_STATE_RAN_TO_COMPLETION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_RAN_TO_COMPLETION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_RAN_TO_COMPLETION"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_RAN_TO_COMPLETION
void System::Threading::Tasks::Task::_set_TASK_STATE_RAN_TO_COMPLETION(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_RAN_TO_COMPLETION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_RAN_TO_COMPLETION", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_WAITINGFORACTIVATION
int System::Threading::Tasks::Task::_get_TASK_STATE_WAITINGFORACTIVATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_WAITINGFORACTIVATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_WAITINGFORACTIVATION"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_WAITINGFORACTIVATION
void System::Threading::Tasks::Task::_set_TASK_STATE_WAITINGFORACTIVATION(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_WAITINGFORACTIVATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_WAITINGFORACTIVATION", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_COMPLETION_RESERVED
int System::Threading::Tasks::Task::_get_TASK_STATE_COMPLETION_RESERVED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_COMPLETION_RESERVED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_COMPLETION_RESERVED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_COMPLETION_RESERVED
void System::Threading::Tasks::Task::_set_TASK_STATE_COMPLETION_RESERVED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_COMPLETION_RESERVED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_COMPLETION_RESERVED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_THREAD_WAS_ABORTED
int System::Threading::Tasks::Task::_get_TASK_STATE_THREAD_WAS_ABORTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_THREAD_WAS_ABORTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_THREAD_WAS_ABORTED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_THREAD_WAS_ABORTED
void System::Threading::Tasks::Task::_set_TASK_STATE_THREAD_WAS_ABORTED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_THREAD_WAS_ABORTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_THREAD_WAS_ABORTED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_WAIT_COMPLETION_NOTIFICATION
int System::Threading::Tasks::Task::_get_TASK_STATE_WAIT_COMPLETION_NOTIFICATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_WAIT_COMPLETION_NOTIFICATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_WAIT_COMPLETION_NOTIFICATION"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_WAIT_COMPLETION_NOTIFICATION
void System::Threading::Tasks::Task::_set_TASK_STATE_WAIT_COMPLETION_NOTIFICATION(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_WAIT_COMPLETION_NOTIFICATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_WAIT_COMPLETION_NOTIFICATION", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_EXECUTIONCONTEXT_IS_NULL
int System::Threading::Tasks::Task::_get_TASK_STATE_EXECUTIONCONTEXT_IS_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_EXECUTIONCONTEXT_IS_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_EXECUTIONCONTEXT_IS_NULL"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_EXECUTIONCONTEXT_IS_NULL
void System::Threading::Tasks::Task::_set_TASK_STATE_EXECUTIONCONTEXT_IS_NULL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_EXECUTIONCONTEXT_IS_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_EXECUTIONCONTEXT_IS_NULL", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 TASK_STATE_TASKSCHEDULED_WAS_FIRED
int System::Threading::Tasks::Task::_get_TASK_STATE_TASKSCHEDULED_WAS_FIRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_TASKSCHEDULED_WAS_FIRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_TASKSCHEDULED_WAS_FIRED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 TASK_STATE_TASKSCHEDULED_WAS_FIRED
void System::Threading::Tasks::Task::_set_TASK_STATE_TASKSCHEDULED_WAS_FIRED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_TASKSCHEDULED_WAS_FIRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_TASKSCHEDULED_WAS_FIRED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TASK_STATE_COMPLETED_MASK
int System::Threading::Tasks::Task::_get_TASK_STATE_COMPLETED_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_TASK_STATE_COMPLETED_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "TASK_STATE_COMPLETED_MASK"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TASK_STATE_COMPLETED_MASK
void System::Threading::Tasks::Task::_set_TASK_STATE_COMPLETED_MASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_TASK_STATE_COMPLETED_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "TASK_STATE_COMPLETED_MASK", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CANCELLATION_REQUESTED
int System::Threading::Tasks::Task::_get_CANCELLATION_REQUESTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_CANCELLATION_REQUESTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "Task", "CANCELLATION_REQUESTED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CANCELLATION_REQUESTED
void System::Threading::Tasks::Task::_set_CANCELLATION_REQUESTED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_CANCELLATION_REQUESTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "CANCELLATION_REQUESTED", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object s_taskCompletionSentinel
::Il2CppObject* System::Threading::Tasks::Task::_get_s_taskCompletionSentinel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_taskCompletionSentinel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Threading.Tasks", "Task", "s_taskCompletionSentinel"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object s_taskCompletionSentinel
void System::Threading::Tasks::Task::_set_s_taskCompletionSentinel(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_taskCompletionSentinel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_taskCompletionSentinel", value));
}
// [FriendAccessAllowedAttribute] Offset: 0xC9A7B4
// Autogenerated static field getter
// Get static field: static System.Boolean s_asyncDebuggingEnabled
bool System::Threading::Tasks::Task::_get_s_asyncDebuggingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_asyncDebuggingEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading.Tasks", "Task", "s_asyncDebuggingEnabled"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean s_asyncDebuggingEnabled
void System::Threading::Tasks::Task::_set_s_asyncDebuggingEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_asyncDebuggingEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_asyncDebuggingEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Threading.Tasks.Task> s_currentActiveTasks
System::Collections::Generic::Dictionary_2<int, System::Threading::Tasks::Task*>* System::Threading::Tasks::Task::_get_s_currentActiveTasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_currentActiveTasks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<int, System::Threading::Tasks::Task*>*>("System.Threading.Tasks", "Task", "s_currentActiveTasks")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Threading.Tasks.Task> s_currentActiveTasks
void System::Threading::Tasks::Task::_set_s_currentActiveTasks(System::Collections::Generic::Dictionary_2<int, System::Threading::Tasks::Task*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_currentActiveTasks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_currentActiveTasks", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object s_activeTasksLock
::Il2CppObject* System::Threading::Tasks::Task::_get_s_activeTasksLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_activeTasksLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Threading.Tasks", "Task", "s_activeTasksLock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object s_activeTasksLock
void System::Threading::Tasks::Task::_set_s_activeTasksLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_activeTasksLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_activeTasksLock", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Action`1<System.Object> s_taskCancelCallback
System::Action_1<::Il2CppObject*>* System::Threading::Tasks::Task::_get_s_taskCancelCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_taskCancelCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.Threading.Tasks", "Task", "s_taskCancelCallback"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Action`1<System.Object> s_taskCancelCallback
void System::Threading::Tasks::Task::_set_s_taskCancelCallback(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_taskCancelCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_taskCancelCallback", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Func`1<System.Threading.Tasks.Task/ContingentProperties> s_createContingentProperties
System::Func_1<System::Threading::Tasks::Task::ContingentProperties*>* System::Threading::Tasks::Task::_get_s_createContingentProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_createContingentProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Func_1<System::Threading::Tasks::Task::ContingentProperties*>*>("System.Threading.Tasks", "Task", "s_createContingentProperties"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Func`1<System.Threading.Tasks.Task/ContingentProperties> s_createContingentProperties
void System::Threading::Tasks::Task::_set_s_createContingentProperties(System::Func_1<System::Threading::Tasks::Task::ContingentProperties*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_createContingentProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_createContingentProperties", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.Tasks.Task s_completedTask
System::Threading::Tasks::Task* System::Threading::Tasks::Task::_get_s_completedTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_completedTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task*>("System.Threading.Tasks", "Task", "s_completedTask"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Tasks.Task s_completedTask
void System::Threading::Tasks::Task::_set_s_completedTask(System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_completedTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_completedTask", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Predicate`1<System.Threading.Tasks.Task> s_IsExceptionObservedByParentPredicate
System::Predicate_1<System::Threading::Tasks::Task*>* System::Threading::Tasks::Task::_get_s_IsExceptionObservedByParentPredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_IsExceptionObservedByParentPredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Predicate_1<System::Threading::Tasks::Task*>*>("System.Threading.Tasks", "Task", "s_IsExceptionObservedByParentPredicate"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Predicate`1<System.Threading.Tasks.Task> s_IsExceptionObservedByParentPredicate
void System::Threading::Tasks::Task::_set_s_IsExceptionObservedByParentPredicate(System::Predicate_1<System::Threading::Tasks::Task*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_IsExceptionObservedByParentPredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_IsExceptionObservedByParentPredicate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_ecCallback
System::Threading::ContextCallback* System::Threading::Tasks::Task::_get_s_ecCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_ecCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ContextCallback*>("System.Threading.Tasks", "Task", "s_ecCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_ecCallback
void System::Threading::Tasks::Task::_set_s_ecCallback(System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_ecCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_ecCallback", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Predicate`1<System.Object> s_IsTaskContinuationNullPredicate
System::Predicate_1<::Il2CppObject*>* System::Threading::Tasks::Task::_get_s_IsTaskContinuationNullPredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_get_s_IsTaskContinuationNullPredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Predicate_1<::Il2CppObject*>*>("System.Threading.Tasks", "Task", "s_IsTaskContinuationNullPredicate"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Predicate`1<System.Object> s_IsTaskContinuationNullPredicate
void System::Threading::Tasks::Task::_set_s_IsTaskContinuationNullPredicate(System::Predicate_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::_set_s_IsTaskContinuationNullPredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task", "s_IsTaskContinuationNullPredicate", value));
}
// Autogenerated method: System.Threading.Tasks.Task.AddToActiveTasks
bool System::Threading::Tasks::Task::AddToActiveTasks(System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AddToActiveTasks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "AddToActiveTasks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(task)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.Task.RemoveFromActiveTasks
void System::Threading::Tasks::Task::RemoveFromActiveTasks(int taskId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::RemoveFromActiveTasks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "RemoveFromActiveTasks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(taskId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, taskId);
}
// Autogenerated method: System.Threading.Tasks.Task.TaskConstructorCore
void System::Threading::Tasks::Task::TaskConstructorCore(::Il2CppObject* action, ::Il2CppObject* state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::InternalTaskOptions internalOptions, System::Threading::Tasks::TaskScheduler* scheduler) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::TaskConstructorCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TaskConstructorCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action, state, cancellationToken, creationOptions, internalOptions, scheduler)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action, state, cancellationToken, creationOptions, internalOptions, scheduler);
}
// Autogenerated method: System.Threading.Tasks.Task.AssignCancellationToken
void System::Threading::Tasks::Task::AssignCancellationToken(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::Task* antecedent, System::Threading::Tasks::TaskContinuation* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AssignCancellationToken");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AssignCancellationToken", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken, antecedent, continuation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cancellationToken, antecedent, continuation);
}
// Autogenerated method: System.Threading.Tasks.Task.TaskCancelCallback
void System::Threading::Tasks::Task::TaskCancelCallback(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::TaskCancelCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "TaskCancelCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, o);
}
// Autogenerated method: System.Threading.Tasks.Task.PossiblyCaptureContext
void System::Threading::Tasks::Task::PossiblyCaptureContext(System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::PossiblyCaptureContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PossiblyCaptureContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stackMark)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stackMark);
}
// Autogenerated method: System.Threading.Tasks.Task.get_Options
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::Task::get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_Options");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Options", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::TaskCreationOptions, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.OptionsMethod
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::Task::OptionsMethod(int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::OptionsMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "OptionsMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::TaskCreationOptions, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flags);
}
// Autogenerated method: System.Threading.Tasks.Task.AtomicStateUpdate
bool System::Threading::Tasks::Task::AtomicStateUpdate(int newBits, int illegalBits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AtomicStateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AtomicStateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newBits, illegalBits)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, newBits, illegalBits);
}
// Autogenerated method: System.Threading.Tasks.Task.AtomicStateUpdate
bool System::Threading::Tasks::Task::AtomicStateUpdate(int newBits, int illegalBits, int& oldFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AtomicStateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AtomicStateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newBits, illegalBits, oldFlags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, newBits, illegalBits, oldFlags);
}
// Autogenerated method: System.Threading.Tasks.Task.SetNotificationForWaitCompletion
void System::Threading::Tasks::Task::SetNotificationForWaitCompletion(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::SetNotificationForWaitCompletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetNotificationForWaitCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(enabled)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: System.Threading.Tasks.Task.NotifyDebuggerOfWaitCompletionIfNecessary
bool System::Threading::Tasks::Task::NotifyDebuggerOfWaitCompletionIfNecessary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::NotifyDebuggerOfWaitCompletionIfNecessary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NotifyDebuggerOfWaitCompletionIfNecessary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.AnyTaskRequiresNotifyDebuggerOfWaitCompletion
bool System::Threading::Tasks::Task::AnyTaskRequiresNotifyDebuggerOfWaitCompletion(::Array<System::Threading::Tasks::Task*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AnyTaskRequiresNotifyDebuggerOfWaitCompletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "AnyTaskRequiresNotifyDebuggerOfWaitCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tasks)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsWaitNotificationEnabledOrNotRanToCompletion
bool System::Threading::Tasks::Task::get_IsWaitNotificationEnabledOrNotRanToCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsWaitNotificationEnabledOrNotRanToCompletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsWaitNotificationEnabledOrNotRanToCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_ShouldNotifyDebuggerOfWaitCompletion
bool System::Threading::Tasks::Task::get_ShouldNotifyDebuggerOfWaitCompletion_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_ShouldNotifyDebuggerOfWaitCompletion_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldNotifyDebuggerOfWaitCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsWaitNotificationEnabled
bool System::Threading::Tasks::Task::get_IsWaitNotificationEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsWaitNotificationEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsWaitNotificationEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.NotifyDebuggerOfWaitCompletion
void System::Threading::Tasks::Task::NotifyDebuggerOfWaitCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::NotifyDebuggerOfWaitCompletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NotifyDebuggerOfWaitCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.MarkStarted
bool System::Threading::Tasks::Task::MarkStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::MarkStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.FireTaskScheduledIfNeeded
bool System::Threading::Tasks::Task::FireTaskScheduledIfNeeded(System::Threading::Tasks::TaskScheduler* ts) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::FireTaskScheduledIfNeeded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FireTaskScheduledIfNeeded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ts)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ts);
}
// Autogenerated method: System.Threading.Tasks.Task.AddNewChild
void System::Threading::Tasks::Task::AddNewChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AddNewChild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddNewChild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.DisregardChild
void System::Threading::Tasks::Task::DisregardChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::DisregardChild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisregardChild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.InternalStartNew
System::Threading::Tasks::Task* System::Threading::Tasks::Task::InternalStartNew(System::Threading::Tasks::Task* creatingTask, System::Delegate* action, ::Il2CppObject* state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskScheduler* scheduler, System::Threading::Tasks::TaskCreationOptions options, System::Threading::Tasks::InternalTaskOptions internalOptions, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::InternalStartNew");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "InternalStartNew", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creatingTask, action, state, cancellationToken, scheduler, options, internalOptions, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creatingTask, action, state, cancellationToken, scheduler, options, internalOptions, stackMark);
}
// Autogenerated method: System.Threading.Tasks.Task.NewId
int System::Threading::Tasks::Task::NewId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::NewId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "NewId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_Id
int System::Threading::Tasks::Task::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_Id");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_InternalCurrent
System::Threading::Tasks::Task* System::Threading::Tasks::Task::get_InternalCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_InternalCurrent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "get_InternalCurrent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.InternalCurrentIfAttached
System::Threading::Tasks::Task* System::Threading::Tasks::Task::InternalCurrentIfAttached(System::Threading::Tasks::TaskCreationOptions creationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::InternalCurrentIfAttached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "InternalCurrentIfAttached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creationOptions)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, creationOptions);
}
// Autogenerated method: System.Threading.Tasks.Task.get_CurrentStackGuard
System::Threading::Tasks::StackGuard* System::Threading::Tasks::Task::get_CurrentStackGuard() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_CurrentStackGuard");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "get_CurrentStackGuard", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::StackGuard*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_Exception
System::AggregateException* System::Threading::Tasks::Task::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_Exception");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::AggregateException*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_Status
System::Threading::Tasks::TaskStatus System::Threading::Tasks::Task::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_Status");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Status", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::TaskStatus, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsCanceled
bool System::Threading::Tasks::Task::get_IsCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsCanceled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCanceled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsCancellationRequested
bool System::Threading::Tasks::Task::get_IsCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCancellationRequested", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.EnsureContingentPropertiesInitialized
System::Threading::Tasks::Task::ContingentProperties* System::Threading::Tasks::Task::EnsureContingentPropertiesInitialized(bool needsProtection) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::EnsureContingentPropertiesInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureContingentPropertiesInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(needsProtection)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task::ContingentProperties*, false>(this, ___internal__method, needsProtection);
}
// Autogenerated method: System.Threading.Tasks.Task.EnsureContingentPropertiesInitializedCore
System::Threading::Tasks::Task::ContingentProperties* System::Threading::Tasks::Task::EnsureContingentPropertiesInitializedCore(bool needsProtection) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::EnsureContingentPropertiesInitializedCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureContingentPropertiesInitializedCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(needsProtection)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task::ContingentProperties*, false>(this, ___internal__method, needsProtection);
}
// Autogenerated method: System.Threading.Tasks.Task.get_CancellationToken
System::Threading::CancellationToken System::Threading::Tasks::Task::get_CancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_CancellationToken");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CancellationToken", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsCancellationAcknowledged
bool System::Threading::Tasks::Task::get_IsCancellationAcknowledged() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsCancellationAcknowledged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCancellationAcknowledged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsCompleted
bool System::Threading::Tasks::Task::get_IsCompleted_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsCompleted_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.IsCompletedMethod
bool System::Threading::Tasks::Task::IsCompletedMethod(int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::IsCompletedMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "IsCompletedMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flags);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsRanToCompletion
bool System::Threading::Tasks::Task::get_IsRanToCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsRanToCompletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsRanToCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_CreationOptions
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::Task::get_CreationOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_CreationOptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CreationOptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::TaskCreationOptions, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.System.IAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::Threading::Tasks::Task::System_IAsyncResult_get_AsyncWaitHandle_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::System.IAsyncResult.get_AsyncWaitHandle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_AsyncState
::Il2CppObject* System::Threading::Tasks::Task::get_AsyncState_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_AsyncState_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.System.IAsyncResult.get_CompletedSynchronously
bool System::Threading::Tasks::Task::System_IAsyncResult_get_CompletedSynchronously_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::System.IAsyncResult.get_CompletedSynchronously_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_ExecutingTaskScheduler
System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::Task::get_ExecutingTaskScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_ExecutingTaskScheduler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExecutingTaskScheduler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::TaskScheduler*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_Factory
System::Threading::Tasks::TaskFactory* System::Threading::Tasks::Task::get_Factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_Factory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "get_Factory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::TaskFactory*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_CompletedTask
System::Threading::Tasks::Task* System::Threading::Tasks::Task::get_CompletedTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_CompletedTask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "get_CompletedTask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_CompletedEvent
System::Threading::ManualResetEventSlim* System::Threading::Tasks::Task::get_CompletedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_CompletedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CompletedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ManualResetEventSlim*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsSelfReplicatingRoot
bool System::Threading::Tasks::Task::get_IsSelfReplicatingRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsSelfReplicatingRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSelfReplicatingRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsChildReplica
bool System::Threading::Tasks::Task::get_IsChildReplica() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsChildReplica");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsChildReplica", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_ExceptionRecorded
bool System::Threading::Tasks::Task::get_ExceptionRecorded() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_ExceptionRecorded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExceptionRecorded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsFaulted
bool System::Threading::Tasks::Task::get_IsFaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsFaulted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsFaulted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_CapturedContext
System::Threading::ExecutionContext* System::Threading::Tasks::Task::get_CapturedContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_CapturedContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CapturedContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.set_CapturedContext
void System::Threading::Tasks::Task::set_CapturedContext(System::Threading::ExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::set_CapturedContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_CapturedContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Tasks.Task.CopyExecutionContext
System::Threading::ExecutionContext* System::Threading::Tasks::Task::CopyExecutionContext(System::Threading::ExecutionContext* capturedContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::CopyExecutionContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "CopyExecutionContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capturedContext)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ExecutionContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capturedContext);
}
// Autogenerated method: System.Threading.Tasks.Task.Dispose
void System::Threading::Tasks::Task::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.Dispose
void System::Threading::Tasks::Task::Dispose_NEW(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.Tasks.Task.ScheduleAndStart
void System::Threading::Tasks::Task::ScheduleAndStart(bool needsProtection) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ScheduleAndStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScheduleAndStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(needsProtection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, needsProtection);
}
// Autogenerated method: System.Threading.Tasks.Task.AddException
void System::Threading::Tasks::Task::AddException(::Il2CppObject* exceptionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AddException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exceptionObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exceptionObject);
}
// Autogenerated method: System.Threading.Tasks.Task.AddException
void System::Threading::Tasks::Task::AddException(::Il2CppObject* exceptionObject, bool representsCancellation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AddException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exceptionObject, representsCancellation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exceptionObject, representsCancellation);
}
// Autogenerated method: System.Threading.Tasks.Task.GetExceptions
System::AggregateException* System::Threading::Tasks::Task::GetExceptions(bool includeTaskCanceledExceptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::GetExceptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetExceptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(includeTaskCanceledExceptions)));
  return ::il2cpp_utils::RunMethodThrow<System::AggregateException*, false>(this, ___internal__method, includeTaskCanceledExceptions);
}
// Autogenerated method: System.Threading.Tasks.Task.GetExceptionDispatchInfos
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* System::Threading::Tasks::Task::GetExceptionDispatchInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::GetExceptionDispatchInfos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetExceptionDispatchInfos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.GetCancellationExceptionDispatchInfo
System::Runtime::ExceptionServices::ExceptionDispatchInfo* System::Threading::Tasks::Task::GetCancellationExceptionDispatchInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::GetCancellationExceptionDispatchInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCancellationExceptionDispatchInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.ThrowIfExceptional
void System::Threading::Tasks::Task::ThrowIfExceptional(bool includeTaskCanceledExceptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ThrowIfExceptional");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ThrowIfExceptional", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(includeTaskCanceledExceptions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, includeTaskCanceledExceptions);
}
// Autogenerated method: System.Threading.Tasks.Task.UpdateExceptionObservedStatus
void System::Threading::Tasks::Task::UpdateExceptionObservedStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::UpdateExceptionObservedStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateExceptionObservedStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsExceptionObservedByParent
bool System::Threading::Tasks::Task::get_IsExceptionObservedByParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsExceptionObservedByParent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsExceptionObservedByParent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.get_IsDelegateInvoked
bool System::Threading::Tasks::Task::get_IsDelegateInvoked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_IsDelegateInvoked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDelegateInvoked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.Finish
void System::Threading::Tasks::Task::Finish(bool bUserDelegateExecuted) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bUserDelegateExecuted)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bUserDelegateExecuted);
}
// Autogenerated method: System.Threading.Tasks.Task.FinishStageTwo
void System::Threading::Tasks::Task::FinishStageTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::FinishStageTwo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinishStageTwo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.FinishStageThree
void System::Threading::Tasks::Task::FinishStageThree() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::FinishStageThree");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinishStageThree", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.ProcessChildCompletion
void System::Threading::Tasks::Task::ProcessChildCompletion(System::Threading::Tasks::Task* childTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ProcessChildCompletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessChildCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(childTask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, childTask);
}
// Autogenerated method: System.Threading.Tasks.Task.AddExceptionsFromChildren
void System::Threading::Tasks::Task::AddExceptionsFromChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AddExceptionsFromChildren");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddExceptionsFromChildren", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.FinishThreadAbortedTask
void System::Threading::Tasks::Task::FinishThreadAbortedTask(bool bTAEAddedToExceptionHolder, bool delegateRan) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::FinishThreadAbortedTask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinishThreadAbortedTask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bTAEAddedToExceptionHolder, delegateRan)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bTAEAddedToExceptionHolder, delegateRan);
}
// Autogenerated method: System.Threading.Tasks.Task.Execute
void System::Threading::Tasks::Task::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Execute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.ShouldReplicate
bool System::Threading::Tasks::Task::ShouldReplicate_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ShouldReplicate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldReplicate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.CreateReplicaTask
System::Threading::Tasks::Task* System::Threading::Tasks::Task::CreateReplicaTask_NEW(System::Action_1<::Il2CppObject*>* taskReplicaDelegate, ::Il2CppObject* stateObject, System::Threading::Tasks::Task* parentTask, System::Threading::Tasks::TaskScheduler* taskScheduler, System::Threading::Tasks::TaskCreationOptions creationOptionsForReplica, System::Threading::Tasks::InternalTaskOptions internalOptionsForReplica) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::CreateReplicaTask_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateReplicaTask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(taskReplicaDelegate, stateObject, parentTask, taskScheduler, creationOptionsForReplica, internalOptionsForReplica)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, taskReplicaDelegate, stateObject, parentTask, taskScheduler, creationOptionsForReplica, internalOptionsForReplica);
}
// Autogenerated method: System.Threading.Tasks.Task.get_SavedStateForNextReplica
::Il2CppObject* System::Threading::Tasks::Task::get_SavedStateForNextReplica_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_SavedStateForNextReplica_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SavedStateForNextReplica", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.set_SavedStateFromPreviousReplica
void System::Threading::Tasks::Task::set_SavedStateFromPreviousReplica_NEW(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::set_SavedStateFromPreviousReplica_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SavedStateFromPreviousReplica", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Tasks.Task.get_HandedOverChildReplica
System::Threading::Tasks::Task* System::Threading::Tasks::Task::get_HandedOverChildReplica_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::get_HandedOverChildReplica_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HandedOverChildReplica", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.set_HandedOverChildReplica
void System::Threading::Tasks::Task::set_HandedOverChildReplica_NEW(System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::set_HandedOverChildReplica_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_HandedOverChildReplica", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.Tasks.Task.ExecuteSelfReplicating
void System::Threading::Tasks::Task::ExecuteSelfReplicating(System::Threading::Tasks::Task* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ExecuteSelfReplicating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "ExecuteSelfReplicating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root);
}
// Autogenerated method: System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::Tasks::Task::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::Tasks::Task::System_Threading_IThreadPoolWorkItem_MarkAborted_NEW(System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::System.Threading.IThreadPoolWorkItem.MarkAborted_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tae)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated method: System.Threading.Tasks.Task.ExecuteEntry
bool System::Threading::Tasks::Task::ExecuteEntry(bool bPreventDoubleExecution) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ExecuteEntry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExecuteEntry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bPreventDoubleExecution)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bPreventDoubleExecution);
}
// Autogenerated method: System.Threading.Tasks.Task.ExecuteWithThreadLocal
void System::Threading::Tasks::Task::ExecuteWithThreadLocal(System::Threading::Tasks::Task*& currentTaskSlot) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ExecuteWithThreadLocal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExecuteWithThreadLocal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(currentTaskSlot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentTaskSlot);
}
// Autogenerated method: System.Threading.Tasks.Task.ExecutionContextCallback
void System::Threading::Tasks::Task::ExecutionContextCallback(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ExecutionContextCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "ExecutionContextCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Tasks.Task.InnerInvoke
void System::Threading::Tasks::Task::InnerInvoke_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::InnerInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InnerInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.InnerInvokeWithArg
void System::Threading::Tasks::Task::InnerInvokeWithArg(System::Threading::Tasks::Task* childTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::InnerInvokeWithArg");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InnerInvokeWithArg", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(childTask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, childTask);
}
// Autogenerated method: System.Threading.Tasks.Task.HandleException
void System::Threading::Tasks::Task::HandleException(System::Exception* unhandledException) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::HandleException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unhandledException)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, unhandledException);
}
// Autogenerated method: System.Threading.Tasks.Task.GetAwaiter
System::Runtime::CompilerServices::TaskAwaiter System::Threading::Tasks::Task::GetAwaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::GetAwaiter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAwaiter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::CompilerServices::TaskAwaiter, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.ConfigureAwait
System::Runtime::CompilerServices::ConfiguredTaskAwaitable System::Threading::Tasks::Task::ConfigureAwait(bool continueOnCapturedContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ConfigureAwait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAwait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(continueOnCapturedContext)));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::CompilerServices::ConfiguredTaskAwaitable, false>(this, ___internal__method, continueOnCapturedContext);
}
// Autogenerated method: System.Threading.Tasks.Task.SetContinuationForAwait
void System::Threading::Tasks::Task::SetContinuationForAwait(System::Action* continuationAction, bool continueOnCapturedContext, bool flowExecutionContext, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::SetContinuationForAwait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetContinuationForAwait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(continuationAction, continueOnCapturedContext, flowExecutionContext, stackMark)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, continuationAction, continueOnCapturedContext, flowExecutionContext, stackMark);
}
// Autogenerated method: System.Threading.Tasks.Task.Yield
System::Runtime::CompilerServices::YieldAwaitable System::Threading::Tasks::Task::Yield() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Yield");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "Yield", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::CompilerServices::YieldAwaitable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.Wait
void System::Threading::Tasks::Task::Wait() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Wait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.Wait
bool System::Threading::Tasks::Task::Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Wait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.Tasks.Task.WrappedTryRunInline
bool System::Threading::Tasks::Task::WrappedTryRunInline() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::WrappedTryRunInline");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WrappedTryRunInline", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.InternalWait
bool System::Threading::Tasks::Task::InternalWait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::InternalWait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalWait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.Tasks.Task.SpinThenBlockingWait
bool System::Threading::Tasks::Task::SpinThenBlockingWait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::SpinThenBlockingWait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpinThenBlockingWait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.Tasks.Task.SpinWait
bool System::Threading::Tasks::Task::SpinWait(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::SpinWait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpinWait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.Tasks.Task.InternalCancel
bool System::Threading::Tasks::Task::InternalCancel(bool bCancelNonExecutingOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::InternalCancel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalCancel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bCancelNonExecutingOnly)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bCancelNonExecutingOnly);
}
// Autogenerated method: System.Threading.Tasks.Task.RecordInternalCancellationRequest
void System::Threading::Tasks::Task::RecordInternalCancellationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::RecordInternalCancellationRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecordInternalCancellationRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.RecordInternalCancellationRequest
void System::Threading::Tasks::Task::RecordInternalCancellationRequest(System::Threading::CancellationToken tokenToRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::RecordInternalCancellationRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecordInternalCancellationRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tokenToRecord)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tokenToRecord);
}
// Autogenerated method: System.Threading.Tasks.Task.RecordInternalCancellationRequest
void System::Threading::Tasks::Task::RecordInternalCancellationRequest(System::Threading::CancellationToken tokenToRecord, ::Il2CppObject* cancellationException) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::RecordInternalCancellationRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecordInternalCancellationRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tokenToRecord, cancellationException)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tokenToRecord, cancellationException);
}
// Autogenerated method: System.Threading.Tasks.Task.CancellationCleanupLogic
void System::Threading::Tasks::Task::CancellationCleanupLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::CancellationCleanupLogic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancellationCleanupLogic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.SetCancellationAcknowledged
void System::Threading::Tasks::Task::SetCancellationAcknowledged() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::SetCancellationAcknowledged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCancellationAcknowledged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.FinishContinuations
void System::Threading::Tasks::Task::FinishContinuations() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::FinishContinuations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinishContinuations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.LogFinishCompletionNotification
void System::Threading::Tasks::Task::LogFinishCompletionNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::LogFinishCompletionNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LogFinishCompletionNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task.ContinueWith
System::Threading::Tasks::Task* System::Threading::Tasks::Task::ContinueWith(System::Action_1<System::Threading::Tasks::Task*>* continuationAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ContinueWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContinueWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(continuationAction)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, continuationAction);
}
// Autogenerated method: System.Threading.Tasks.Task.ContinueWith
System::Threading::Tasks::Task* System::Threading::Tasks::Task::ContinueWith(System::Action_1<System::Threading::Tasks::Task*>* continuationAction, System::Threading::Tasks::TaskScheduler* scheduler, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ContinueWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContinueWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(continuationAction, scheduler, cancellationToken, continuationOptions, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, continuationAction, scheduler, cancellationToken, continuationOptions, stackMark);
}
// Autogenerated method: System.Threading.Tasks.Task.ContinueWith
System::Threading::Tasks::Task* System::Threading::Tasks::Task::ContinueWith(System::Action_2<System::Threading::Tasks::Task*, ::Il2CppObject*>* continuationAction, ::Il2CppObject* state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler* scheduler) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ContinueWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContinueWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(continuationAction, state, cancellationToken, continuationOptions, scheduler)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, continuationAction, state, cancellationToken, continuationOptions, scheduler);
}
// Autogenerated method: System.Threading.Tasks.Task.ContinueWith
System::Threading::Tasks::Task* System::Threading::Tasks::Task::ContinueWith(System::Action_2<System::Threading::Tasks::Task*, ::Il2CppObject*>* continuationAction, ::Il2CppObject* state, System::Threading::Tasks::TaskScheduler* scheduler, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ContinueWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContinueWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(continuationAction, state, scheduler, cancellationToken, continuationOptions, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, continuationAction, state, scheduler, cancellationToken, continuationOptions, stackMark);
}
// Autogenerated method: System.Threading.Tasks.Task.CreationOptionsFromContinuationOptions
void System::Threading::Tasks::Task::CreationOptionsFromContinuationOptions(System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskCreationOptions& creationOptions, System::Threading::Tasks::InternalTaskOptions& internalOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::CreationOptionsFromContinuationOptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "CreationOptionsFromContinuationOptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(continuationOptions, creationOptions, internalOptions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, continuationOptions, creationOptions, internalOptions);
}
// Autogenerated method: System.Threading.Tasks.Task.ContinueWithCore
void System::Threading::Tasks::Task::ContinueWithCore(System::Threading::Tasks::Task* continuationTask, System::Threading::Tasks::TaskScheduler* scheduler, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ContinueWithCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContinueWithCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(continuationTask, scheduler, cancellationToken, options)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, continuationTask, scheduler, cancellationToken, options);
}
// Autogenerated method: System.Threading.Tasks.Task.AddCompletionAction
void System::Threading::Tasks::Task::AddCompletionAction(System::Threading::Tasks::ITaskCompletionAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AddCompletionAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCompletionAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: System.Threading.Tasks.Task.AddCompletionAction
void System::Threading::Tasks::Task::AddCompletionAction(System::Threading::Tasks::ITaskCompletionAction* action, bool addBeforeOthers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AddCompletionAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCompletionAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action, addBeforeOthers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action, addBeforeOthers);
}
// Autogenerated method: System.Threading.Tasks.Task.AddTaskContinuationComplex
bool System::Threading::Tasks::Task::AddTaskContinuationComplex(::Il2CppObject* tc, bool addBeforeOthers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AddTaskContinuationComplex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddTaskContinuationComplex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tc, addBeforeOthers)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tc, addBeforeOthers);
}
// Autogenerated method: System.Threading.Tasks.Task.AddTaskContinuation
bool System::Threading::Tasks::Task::AddTaskContinuation(::Il2CppObject* tc, bool addBeforeOthers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::AddTaskContinuation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddTaskContinuation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tc, addBeforeOthers)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tc, addBeforeOthers);
}
// Autogenerated method: System.Threading.Tasks.Task.RemoveContinuation
void System::Threading::Tasks::Task::RemoveContinuation(::Il2CppObject* continuationObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::RemoveContinuation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveContinuation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(continuationObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, continuationObject);
}
// Autogenerated method: System.Threading.Tasks.Task.FromException
System::Threading::Tasks::Task* System::Threading::Tasks::Task::FromException(System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::FromException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "FromException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exception)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: System.Threading.Tasks.Task.FromCancellation
System::Threading::Tasks::Task* System::Threading::Tasks::Task::FromCancellation(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::FromCancellation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "FromCancellation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cancellationToken);
}
// Autogenerated method: System.Threading.Tasks.Task.Run
System::Threading::Tasks::Task* System::Threading::Tasks::Task::Run(System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: System.Threading.Tasks.Task.Run
System::Threading::Tasks::Task* System::Threading::Tasks::Task::Run(System::Func_1<System::Threading::Tasks::Task*>* function) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(function)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, function);
}
// Autogenerated method: System.Threading.Tasks.Task.Run
System::Threading::Tasks::Task* System::Threading::Tasks::Task::Run(System::Func_1<System::Threading::Tasks::Task*>* function, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(function, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, function, cancellationToken);
}
// Autogenerated method: System.Threading.Tasks.Task.Delay
System::Threading::Tasks::Task* System::Threading::Tasks::Task::Delay(System::TimeSpan delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Delay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "Delay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delay)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delay);
}
// Autogenerated method: System.Threading.Tasks.Task.Delay
System::Threading::Tasks::Task* System::Threading::Tasks::Task::Delay(System::TimeSpan delay, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Delay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "Delay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delay, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delay, cancellationToken);
}
// Autogenerated method: System.Threading.Tasks.Task.Delay
System::Threading::Tasks::Task* System::Threading::Tasks::Task::Delay(int millisecondsDelay) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Delay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "Delay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsDelay)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, millisecondsDelay);
}
// Autogenerated method: System.Threading.Tasks.Task.Delay
System::Threading::Tasks::Task* System::Threading::Tasks::Task::Delay(int millisecondsDelay, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::Delay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "Delay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsDelay, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, millisecondsDelay, cancellationToken);
}
// Autogenerated method: System.Threading.Tasks.Task.WhenAll
System::Threading::Tasks::Task* System::Threading::Tasks::Task::WhenAll(System::Collections::Generic::IEnumerable_1<System::Threading::Tasks::Task*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::WhenAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "WhenAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tasks)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: System.Threading.Tasks.Task.WhenAll
System::Threading::Tasks::Task* System::Threading::Tasks::Task::WhenAll(::Array<System::Threading::Tasks::Task*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::WhenAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "WhenAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tasks)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tasks);
}
// Creating initializer_list -> params proxy for: System.Threading.Tasks.Task WhenAll(params System.Threading.Tasks.Task[] tasks)
System::Threading::Tasks::Task* System::Threading::Tasks::Task::WhenAll(std::initializer_list<System::Threading::Tasks::Task*> tasks) {
  return System::Threading::Tasks::Task::WhenAll(::Array<System::Threading::Tasks::Task*>::New(tasks));
}
// Autogenerated method: System.Threading.Tasks.Task.InternalWhenAll
System::Threading::Tasks::Task* System::Threading::Tasks::Task::InternalWhenAll(::Array<System::Threading::Tasks::Task*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::InternalWhenAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "InternalWhenAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tasks)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: System.Threading.Tasks.Task.WhenAny
System::Threading::Tasks::Task_1<System::Threading::Tasks::Task*>* System::Threading::Tasks::Task::WhenAny(::Array<System::Threading::Tasks::Task*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::WhenAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", "WhenAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tasks)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Threading::Tasks::Task*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tasks);
}
// Creating initializer_list -> params proxy for: System.Threading.Tasks.Task`1<System.Threading.Tasks.Task> WhenAny(params System.Threading.Tasks.Task[] tasks)
System::Threading::Tasks::Task_1<System::Threading::Tasks::Task*>* System::Threading::Tasks::Task::WhenAny(std::initializer_list<System::Threading::Tasks::Task*> tasks) {
  return System::Threading::Tasks::Task::WhenAny(::Array<System::Threading::Tasks::Task*>::New(tasks));
}
// Autogenerated method: System.Threading.Tasks.Task..cctor
void System::Threading::Tasks::Task::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.Task/ContingentProperties
#include "System/Threading/Tasks/Task_ContingentProperties.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.ManualResetEventSlim
#include "System/Threading/ManualResetEventSlim.hpp"
// Including type: System.Threading.Tasks.TaskExceptionHolder
#include "System/Threading/Tasks/TaskExceptionHolder.hpp"
// Including type: System.Threading.Tasks.Shared`1
#include "System/Threading/Tasks/Shared_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.Task/ContingentProperties.SetCompleted
void System::Threading::Tasks::Task::ContingentProperties::SetCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ContingentProperties::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task/ContingentProperties.DeregisterCancellationCallback
void System::Threading::Tasks::Task::ContingentProperties::DeregisterCancellationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::ContingentProperties::DeregisterCancellationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeregisterCancellationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.Task/SetOnInvokeMres
#include "System/Threading/Tasks/Task_SetOnInvokeMres.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.Task/SetOnInvokeMres.Invoke
void System::Threading::Tasks::Task::SetOnInvokeMres::Invoke_NEW(System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::SetOnInvokeMres::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(completingTask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, completingTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.Task/DelayPromise
#include "System/Threading/Tasks/Task_DelayPromise.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.Task/DelayPromise.Complete
void System::Threading::Tasks::Task::DelayPromise::Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::DelayPromise::Complete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.Task/WhenAllPromise
#include "System/Threading/Tasks/Task_WhenAllPromise.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.Task/WhenAllPromise.Invoke
void System::Threading::Tasks::Task::WhenAllPromise::Invoke_NEW(System::Threading::Tasks::Task* completedTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::WhenAllPromise::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(completedTask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, completedTask);
}
// Autogenerated method: System.Threading.Tasks.Task/WhenAllPromise.get_ShouldNotifyDebuggerOfWaitCompletion
bool System::Threading::Tasks::Task::WhenAllPromise::get_ShouldNotifyDebuggerOfWaitCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::WhenAllPromise::get_ShouldNotifyDebuggerOfWaitCompletion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldNotifyDebuggerOfWaitCompletion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.Task/<>c__DisplayClass178_0
#include "System/Threading/Tasks/Task_--c__DisplayClass178_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.Task/<>c__DisplayClass178_0.<ExecuteSelfReplicating>b__0
void System::Threading::Tasks::Task::$$c__DisplayClass178_0::$ExecuteSelfReplicating$b__0(::Il2CppObject* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c__DisplayClass178_0::<ExecuteSelfReplicating>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ExecuteSelfReplicating>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes($p0$))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.Task/<>c
#include "System/Threading/Tasks/Task_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
// Including type: System.Threading.Tasks.Task/ContingentProperties
#include "System/Threading/Tasks/Task_ContingentProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task/<>c <>9
System::Threading::Tasks::Task::$$c* System::Threading::Tasks::Task::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task::$$c*>("System.Threading.Tasks", "Task/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task/<>c <>9
void System::Threading::Tasks::Task::$$c::_set_$$9(System::Threading::Tasks::Task::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__276_0
System::Action_1<::Il2CppObject*>* System::Threading::Tasks::Task::$$c::_get_$$9__276_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::_get_$$9__276_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.Threading.Tasks", "Task/<>c", "<>9__276_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__276_0
void System::Threading::Tasks::Task::$$c::_set_$$9__276_0(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::_set_$$9__276_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task/<>c", "<>9__276_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.TimerCallback <>9__276_1
System::Threading::TimerCallback* System::Threading::Tasks::Task::$$c::_get_$$9__276_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::_get_$$9__276_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Threading::TimerCallback*>("System.Threading.Tasks", "Task/<>c", "<>9__276_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.TimerCallback <>9__276_1
void System::Threading::Tasks::Task::$$c::_set_$$9__276_1(System::Threading::TimerCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::_set_$$9__276_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task/<>c", "<>9__276_1", value)));
}
// Autogenerated method: System.Threading.Tasks.Task/<>c..cctor
void System::Threading::Tasks::Task::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task/<>c.<Delay>b__276_0
void System::Threading::Tasks::Task::$$c::$Delay$b__276_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::<Delay>b__276_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Delay>b__276_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.Tasks.Task/<>c.<Delay>b__276_1
void System::Threading::Tasks::Task::$$c::$Delay$b__276_1(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::<Delay>b__276_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Delay>b__276_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.Tasks.Task/<>c.<.cctor>b__295_0
System::Threading::Tasks::Task::ContingentProperties* System::Threading::Tasks::Task::$$c::$_cctor$b__295_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::<.cctor>b__295_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__295_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task::ContingentProperties*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task/<>c.<.cctor>b__295_1
bool System::Threading::Tasks::Task::$$c::$_cctor$b__295_1(System::Threading::Tasks::Task* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::<.cctor>b__295_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__295_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: System.Threading.Tasks.Task/<>c.<.cctor>b__295_2
bool System::Threading::Tasks::Task::$$c::$_cctor$b__295_2(::Il2CppObject* tc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::Task::$$c::<.cctor>b__295_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__295_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tc))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.CompletionActionInvoker
#include "System/Threading/Tasks/CompletionActionInvoker.hpp"
// Including type: System.Threading.Tasks.ITaskCompletionAction
#include "System/Threading/Tasks/ITaskCompletionAction.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.CompletionActionInvoker.ExecuteWorkItem
void System::Threading::Tasks::CompletionActionInvoker::ExecuteWorkItem_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CompletionActionInvoker::ExecuteWorkItem_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.CompletionActionInvoker.MarkAborted
void System::Threading::Tasks::CompletionActionInvoker::MarkAborted_NEW(System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::CompletionActionInvoker::MarkAborted_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkAborted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tae)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskCreationOptions
#include "System/Threading/Tasks/TaskCreationOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions None
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions None
void System::Threading::Tasks::TaskCreationOptions::_set_None(System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions PreferFairness
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_PreferFairness() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_get_PreferFairness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "PreferFairness"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions PreferFairness
void System::Threading::Tasks::TaskCreationOptions::_set_PreferFairness(System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_set_PreferFairness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "PreferFairness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions LongRunning
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_LongRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_get_LongRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "LongRunning"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions LongRunning
void System::Threading::Tasks::TaskCreationOptions::_set_LongRunning(System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_set_LongRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "LongRunning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions AttachedToParent
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_AttachedToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_get_AttachedToParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "AttachedToParent"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions AttachedToParent
void System::Threading::Tasks::TaskCreationOptions::_set_AttachedToParent(System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_set_AttachedToParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "AttachedToParent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions DenyChildAttach
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_DenyChildAttach() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_get_DenyChildAttach");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "DenyChildAttach"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions DenyChildAttach
void System::Threading::Tasks::TaskCreationOptions::_set_DenyChildAttach(System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_set_DenyChildAttach");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "DenyChildAttach", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions HideScheduler
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_HideScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_get_HideScheduler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "HideScheduler"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions HideScheduler
void System::Threading::Tasks::TaskCreationOptions::_set_HideScheduler(System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_set_HideScheduler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "HideScheduler", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions RunContinuationsAsynchronously
System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_RunContinuationsAsynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_get_RunContinuationsAsynchronously");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "RunContinuationsAsynchronously"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions RunContinuationsAsynchronously
void System::Threading::Tasks::TaskCreationOptions::_set_RunContinuationsAsynchronously(System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskCreationOptions::_set_RunContinuationsAsynchronously");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "RunContinuationsAsynchronously", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.InternalTaskOptions
#include "System/Threading/Tasks/InternalTaskOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions None
System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions None
void System::Threading::Tasks::InternalTaskOptions::_set_None(System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions InternalOptionsMask
System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_InternalOptionsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_get_InternalOptionsMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "InternalOptionsMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions InternalOptionsMask
void System::Threading::Tasks::InternalTaskOptions::_set_InternalOptionsMask(System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_set_InternalOptionsMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "InternalOptionsMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions ChildReplica
System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_ChildReplica() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_get_ChildReplica");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "ChildReplica"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions ChildReplica
void System::Threading::Tasks::InternalTaskOptions::_set_ChildReplica(System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_set_ChildReplica");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "ChildReplica", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions ContinuationTask
System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_ContinuationTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_get_ContinuationTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "ContinuationTask"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions ContinuationTask
void System::Threading::Tasks::InternalTaskOptions::_set_ContinuationTask(System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_set_ContinuationTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "ContinuationTask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions PromiseTask
System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_PromiseTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_get_PromiseTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "PromiseTask"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions PromiseTask
void System::Threading::Tasks::InternalTaskOptions::_set_PromiseTask(System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_set_PromiseTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "PromiseTask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions SelfReplicating
System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_SelfReplicating() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_get_SelfReplicating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "SelfReplicating"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions SelfReplicating
void System::Threading::Tasks::InternalTaskOptions::_set_SelfReplicating(System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_set_SelfReplicating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "SelfReplicating", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions LazyCancellation
System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_LazyCancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_get_LazyCancellation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "LazyCancellation"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions LazyCancellation
void System::Threading::Tasks::InternalTaskOptions::_set_LazyCancellation(System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_set_LazyCancellation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "LazyCancellation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions QueuedByRuntime
System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_QueuedByRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_get_QueuedByRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "QueuedByRuntime"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions QueuedByRuntime
void System::Threading::Tasks::InternalTaskOptions::_set_QueuedByRuntime(System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_set_QueuedByRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "QueuedByRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions DoNotDispose
System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_DoNotDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_get_DoNotDispose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "DoNotDispose"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions DoNotDispose
void System::Threading::Tasks::InternalTaskOptions::_set_DoNotDispose(System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::InternalTaskOptions::_set_DoNotDispose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "DoNotDispose", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskContinuationOptions
#include "System/Threading/Tasks/TaskContinuationOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions None
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions None
void System::Threading::Tasks::TaskContinuationOptions::_set_None(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions PreferFairness
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_PreferFairness() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_PreferFairness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "PreferFairness"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions PreferFairness
void System::Threading::Tasks::TaskContinuationOptions::_set_PreferFairness(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_PreferFairness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "PreferFairness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions LongRunning
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_LongRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_LongRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "LongRunning"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions LongRunning
void System::Threading::Tasks::TaskContinuationOptions::_set_LongRunning(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_LongRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "LongRunning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions AttachedToParent
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_AttachedToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_AttachedToParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "AttachedToParent"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions AttachedToParent
void System::Threading::Tasks::TaskContinuationOptions::_set_AttachedToParent(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_AttachedToParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "AttachedToParent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions DenyChildAttach
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_DenyChildAttach() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_DenyChildAttach");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "DenyChildAttach"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions DenyChildAttach
void System::Threading::Tasks::TaskContinuationOptions::_set_DenyChildAttach(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_DenyChildAttach");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "DenyChildAttach", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions HideScheduler
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_HideScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_HideScheduler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "HideScheduler"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions HideScheduler
void System::Threading::Tasks::TaskContinuationOptions::_set_HideScheduler(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_HideScheduler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "HideScheduler", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions LazyCancellation
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_LazyCancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_LazyCancellation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "LazyCancellation"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions LazyCancellation
void System::Threading::Tasks::TaskContinuationOptions::_set_LazyCancellation(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_LazyCancellation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "LazyCancellation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions RunContinuationsAsynchronously
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_RunContinuationsAsynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_RunContinuationsAsynchronously");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "RunContinuationsAsynchronously"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions RunContinuationsAsynchronously
void System::Threading::Tasks::TaskContinuationOptions::_set_RunContinuationsAsynchronously(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_RunContinuationsAsynchronously");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "RunContinuationsAsynchronously", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnRanToCompletion
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_NotOnRanToCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_NotOnRanToCompletion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "NotOnRanToCompletion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnRanToCompletion
void System::Threading::Tasks::TaskContinuationOptions::_set_NotOnRanToCompletion(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_NotOnRanToCompletion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "NotOnRanToCompletion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnFaulted
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_NotOnFaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_NotOnFaulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "NotOnFaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnFaulted
void System::Threading::Tasks::TaskContinuationOptions::_set_NotOnFaulted(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_NotOnFaulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "NotOnFaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnCanceled
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_NotOnCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_NotOnCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "NotOnCanceled"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnCanceled
void System::Threading::Tasks::TaskContinuationOptions::_set_NotOnCanceled(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_NotOnCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "NotOnCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnRanToCompletion
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnRanToCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnRanToCompletion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnRanToCompletion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnRanToCompletion
void System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnRanToCompletion(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnRanToCompletion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnRanToCompletion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnFaulted
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnFaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnFaulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnFaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnFaulted
void System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnFaulted(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnFaulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnFaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnCanceled
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnCanceled"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnCanceled
void System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnCanceled(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions ExecuteSynchronously
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_ExecuteSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_get_ExecuteSynchronously");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "ExecuteSynchronously"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions ExecuteSynchronously
void System::Threading::Tasks::TaskContinuationOptions::_set_ExecuteSynchronously(System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskContinuationOptions::_set_ExecuteSynchronously");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "ExecuteSynchronously", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.StackGuard
#include "System/Threading/Tasks/StackGuard.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_UNCHECKED_INLINING_DEPTH
int System::Threading::Tasks::StackGuard::_get_MAX_UNCHECKED_INLINING_DEPTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::StackGuard::_get_MAX_UNCHECKED_INLINING_DEPTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "StackGuard", "MAX_UNCHECKED_INLINING_DEPTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_UNCHECKED_INLINING_DEPTH
void System::Threading::Tasks::StackGuard::_set_MAX_UNCHECKED_INLINING_DEPTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::StackGuard::_set_MAX_UNCHECKED_INLINING_DEPTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "StackGuard", "MAX_UNCHECKED_INLINING_DEPTH", value));
}
// Autogenerated method: System.Threading.Tasks.StackGuard.TryBeginInliningScope
bool System::Threading::Tasks::StackGuard::TryBeginInliningScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::StackGuard::TryBeginInliningScope");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryBeginInliningScope", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.StackGuard.EndInliningScope
void System::Threading::Tasks::StackGuard::EndInliningScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::StackGuard::EndInliningScope");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInliningScope", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.StackGuard.CheckForSufficientStack
bool System::Threading::Tasks::StackGuard::CheckForSufficientStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::StackGuard::CheckForSufficientStack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForSufficientStack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.ITaskCompletionAction
#include "System/Threading/Tasks/ITaskCompletionAction.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.ITaskCompletionAction.Invoke
void System::Threading::Tasks::ITaskCompletionAction::Invoke_NEW(System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::ITaskCompletionAction::Invoke_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(completingTask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, completingTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskCanceledException
#include "System/Threading/Tasks/TaskCanceledException.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
