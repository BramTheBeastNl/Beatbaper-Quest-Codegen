// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.Encoding/EncodingCharBuffer
#include "System/Text/Encoding_EncodingCharBuffer.hpp"
// Including type: System.Text.DecoderNLS
#include "System/Text/DecoderNLS.hpp"
// Including type: System.Text.DecoderFallbackBuffer
#include "System/Text/DecoderFallbackBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.AddChar
bool System::Text::Encoding::EncodingCharBuffer::AddChar(::Il2CppChar ch, int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingCharBuffer::AddChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(numBytes)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ch, numBytes);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.AddChar
bool System::Text::Encoding::EncodingCharBuffer::AddChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingCharBuffer::AddChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.AdjustBytes
void System::Text::Encoding::EncodingCharBuffer::AdjustBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingCharBuffer::AdjustBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.get_MoreData
bool System::Text::Encoding::EncodingCharBuffer::get_MoreData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingCharBuffer::get_MoreData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MoreData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.GetNextByte
uint8_t System::Text::Encoding::EncodingCharBuffer::GetNextByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingCharBuffer::GetNextByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.get_BytesUsed
int System::Text::Encoding::EncodingCharBuffer::get_BytesUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingCharBuffer::get_BytesUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.Fallback
bool System::Text::Encoding::EncodingCharBuffer::Fallback(uint8_t fallbackByte) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingCharBuffer::Fallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fallbackByte)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, fallbackByte);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.Fallback
bool System::Text::Encoding::EncodingCharBuffer::Fallback(::Array<uint8_t>* byteBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingCharBuffer::Fallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteBuffer)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, byteBuffer);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.get_Count
int System::Text::Encoding::EncodingCharBuffer::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingCharBuffer::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Encoding::EncodingCharBuffer::*)(System::Text::Encoding*, System::Text::DecoderNLS*, ::Il2CppChar*, int, uint8_t*, int)>(&Encoding::EncodingCharBuffer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::Encoding*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Encoding::EncodingCharBuffer::*)(System::Text::Encoding*, System::Text::DecoderNLS*, ::Il2CppChar*, int, uint8_t*, int)>(&Encoding::EncodingCharBuffer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::Encoding*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::AddChar
// Il2CppName: AddChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingCharBuffer::*)(::Il2CppChar, int)>(&Encoding::EncodingCharBuffer::AddChar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), "AddChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::AddChar
// Il2CppName: AddChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingCharBuffer::*)(::Il2CppChar)>(&Encoding::EncodingCharBuffer::AddChar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), "AddChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::AdjustBytes
// Il2CppName: AdjustBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Encoding::EncodingCharBuffer::*)(int)>(&Encoding::EncodingCharBuffer::AdjustBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), "AdjustBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::get_MoreData
// Il2CppName: get_MoreData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingCharBuffer::*)()>(&Encoding::EncodingCharBuffer::get_MoreData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), "get_MoreData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::GetNextByte
// Il2CppName: GetNextByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (Encoding::EncodingCharBuffer::*)()>(&Encoding::EncodingCharBuffer::GetNextByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), "GetNextByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::get_BytesUsed
// Il2CppName: get_BytesUsed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Encoding::EncodingCharBuffer::*)()>(&Encoding::EncodingCharBuffer::get_BytesUsed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), "get_BytesUsed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::Fallback
// Il2CppName: Fallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingCharBuffer::*)(uint8_t)>(&Encoding::EncodingCharBuffer::Fallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), "Fallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::Fallback
// Il2CppName: Fallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingCharBuffer::*)(::Array<uint8_t>*)>(&Encoding::EncodingCharBuffer::Fallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), "Fallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingCharBuffer::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Encoding::EncodingCharBuffer::*)()>(&Encoding::EncodingCharBuffer::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingCharBuffer*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.Encoding/EncodingByteBuffer
#include "System/Text/Encoding_EncodingByteBuffer.hpp"
// Including type: System.Text.EncoderNLS
#include "System/Text/EncoderNLS.hpp"
// Including type: System.Text.EncoderFallbackBuffer
#include "System/Text/EncoderFallbackBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.AddByte
bool System::Text::Encoding::EncodingByteBuffer::AddByte(uint8_t b, int moreBytesExpected) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingByteBuffer::AddByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(moreBytesExpected)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, b, moreBytesExpected);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.AddByte
bool System::Text::Encoding::EncodingByteBuffer::AddByte(uint8_t b1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingByteBuffer::AddByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b1)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, b1);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.AddByte
bool System::Text::Encoding::EncodingByteBuffer::AddByte(uint8_t b1, uint8_t b2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingByteBuffer::AddByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b1), ::il2cpp_utils::ExtractType(b2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, b1, b2);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.AddByte
bool System::Text::Encoding::EncodingByteBuffer::AddByte(uint8_t b1, uint8_t b2, int moreBytesExpected) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingByteBuffer::AddByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b1), ::il2cpp_utils::ExtractType(b2), ::il2cpp_utils::ExtractType(moreBytesExpected)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, b1, b2, moreBytesExpected);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.MovePrevious
void System::Text::Encoding::EncodingByteBuffer::MovePrevious(bool bThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingByteBuffer::MovePrevious");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePrevious", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bThrow)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bThrow);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.get_MoreData
bool System::Text::Encoding::EncodingByteBuffer::get_MoreData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingByteBuffer::get_MoreData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MoreData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.GetNextChar
::Il2CppChar System::Text::Encoding::EncodingByteBuffer::GetNextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingByteBuffer::GetNextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.get_CharsUsed
int System::Text::Encoding::EncodingByteBuffer::get_CharsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingByteBuffer::get_CharsUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CharsUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.get_Count
int System::Text::Encoding::EncodingByteBuffer::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Encoding::EncodingByteBuffer::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Encoding::EncodingByteBuffer::*)(System::Text::Encoding*, System::Text::EncoderNLS*, uint8_t*, int, ::Il2CppChar*, int)>(&Encoding::EncodingByteBuffer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::Encoding*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Encoding::EncodingByteBuffer::*)(System::Text::Encoding*, System::Text::EncoderNLS*, uint8_t*, int, ::Il2CppChar*, int)>(&Encoding::EncodingByteBuffer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::Encoding*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::AddByte
// Il2CppName: AddByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingByteBuffer::*)(uint8_t, int)>(&Encoding::EncodingByteBuffer::AddByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), "AddByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::AddByte
// Il2CppName: AddByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingByteBuffer::*)(uint8_t)>(&Encoding::EncodingByteBuffer::AddByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), "AddByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::AddByte
// Il2CppName: AddByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingByteBuffer::*)(uint8_t, uint8_t)>(&Encoding::EncodingByteBuffer::AddByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), "AddByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>(), ::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::AddByte
// Il2CppName: AddByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingByteBuffer::*)(uint8_t, uint8_t, int)>(&Encoding::EncodingByteBuffer::AddByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), "AddByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>(), ::il2cpp_utils::ExtractIndependentType<uint8_t>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::MovePrevious
// Il2CppName: MovePrevious
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Encoding::EncodingByteBuffer::*)(bool)>(&Encoding::EncodingByteBuffer::MovePrevious)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), "MovePrevious", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::get_MoreData
// Il2CppName: get_MoreData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Encoding::EncodingByteBuffer::*)()>(&Encoding::EncodingByteBuffer::get_MoreData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), "get_MoreData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::GetNextChar
// Il2CppName: GetNextChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (Encoding::EncodingByteBuffer::*)()>(&Encoding::EncodingByteBuffer::GetNextChar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), "GetNextChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::get_CharsUsed
// Il2CppName: get_CharsUsed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Encoding::EncodingByteBuffer::*)()>(&Encoding::EncodingByteBuffer::get_CharsUsed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), "get_CharsUsed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Encoding::EncodingByteBuffer::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Encoding::EncodingByteBuffer::*)()>(&Encoding::EncodingByteBuffer::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Encoding::EncodingByteBuffer*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.EncodingNLS
#include "System/Text/EncodingNLS.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.EncodingNLS.GetByteCount
int System::Text::EncodingNLS::GetByteCount(::Array<::Il2CppChar>* chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Text.EncodingNLS.GetByteCount
int System::Text::EncodingNLS::GetByteCount(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.EncodingNLS.GetByteCount
int System::Text::EncodingNLS::GetByteCount(::Il2CppChar* chars, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count);
}
// Autogenerated method: System.Text.EncodingNLS.GetBytes
int System::Text::EncodingNLS::GetBytes(::Il2CppString* s, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.EncodingNLS.GetBytes
int System::Text::EncodingNLS::GetBytes(::Array<::Il2CppChar>* chars, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.EncodingNLS.GetBytes
int System::Text::EncodingNLS::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount);
}
// Autogenerated method: System.Text.EncodingNLS.GetCharCount
int System::Text::EncodingNLS::GetCharCount(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.EncodingNLS.GetCharCount
int System::Text::EncodingNLS::GetCharCount(uint8_t* bytes, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count);
}
// Autogenerated method: System.Text.EncodingNLS.GetChars
int System::Text::EncodingNLS::GetChars(::Array<uint8_t>* bytes, int byteIndex, int byteCount, ::Array<::Il2CppChar>* chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Text.EncodingNLS.GetChars
int System::Text::EncodingNLS::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount);
}
// Autogenerated method: System.Text.EncodingNLS.GetString
::Il2CppString* System::Text::EncodingNLS::GetString(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.EncodingNLS.GetDecoder
System::Text::Decoder* System::Text::EncodingNLS::GetDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetDecoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Decoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.EncodingNLS.GetEncoder
System::Text::Encoder* System::Text::EncodingNLS::GetEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingNLS::GetEncoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoder*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EncodingNLS::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EncodingNLS::*)(int)>(&EncodingNLS::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EncodingNLS::*)(int)>(&EncodingNLS::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(::Array<::Il2CppChar>*, int, int)>(&EncodingNLS::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(::Il2CppString*)>(&EncodingNLS::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(::Il2CppChar*, int)>(&EncodingNLS::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(::Il2CppString*, int, int, ::Array<uint8_t>*, int)>(&EncodingNLS::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(::Array<::Il2CppChar>*, int, int, ::Array<uint8_t>*, int)>(&EncodingNLS::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(::Il2CppChar*, int, uint8_t*, int)>(&EncodingNLS::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(::Array<uint8_t>*, int, int)>(&EncodingNLS::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(uint8_t*, int)>(&EncodingNLS::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(::Array<uint8_t>*, int, int, ::Array<::Il2CppChar>*, int)>(&EncodingNLS::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EncodingNLS::*)(uint8_t*, int, ::Il2CppChar*, int)>(&EncodingNLS::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (EncodingNLS::*)(::Array<uint8_t>*, int, int)>(&EncodingNLS::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetDecoder
// Il2CppName: GetDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Decoder* (EncodingNLS::*)()>(&EncodingNLS::GetDecoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EncodingNLS::GetEncoder
// Il2CppName: GetEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoder* (EncodingNLS::*)()>(&EncodingNLS::GetEncoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingNLS*), "GetEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.EncodingProvider
#include "System/Text/EncodingProvider.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.EncoderFallback
#include "System/Text/EncoderFallback.hpp"
// Including type: System.Text.DecoderFallback
#include "System/Text/DecoderFallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_InternalSyncObject
::Il2CppObject* System::Text::EncodingProvider::_get_s_InternalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::_get_s_InternalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Text", "EncodingProvider", "s_InternalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_InternalSyncObject
void System::Text::EncodingProvider::_set_s_InternalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::_set_s_InternalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingProvider", "s_InternalSyncObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.EncodingProvider[] s_providers
::Array<System::Text::EncodingProvider*>* System::Text::EncodingProvider::_get_s_providers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::_get_s_providers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Text::EncodingProvider*>*>("System.Text", "EncodingProvider", "s_providers"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.EncodingProvider[] s_providers
void System::Text::EncodingProvider::_set_s_providers(::Array<System::Text::EncodingProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::_set_s_providers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingProvider", "s_providers", value));
}
// Autogenerated method: System.Text.EncodingProvider.GetEncoding
System::Text::Encoding* System::Text::EncodingProvider::GetEncoding(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::GetEncoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Text.EncodingProvider.GetEncoding
System::Text::Encoding* System::Text::EncodingProvider::GetEncoding(int codepage) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::GetEncoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepage)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method, codepage);
}
// Autogenerated method: System.Text.EncodingProvider.GetEncoding
System::Text::Encoding* System::Text::EncodingProvider::GetEncoding(int codepage, System::Text::EncoderFallback* encoderFallback, System::Text::DecoderFallback* decoderFallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::GetEncoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepage), ::il2cpp_utils::ExtractType(encoderFallback), ::il2cpp_utils::ExtractType(decoderFallback)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method, codepage, encoderFallback, decoderFallback);
}
// Autogenerated method: System.Text.EncodingProvider.GetEncodingFromProvider
System::Text::Encoding* System::Text::EncodingProvider::GetEncodingFromProvider(int codepage) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::GetEncodingFromProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingProvider", "GetEncodingFromProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepage)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, codepage);
}
// Autogenerated method: System.Text.EncodingProvider.GetEncodingFromProvider
System::Text::Encoding* System::Text::EncodingProvider::GetEncodingFromProvider(::Il2CppString* encodingName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::GetEncodingFromProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingProvider", "GetEncodingFromProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encodingName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, encodingName);
}
// Autogenerated method: System.Text.EncodingProvider.GetEncodingFromProvider
System::Text::Encoding* System::Text::EncodingProvider::GetEncodingFromProvider(int codepage, System::Text::EncoderFallback* enc, System::Text::DecoderFallback* dec) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::GetEncodingFromProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingProvider", "GetEncodingFromProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepage), ::il2cpp_utils::ExtractType(enc), ::il2cpp_utils::ExtractType(dec)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, codepage, enc, dec);
}
// Autogenerated method: System.Text.EncodingProvider..cctor
void System::Text::EncodingProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: EncodingProvider::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (EncodingProvider::*)(::Il2CppString*)>(&EncodingProvider::GetEncoding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingProvider*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EncodingProvider::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (EncodingProvider::*)(int)>(&EncodingProvider::GetEncoding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingProvider*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingProvider::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (EncodingProvider::*)(int, System::Text::EncoderFallback*, System::Text::DecoderFallback*)>(&EncodingProvider::GetEncoding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingProvider*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderFallback*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderFallback*>()});
  }
};
// Writing MetadataGetter for method: EncodingProvider::GetEncodingFromProvider
// Il2CppName: GetEncodingFromProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (*)(int)>(&EncodingProvider::GetEncodingFromProvider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingProvider*), "GetEncodingFromProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EncodingProvider::GetEncodingFromProvider
// Il2CppName: GetEncodingFromProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (*)(::Il2CppString*)>(&EncodingProvider::GetEncodingFromProvider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingProvider*), "GetEncodingFromProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EncodingProvider::GetEncodingFromProvider
// Il2CppName: GetEncodingFromProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (*)(int, System::Text::EncoderFallback*, System::Text::DecoderFallback*)>(&EncodingProvider::GetEncodingFromProvider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingProvider*), "GetEncodingFromProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderFallback*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderFallback*>()});
  }
};
// Writing MetadataGetter for method: EncodingProvider::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&EncodingProvider::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingProvider*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.Latin1Encoding
#include "System/Text/Latin1Encoding.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Text.EncoderNLS
#include "System/Text/EncoderNLS.hpp"
// Including type: System.Text.DecoderNLS
#include "System/Text/DecoderNLS.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] arrayCharBestFit
::Array<::Il2CppChar>* System::Text::Latin1Encoding::_get_arrayCharBestFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::_get_arrayCharBestFit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Text", "Latin1Encoding", "arrayCharBestFit"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] arrayCharBestFit
void System::Text::Latin1Encoding::_set_arrayCharBestFit(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::_set_arrayCharBestFit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Latin1Encoding", "arrayCharBestFit", value));
}
// Autogenerated method: System.Text.Latin1Encoding.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::Latin1Encoding::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.Latin1Encoding..cctor
void System::Text::Latin1Encoding::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Latin1Encoding", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Latin1Encoding.GetByteCount
int System::Text::Latin1Encoding::GetByteCount(::Il2CppChar* chars, int charCount, System::Text::EncoderNLS* encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(encoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, encoder);
}
// Autogenerated method: System.Text.Latin1Encoding.GetBytes
int System::Text::Latin1Encoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, System::Text::EncoderNLS* encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(encoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount, encoder);
}
// Autogenerated method: System.Text.Latin1Encoding.GetCharCount
int System::Text::Latin1Encoding::GetCharCount(uint8_t* bytes, int count, System::Text::DecoderNLS* decoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(decoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count, decoder);
}
// Autogenerated method: System.Text.Latin1Encoding.GetChars
int System::Text::Latin1Encoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, System::Text::DecoderNLS* decoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(decoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount, decoder);
}
// Autogenerated method: System.Text.Latin1Encoding.GetMaxByteCount
int System::Text::Latin1Encoding::GetMaxByteCount(int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::GetMaxByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, charCount);
}
// Autogenerated method: System.Text.Latin1Encoding.GetMaxCharCount
int System::Text::Latin1Encoding::GetMaxCharCount(int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::GetMaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, byteCount);
}
// Autogenerated method: System.Text.Latin1Encoding.GetBestFitUnicodeToBytesData
::Array<::Il2CppChar>* System::Text::Latin1Encoding::GetBestFitUnicodeToBytesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Latin1Encoding::GetBestFitUnicodeToBytesData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBestFitUnicodeToBytesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Latin1Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Latin1Encoding::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&Latin1Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Latin1Encoding::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&Latin1Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Latin1Encoding::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&Latin1Encoding::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Latin1Encoding::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Latin1Encoding::*)()>(&Latin1Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Latin1Encoding::*)()>(&Latin1Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Latin1Encoding::*)(::Il2CppChar*, int, System::Text::EncoderNLS*)>(&Latin1Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Latin1Encoding::*)(::Il2CppChar*, int, uint8_t*, int, System::Text::EncoderNLS*)>(&Latin1Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Latin1Encoding::*)(uint8_t*, int, System::Text::DecoderNLS*)>(&Latin1Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Latin1Encoding::*)(uint8_t*, int, ::Il2CppChar*, int, System::Text::DecoderNLS*)>(&Latin1Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::GetMaxByteCount
// Il2CppName: GetMaxByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Latin1Encoding::*)(int)>(&Latin1Encoding::GetMaxByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), "GetMaxByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::GetMaxCharCount
// Il2CppName: GetMaxCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Latin1Encoding::*)(int)>(&Latin1Encoding::GetMaxCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), "GetMaxCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Latin1Encoding::GetBestFitUnicodeToBytesData
// Il2CppName: GetBestFitUnicodeToBytesData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppChar>* (Latin1Encoding::*)()>(&Latin1Encoding::GetBestFitUnicodeToBytesData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Latin1Encoding*), "GetBestFitUnicodeToBytesData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.ParamsArray
#include "System/ParamsArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 DefaultCapacity
int System::Text::StringBuilder::_get_DefaultCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_get_DefaultCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "StringBuilder", "DefaultCapacity"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DefaultCapacity
void System::Text::StringBuilder::_set_DefaultCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_set_DefaultCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "StringBuilder", "DefaultCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.String CapacityField
::Il2CppString* System::Text::StringBuilder::_get_CapacityField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_get_CapacityField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text", "StringBuilder", "CapacityField"));
}
// Autogenerated static field setter
// Set static field: static private System.String CapacityField
void System::Text::StringBuilder::_set_CapacityField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_set_CapacityField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "StringBuilder", "CapacityField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MaxCapacityField
::Il2CppString* System::Text::StringBuilder::_get_MaxCapacityField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_get_MaxCapacityField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text", "StringBuilder", "MaxCapacityField"));
}
// Autogenerated static field setter
// Set static field: static private System.String MaxCapacityField
void System::Text::StringBuilder::_set_MaxCapacityField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_set_MaxCapacityField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "StringBuilder", "MaxCapacityField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String StringValueField
::Il2CppString* System::Text::StringBuilder::_get_StringValueField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_get_StringValueField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text", "StringBuilder", "StringValueField"));
}
// Autogenerated static field setter
// Set static field: static private System.String StringValueField
void System::Text::StringBuilder::_set_StringValueField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_set_StringValueField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "StringBuilder", "StringValueField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ThreadIDField
::Il2CppString* System::Text::StringBuilder::_get_ThreadIDField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_get_ThreadIDField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text", "StringBuilder", "ThreadIDField"));
}
// Autogenerated static field setter
// Set static field: static private System.String ThreadIDField
void System::Text::StringBuilder::_set_ThreadIDField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_set_ThreadIDField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "StringBuilder", "ThreadIDField", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MaxChunkSize
int System::Text::StringBuilder::_get_MaxChunkSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_get_MaxChunkSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "StringBuilder", "MaxChunkSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MaxChunkSize
void System::Text::StringBuilder::_set_MaxChunkSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::_set_MaxChunkSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "StringBuilder", "MaxChunkSize", value));
}
// Autogenerated method: System.Text.StringBuilder.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::StringBuilder::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.StringBuilder.get_Capacity
int System::Text::StringBuilder::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.StringBuilder.set_Capacity
void System::Text::StringBuilder::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::set_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.get_MaxCapacity
int System::Text::StringBuilder::get_MaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::get_MaxCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.StringBuilder.EnsureCapacity
int System::Text::StringBuilder::EnsureCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Text.StringBuilder.ToString
::Il2CppString* System::Text::StringBuilder::ToString(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.Text.StringBuilder.Clear
System::Text::StringBuilder* System::Text::StringBuilder::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.StringBuilder.get_Length
int System::Text::StringBuilder::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.StringBuilder.set_Length
void System::Text::StringBuilder::set_Length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.get_Chars
::Il2CppChar System::Text::StringBuilder::get_Chars(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::get_Chars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Chars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.StringBuilder.set_Chars
void System::Text::StringBuilder::set_Chars(int index, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::set_Chars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Chars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(::Il2CppChar value, int repeatCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(repeatCount)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value, repeatCount);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(::Array<::Il2CppChar>* value, int startIndex, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value, startIndex, charCount);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.AppendHelper
void System::Text::StringBuilder::AppendHelper(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(::Il2CppString* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.Text.StringBuilder.AppendLine
System::Text::StringBuilder* System::Text::StringBuilder::AppendLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.StringBuilder.AppendLine
System::Text::StringBuilder* System::Text::StringBuilder::AppendLine(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.Insert
System::Text::StringBuilder* System::Text::StringBuilder::Insert(int index, ::Il2CppString* value, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, index, value, count);
}
// Autogenerated method: System.Text.StringBuilder.Remove
System::Text::StringBuilder* System::Text::StringBuilder::Remove(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.StringBuilder.Insert
System::Text::StringBuilder* System::Text::StringBuilder::Insert(int index, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Text.StringBuilder.Insert
System::Text::StringBuilder* System::Text::StringBuilder::Insert(int index, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Text.StringBuilder.AppendFormat
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormat(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.Text.StringBuilder.AppendFormat
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormat(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, format, arg0, arg1);
}
// Autogenerated method: System.Text.StringBuilder.AppendFormat
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormat(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.Text.StringBuilder.AppendFormat
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormat(::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, format, args);
}
// Creating initializer_list -> params proxy for: System.Text.StringBuilder AppendFormat(System.String format, params System.Object[] args)
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormat(::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  return System::Text::StringBuilder::AppendFormat(format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.Text.StringBuilder.AppendFormat
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormat(System::IFormatProvider* provider, ::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, provider, format, arg0);
}
// Autogenerated method: System.Text.StringBuilder.AppendFormat
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormat(System::IFormatProvider* provider, ::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, provider, format, arg0, arg1);
}
// Autogenerated method: System.Text.StringBuilder.AppendFormat
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormat(System::IFormatProvider* provider, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, provider, format, args);
}
// Creating initializer_list -> params proxy for: System.Text.StringBuilder AppendFormat(System.IFormatProvider provider, System.String format, params System.Object[] args)
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormat(System::IFormatProvider* provider, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  return System::Text::StringBuilder::AppendFormat(provider, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.Text.StringBuilder.FormatError
void System::Text::StringBuilder::FormatError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::FormatError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "StringBuilder", "FormatError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.StringBuilder.AppendFormatHelper
System::Text::StringBuilder* System::Text::StringBuilder::AppendFormatHelper(System::IFormatProvider* provider, ::Il2CppString* format, System::ParamsArray args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::AppendFormatHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendFormatHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, provider, format, args);
}
// Autogenerated method: System.Text.StringBuilder.Replace
System::Text::StringBuilder* System::Text::StringBuilder::Replace(::Il2CppString* oldValue, ::Il2CppString* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.Text.StringBuilder.Replace
System::Text::StringBuilder* System::Text::StringBuilder::Replace(::Il2CppString* oldValue, ::Il2CppString* newValue, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, oldValue, newValue, startIndex, count);
}
// Autogenerated method: System.Text.StringBuilder.Append
System::Text::StringBuilder* System::Text::StringBuilder::Append(::Il2CppChar* value, int valueCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(valueCount)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, value, valueCount);
}
// Autogenerated method: System.Text.StringBuilder.Insert
void System::Text::StringBuilder::Insert(int index, ::Il2CppChar* value, int valueCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(valueCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value, valueCount);
}
// Autogenerated method: System.Text.StringBuilder.ReplaceAllInChunk
void System::Text::StringBuilder::ReplaceAllInChunk(::Array<int>* replacements, int replacementsCount, System::Text::StringBuilder* sourceChunk, int removeCount, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::ReplaceAllInChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceAllInChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replacements), ::il2cpp_utils::ExtractType(replacementsCount), ::il2cpp_utils::ExtractType(sourceChunk), ::il2cpp_utils::ExtractType(removeCount), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, replacements, replacementsCount, sourceChunk, removeCount, value);
}
// Autogenerated method: System.Text.StringBuilder.StartsWith
bool System::Text::StringBuilder::StartsWith(System::Text::StringBuilder* chunk, int indexInChunk, int count, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(indexInChunk), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, chunk, indexInChunk, count, value);
}
// Autogenerated method: System.Text.StringBuilder.ReplaceInPlaceAtChunk
void System::Text::StringBuilder::ReplaceInPlaceAtChunk(System::Text::StringBuilder*& chunk, int& indexInChunk, ::Il2CppChar* value, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::ReplaceInPlaceAtChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceInPlaceAtChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(indexInChunk), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chunk, indexInChunk, value, count);
}
// Autogenerated method: System.Text.StringBuilder.ThreadSafeCopy
void System::Text::StringBuilder::ThreadSafeCopy(::Il2CppChar* sourcePtr, ::Array<::Il2CppChar>* destination, int destinationIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::ThreadSafeCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "StringBuilder", "ThreadSafeCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePtr), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePtr, destination, destinationIndex, count);
}
// Autogenerated method: System.Text.StringBuilder.ThreadSafeCopy
void System::Text::StringBuilder::ThreadSafeCopy(::Array<::Il2CppChar>* source, int sourceIndex, ::Array<::Il2CppChar>* destination, int destinationIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::ThreadSafeCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "StringBuilder", "ThreadSafeCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, sourceIndex, destination, destinationIndex, count);
}
// Autogenerated method: System.Text.StringBuilder.FindChunkForIndex
System::Text::StringBuilder* System::Text::StringBuilder::FindChunkForIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::FindChunkForIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindChunkForIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.StringBuilder.Next
System::Text::StringBuilder* System::Text::StringBuilder::Next(System::Text::StringBuilder* chunk) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(this, ___internal__method, chunk);
}
// Autogenerated method: System.Text.StringBuilder.ExpandByABlock
void System::Text::StringBuilder::ExpandByABlock(int minBlockCharCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::ExpandByABlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandByABlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minBlockCharCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, minBlockCharCount);
}
// Autogenerated method: System.Text.StringBuilder.MakeRoom
void System::Text::StringBuilder::MakeRoom(int index, int count, System::Text::StringBuilder*& chunk, int& indexInChunk, bool doneMoveFollowingChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::MakeRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(doneMoveFollowingChars)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, count, chunk, indexInChunk, doneMoveFollowingChars);
}
// Autogenerated method: System.Text.StringBuilder.Remove
void System::Text::StringBuilder::Remove(int startIndex, int count, System::Text::StringBuilder*& chunk, int& indexInChunk) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startIndex, count, chunk, indexInChunk);
}
// Autogenerated method: System.Text.StringBuilder.ToString
::Il2CppString* System::Text::StringBuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilder::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: StringBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(::Il2CppString*)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(::Il2CppString*)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(::Il2CppString*, int)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(::Il2CppString*, int)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(::Il2CppString*, int, int, int)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(::Il2CppString*, int, int, int)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&StringBuilder::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::get_Capacity
// Il2CppName: get_Capacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StringBuilder::*)()>(&StringBuilder::get_Capacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "get_Capacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringBuilder::set_Capacity
// Il2CppName: set_Capacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int)>(&StringBuilder::set_Capacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "set_Capacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::get_MaxCapacity
// Il2CppName: get_MaxCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StringBuilder::*)()>(&StringBuilder::get_MaxCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "get_MaxCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringBuilder::EnsureCapacity
// Il2CppName: EnsureCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StringBuilder::*)(int)>(&StringBuilder::EnsureCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "EnsureCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (StringBuilder::*)(int, int)>(&StringBuilder::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)()>(&StringBuilder::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringBuilder::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StringBuilder::*)()>(&StringBuilder::get_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringBuilder::set_Length
// Il2CppName: set_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int)>(&StringBuilder::set_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "set_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::get_Chars
// Il2CppName: get_Chars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (StringBuilder::*)(int)>(&StringBuilder::get_Chars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "get_Chars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::set_Chars
// Il2CppName: set_Chars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int, ::Il2CppChar)>(&StringBuilder::set_Chars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "set_Chars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppChar, int)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Array<::Il2CppChar>*, int, int)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppString*)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendHelper
// Il2CppName: AppendHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(::Il2CppString*)>(&StringBuilder::AppendHelper)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppString*, int, int)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendLine
// Il2CppName: AppendLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)()>(&StringBuilder::AppendLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendLine
// Il2CppName: AppendLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppString*)>(&StringBuilder::AppendLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(int, ::Il2CppString*, int)>(&StringBuilder::Insert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(int, int)>(&StringBuilder::Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(bool)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(uint8_t)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppChar)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(int)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(int64_t)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(double)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppObject*)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(int, ::Il2CppString*)>(&StringBuilder::Insert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(int, ::Il2CppChar)>(&StringBuilder::Insert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppString*, ::Il2CppObject*)>(&StringBuilder::AppendFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppString*, ::Il2CppObject*, ::Il2CppObject*)>(&StringBuilder::AppendFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppString*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&StringBuilder::AppendFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppString*, ::Array<::Il2CppObject*>*)>(&StringBuilder::AppendFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(System::IFormatProvider*, ::Il2CppString*, ::Il2CppObject*)>(&StringBuilder::AppendFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IFormatProvider*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(System::IFormatProvider*, ::Il2CppString*, ::Il2CppObject*, ::Il2CppObject*)>(&StringBuilder::AppendFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IFormatProvider*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(System::IFormatProvider*, ::Il2CppString*, ::Array<::Il2CppObject*>*)>(&StringBuilder::AppendFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IFormatProvider*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::FormatError
// Il2CppName: FormatError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&StringBuilder::FormatError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "FormatError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringBuilder::AppendFormatHelper
// Il2CppName: AppendFormatHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(System::IFormatProvider*, ::Il2CppString*, System::ParamsArray)>(&StringBuilder::AppendFormatHelper)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "AppendFormatHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IFormatProvider*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::ParamsArray>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Replace
// Il2CppName: Replace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppString*, ::Il2CppString*)>(&StringBuilder::Replace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Replace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Replace
// Il2CppName: Replace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppString*, ::Il2CppString*, int, int)>(&StringBuilder::Replace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Replace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(::Il2CppChar*, int)>(&StringBuilder::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int, ::Il2CppChar*, int)>(&StringBuilder::Insert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::ReplaceAllInChunk
// Il2CppName: ReplaceAllInChunk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(::Array<int>*, int, System::Text::StringBuilder*, int, ::Il2CppString*)>(&StringBuilder::ReplaceAllInChunk)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "ReplaceAllInChunk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::StartsWith
// Il2CppName: StartsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StringBuilder::*)(System::Text::StringBuilder*, int, int, ::Il2CppString*)>(&StringBuilder::StartsWith)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "StartsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::ReplaceInPlaceAtChunk
// Il2CppName: ReplaceInPlaceAtChunk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(System::Text::StringBuilder*&, int&, ::Il2CppChar*, int)>(&StringBuilder::ReplaceInPlaceAtChunk)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "ReplaceInPlaceAtChunk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::ThreadSafeCopy
// Il2CppName: ThreadSafeCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppChar*, ::Array<::Il2CppChar>*, int, int)>(&StringBuilder::ThreadSafeCopy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "ThreadSafeCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::ThreadSafeCopy
// Il2CppName: ThreadSafeCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<::Il2CppChar>*, int, ::Array<::Il2CppChar>*, int, int)>(&StringBuilder::ThreadSafeCopy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "ThreadSafeCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::FindChunkForIndex
// Il2CppName: FindChunkForIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(int)>(&StringBuilder::FindChunkForIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "FindChunkForIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Next
// Il2CppName: Next
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (StringBuilder::*)(System::Text::StringBuilder*)>(&StringBuilder::Next)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Next", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::ExpandByABlock
// Il2CppName: ExpandByABlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int)>(&StringBuilder::ExpandByABlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "ExpandByABlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(System::Text::StringBuilder*)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(System::Text::StringBuilder*)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::MakeRoom
// Il2CppName: MakeRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int, int, System::Text::StringBuilder*&, int&, bool)>(&StringBuilder::MakeRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "MakeRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int, int, System::Text::StringBuilder*)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int, int, System::Text::StringBuilder*)>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)(int, int, System::Text::StringBuilder*&, int&)>(&StringBuilder::Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: StringBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)()>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringBuilder::*)()>(&StringBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringBuilder::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (StringBuilder::*)()>(&StringBuilder::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilder*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.StringBuilderCache
#include "System/Text/StringBuilderCache.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ThreadStaticAttribute] Offset: 0xD81264
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder CachedInstance
System::Text::StringBuilder* System::Text::StringBuilderCache::_get_CachedInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilderCache::_get_CachedInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::StringBuilder*>("System.Text", "StringBuilderCache", "CachedInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder CachedInstance
void System::Text::StringBuilderCache::_set_CachedInstance(System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilderCache::_set_CachedInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "StringBuilderCache", "CachedInstance", value));
}
// Autogenerated method: System.Text.StringBuilderCache.Acquire
System::Text::StringBuilder* System::Text::StringBuilderCache::Acquire(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilderCache::Acquire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "StringBuilderCache", "Acquire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: System.Text.StringBuilderCache.Release
void System::Text::StringBuilderCache::Release(System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilderCache::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "StringBuilderCache", "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sb);
}
// Autogenerated method: System.Text.StringBuilderCache.GetStringAndRelease
::Il2CppString* System::Text::StringBuilderCache::GetStringAndRelease(System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::StringBuilderCache::GetStringAndRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "StringBuilderCache", "GetStringAndRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sb);
}
// Writing MetadataGetter for method: StringBuilderCache::Acquire
// Il2CppName: Acquire
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (*)(int)>(&StringBuilderCache::Acquire)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilderCache*), "Acquire", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringBuilderCache::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Text::StringBuilder*)>(&StringBuilderCache::Release)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilderCache*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>()});
  }
};
// Writing MetadataGetter for method: StringBuilderCache::GetStringAndRelease
// Il2CppName: GetStringAndRelease
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Text::StringBuilder*)>(&StringBuilderCache::GetStringAndRelease)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringBuilderCache*), "GetStringAndRelease", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.UnicodeEncoding
#include "System/Text/UnicodeEncoding.hpp"
// Including type: System.Text.UnicodeEncoding/Decoder
#include "System/Text/UnicodeEncoding_Decoder.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Text.EncoderNLS
#include "System/Text/EncoderNLS.hpp"
// Including type: System.Text.DecoderNLS
#include "System/Text/DecoderNLS.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 highLowPatternMask
uint64_t System::Text::UnicodeEncoding::_get_highLowPatternMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::_get_highLowPatternMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Text", "UnicodeEncoding", "highLowPatternMask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 highLowPatternMask
void System::Text::UnicodeEncoding::_set_highLowPatternMask(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::_set_highLowPatternMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "UnicodeEncoding", "highLowPatternMask", value));
}
// Autogenerated method: System.Text.UnicodeEncoding..cctor
void System::Text::UnicodeEncoding::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "UnicodeEncoding", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.UnicodeEncoding.OnDeserializing
void System::Text::UnicodeEncoding::OnDeserializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Text.UnicodeEncoding.SetDefaultFallbacks
void System::Text::UnicodeEncoding::SetDefaultFallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::SetDefaultFallbacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultFallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetByteCount
int System::Text::UnicodeEncoding::GetByteCount(::Array<::Il2CppChar>* chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetByteCount
int System::Text::UnicodeEncoding::GetByteCount(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetByteCount
int System::Text::UnicodeEncoding::GetByteCount(::Il2CppChar* chars, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetBytes
int System::Text::UnicodeEncoding::GetBytes(::Il2CppString* s, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetBytes
int System::Text::UnicodeEncoding::GetBytes(::Array<::Il2CppChar>* chars, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetBytes
int System::Text::UnicodeEncoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetCharCount
int System::Text::UnicodeEncoding::GetCharCount(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetCharCount
int System::Text::UnicodeEncoding::GetCharCount(uint8_t* bytes, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetChars
int System::Text::UnicodeEncoding::GetChars(::Array<uint8_t>* bytes, int byteIndex, int byteCount, ::Array<::Il2CppChar>* chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetChars
int System::Text::UnicodeEncoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetString
::Il2CppString* System::Text::UnicodeEncoding::GetString(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetByteCount
int System::Text::UnicodeEncoding::GetByteCount(::Il2CppChar* chars, int count, System::Text::EncoderNLS* encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(encoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count, encoder);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetBytes
int System::Text::UnicodeEncoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, System::Text::EncoderNLS* encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(encoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount, encoder);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetCharCount
int System::Text::UnicodeEncoding::GetCharCount(uint8_t* bytes, int count, System::Text::DecoderNLS* baseDecoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(baseDecoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count, baseDecoder);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetChars
int System::Text::UnicodeEncoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, System::Text::DecoderNLS* baseDecoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(baseDecoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount, baseDecoder);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetEncoder
System::Text::Encoder* System::Text::UnicodeEncoding::GetEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetEncoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetDecoder
System::Text::Decoder* System::Text::UnicodeEncoding::GetDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetDecoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Decoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetPreamble
::Array<uint8_t>* System::Text::UnicodeEncoding::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetPreamble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetMaxByteCount
int System::Text::UnicodeEncoding::GetMaxByteCount(int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetMaxByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, charCount);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetMaxCharCount
int System::Text::UnicodeEncoding::GetMaxCharCount(int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetMaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, byteCount);
}
// Autogenerated method: System.Text.UnicodeEncoding.Equals
bool System::Text::UnicodeEncoding::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.UnicodeEncoding.GetHashCode
int System::Text::UnicodeEncoding::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnicodeEncoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::*)(bool, bool)>(&UnicodeEncoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::*)(bool, bool)>(&UnicodeEncoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::*)(bool, bool, bool)>(&UnicodeEncoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::*)(bool, bool, bool)>(&UnicodeEncoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnicodeEncoding::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::*)()>(&UnicodeEncoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::*)()>(&UnicodeEncoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::OnDeserializing
// Il2CppName: OnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::*)(System::Runtime::Serialization::StreamingContext)>(&UnicodeEncoding::OnDeserializing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "OnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::SetDefaultFallbacks
// Il2CppName: SetDefaultFallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::*)()>(&UnicodeEncoding::SetDefaultFallbacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "SetDefaultFallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Array<::Il2CppChar>*, int, int)>(&UnicodeEncoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Il2CppString*)>(&UnicodeEncoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Il2CppChar*, int)>(&UnicodeEncoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Il2CppString*, int, int, ::Array<uint8_t>*, int)>(&UnicodeEncoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Array<::Il2CppChar>*, int, int, ::Array<uint8_t>*, int)>(&UnicodeEncoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Il2CppChar*, int, uint8_t*, int)>(&UnicodeEncoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Array<uint8_t>*, int, int)>(&UnicodeEncoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(uint8_t*, int)>(&UnicodeEncoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Array<uint8_t>*, int, int, ::Array<::Il2CppChar>*, int)>(&UnicodeEncoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(uint8_t*, int, ::Il2CppChar*, int)>(&UnicodeEncoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnicodeEncoding::*)(::Array<uint8_t>*, int, int)>(&UnicodeEncoding::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Il2CppChar*, int, System::Text::EncoderNLS*)>(&UnicodeEncoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(::Il2CppChar*, int, uint8_t*, int, System::Text::EncoderNLS*)>(&UnicodeEncoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(uint8_t*, int, System::Text::DecoderNLS*)>(&UnicodeEncoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(uint8_t*, int, ::Il2CppChar*, int, System::Text::DecoderNLS*)>(&UnicodeEncoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetEncoder
// Il2CppName: GetEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoder* (UnicodeEncoding::*)()>(&UnicodeEncoding::GetEncoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetDecoder
// Il2CppName: GetDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Decoder* (UnicodeEncoding::*)()>(&UnicodeEncoding::GetDecoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetPreamble
// Il2CppName: GetPreamble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (UnicodeEncoding::*)()>(&UnicodeEncoding::GetPreamble)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetPreamble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetMaxByteCount
// Il2CppName: GetMaxByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(int)>(&UnicodeEncoding::GetMaxByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetMaxByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetMaxCharCount
// Il2CppName: GetMaxCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)(int)>(&UnicodeEncoding::GetMaxCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetMaxCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnicodeEncoding::*)(::Il2CppObject*)>(&UnicodeEncoding::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicodeEncoding::*)()>(&UnicodeEncoding::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.UnicodeEncoding/Decoder
#include "System/Text/UnicodeEncoding_Decoder.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UnicodeEncoding/Decoder.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::UnicodeEncoding::Decoder::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::Decoder::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.UnicodeEncoding/Decoder.Reset
void System::Text::UnicodeEncoding::Decoder::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::Decoder::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UnicodeEncoding/Decoder.get_HasState
bool System::Text::UnicodeEncoding::Decoder::get_HasState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UnicodeEncoding::Decoder::get_HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnicodeEncoding::Decoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::Decoder::*)(System::Text::UnicodeEncoding*)>(&UnicodeEncoding::Decoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding::Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UnicodeEncoding*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::Decoder::*)(System::Text::UnicodeEncoding*)>(&UnicodeEncoding::Decoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding::Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UnicodeEncoding*>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::Decoder::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::Decoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UnicodeEncoding::Decoder::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding::Decoder*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::Decoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::Decoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UnicodeEncoding::Decoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding::Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::Decoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UnicodeEncoding::Decoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding::Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::Decoder::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicodeEncoding::Decoder::*)()>(&UnicodeEncoding::Decoder::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding::Decoder*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicodeEncoding::Decoder::get_HasState
// Il2CppName: get_HasState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnicodeEncoding::Decoder::*)()>(&UnicodeEncoding::Decoder::get_HasState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicodeEncoding::Decoder*), "get_HasState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.UTF32Encoding
#include "System/Text/UTF32Encoding.hpp"
// Including type: System.Text.UTF32Encoding/UTF32Decoder
#include "System/Text/UTF32Encoding_UTF32Decoder.hpp"
// Including type: System.Text.EncoderNLS
#include "System/Text/EncoderNLS.hpp"
// Including type: System.Text.DecoderNLS
#include "System/Text/DecoderNLS.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF32Encoding.GetSurrogate
uint System::Text::UTF32Encoding::GetSurrogate(::Il2CppChar cHigh, ::Il2CppChar cLow) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cHigh), ::il2cpp_utils::ExtractType(cLow)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, cHigh, cLow);
}
// Autogenerated method: System.Text.UTF32Encoding.GetHighSurrogate
::Il2CppChar System::Text::UTF32Encoding::GetHighSurrogate(uint iChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iChar)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, iChar);
}
// Autogenerated method: System.Text.UTF32Encoding.GetLowSurrogate
::Il2CppChar System::Text::UTF32Encoding::GetLowSurrogate(uint iChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iChar)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, iChar);
}
// Autogenerated method: System.Text.UTF32Encoding.SetDefaultFallbacks
void System::Text::UTF32Encoding::SetDefaultFallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::SetDefaultFallbacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultFallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF32Encoding.GetByteCount
int System::Text::UTF32Encoding::GetByteCount(::Array<::Il2CppChar>* chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Text.UTF32Encoding.GetByteCount
int System::Text::UTF32Encoding::GetByteCount(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.UTF32Encoding.GetByteCount
int System::Text::UTF32Encoding::GetByteCount(::Il2CppChar* chars, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count);
}
// Autogenerated method: System.Text.UTF32Encoding.GetBytes
int System::Text::UTF32Encoding::GetBytes(::Il2CppString* s, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.UTF32Encoding.GetBytes
int System::Text::UTF32Encoding::GetBytes(::Array<::Il2CppChar>* chars, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.UTF32Encoding.GetBytes
int System::Text::UTF32Encoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount);
}
// Autogenerated method: System.Text.UTF32Encoding.GetCharCount
int System::Text::UTF32Encoding::GetCharCount(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.UTF32Encoding.GetCharCount
int System::Text::UTF32Encoding::GetCharCount(uint8_t* bytes, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count);
}
// Autogenerated method: System.Text.UTF32Encoding.GetChars
int System::Text::UTF32Encoding::GetChars(::Array<uint8_t>* bytes, int byteIndex, int byteCount, ::Array<::Il2CppChar>* chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Text.UTF32Encoding.GetChars
int System::Text::UTF32Encoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount);
}
// Autogenerated method: System.Text.UTF32Encoding.GetString
::Il2CppString* System::Text::UTF32Encoding::GetString(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.UTF32Encoding.GetByteCount
int System::Text::UTF32Encoding::GetByteCount(::Il2CppChar* chars, int count, System::Text::EncoderNLS* encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(encoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count, encoder);
}
// Autogenerated method: System.Text.UTF32Encoding.GetBytes
int System::Text::UTF32Encoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, System::Text::EncoderNLS* encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(encoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount, encoder);
}
// Autogenerated method: System.Text.UTF32Encoding.GetCharCount
int System::Text::UTF32Encoding::GetCharCount(uint8_t* bytes, int count, System::Text::DecoderNLS* baseDecoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(baseDecoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count, baseDecoder);
}
// Autogenerated method: System.Text.UTF32Encoding.GetChars
int System::Text::UTF32Encoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, System::Text::DecoderNLS* baseDecoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(baseDecoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount, baseDecoder);
}
// Autogenerated method: System.Text.UTF32Encoding.GetDecoder
System::Text::Decoder* System::Text::UTF32Encoding::GetDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetDecoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Decoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF32Encoding.GetEncoder
System::Text::Encoder* System::Text::UTF32Encoding::GetEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetEncoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF32Encoding.GetMaxByteCount
int System::Text::UTF32Encoding::GetMaxByteCount(int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetMaxByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, charCount);
}
// Autogenerated method: System.Text.UTF32Encoding.GetMaxCharCount
int System::Text::UTF32Encoding::GetMaxCharCount(int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetMaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, byteCount);
}
// Autogenerated method: System.Text.UTF32Encoding.GetPreamble
::Array<uint8_t>* System::Text::UTF32Encoding::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetPreamble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF32Encoding.Equals
bool System::Text::UTF32Encoding::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.UTF32Encoding.GetHashCode
int System::Text::UTF32Encoding::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UTF32Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::*)(bool, bool)>(&UTF32Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::*)(bool, bool)>(&UTF32Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::*)(bool, bool, bool)>(&UTF32Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::*)(bool, bool, bool)>(&UTF32Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetSurrogate
// Il2CppName: GetSurrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UTF32Encoding::*)(::Il2CppChar, ::Il2CppChar)>(&UTF32Encoding::GetSurrogate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetSurrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetHighSurrogate
// Il2CppName: GetHighSurrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (UTF32Encoding::*)(uint)>(&UTF32Encoding::GetHighSurrogate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetHighSurrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetLowSurrogate
// Il2CppName: GetLowSurrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (UTF32Encoding::*)(uint)>(&UTF32Encoding::GetLowSurrogate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetLowSurrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::*)()>(&UTF32Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::*)()>(&UTF32Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::SetDefaultFallbacks
// Il2CppName: SetDefaultFallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::*)()>(&UTF32Encoding::SetDefaultFallbacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "SetDefaultFallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Array<::Il2CppChar>*, int, int)>(&UTF32Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Il2CppString*)>(&UTF32Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Il2CppChar*, int)>(&UTF32Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Il2CppString*, int, int, ::Array<uint8_t>*, int)>(&UTF32Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Array<::Il2CppChar>*, int, int, ::Array<uint8_t>*, int)>(&UTF32Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Il2CppChar*, int, uint8_t*, int)>(&UTF32Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Array<uint8_t>*, int, int)>(&UTF32Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(uint8_t*, int)>(&UTF32Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Array<uint8_t>*, int, int, ::Array<::Il2CppChar>*, int)>(&UTF32Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(uint8_t*, int, ::Il2CppChar*, int)>(&UTF32Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UTF32Encoding::*)(::Array<uint8_t>*, int, int)>(&UTF32Encoding::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Il2CppChar*, int, System::Text::EncoderNLS*)>(&UTF32Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(::Il2CppChar*, int, uint8_t*, int, System::Text::EncoderNLS*)>(&UTF32Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(uint8_t*, int, System::Text::DecoderNLS*)>(&UTF32Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(uint8_t*, int, ::Il2CppChar*, int, System::Text::DecoderNLS*)>(&UTF32Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetDecoder
// Il2CppName: GetDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Decoder* (UTF32Encoding::*)()>(&UTF32Encoding::GetDecoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetEncoder
// Il2CppName: GetEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoder* (UTF32Encoding::*)()>(&UTF32Encoding::GetEncoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetMaxByteCount
// Il2CppName: GetMaxByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(int)>(&UTF32Encoding::GetMaxByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetMaxByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetMaxCharCount
// Il2CppName: GetMaxCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)(int)>(&UTF32Encoding::GetMaxCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetMaxCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetPreamble
// Il2CppName: GetPreamble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (UTF32Encoding::*)()>(&UTF32Encoding::GetPreamble)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetPreamble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF32Encoding::*)(::Il2CppObject*)>(&UTF32Encoding::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF32Encoding::*)()>(&UTF32Encoding::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.UTF32Encoding/UTF32Decoder
#include "System/Text/UTF32Encoding_UTF32Decoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF32Encoding/UTF32Decoder.Reset
void System::Text::UTF32Encoding::UTF32Decoder::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::UTF32Decoder::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF32Encoding/UTF32Decoder.get_HasState
bool System::Text::UTF32Encoding::UTF32Decoder::get_HasState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::UTF32Decoder::get_HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UTF32Encoding::UTF32Decoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::UTF32Decoder::*)(System::Text::UTF32Encoding*)>(&UTF32Encoding::UTF32Decoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding::UTF32Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF32Encoding*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::UTF32Decoder::*)(System::Text::UTF32Encoding*)>(&UTF32Encoding::UTF32Decoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding::UTF32Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF32Encoding*>()});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::UTF32Decoder::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF32Encoding::UTF32Decoder::*)()>(&UTF32Encoding::UTF32Decoder::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding::UTF32Decoder*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF32Encoding::UTF32Decoder::get_HasState
// Il2CppName: get_HasState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF32Encoding::UTF32Decoder::*)()>(&UTF32Encoding::UTF32Decoder::get_HasState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF32Encoding::UTF32Decoder*), "get_HasState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.UTF7Encoding
#include "System/Text/UTF7Encoding.hpp"
// Including type: System.Text.UTF7Encoding/Decoder
#include "System/Text/UTF7Encoding_Decoder.hpp"
// Including type: System.Text.UTF7Encoding/Encoder
#include "System/Text/UTF7Encoding_Encoder.hpp"
// Including type: System.Text.UTF7Encoding/DecoderUTF7Fallback
#include "System/Text/UTF7Encoding_DecoderUTF7Fallback.hpp"
// Including type: System.Text.UTF7Encoding/DecoderUTF7FallbackBuffer
#include "System/Text/UTF7Encoding_DecoderUTF7FallbackBuffer.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Text.EncoderNLS
#include "System/Text/EncoderNLS.hpp"
// Including type: System.Text.DecoderNLS
#include "System/Text/DecoderNLS.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF7Encoding.MakeTables
void System::Text::UTF7Encoding::MakeTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::MakeTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding.SetDefaultFallbacks
void System::Text::UTF7Encoding::SetDefaultFallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::SetDefaultFallbacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultFallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding.OnDeserializing
void System::Text::UTF7Encoding::OnDeserializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Text.UTF7Encoding.OnDeserialized
void System::Text::UTF7Encoding::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Text.UTF7Encoding.Equals
bool System::Text::UTF7Encoding::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.UTF7Encoding.GetHashCode
int System::Text::UTF7Encoding::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding.GetByteCount
int System::Text::UTF7Encoding::GetByteCount(::Array<::Il2CppChar>* chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Text.UTF7Encoding.GetByteCount
int System::Text::UTF7Encoding::GetByteCount(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.UTF7Encoding.GetByteCount
int System::Text::UTF7Encoding::GetByteCount(::Il2CppChar* chars, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count);
}
// Autogenerated method: System.Text.UTF7Encoding.GetBytes
int System::Text::UTF7Encoding::GetBytes(::Il2CppString* s, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.UTF7Encoding.GetBytes
int System::Text::UTF7Encoding::GetBytes(::Array<::Il2CppChar>* chars, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.UTF7Encoding.GetBytes
int System::Text::UTF7Encoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount);
}
// Autogenerated method: System.Text.UTF7Encoding.GetCharCount
int System::Text::UTF7Encoding::GetCharCount(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.UTF7Encoding.GetCharCount
int System::Text::UTF7Encoding::GetCharCount(uint8_t* bytes, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count);
}
// Autogenerated method: System.Text.UTF7Encoding.GetChars
int System::Text::UTF7Encoding::GetChars(::Array<uint8_t>* bytes, int byteIndex, int byteCount, ::Array<::Il2CppChar>* chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Text.UTF7Encoding.GetChars
int System::Text::UTF7Encoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount);
}
// Autogenerated method: System.Text.UTF7Encoding.GetString
::Il2CppString* System::Text::UTF7Encoding::GetString(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.UTF7Encoding.GetByteCount
int System::Text::UTF7Encoding::GetByteCount(::Il2CppChar* chars, int count, System::Text::EncoderNLS* baseEncoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(baseEncoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count, baseEncoder);
}
// Autogenerated method: System.Text.UTF7Encoding.GetBytes
int System::Text::UTF7Encoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, System::Text::EncoderNLS* baseEncoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(baseEncoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount, baseEncoder);
}
// Autogenerated method: System.Text.UTF7Encoding.GetCharCount
int System::Text::UTF7Encoding::GetCharCount(uint8_t* bytes, int count, System::Text::DecoderNLS* baseDecoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(baseDecoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count, baseDecoder);
}
// Autogenerated method: System.Text.UTF7Encoding.GetChars
int System::Text::UTF7Encoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, System::Text::DecoderNLS* baseDecoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(baseDecoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount, baseDecoder);
}
// Autogenerated method: System.Text.UTF7Encoding.GetDecoder
System::Text::Decoder* System::Text::UTF7Encoding::GetDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetDecoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Decoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding.GetEncoder
System::Text::Encoder* System::Text::UTF7Encoding::GetEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetEncoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding.GetMaxByteCount
int System::Text::UTF7Encoding::GetMaxByteCount(int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetMaxByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, charCount);
}
// Autogenerated method: System.Text.UTF7Encoding.GetMaxCharCount
int System::Text::UTF7Encoding::GetMaxCharCount(int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::GetMaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, byteCount);
}
// Writing MetadataGetter for method: UTF7Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::*)(bool)>(&UTF7Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::*)(bool)>(&UTF7Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::MakeTables
// Il2CppName: MakeTables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::*)()>(&UTF7Encoding::MakeTables)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "MakeTables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::*)()>(&UTF7Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::*)()>(&UTF7Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::SetDefaultFallbacks
// Il2CppName: SetDefaultFallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::*)()>(&UTF7Encoding::SetDefaultFallbacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "SetDefaultFallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::OnDeserializing
// Il2CppName: OnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::*)(System::Runtime::Serialization::StreamingContext)>(&UTF7Encoding::OnDeserializing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "OnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::*)(System::Runtime::Serialization::StreamingContext)>(&UTF7Encoding::OnDeserialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF7Encoding::*)(::Il2CppObject*)>(&UTF7Encoding::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)()>(&UTF7Encoding::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Array<::Il2CppChar>*, int, int)>(&UTF7Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Il2CppString*)>(&UTF7Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Il2CppChar*, int)>(&UTF7Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Il2CppString*, int, int, ::Array<uint8_t>*, int)>(&UTF7Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Array<::Il2CppChar>*, int, int, ::Array<uint8_t>*, int)>(&UTF7Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Il2CppChar*, int, uint8_t*, int)>(&UTF7Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Array<uint8_t>*, int, int)>(&UTF7Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(uint8_t*, int)>(&UTF7Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Array<uint8_t>*, int, int, ::Array<::Il2CppChar>*, int)>(&UTF7Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(uint8_t*, int, ::Il2CppChar*, int)>(&UTF7Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UTF7Encoding::*)(::Array<uint8_t>*, int, int)>(&UTF7Encoding::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Il2CppChar*, int, System::Text::EncoderNLS*)>(&UTF7Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(::Il2CppChar*, int, uint8_t*, int, System::Text::EncoderNLS*)>(&UTF7Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(uint8_t*, int, System::Text::DecoderNLS*)>(&UTF7Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(uint8_t*, int, ::Il2CppChar*, int, System::Text::DecoderNLS*)>(&UTF7Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetDecoder
// Il2CppName: GetDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Decoder* (UTF7Encoding::*)()>(&UTF7Encoding::GetDecoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetEncoder
// Il2CppName: GetEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoder* (UTF7Encoding::*)()>(&UTF7Encoding::GetEncoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetMaxByteCount
// Il2CppName: GetMaxByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(int)>(&UTF7Encoding::GetMaxByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetMaxByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::GetMaxCharCount
// Il2CppName: GetMaxCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::*)(int)>(&UTF7Encoding::GetMaxCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding*), "GetMaxCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.UTF7Encoding/Decoder
#include "System/Text/UTF7Encoding_Decoder.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF7Encoding/Decoder.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::UTF7Encoding::Decoder::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::Decoder::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.UTF7Encoding/Decoder.Reset
void System::Text::UTF7Encoding::Decoder::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::Decoder::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding/Decoder.get_HasState
bool System::Text::UTF7Encoding::Decoder::get_HasState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::Decoder::get_HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UTF7Encoding::Decoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Decoder::*)(System::Text::UTF7Encoding*)>(&UTF7Encoding::Decoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF7Encoding*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Decoder::*)(System::Text::UTF7Encoding*)>(&UTF7Encoding::Decoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF7Encoding*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::Decoder::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Decoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF7Encoding::Decoder::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Decoder*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::Decoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Decoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF7Encoding::Decoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Decoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF7Encoding::Decoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::Decoder::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Decoder::*)()>(&UTF7Encoding::Decoder::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Decoder*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::Decoder::get_HasState
// Il2CppName: get_HasState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF7Encoding::Decoder::*)()>(&UTF7Encoding::Decoder::get_HasState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Decoder*), "get_HasState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.UTF7Encoding/Encoder
#include "System/Text/UTF7Encoding_Encoder.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF7Encoding/Encoder.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::UTF7Encoding::Encoder::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::Encoder::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.UTF7Encoding/Encoder.Reset
void System::Text::UTF7Encoding::Encoder::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::Encoder::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding/Encoder.get_HasState
bool System::Text::UTF7Encoding::Encoder::get_HasState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::Encoder::get_HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UTF7Encoding::Encoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Encoder::*)(System::Text::UTF7Encoding*)>(&UTF7Encoding::Encoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Encoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF7Encoding*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Encoder::*)(System::Text::UTF7Encoding*)>(&UTF7Encoding::Encoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Encoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF7Encoding*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::Encoder::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Encoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF7Encoding::Encoder::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Encoder*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::Encoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Encoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF7Encoding::Encoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Encoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Encoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF7Encoding::Encoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Encoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::Encoder::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::Encoder::*)()>(&UTF7Encoding::Encoder::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Encoder*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::Encoder::get_HasState
// Il2CppName: get_HasState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF7Encoding::Encoder::*)()>(&UTF7Encoding::Encoder::get_HasState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::Encoder*), "get_HasState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.UTF7Encoding/DecoderUTF7Fallback
#include "System/Text/UTF7Encoding_DecoderUTF7Fallback.hpp"
// Including type: System.Text.DecoderFallbackBuffer
#include "System/Text/DecoderFallbackBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF7Encoding/DecoderUTF7Fallback.CreateFallbackBuffer
System::Text::DecoderFallbackBuffer* System::Text::UTF7Encoding::DecoderUTF7Fallback::CreateFallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::DecoderUTF7Fallback::CreateFallbackBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFallbackBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::DecoderFallbackBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding/DecoderUTF7Fallback.get_MaxCharCount
int System::Text::UTF7Encoding::DecoderUTF7Fallback::get_MaxCharCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::DecoderUTF7Fallback::get_MaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding/DecoderUTF7Fallback.Equals
bool System::Text::UTF7Encoding::DecoderUTF7Fallback::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::DecoderUTF7Fallback::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.UTF7Encoding/DecoderUTF7Fallback.GetHashCode
int System::Text::UTF7Encoding::DecoderUTF7Fallback::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::DecoderUTF7Fallback::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7Fallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::DecoderUTF7Fallback::*)()>(&UTF7Encoding::DecoderUTF7Fallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7Fallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::DecoderUTF7Fallback::*)()>(&UTF7Encoding::DecoderUTF7Fallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7Fallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7Fallback::CreateFallbackBuffer
// Il2CppName: CreateFallbackBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::DecoderFallbackBuffer* (UTF7Encoding::DecoderUTF7Fallback::*)()>(&UTF7Encoding::DecoderUTF7Fallback::CreateFallbackBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7Fallback*), "CreateFallbackBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7Fallback::get_MaxCharCount
// Il2CppName: get_MaxCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::DecoderUTF7Fallback::*)()>(&UTF7Encoding::DecoderUTF7Fallback::get_MaxCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7Fallback*), "get_MaxCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7Fallback::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF7Encoding::DecoderUTF7Fallback::*)(::Il2CppObject*)>(&UTF7Encoding::DecoderUTF7Fallback::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7Fallback*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7Fallback::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::DecoderUTF7Fallback::*)()>(&UTF7Encoding::DecoderUTF7Fallback::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7Fallback*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.UTF7Encoding/DecoderUTF7FallbackBuffer
#include "System/Text/UTF7Encoding_DecoderUTF7FallbackBuffer.hpp"
// Including type: System.Text.UTF7Encoding/DecoderUTF7Fallback
#include "System/Text/UTF7Encoding_DecoderUTF7Fallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF7Encoding/DecoderUTF7FallbackBuffer.Fallback
bool System::Text::UTF7Encoding::DecoderUTF7FallbackBuffer::Fallback(::Array<uint8_t>* bytesUnknown, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::DecoderUTF7FallbackBuffer::Fallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytesUnknown), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bytesUnknown, index);
}
// Autogenerated method: System.Text.UTF7Encoding/DecoderUTF7FallbackBuffer.GetNextChar
::Il2CppChar System::Text::UTF7Encoding::DecoderUTF7FallbackBuffer::GetNextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::DecoderUTF7FallbackBuffer::GetNextChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding/DecoderUTF7FallbackBuffer.Reset
void System::Text::UTF7Encoding::DecoderUTF7FallbackBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::DecoderUTF7FallbackBuffer::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF7Encoding/DecoderUTF7FallbackBuffer.InternalFallback
int System::Text::UTF7Encoding::DecoderUTF7FallbackBuffer::InternalFallback(::Array<uint8_t>* bytes, uint8_t* pBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF7Encoding::DecoderUTF7FallbackBuffer::InternalFallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(pBytes)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, pBytes);
}
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7FallbackBuffer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::DecoderUTF7FallbackBuffer::*)(System::Text::UTF7Encoding::DecoderUTF7Fallback*)>(&UTF7Encoding::DecoderUTF7FallbackBuffer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7FallbackBuffer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF7Encoding::DecoderUTF7Fallback*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::DecoderUTF7FallbackBuffer::*)(System::Text::UTF7Encoding::DecoderUTF7Fallback*)>(&UTF7Encoding::DecoderUTF7FallbackBuffer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7FallbackBuffer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF7Encoding::DecoderUTF7Fallback*>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7FallbackBuffer::Fallback
// Il2CppName: Fallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF7Encoding::DecoderUTF7FallbackBuffer::*)(::Array<uint8_t>*, int)>(&UTF7Encoding::DecoderUTF7FallbackBuffer::Fallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7FallbackBuffer*), "Fallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7FallbackBuffer::GetNextChar
// Il2CppName: GetNextChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (UTF7Encoding::DecoderUTF7FallbackBuffer::*)()>(&UTF7Encoding::DecoderUTF7FallbackBuffer::GetNextChar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7FallbackBuffer*), "GetNextChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7FallbackBuffer::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF7Encoding::DecoderUTF7FallbackBuffer::*)()>(&UTF7Encoding::DecoderUTF7FallbackBuffer::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7FallbackBuffer*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF7Encoding::DecoderUTF7FallbackBuffer::InternalFallback
// Il2CppName: InternalFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF7Encoding::DecoderUTF7FallbackBuffer::*)(::Array<uint8_t>*, uint8_t*)>(&UTF7Encoding::DecoderUTF7FallbackBuffer::InternalFallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF7Encoding::DecoderUTF7FallbackBuffer*), "InternalFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.UTF8Encoding
#include "System/Text/UTF8Encoding.hpp"
// Including type: System.Text.UTF8Encoding/UTF8Encoder
#include "System/Text/UTF8Encoding_UTF8Encoder.hpp"
// Including type: System.Text.UTF8Encoding/UTF8Decoder
#include "System/Text/UTF8Encoding_UTF8Decoder.hpp"
// Including type: System.Text.DecoderFallbackBuffer
#include "System/Text/DecoderFallbackBuffer.hpp"
// Including type: System.Text.EncoderNLS
#include "System/Text/EncoderNLS.hpp"
// Including type: System.Text.DecoderNLS
#include "System/Text/DecoderNLS.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF8Encoding.PtrDiff
int System::Text::UTF8Encoding::PtrDiff(::Il2CppChar* a, ::Il2CppChar* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::PtrDiff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "UTF8Encoding", "PtrDiff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.Text.UTF8Encoding.PtrDiff
int System::Text::UTF8Encoding::PtrDiff(uint8_t* a, uint8_t* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::PtrDiff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "UTF8Encoding", "PtrDiff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.Text.UTF8Encoding.InRange
bool System::Text::UTF8Encoding::InRange(int ch, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "UTF8Encoding", "InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, start, end);
}
// Autogenerated method: System.Text.UTF8Encoding.FallbackInvalidByteSequence
bool System::Text::UTF8Encoding::FallbackInvalidByteSequence(uint8_t*& pSrc, int ch, System::Text::DecoderFallbackBuffer* fallback, ::Il2CppChar*& pTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::FallbackInvalidByteSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FallbackInvalidByteSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(fallback), ::il2cpp_utils::ExtractType(pTarget)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pSrc, ch, fallback, pTarget);
}
// Autogenerated method: System.Text.UTF8Encoding.FallbackInvalidByteSequence
int System::Text::UTF8Encoding::FallbackInvalidByteSequence(uint8_t* pSrc, int ch, System::Text::DecoderFallbackBuffer* fallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::FallbackInvalidByteSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FallbackInvalidByteSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(fallback)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, pSrc, ch, fallback);
}
// Autogenerated method: System.Text.UTF8Encoding.GetBytesUnknown
::Array<uint8_t>* System::Text::UTF8Encoding::GetBytesUnknown(uint8_t*& pSrc, int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetBytesUnknown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytesUnknown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, pSrc, ch);
}
// Autogenerated method: System.Text.UTF8Encoding.SetDefaultFallbacks
void System::Text::UTF8Encoding::SetDefaultFallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::SetDefaultFallbacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultFallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF8Encoding.GetByteCount
int System::Text::UTF8Encoding::GetByteCount(::Array<::Il2CppChar>* chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Text.UTF8Encoding.GetByteCount
int System::Text::UTF8Encoding::GetByteCount(::Il2CppString* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars);
}
// Autogenerated method: System.Text.UTF8Encoding.GetByteCount
int System::Text::UTF8Encoding::GetByteCount(::Il2CppChar* chars, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count);
}
// Autogenerated method: System.Text.UTF8Encoding.GetBytes
int System::Text::UTF8Encoding::GetBytes(::Il2CppString* s, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.UTF8Encoding.GetBytes
int System::Text::UTF8Encoding::GetBytes(::Array<::Il2CppChar>* chars, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.UTF8Encoding.GetBytes
int System::Text::UTF8Encoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount);
}
// Autogenerated method: System.Text.UTF8Encoding.GetCharCount
int System::Text::UTF8Encoding::GetCharCount(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.UTF8Encoding.GetCharCount
int System::Text::UTF8Encoding::GetCharCount(uint8_t* bytes, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count);
}
// Autogenerated method: System.Text.UTF8Encoding.GetChars
int System::Text::UTF8Encoding::GetChars(::Array<uint8_t>* bytes, int byteIndex, int byteCount, ::Array<::Il2CppChar>* chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Text.UTF8Encoding.GetChars
int System::Text::UTF8Encoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount);
}
// Autogenerated method: System.Text.UTF8Encoding.GetString
::Il2CppString* System::Text::UTF8Encoding::GetString(::Array<uint8_t>* bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.UTF8Encoding.GetByteCount
int System::Text::UTF8Encoding::GetByteCount(::Il2CppChar* chars, int count, System::Text::EncoderNLS* baseEncoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(baseEncoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count, baseEncoder);
}
// Autogenerated method: System.Text.UTF8Encoding.GetBytes
int System::Text::UTF8Encoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, System::Text::EncoderNLS* baseEncoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(baseEncoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount, baseEncoder);
}
// Autogenerated method: System.Text.UTF8Encoding.GetCharCount
int System::Text::UTF8Encoding::GetCharCount(uint8_t* bytes, int count, System::Text::DecoderNLS* baseDecoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(baseDecoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, count, baseDecoder);
}
// Autogenerated method: System.Text.UTF8Encoding.GetChars
int System::Text::UTF8Encoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, System::Text::DecoderNLS* baseDecoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(baseDecoder)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount, baseDecoder);
}
// Autogenerated method: System.Text.UTF8Encoding.GetDecoder
System::Text::Decoder* System::Text::UTF8Encoding::GetDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetDecoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Decoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF8Encoding.GetEncoder
System::Text::Encoder* System::Text::UTF8Encoding::GetEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetEncoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF8Encoding.GetMaxByteCount
int System::Text::UTF8Encoding::GetMaxByteCount(int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetMaxByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, charCount);
}
// Autogenerated method: System.Text.UTF8Encoding.GetMaxCharCount
int System::Text::UTF8Encoding::GetMaxCharCount(int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetMaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, byteCount);
}
// Autogenerated method: System.Text.UTF8Encoding.GetPreamble
::Array<uint8_t>* System::Text::UTF8Encoding::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetPreamble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF8Encoding.Equals
bool System::Text::UTF8Encoding::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.UTF8Encoding.GetHashCode
int System::Text::UTF8Encoding::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UTF8Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::*)(bool)>(&UTF8Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::*)(bool)>(&UTF8Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::*)(bool, bool)>(&UTF8Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::*)(bool, bool)>(&UTF8Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::PtrDiff
// Il2CppName: PtrDiff
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppChar*, ::Il2CppChar*)>(&UTF8Encoding::PtrDiff)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "PtrDiff", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::PtrDiff
// Il2CppName: PtrDiff
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint8_t*, uint8_t*)>(&UTF8Encoding::PtrDiff)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "PtrDiff", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::InRange
// Il2CppName: InRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, int, int)>(&UTF8Encoding::InRange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "InRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::FallbackInvalidByteSequence
// Il2CppName: FallbackInvalidByteSequence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF8Encoding::*)(uint8_t*&, int, System::Text::DecoderFallbackBuffer*, ::Il2CppChar*&)>(&UTF8Encoding::FallbackInvalidByteSequence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "FallbackInvalidByteSequence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderFallbackBuffer*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*&>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::FallbackInvalidByteSequence
// Il2CppName: FallbackInvalidByteSequence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(uint8_t*, int, System::Text::DecoderFallbackBuffer*)>(&UTF8Encoding::FallbackInvalidByteSequence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "FallbackInvalidByteSequence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderFallbackBuffer*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetBytesUnknown
// Il2CppName: GetBytesUnknown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (UTF8Encoding::*)(uint8_t*&, int)>(&UTF8Encoding::GetBytesUnknown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetBytesUnknown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*&>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::*)()>(&UTF8Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::*)()>(&UTF8Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::SetDefaultFallbacks
// Il2CppName: SetDefaultFallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::*)()>(&UTF8Encoding::SetDefaultFallbacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "SetDefaultFallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Array<::Il2CppChar>*, int, int)>(&UTF8Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Il2CppString*)>(&UTF8Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Il2CppChar*, int)>(&UTF8Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Il2CppString*, int, int, ::Array<uint8_t>*, int)>(&UTF8Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Array<::Il2CppChar>*, int, int, ::Array<uint8_t>*, int)>(&UTF8Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Il2CppChar*, int, uint8_t*, int)>(&UTF8Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Array<uint8_t>*, int, int)>(&UTF8Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(uint8_t*, int)>(&UTF8Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Array<uint8_t>*, int, int, ::Array<::Il2CppChar>*, int)>(&UTF8Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(uint8_t*, int, ::Il2CppChar*, int)>(&UTF8Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UTF8Encoding::*)(::Array<uint8_t>*, int, int)>(&UTF8Encoding::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Il2CppChar*, int, System::Text::EncoderNLS*)>(&UTF8Encoding::GetByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(::Il2CppChar*, int, uint8_t*, int, System::Text::EncoderNLS*)>(&UTF8Encoding::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::EncoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(uint8_t*, int, System::Text::DecoderNLS*)>(&UTF8Encoding::GetCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(uint8_t*, int, ::Il2CppChar*, int, System::Text::DecoderNLS*)>(&UTF8Encoding::GetChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Text::DecoderNLS*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetDecoder
// Il2CppName: GetDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Decoder* (UTF8Encoding::*)()>(&UTF8Encoding::GetDecoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetEncoder
// Il2CppName: GetEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoder* (UTF8Encoding::*)()>(&UTF8Encoding::GetEncoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetMaxByteCount
// Il2CppName: GetMaxByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(int)>(&UTF8Encoding::GetMaxByteCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetMaxByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetMaxCharCount
// Il2CppName: GetMaxCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)(int)>(&UTF8Encoding::GetMaxCharCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetMaxCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetPreamble
// Il2CppName: GetPreamble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (UTF8Encoding::*)()>(&UTF8Encoding::GetPreamble)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetPreamble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF8Encoding::*)(::Il2CppObject*)>(&UTF8Encoding::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UTF8Encoding::*)()>(&UTF8Encoding::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.UTF8Encoding/UTF8Encoder
#include "System/Text/UTF8Encoding_UTF8Encoder.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF8Encoding/UTF8Encoder.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::UTF8Encoding::UTF8Encoder::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::UTF8Encoder::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.UTF8Encoding/UTF8Encoder.Reset
void System::Text::UTF8Encoding::UTF8Encoder::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::UTF8Encoder::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF8Encoding/UTF8Encoder.get_HasState
bool System::Text::UTF8Encoding::UTF8Encoder::get_HasState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::UTF8Encoder::get_HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UTF8Encoding::UTF8Encoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Encoder::*)(System::Text::UTF8Encoding*)>(&UTF8Encoding::UTF8Encoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Encoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF8Encoding*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Encoder::*)(System::Text::UTF8Encoding*)>(&UTF8Encoding::UTF8Encoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Encoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF8Encoding*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::UTF8Encoder::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Encoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF8Encoding::UTF8Encoder::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Encoder*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::UTF8Encoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Encoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF8Encoding::UTF8Encoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Encoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Encoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF8Encoding::UTF8Encoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Encoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::UTF8Encoder::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Encoder::*)()>(&UTF8Encoding::UTF8Encoder::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Encoder*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::UTF8Encoder::get_HasState
// Il2CppName: get_HasState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF8Encoding::UTF8Encoder::*)()>(&UTF8Encoding::UTF8Encoder::get_HasState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Encoder*), "get_HasState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.UTF8Encoding/UTF8Decoder
#include "System/Text/UTF8Encoding_UTF8Decoder.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.UTF8Encoding/UTF8Decoder.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::UTF8Encoding::UTF8Decoder::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::UTF8Decoder::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.UTF8Encoding/UTF8Decoder.Reset
void System::Text::UTF8Encoding::UTF8Decoder::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::UTF8Decoder::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UTF8Encoding/UTF8Decoder.get_HasState
bool System::Text::UTF8Encoding::UTF8Decoder::get_HasState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF8Encoding::UTF8Decoder::get_HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UTF8Encoding::UTF8Decoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Decoder::*)(System::Text::UTF8Encoding*)>(&UTF8Encoding::UTF8Decoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF8Encoding*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Decoder::*)(System::Text::UTF8Encoding*)>(&UTF8Encoding::UTF8Decoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::UTF8Encoding*>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::UTF8Decoder::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Decoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF8Encoding::UTF8Decoder::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Decoder*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::UTF8Decoder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Decoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF8Encoding::UTF8Decoder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Decoder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&UTF8Encoding::UTF8Decoder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Decoder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::UTF8Decoder::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UTF8Encoding::UTF8Decoder::*)()>(&UTF8Encoding::UTF8Decoder::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Decoder*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UTF8Encoding::UTF8Decoder::get_HasState
// Il2CppName: get_HasState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UTF8Encoding::UTF8Decoder::*)()>(&UTF8Encoding::UTF8Decoder::get_HasState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UTF8Encoding::UTF8Decoder*), "get_HasState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.NormalizationCheck
#include "System/Text/NormalizationCheck.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationCheck Yes
System::Text::NormalizationCheck System::Text::NormalizationCheck::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationCheck::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::NormalizationCheck>("System.Text", "NormalizationCheck", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationCheck Yes
void System::Text::NormalizationCheck::_set_Yes(System::Text::NormalizationCheck value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationCheck::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationCheck", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationCheck No
System::Text::NormalizationCheck System::Text::NormalizationCheck::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationCheck::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::NormalizationCheck>("System.Text", "NormalizationCheck", "No"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationCheck No
void System::Text::NormalizationCheck::_set_No(System::Text::NormalizationCheck value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationCheck::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationCheck", "No", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationCheck Maybe
System::Text::NormalizationCheck System::Text::NormalizationCheck::_get_Maybe() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationCheck::_get_Maybe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::NormalizationCheck>("System.Text", "NormalizationCheck", "Maybe"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationCheck Maybe
void System::Text::NormalizationCheck::_set_Maybe(System::Text::NormalizationCheck value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationCheck::_set_Maybe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationCheck", "Maybe", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.Normalization
#include "System/Text/Normalization.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Text.NormalizationCheck
#include "System/Text/NormalizationCheck.hpp"
// Including type: System.Text.NormalizationForm
#include "System/Text/NormalizationForm.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte* props
uint8_t* System::Text::Normalization::_get_props() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_get_props");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("System.Text", "Normalization", "props"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* props
void System::Text::Normalization::_set_props(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_set_props");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "props", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32* mappedChars
int* System::Text::Normalization::_get_mappedChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_get_mappedChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int*>("System.Text", "Normalization", "mappedChars"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32* mappedChars
void System::Text::Normalization::_set_mappedChars(int* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_set_mappedChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "mappedChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int16* charMapIndex
int16_t* System::Text::Normalization::_get_charMapIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_get_charMapIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t*>("System.Text", "Normalization", "charMapIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int16* charMapIndex
void System::Text::Normalization::_set_charMapIndex(int16_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_set_charMapIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "charMapIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int16* helperIndex
int16_t* System::Text::Normalization::_get_helperIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_get_helperIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t*>("System.Text", "Normalization", "helperIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int16* helperIndex
void System::Text::Normalization::_set_helperIndex(int16_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_set_helperIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "helperIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt16* mapIdxToComposite
uint16_t* System::Text::Normalization::_get_mapIdxToComposite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_get_mapIdxToComposite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t*>("System.Text", "Normalization", "mapIdxToComposite"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16* mapIdxToComposite
void System::Text::Normalization::_set_mapIdxToComposite(uint16_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_set_mapIdxToComposite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "mapIdxToComposite", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* combiningClass
uint8_t* System::Text::Normalization::_get_combiningClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_get_combiningClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("System.Text", "Normalization", "combiningClass"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* combiningClass
void System::Text::Normalization::_set_combiningClass(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_set_combiningClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "combiningClass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object forLock
::Il2CppObject* System::Text::Normalization::_get_forLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_get_forLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Text", "Normalization", "forLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object forLock
void System::Text::Normalization::_set_forLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_set_forLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "forLock", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean isReady
bool System::Text::Normalization::_get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_get_isReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Text", "Normalization", "isReady"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean isReady
void System::Text::Normalization::_set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::_set_isReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "isReady", value));
}
// Autogenerated method: System.Text.Normalization.PropValue
uint System::Text::Normalization::PropValue(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::PropValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "PropValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: System.Text.Normalization.CharMapIdx
int System::Text::Normalization::CharMapIdx(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::CharMapIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "CharMapIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: System.Text.Normalization.GetCombiningClass
uint8_t System::Text::Normalization::GetCombiningClass(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::GetCombiningClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetCombiningClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Text.Normalization.GetPrimaryCompositeFromMapIndex
int System::Text::Normalization::GetPrimaryCompositeFromMapIndex(int src) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::GetPrimaryCompositeFromMapIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetPrimaryCompositeFromMapIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src);
}
// Autogenerated method: System.Text.Normalization.GetPrimaryCompositeHelperIndex
int System::Text::Normalization::GetPrimaryCompositeHelperIndex(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::GetPrimaryCompositeHelperIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetPrimaryCompositeHelperIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: System.Text.Normalization.Compose
::Il2CppString* System::Text::Normalization::Compose(::Il2CppString* source, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::Compose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Compose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(checkType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, checkType);
}
// Autogenerated method: System.Text.Normalization.Combine
System::Text::StringBuilder* System::Text::Normalization::Combine(::Il2CppString* source, int start, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(checkType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, start, checkType);
}
// Autogenerated method: System.Text.Normalization.Combine
void System::Text::Normalization::Combine(System::Text::StringBuilder* sb, int i, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(checkType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sb, i, checkType);
}
// Autogenerated method: System.Text.Normalization.CombineHangul
int System::Text::Normalization::CombineHangul(System::Text::StringBuilder* sb, ::Il2CppString* s, int current) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::CombineHangul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "CombineHangul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sb, s, current);
}
// Autogenerated method: System.Text.Normalization.Fetch
int System::Text::Normalization::Fetch(System::Text::StringBuilder* sb, ::Il2CppString* s, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::Fetch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Fetch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sb, s, i);
}
// Autogenerated method: System.Text.Normalization.TryComposeWithPreviousStarter
int System::Text::Normalization::TryComposeWithPreviousStarter(System::Text::StringBuilder* sb, ::Il2CppString* s, int current) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::TryComposeWithPreviousStarter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "TryComposeWithPreviousStarter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sb, s, current);
}
// Autogenerated method: System.Text.Normalization.TryCompose
int System::Text::Normalization::TryCompose(int i, int starter, int candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::TryCompose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "TryCompose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(starter), ::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i, starter, candidate);
}
// Autogenerated method: System.Text.Normalization.Decompose
::Il2CppString* System::Text::Normalization::Decompose(::Il2CppString* source, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::Decompose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Decompose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(checkType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, checkType);
}
// Autogenerated method: System.Text.Normalization.Decompose
void System::Text::Normalization::Decompose(::Il2CppString* source, System::Text::StringBuilder*& sb, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::Decompose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Decompose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(checkType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, sb, checkType);
}
// Autogenerated method: System.Text.Normalization.ReorderCanonical
void System::Text::Normalization::ReorderCanonical(::Il2CppString* src, System::Text::StringBuilder*& sb, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::ReorderCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "ReorderCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, sb, start);
}
// Autogenerated method: System.Text.Normalization.DecomposeChar
void System::Text::Normalization::DecomposeChar(System::Text::StringBuilder*& sb, ::Array<int>*& buf, ::Il2CppString* s, int i, int checkType, int& start) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::DecomposeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "DecomposeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(checkType), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sb, buf, s, i, checkType, start);
}
// Autogenerated method: System.Text.Normalization.QuickCheck
System::Text::NormalizationCheck System::Text::Normalization::QuickCheck(::Il2CppChar c, int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::QuickCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "QuickCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::NormalizationCheck, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c, type);
}
// Autogenerated method: System.Text.Normalization.GetCanonicalHangul
int System::Text::Normalization::GetCanonicalHangul(int s, ::Array<int>* buf, int bufIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::GetCanonicalHangul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetCanonicalHangul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(bufIdx)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, buf, bufIdx);
}
// Autogenerated method: System.Text.Normalization.GetCanonical
int System::Text::Normalization::GetCanonical(int c, ::Array<int>* buf, int bufIdx, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::GetCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(bufIdx), ::il2cpp_utils::ExtractType(checkType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c, buf, bufIdx, checkType);
}
// Autogenerated method: System.Text.Normalization.Normalize
::Il2CppString* System::Text::Normalization::Normalize(::Il2CppString* source, System::Text::NormalizationForm normalizationForm) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(normalizationForm)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, normalizationForm);
}
// Autogenerated method: System.Text.Normalization.Normalize
::Il2CppString* System::Text::Normalization::Normalize(::Il2CppString* source, int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, type);
}
// Autogenerated method: System.Text.Normalization.load_normalization_resource
void System::Text::Normalization::load_normalization_resource(System::IntPtr& props, System::IntPtr& mappedChars, System::IntPtr& charMapIndex, System::IntPtr& helperIndex, System::IntPtr& mapIdxToComposite, System::IntPtr& combiningClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::load_normalization_resource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "load_normalization_resource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, props, mappedChars, charMapIndex, helperIndex, mapIdxToComposite, combiningClass);
}
// Autogenerated method: System.Text.Normalization..cctor
void System::Text::Normalization::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Normalization::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Normalization::PropValue
// Il2CppName: PropValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(int)>(&Normalization::PropValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "PropValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::CharMapIdx
// Il2CppName: CharMapIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Normalization::CharMapIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "CharMapIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::GetCombiningClass
// Il2CppName: GetCombiningClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(int)>(&Normalization::GetCombiningClass)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "GetCombiningClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::GetPrimaryCompositeFromMapIndex
// Il2CppName: GetPrimaryCompositeFromMapIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Normalization::GetPrimaryCompositeFromMapIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "GetPrimaryCompositeFromMapIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::GetPrimaryCompositeHelperIndex
// Il2CppName: GetPrimaryCompositeHelperIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Normalization::GetPrimaryCompositeHelperIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "GetPrimaryCompositeHelperIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::Compose
// Il2CppName: Compose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, int)>(&Normalization::Compose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "Compose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::Combine
// Il2CppName: Combine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (*)(::Il2CppString*, int, int)>(&Normalization::Combine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "Combine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::Combine
// Il2CppName: Combine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Text::StringBuilder*, int, int)>(&Normalization::Combine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "Combine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::CombineHangul
// Il2CppName: CombineHangul
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Text::StringBuilder*, ::Il2CppString*, int)>(&Normalization::CombineHangul)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "CombineHangul", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::Fetch
// Il2CppName: Fetch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Text::StringBuilder*, ::Il2CppString*, int)>(&Normalization::Fetch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "Fetch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::TryComposeWithPreviousStarter
// Il2CppName: TryComposeWithPreviousStarter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Text::StringBuilder*, ::Il2CppString*, int)>(&Normalization::TryComposeWithPreviousStarter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "TryComposeWithPreviousStarter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::TryCompose
// Il2CppName: TryCompose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int, int)>(&Normalization::TryCompose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "TryCompose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::Decompose
// Il2CppName: Decompose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, int)>(&Normalization::Decompose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "Decompose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::Decompose
// Il2CppName: Decompose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Text::StringBuilder*&, int)>(&Normalization::Decompose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "Decompose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::ReorderCanonical
// Il2CppName: ReorderCanonical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Text::StringBuilder*&, int)>(&Normalization::ReorderCanonical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "ReorderCanonical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::DecomposeChar
// Il2CppName: DecomposeChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Text::StringBuilder*&, ::Array<int>*&, ::Il2CppString*, int, int, int&)>(&Normalization::DecomposeChar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "DecomposeChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Normalization::QuickCheck
// Il2CppName: QuickCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::NormalizationCheck (*)(::Il2CppChar, int)>(&Normalization::QuickCheck)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "QuickCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::GetCanonicalHangul
// Il2CppName: GetCanonicalHangul
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, ::Array<int>*, int)>(&Normalization::GetCanonicalHangul)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "GetCanonicalHangul", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::GetCanonical
// Il2CppName: GetCanonical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, ::Array<int>*, int, int)>(&Normalization::GetCanonical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "GetCanonical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::Normalize
// Il2CppName: Normalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, System::Text::NormalizationForm)>(&Normalization::Normalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "Normalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::NormalizationForm>()});
  }
};
// Writing MetadataGetter for method: Normalization::Normalize
// Il2CppName: Normalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, int)>(&Normalization::Normalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "Normalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Normalization::load_normalization_resource
// Il2CppName: load_normalization_resource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr&, System::IntPtr&, System::IntPtr&, System::IntPtr&, System::IntPtr&, System::IntPtr&)>(&Normalization::load_normalization_resource)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), "load_normalization_resource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>()});
  }
};
// Writing MetadataGetter for method: Normalization::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Normalization::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normalization*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.EncodingHelper
#include "System/Text/EncodingHelper.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding utf8EncodingWithoutMarkers
System::Text::Encoding* System::Text::EncodingHelper::_get_utf8EncodingWithoutMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::_get_utf8EncodingWithoutMarkers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::Encoding*>("System.Text", "EncodingHelper", "utf8EncodingWithoutMarkers"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding utf8EncodingWithoutMarkers
void System::Text::EncodingHelper::_set_utf8EncodingWithoutMarkers(System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::_set_utf8EncodingWithoutMarkers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingHelper", "utf8EncodingWithoutMarkers", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object lockobj
::Il2CppObject* System::Text::EncodingHelper::_get_lockobj() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::_get_lockobj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Text", "EncodingHelper", "lockobj"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object lockobj
void System::Text::EncodingHelper::_set_lockobj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::_set_lockobj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingHelper", "lockobj", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.Assembly i18nAssembly
System::Reflection::Assembly* System::Text::EncodingHelper::_get_i18nAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::_get_i18nAssembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::Assembly*>("System.Text", "EncodingHelper", "i18nAssembly"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.Assembly i18nAssembly
void System::Text::EncodingHelper::_set_i18nAssembly(System::Reflection::Assembly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::_set_i18nAssembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingHelper", "i18nAssembly", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean i18nDisabled
bool System::Text::EncodingHelper::_get_i18nDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::_get_i18nDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Text", "EncodingHelper", "i18nDisabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean i18nDisabled
void System::Text::EncodingHelper::_set_i18nDisabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::_set_i18nDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingHelper", "i18nDisabled", value));
}
// Autogenerated method: System.Text.EncodingHelper.get_UTF8Unmarked
System::Text::Encoding* System::Text::EncodingHelper::get_UTF8Unmarked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::get_UTF8Unmarked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", "get_UTF8Unmarked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.EncodingHelper.InternalCodePage
::Il2CppString* System::Text::EncodingHelper::InternalCodePage(int& code_page) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::InternalCodePage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", "InternalCodePage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code_page)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, code_page);
}
// Autogenerated method: System.Text.EncodingHelper.GetDefaultEncoding
System::Text::Encoding* System::Text::EncodingHelper::GetDefaultEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::GetDefaultEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", "GetDefaultEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.EncodingHelper.InvokeI18N
::Il2CppObject* System::Text::EncodingHelper::InvokeI18N(::Il2CppString* name, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::InvokeI18N");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", "InvokeI18N", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, args);
}
// Creating initializer_list -> params proxy for: System.Object InvokeI18N(System.String name, params System.Object[] args)
::Il2CppObject* System::Text::EncodingHelper::InvokeI18N(::Il2CppString* name, std::initializer_list<::Il2CppObject*> args) {
  return System::Text::EncodingHelper::InvokeI18N(name, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.Text.EncodingHelper..cctor
void System::Text::EncodingHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::EncodingHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: EncodingHelper::get_UTF8Unmarked
// Il2CppName: get_UTF8Unmarked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (*)()>(&EncodingHelper::get_UTF8Unmarked)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingHelper*), "get_UTF8Unmarked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EncodingHelper::InternalCodePage
// Il2CppName: InternalCodePage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(int&)>(&EncodingHelper::InternalCodePage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingHelper*), "InternalCodePage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: EncodingHelper::GetDefaultEncoding
// Il2CppName: GetDefaultEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (*)()>(&EncodingHelper::GetDefaultEncoding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingHelper*), "GetDefaultEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EncodingHelper::InvokeI18N
// Il2CppName: InvokeI18N
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::Il2CppString*, ::Array<::Il2CppObject*>*)>(&EncodingHelper::InvokeI18N)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingHelper*), "InvokeI18N", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: EncodingHelper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&EncodingHelper::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EncodingHelper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.NormalizationForm
#include "System/Text/NormalizationForm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationForm FormC
System::Text::NormalizationForm System::Text::NormalizationForm::_get_FormC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationForm::_get_FormC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::NormalizationForm>("System.Text", "NormalizationForm", "FormC"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationForm FormC
void System::Text::NormalizationForm::_set_FormC(System::Text::NormalizationForm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationForm::_set_FormC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationForm", "FormC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationForm FormD
System::Text::NormalizationForm System::Text::NormalizationForm::_get_FormD() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationForm::_get_FormD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::NormalizationForm>("System.Text", "NormalizationForm", "FormD"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationForm FormD
void System::Text::NormalizationForm::_set_FormD(System::Text::NormalizationForm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationForm::_set_FormD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationForm", "FormD", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationForm FormKC
System::Text::NormalizationForm System::Text::NormalizationForm::_get_FormKC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationForm::_get_FormKC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::NormalizationForm>("System.Text", "NormalizationForm", "FormKC"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationForm FormKC
void System::Text::NormalizationForm::_set_FormKC(System::Text::NormalizationForm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationForm::_set_FormKC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationForm", "FormKC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationForm FormKD
System::Text::NormalizationForm System::Text::NormalizationForm::_get_FormKD() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationForm::_get_FormKD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::NormalizationForm>("System.Text", "NormalizationForm", "FormKD"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationForm FormKD
void System::Text::NormalizationForm::_set_FormKD(System::Text::NormalizationForm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::NormalizationForm::_set_FormKD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationForm", "FormKD", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.FastResourceComparer
#include "System/Resources/FastResourceComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Resources.FastResourceComparer Default
System::Resources::FastResourceComparer* System::Resources::FastResourceComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::FastResourceComparer*>("System.Resources", "FastResourceComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Resources.FastResourceComparer Default
void System::Resources::FastResourceComparer::_set_Default(System::Resources::FastResourceComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "FastResourceComparer", "Default", value));
}
// Autogenerated method: System.Resources.FastResourceComparer.GetHashCode
int System::Resources::FastResourceComparer::GetHashCode(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Resources.FastResourceComparer.GetHashCode
int System::Resources::FastResourceComparer::GetHashCode(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Resources.FastResourceComparer.HashFunction
int System::Resources::FastResourceComparer::HashFunction(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::HashFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "FastResourceComparer", "HashFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Resources.FastResourceComparer.Compare
int System::Resources::FastResourceComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Resources.FastResourceComparer.Compare
int System::Resources::FastResourceComparer::Compare(::Il2CppString* a, ::Il2CppString* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Resources.FastResourceComparer.Equals
bool System::Resources::FastResourceComparer::Equals(::Il2CppString* a, ::Il2CppString* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Resources.FastResourceComparer.Equals
bool System::Resources::FastResourceComparer::Equals(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Resources.FastResourceComparer.CompareOrdinal
int System::Resources::FastResourceComparer::CompareOrdinal(::Il2CppString* a, ::Array<uint8_t>* bytes, int bCharLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "FastResourceComparer", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(bCharLength)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, bytes, bCharLength);
}
// Autogenerated method: System.Resources.FastResourceComparer.CompareOrdinal
int System::Resources::FastResourceComparer::CompareOrdinal(::Array<uint8_t>* bytes, int aCharLength, ::Il2CppString* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "FastResourceComparer", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(aCharLength), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, aCharLength, b);
}
// Autogenerated method: System.Resources.FastResourceComparer.CompareOrdinal
int System::Resources::FastResourceComparer::CompareOrdinal(uint8_t* a, int byteLen, ::Il2CppString* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "FastResourceComparer", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(byteLen), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, byteLen, b);
}
// Autogenerated method: System.Resources.FastResourceComparer..cctor
void System::Resources::FastResourceComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::FastResourceComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "FastResourceComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: FastResourceComparer::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FastResourceComparer::*)(::Il2CppObject*)>(&FastResourceComparer::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FastResourceComparer::*)(::Il2CppString*)>(&FastResourceComparer::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::HashFunction
// Il2CppName: HashFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppString*)>(&FastResourceComparer::HashFunction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "HashFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FastResourceComparer::*)(::Il2CppObject*, ::Il2CppObject*)>(&FastResourceComparer::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FastResourceComparer::*)(::Il2CppString*, ::Il2CppString*)>(&FastResourceComparer::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FastResourceComparer::*)(::Il2CppString*, ::Il2CppString*)>(&FastResourceComparer::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FastResourceComparer::*)(::Il2CppObject*, ::Il2CppObject*)>(&FastResourceComparer::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::CompareOrdinal
// Il2CppName: CompareOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppString*, ::Array<uint8_t>*, int)>(&FastResourceComparer::CompareOrdinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "CompareOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::CompareOrdinal
// Il2CppName: CompareOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int, ::Il2CppString*)>(&FastResourceComparer::CompareOrdinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "CompareOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::CompareOrdinal
// Il2CppName: CompareOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint8_t*, int, ::Il2CppString*)>(&FastResourceComparer::CompareOrdinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), "CompareOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&FastResourceComparer::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FastResourceComparer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FastResourceComparer::*)()>(&FastResourceComparer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FastResourceComparer::*)()>(&FastResourceComparer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FastResourceComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Resources.FileBasedResourceGroveler
#include "System/Resources/FileBasedResourceGroveler.hpp"
// Including type: System.Resources.ResourceManager/ResourceManagerMediator
#include "System/Resources/ResourceManager_ResourceManagerMediator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: FileBasedResourceGroveler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FileBasedResourceGroveler::*)(System::Resources::ResourceManager::ResourceManagerMediator*)>(&FileBasedResourceGroveler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FileBasedResourceGroveler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceManager::ResourceManagerMediator*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FileBasedResourceGroveler::*)(System::Resources::ResourceManager::ResourceManagerMediator*)>(&FileBasedResourceGroveler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FileBasedResourceGroveler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceManager::ResourceManagerMediator*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Resources.IResourceReader
#include "System/Resources/IResourceReader.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Resources.IResourceReader.Close
void System::Resources::IResourceReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::IResourceReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.IResourceReader.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Resources::IResourceReader::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::IResourceReader::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IResourceReader::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IResourceReader::*)()>(&IResourceReader::Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IResourceReader*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IResourceReader::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IDictionaryEnumerator* (IResourceReader::*)()>(&IResourceReader::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IResourceReader*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.ManifestBasedResourceGroveler
#include "System/Resources/ManifestBasedResourceGroveler.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Resources.ResourceManager/ResourceManagerMediator
#include "System/Resources/ResourceManager_ResourceManagerMediator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Resources.ManifestBasedResourceGroveler.GetNeutralResourcesLanguage
System::Globalization::CultureInfo* System::Resources::ManifestBasedResourceGroveler::GetNeutralResourcesLanguage(System::Reflection::Assembly* a, System::Resources::UltimateResourceFallbackLocation& fallbackLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ManifestBasedResourceGroveler::GetNeutralResourcesLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "ManifestBasedResourceGroveler", "GetNeutralResourcesLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(fallbackLocation)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, fallbackLocation);
}
// Autogenerated method: System.Resources.ManifestBasedResourceGroveler.GetNeutralResourcesLanguageAttribute
bool System::Resources::ManifestBasedResourceGroveler::GetNeutralResourcesLanguageAttribute(System::Reflection::Assembly* assembly, ::Il2CppString*& cultureName, int16_t& fallbackLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ManifestBasedResourceGroveler::GetNeutralResourcesLanguageAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "ManifestBasedResourceGroveler", "GetNeutralResourcesLanguageAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly), ::il2cpp_utils::ExtractType(cultureName), ::il2cpp_utils::ExtractType(fallbackLocation)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assembly, cultureName, fallbackLocation);
}
// Writing MetadataGetter for method: ManifestBasedResourceGroveler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ManifestBasedResourceGroveler::*)(System::Resources::ResourceManager::ResourceManagerMediator*)>(&ManifestBasedResourceGroveler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ManifestBasedResourceGroveler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceManager::ResourceManagerMediator*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ManifestBasedResourceGroveler::*)(System::Resources::ResourceManager::ResourceManagerMediator*)>(&ManifestBasedResourceGroveler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ManifestBasedResourceGroveler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceManager::ResourceManagerMediator*>()});
  }
};
// Writing MetadataGetter for method: ManifestBasedResourceGroveler::GetNeutralResourcesLanguage
// Il2CppName: GetNeutralResourcesLanguage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Globalization::CultureInfo* (*)(System::Reflection::Assembly*, System::Resources::UltimateResourceFallbackLocation&)>(&ManifestBasedResourceGroveler::GetNeutralResourcesLanguage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ManifestBasedResourceGroveler*), "GetNeutralResourcesLanguage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::Resources::UltimateResourceFallbackLocation&>()});
  }
};
// Writing MetadataGetter for method: ManifestBasedResourceGroveler::GetNeutralResourcesLanguageAttribute
// Il2CppName: GetNeutralResourcesLanguageAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::Assembly*, ::Il2CppString*&, int16_t&)>(&ManifestBasedResourceGroveler::GetNeutralResourcesLanguageAttribute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ManifestBasedResourceGroveler*), "GetNeutralResourcesLanguageAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<int16_t&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Resources.MissingManifestResourceException
#include "System/Resources/MissingManifestResourceException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MissingManifestResourceException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissingManifestResourceException::*)()>(&MissingManifestResourceException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissingManifestResourceException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissingManifestResourceException::*)()>(&MissingManifestResourceException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissingManifestResourceException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissingManifestResourceException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissingManifestResourceException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&MissingManifestResourceException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissingManifestResourceException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissingManifestResourceException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&MissingManifestResourceException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissingManifestResourceException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.NeutralResourcesLanguageAttribute
#include "System/Resources/NeutralResourcesLanguageAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Resources.NeutralResourcesLanguageAttribute.get_CultureName
::Il2CppString* System::Resources::NeutralResourcesLanguageAttribute::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::NeutralResourcesLanguageAttribute::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.NeutralResourcesLanguageAttribute.get_Location
System::Resources::UltimateResourceFallbackLocation System::Resources::NeutralResourcesLanguageAttribute::get_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::NeutralResourcesLanguageAttribute::get_Location");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Resources::UltimateResourceFallbackLocation, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NeutralResourcesLanguageAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NeutralResourcesLanguageAttribute::*)(::Il2CppString*)>(&NeutralResourcesLanguageAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NeutralResourcesLanguageAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NeutralResourcesLanguageAttribute::*)(::Il2CppString*)>(&NeutralResourcesLanguageAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NeutralResourcesLanguageAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NeutralResourcesLanguageAttribute::get_CultureName
// Il2CppName: get_CultureName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NeutralResourcesLanguageAttribute::*)()>(&NeutralResourcesLanguageAttribute::get_CultureName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NeutralResourcesLanguageAttribute*), "get_CultureName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NeutralResourcesLanguageAttribute::get_Location
// Il2CppName: get_Location
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Resources::UltimateResourceFallbackLocation (NeutralResourcesLanguageAttribute::*)()>(&NeutralResourcesLanguageAttribute::get_Location)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NeutralResourcesLanguageAttribute*), "get_Location", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.ResourceManager
#include "System/Resources/ResourceManager.hpp"
// Including type: System.Resources.ResourceManager/CultureNameResourceSetPair
#include "System/Resources/ResourceManager_CultureNameResourceSetPair.hpp"
// Including type: System.Resources.ResourceManager/ResourceManagerMediator
#include "System/Resources/ResourceManager_ResourceManagerMediator.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Resources.ResourceSet
#include "System/Resources/ResourceSet.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.RuntimeAssembly
#include "System/Reflection/RuntimeAssembly.hpp"
// Including type: System.Resources.IResourceGroveler
#include "System/Resources/IResourceGroveler.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 MagicNumber
int System::Resources::ResourceManager::_get_MagicNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_get_MagicNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Resources", "ResourceManager", "MagicNumber"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 MagicNumber
void System::Resources::ResourceManager::_set_MagicNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_set_MagicNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceManager", "MagicNumber", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 HeaderVersionNumber
int System::Resources::ResourceManager::_get_HeaderVersionNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_get_HeaderVersionNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Resources", "ResourceManager", "HeaderVersionNumber"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 HeaderVersionNumber
void System::Resources::ResourceManager::_set_HeaderVersionNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_set_HeaderVersionNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceManager", "HeaderVersionNumber", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type _minResourceSet
System::Type* System::Resources::ResourceManager::_get__minResourceSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_get__minResourceSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Resources", "ResourceManager", "_minResourceSet"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type _minResourceSet
void System::Resources::ResourceManager::_set__minResourceSet(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_set__minResourceSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceManager", "_minResourceSet", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String ResReaderTypeName
::Il2CppString* System::Resources::ResourceManager::_get_ResReaderTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_get_ResReaderTypeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Resources", "ResourceManager", "ResReaderTypeName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String ResReaderTypeName
void System::Resources::ResourceManager::_set_ResReaderTypeName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_set_ResReaderTypeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceManager", "ResReaderTypeName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String ResSetTypeName
::Il2CppString* System::Resources::ResourceManager::_get_ResSetTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_get_ResSetTypeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Resources", "ResourceManager", "ResSetTypeName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String ResSetTypeName
void System::Resources::ResourceManager::_set_ResSetTypeName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_set_ResSetTypeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceManager", "ResSetTypeName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String MscorlibName
::Il2CppString* System::Resources::ResourceManager::_get_MscorlibName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_get_MscorlibName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Resources", "ResourceManager", "MscorlibName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String MscorlibName
void System::Resources::ResourceManager::_set_MscorlibName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_set_MscorlibName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceManager", "MscorlibName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 DEBUG
int System::Resources::ResourceManager::_get_DEBUG() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_get_DEBUG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Resources", "ResourceManager", "DEBUG"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 DEBUG
void System::Resources::ResourceManager::_set_DEBUG(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::_set_DEBUG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceManager", "DEBUG", value));
}
// Autogenerated method: System.Resources.ResourceManager.Init
void System::Resources::ResourceManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceManager.OnDeserializing
void System::Resources::ResourceManager::OnDeserializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Resources.ResourceManager.OnDeserialized
void System::Resources::ResourceManager::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Resources.ResourceManager.OnSerializing
void System::Resources::ResourceManager::OnSerializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Resources.ResourceManager.CompareNames
bool System::Resources::ResourceManager::CompareNames(::Il2CppString* asmTypeName1, ::Il2CppString* typeName2, System::Reflection::AssemblyName* asmName2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::CompareNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "ResourceManager", "CompareNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asmTypeName1), ::il2cpp_utils::ExtractType(typeName2), ::il2cpp_utils::ExtractType(asmName2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asmTypeName1, typeName2, asmName2);
}
// Autogenerated method: System.Resources.ResourceManager..cctor
void System::Resources::ResourceManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "ResourceManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: ResourceManager::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::*)()>(&ResourceManager::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceManager::OnDeserializing
// Il2CppName: OnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::*)(System::Runtime::Serialization::StreamingContext)>(&ResourceManager::OnDeserializing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager*), "OnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: ResourceManager::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::*)(System::Runtime::Serialization::StreamingContext)>(&ResourceManager::OnDeserialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: ResourceManager::OnSerializing
// Il2CppName: OnSerializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::*)(System::Runtime::Serialization::StreamingContext)>(&ResourceManager::OnSerializing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager*), "OnSerializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: ResourceManager::CompareNames
// Il2CppName: CompareNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, ::Il2CppString*, System::Reflection::AssemblyName*)>(&ResourceManager::CompareNames)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager*), "CompareNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::AssemblyName*>()});
  }
};
// Writing MetadataGetter for method: ResourceManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ResourceManager::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceManager::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::*)()>(&ResourceManager::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::*)()>(&ResourceManager::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Resources.ResourceManager/CultureNameResourceSetPair
#include "System/Resources/ResourceManager_CultureNameResourceSetPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ResourceManager::CultureNameResourceSetPair::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::CultureNameResourceSetPair::*)()>(&ResourceManager::CultureNameResourceSetPair::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager::CultureNameResourceSetPair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::CultureNameResourceSetPair::*)()>(&ResourceManager::CultureNameResourceSetPair::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager::CultureNameResourceSetPair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Resources.ResourceManager/ResourceManagerMediator
#include "System/Resources/ResourceManager_ResourceManagerMediator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ResourceManager::ResourceManagerMediator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::ResourceManagerMediator::*)(System::Resources::ResourceManager*)>(&ResourceManager::ResourceManagerMediator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager::ResourceManagerMediator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceManager*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceManager::ResourceManagerMediator::*)(System::Resources::ResourceManager*)>(&ResourceManager::ResourceManagerMediator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceManager::ResourceManagerMediator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceManager*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.ResourceLocator
#include "System/Resources/ResourceLocator.hpp"
// Including type: System.Resources.ResourceTypeCode
#include "System/Resources/ResourceTypeCode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Resources.ResourceLocator.get_DataPosition
int System::Resources::ResourceLocator::get_DataPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceLocator::get_DataPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DataPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceLocator.get_Value
::Il2CppObject* System::Resources::ResourceLocator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceLocator::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceLocator.set_Value
void System::Resources::ResourceLocator::set_Value(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceLocator::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Resources.ResourceLocator.CanCache
bool System::Resources::ResourceLocator::CanCache(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceLocator::CanCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "ResourceLocator", "CanCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Writing MetadataGetter for method: ResourceLocator::ResourceLocator
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceLocator::*)(int, ::Il2CppObject*)>(&ResourceLocator::ResourceLocator<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceLocator), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceLocator::*)(int, ::Il2CppObject*)>(&ResourceLocator::ResourceLocator<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceLocator), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ResourceLocator::get_DataPosition
// Il2CppName: get_DataPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ResourceLocator::*)()>(&ResourceLocator::get_DataPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceLocator), "get_DataPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceLocator::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceLocator::*)()>(&ResourceLocator::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceLocator), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceLocator::set_Value
// Il2CppName: set_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceLocator::*)(::Il2CppObject*)>(&ResourceLocator::set_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceLocator), "set_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ResourceLocator::CanCache
// Il2CppName: CanCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Resources::ResourceTypeCode)>(&ResourceLocator::CanCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceLocator), "CanCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceTypeCode>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.ResourceReader
#include "System/Resources/ResourceReader.hpp"
// Including type: System.Resources.ResourceReader/ResourceEnumerator
#include "System/Resources/ResourceReader_ResourceEnumerator.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
#include "System/Runtime/Serialization/Formatters/Binary/BinaryFormatter.hpp"
// Including type: System.IO.UnmanagedMemoryStream
#include "System/IO/UnmanagedMemoryStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Resources.ResourceTypeCode
#include "System/Resources/ResourceTypeCode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Resources.ResourceReader.Close
void System::Resources::ResourceReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader.Dispose
void System::Resources::ResourceReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader.Dispose
void System::Resources::ResourceReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Resources.ResourceReader.ReadUnalignedI4
int System::Resources::ResourceReader::ReadUnalignedI4(int* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ReadUnalignedI4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Resources", "ResourceReader", "ReadUnalignedI4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p);
}
// Autogenerated method: System.Resources.ResourceReader.SkipString
void System::Resources::ResourceReader::SkipString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::SkipString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader.GetNameHash
int System::Resources::ResourceReader::GetNameHash(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::GetNameHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Resources.ResourceReader.GetNamePosition
int System::Resources::ResourceReader::GetNamePosition(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::GetNamePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Resources.ResourceReader.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Resources::ResourceReader::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Resources::ResourceReader::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader.GetEnumeratorInternal
System::Resources::ResourceReader::ResourceEnumerator* System::Resources::ResourceReader::GetEnumeratorInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::GetEnumeratorInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumeratorInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Resources::ResourceReader::ResourceEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader.FindPosForResource
int System::Resources::ResourceReader::FindPosForResource(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::FindPosForResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPosForResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Resources.ResourceReader.CompareStringEqualsName
bool System::Resources::ResourceReader::CompareStringEqualsName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::CompareStringEqualsName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareStringEqualsName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Resources.ResourceReader.AllocateStringForNameIndex
::Il2CppString* System::Resources::ResourceReader::AllocateStringForNameIndex(int index, int& dataOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::AllocateStringForNameIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateStringForNameIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, index, dataOffset);
}
// Autogenerated method: System.Resources.ResourceReader.GetValueForNameIndex
::Il2CppObject* System::Resources::ResourceReader::GetValueForNameIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::GetValueForNameIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueForNameIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Resources.ResourceReader.LoadString
::Il2CppString* System::Resources::ResourceReader::LoadString(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::LoadString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Resources.ResourceReader.LoadObject
::Il2CppObject* System::Resources::ResourceReader::LoadObject(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::LoadObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Resources.ResourceReader.LoadObject
::Il2CppObject* System::Resources::ResourceReader::LoadObject(int pos, System::Resources::ResourceTypeCode& typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::LoadObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceTypeCode&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, pos, typeCode);
}
// Autogenerated method: System.Resources.ResourceReader.LoadObjectV1
::Il2CppObject* System::Resources::ResourceReader::LoadObjectV1(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::LoadObjectV1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadObjectV1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Resources.ResourceReader._LoadObjectV1
::Il2CppObject* System::Resources::ResourceReader::_LoadObjectV1(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::_LoadObjectV1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_LoadObjectV1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Resources.ResourceReader.LoadObjectV2
::Il2CppObject* System::Resources::ResourceReader::LoadObjectV2(int pos, System::Resources::ResourceTypeCode& typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::LoadObjectV2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadObjectV2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceTypeCode&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, pos, typeCode);
}
// Autogenerated method: System.Resources.ResourceReader._LoadObjectV2
::Il2CppObject* System::Resources::ResourceReader::_LoadObjectV2(int pos, System::Resources::ResourceTypeCode& typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::_LoadObjectV2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_LoadObjectV2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceTypeCode&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, pos, typeCode);
}
// Autogenerated method: System.Resources.ResourceReader.DeserializeObject
::Il2CppObject* System::Resources::ResourceReader::DeserializeObject(int typeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::DeserializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, typeIndex);
}
// Autogenerated method: System.Resources.ResourceReader.ReadResources
void System::Resources::ResourceReader::ReadResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ReadResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader._ReadResources
void System::Resources::ResourceReader::_ReadResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::_ReadResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_ReadResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader.FindType
System::RuntimeType* System::Resources::ResourceReader::FindType(int typeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::FindType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType*, false>(this, ___internal__method, typeIndex);
}
// Writing MetadataGetter for method: ResourceReader::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::*)(System::IO::Stream*, System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Resources::ResourceLocator>*)>(&ResourceReader::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Resources::ResourceLocator>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::*)(System::IO::Stream*, System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Resources::ResourceLocator>*)>(&ResourceReader::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Resources::ResourceLocator>*>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::*)()>(&ResourceReader::Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::*)()>(&ResourceReader::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::*)(bool)>(&ResourceReader::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::ReadUnalignedI4
// Il2CppName: ReadUnalignedI4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int*)>(&ResourceReader::ReadUnalignedI4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "ReadUnalignedI4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int*>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::SkipString
// Il2CppName: SkipString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::*)()>(&ResourceReader::SkipString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "SkipString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::GetNameHash
// Il2CppName: GetNameHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ResourceReader::*)(int)>(&ResourceReader::GetNameHash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "GetNameHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::GetNamePosition
// Il2CppName: GetNamePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ResourceReader::*)(int)>(&ResourceReader::GetNamePosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "GetNamePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (ResourceReader::*)()>(&ResourceReader::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IDictionaryEnumerator* (ResourceReader::*)()>(&ResourceReader::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::GetEnumeratorInternal
// Il2CppName: GetEnumeratorInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Resources::ResourceReader::ResourceEnumerator* (ResourceReader::*)()>(&ResourceReader::GetEnumeratorInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "GetEnumeratorInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::FindPosForResource
// Il2CppName: FindPosForResource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ResourceReader::*)(::Il2CppString*)>(&ResourceReader::FindPosForResource)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "FindPosForResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::CompareStringEqualsName
// Il2CppName: CompareStringEqualsName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ResourceReader::*)(::Il2CppString*)>(&ResourceReader::CompareStringEqualsName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "CompareStringEqualsName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::AllocateStringForNameIndex
// Il2CppName: AllocateStringForNameIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ResourceReader::*)(int, int&)>(&ResourceReader::AllocateStringForNameIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "AllocateStringForNameIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::GetValueForNameIndex
// Il2CppName: GetValueForNameIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::*)(int)>(&ResourceReader::GetValueForNameIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "GetValueForNameIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::LoadString
// Il2CppName: LoadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ResourceReader::*)(int)>(&ResourceReader::LoadString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "LoadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::LoadObject
// Il2CppName: LoadObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::*)(int)>(&ResourceReader::LoadObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "LoadObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::LoadObject
// Il2CppName: LoadObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::*)(int, System::Resources::ResourceTypeCode&)>(&ResourceReader::LoadObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "LoadObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceTypeCode&>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::LoadObjectV1
// Il2CppName: LoadObjectV1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::*)(int)>(&ResourceReader::LoadObjectV1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "LoadObjectV1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::_LoadObjectV1
// Il2CppName: _LoadObjectV1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::*)(int)>(&ResourceReader::_LoadObjectV1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "_LoadObjectV1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::LoadObjectV2
// Il2CppName: LoadObjectV2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::*)(int, System::Resources::ResourceTypeCode&)>(&ResourceReader::LoadObjectV2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "LoadObjectV2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceTypeCode&>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::_LoadObjectV2
// Il2CppName: _LoadObjectV2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::*)(int, System::Resources::ResourceTypeCode&)>(&ResourceReader::_LoadObjectV2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "_LoadObjectV2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceTypeCode&>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::DeserializeObject
// Il2CppName: DeserializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::*)(int)>(&ResourceReader::DeserializeObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "DeserializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::ReadResources
// Il2CppName: ReadResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::*)()>(&ResourceReader::ReadResources)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "ReadResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::_ReadResources
// Il2CppName: _ReadResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::*)()>(&ResourceReader::_ReadResources)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "_ReadResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::FindType
// Il2CppName: FindType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::RuntimeType* (ResourceReader::*)(int)>(&ResourceReader::FindType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader*), "FindType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.ResourceReader/ResourceEnumerator
#include "System/Resources/ResourceReader_ResourceEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Resources.ResourceReader/ResourceEnumerator.MoveNext
bool System::Resources::ResourceReader::ResourceEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ResourceEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader/ResourceEnumerator.get_Key
::Il2CppObject* System::Resources::ResourceReader::ResourceEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ResourceEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader/ResourceEnumerator.get_Current
::Il2CppObject* System::Resources::ResourceReader::ResourceEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ResourceEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader/ResourceEnumerator.get_DataPosition
int System::Resources::ResourceReader::ResourceEnumerator::get_DataPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ResourceEnumerator::get_DataPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader/ResourceEnumerator.get_Entry
System::Collections::DictionaryEntry System::Resources::ResourceReader::ResourceEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ResourceEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader/ResourceEnumerator.get_Value
::Il2CppObject* System::Resources::ResourceReader::ResourceEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ResourceEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceReader/ResourceEnumerator.Reset
void System::Resources::ResourceReader::ResourceEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ResourceEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ResourceReader::ResourceEnumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::ResourceEnumerator::*)(System::Resources::ResourceReader*)>(&ResourceReader::ResourceEnumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader::ResourceEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceReader*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::ResourceEnumerator::*)(System::Resources::ResourceReader*)>(&ResourceReader::ResourceEnumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader::ResourceEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceReader*>()});
  }
};
// Writing MetadataGetter for method: ResourceReader::ResourceEnumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ResourceReader::ResourceEnumerator::*)()>(&ResourceReader::ResourceEnumerator::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader::ResourceEnumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::ResourceEnumerator::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::ResourceEnumerator::*)()>(&ResourceReader::ResourceEnumerator::get_Key)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader::ResourceEnumerator*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::ResourceEnumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::ResourceEnumerator::*)()>(&ResourceReader::ResourceEnumerator::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader::ResourceEnumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::ResourceEnumerator::get_DataPosition
// Il2CppName: get_DataPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ResourceReader::ResourceEnumerator::*)()>(&ResourceReader::ResourceEnumerator::get_DataPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader::ResourceEnumerator*), "get_DataPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::ResourceEnumerator::get_Entry
// Il2CppName: get_Entry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::DictionaryEntry (ResourceReader::ResourceEnumerator::*)()>(&ResourceReader::ResourceEnumerator::get_Entry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader::ResourceEnumerator*), "get_Entry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::ResourceEnumerator::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceReader::ResourceEnumerator::*)()>(&ResourceReader::ResourceEnumerator::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader::ResourceEnumerator*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceReader::ResourceEnumerator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceReader::ResourceEnumerator::*)()>(&ResourceReader::ResourceEnumerator::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceReader::ResourceEnumerator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.ResourceSet
#include "System/Resources/ResourceSet.hpp"
// Including type: System.Resources.IResourceReader
#include "System/Resources/IResourceReader.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Resources.ResourceSet.CommonInit
void System::Resources::ResourceSet::CommonInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::CommonInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommonInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceSet.Dispose
void System::Resources::ResourceSet::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Resources.ResourceSet.Dispose
void System::Resources::ResourceSet::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceSet.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Resources::ResourceSet::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceSet.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Resources::ResourceSet::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceSet.GetEnumeratorHelper
System::Collections::IDictionaryEnumerator* System::Resources::ResourceSet::GetEnumeratorHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::GetEnumeratorHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumeratorHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.ResourceSet.GetString
::Il2CppString* System::Resources::ResourceSet::GetString(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Resources.ResourceSet.GetString
::Il2CppString* System::Resources::ResourceSet::GetString(::Il2CppString* name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, name, ignoreCase);
}
// Autogenerated method: System.Resources.ResourceSet.GetObject
::Il2CppObject* System::Resources::ResourceSet::GetObject(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::GetObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Resources.ResourceSet.GetObject
::Il2CppObject* System::Resources::ResourceSet::GetObject(::Il2CppString* name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::GetObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, ignoreCase);
}
// Autogenerated method: System.Resources.ResourceSet.GetObjectInternal
::Il2CppObject* System::Resources::ResourceSet::GetObjectInternal(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::GetObjectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Resources.ResourceSet.GetCaseInsensitiveObjectInternal
::Il2CppObject* System::Resources::ResourceSet::GetCaseInsensitiveObjectInternal(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceSet::GetCaseInsensitiveObjectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCaseInsensitiveObjectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Writing MetadataGetter for method: ResourceSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceSet::*)(bool)>(&ResourceSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceSet::*)(bool)>(&ResourceSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ResourceSet::CommonInit
// Il2CppName: CommonInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceSet::*)()>(&ResourceSet::CommonInit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "CommonInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceSet::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceSet::*)(bool)>(&ResourceSet::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ResourceSet::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceSet::*)()>(&ResourceSet::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceSet::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IDictionaryEnumerator* (ResourceSet::*)()>(&ResourceSet::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceSet::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (ResourceSet::*)()>(&ResourceSet::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceSet::GetEnumeratorHelper
// Il2CppName: GetEnumeratorHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IDictionaryEnumerator* (ResourceSet::*)()>(&ResourceSet::GetEnumeratorHelper)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "GetEnumeratorHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResourceSet::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ResourceSet::*)(::Il2CppString*)>(&ResourceSet::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ResourceSet::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ResourceSet::*)(::Il2CppString*, bool)>(&ResourceSet::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ResourceSet::GetObject
// Il2CppName: GetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceSet::*)(::Il2CppString*)>(&ResourceSet::GetObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "GetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ResourceSet::GetObject
// Il2CppName: GetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceSet::*)(::Il2CppString*, bool)>(&ResourceSet::GetObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "GetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ResourceSet::GetObjectInternal
// Il2CppName: GetObjectInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceSet::*)(::Il2CppString*)>(&ResourceSet::GetObjectInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "GetObjectInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ResourceSet::GetCaseInsensitiveObjectInternal
// Il2CppName: GetCaseInsensitiveObjectInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResourceSet::*)(::Il2CppString*)>(&ResourceSet::GetCaseInsensitiveObjectInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), "GetCaseInsensitiveObjectInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ResourceSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceSet::*)()>(&ResourceSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResourceSet::*)()>(&ResourceSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResourceSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Resources.ResourceTypeCode
#include "System/Resources/ResourceTypeCode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Null
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Null"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Null
void System::Resources::ResourceTypeCode::_set_Null(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode String
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode String
void System::Resources::ResourceTypeCode::_set_String(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Boolean
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Boolean
void System::Resources::ResourceTypeCode::_set_Boolean(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Char
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Char"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Char
void System::Resources::ResourceTypeCode::_set_Char(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Byte
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Byte"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Byte
void System::Resources::ResourceTypeCode::_set_Byte(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Byte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode SByte
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_SByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_SByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "SByte"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode SByte
void System::Resources::ResourceTypeCode::_set_SByte(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_SByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "SByte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Int16
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Int16
void System::Resources::ResourceTypeCode::_set_Int16(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode UInt16
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode UInt16
void System::Resources::ResourceTypeCode::_set_UInt16(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Int32
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Int32
void System::Resources::ResourceTypeCode::_set_Int32(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode UInt32
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode UInt32
void System::Resources::ResourceTypeCode::_set_UInt32(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Int64
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Int64
void System::Resources::ResourceTypeCode::_set_Int64(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode UInt64
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode UInt64
void System::Resources::ResourceTypeCode::_set_UInt64(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Single
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Single"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Single
void System::Resources::ResourceTypeCode::_set_Single(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Double
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Double"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Double
void System::Resources::ResourceTypeCode::_set_Double(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Decimal
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Decimal
void System::Resources::ResourceTypeCode::_set_Decimal(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode DateTime
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode DateTime
void System::Resources::ResourceTypeCode::_set_DateTime(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode TimeSpan
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_TimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_TimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "TimeSpan"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode TimeSpan
void System::Resources::ResourceTypeCode::_set_TimeSpan(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_TimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "TimeSpan", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode LastPrimitive
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_LastPrimitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_LastPrimitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "LastPrimitive"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode LastPrimitive
void System::Resources::ResourceTypeCode::_set_LastPrimitive(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_LastPrimitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "LastPrimitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode ByteArray
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_ByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_ByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "ByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode ByteArray
void System::Resources::ResourceTypeCode::_set_ByteArray(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_ByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "ByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode Stream
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_Stream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "Stream"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode Stream
void System::Resources::ResourceTypeCode::_set_Stream(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_Stream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "Stream", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.ResourceTypeCode StartOfUserTypes
System::Resources::ResourceTypeCode System::Resources::ResourceTypeCode::_get_StartOfUserTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_get_StartOfUserTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::ResourceTypeCode>("System.Resources", "ResourceTypeCode", "StartOfUserTypes"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.ResourceTypeCode StartOfUserTypes
void System::Resources::ResourceTypeCode::_set_StartOfUserTypes(System::Resources::ResourceTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceTypeCode::_set_StartOfUserTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "ResourceTypeCode", "StartOfUserTypes", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.RuntimeResourceSet
#include "System/Resources/RuntimeResourceSet.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Resources.ResourceReader
#include "System/Resources/ResourceReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 Version
int System::Resources::RuntimeResourceSet::_get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::_get_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Resources", "RuntimeResourceSet", "Version"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 Version
void System::Resources::RuntimeResourceSet::_set_Version(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::_set_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "RuntimeResourceSet", "Version", value));
}
// Autogenerated method: System.Resources.RuntimeResourceSet.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Resources::RuntimeResourceSet::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.RuntimeResourceSet.GetObject
::Il2CppObject* System::Resources::RuntimeResourceSet::GetObject(::Il2CppString* key, bool ignoreCase, bool isString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::GetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(isString)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key, ignoreCase, isString);
}
// Autogenerated method: System.Resources.RuntimeResourceSet.ResolveResourceLocator
::Il2CppObject* System::Resources::RuntimeResourceSet::ResolveResourceLocator(System::Resources::ResourceLocator resLocation, ::Il2CppString* key, System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Resources::ResourceLocator>* copyOfCache, bool keyInWrongCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::ResolveResourceLocator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveResourceLocator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resLocation), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(copyOfCache), ::il2cpp_utils::ExtractType(keyInWrongCase)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, resLocation, key, copyOfCache, keyInWrongCase);
}
// Autogenerated method: System.Resources.RuntimeResourceSet.Dispose
void System::Resources::RuntimeResourceSet::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Resources.RuntimeResourceSet.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Resources::RuntimeResourceSet::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.RuntimeResourceSet.GetEnumeratorHelper
System::Collections::IDictionaryEnumerator* System::Resources::RuntimeResourceSet::GetEnumeratorHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::GetEnumeratorHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumeratorHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Resources.RuntimeResourceSet.GetString
::Il2CppString* System::Resources::RuntimeResourceSet::GetString(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Resources.RuntimeResourceSet.GetString
::Il2CppString* System::Resources::RuntimeResourceSet::GetString(::Il2CppString* key, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, key, ignoreCase);
}
// Autogenerated method: System.Resources.RuntimeResourceSet.GetObject
::Il2CppObject* System::Resources::RuntimeResourceSet::GetObject(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::GetObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Resources.RuntimeResourceSet.GetObject
::Il2CppObject* System::Resources::RuntimeResourceSet::GetObject(::Il2CppString* key, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::RuntimeResourceSet::GetObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key, ignoreCase);
}
// Writing MetadataGetter for method: RuntimeResourceSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeResourceSet::*)(::Il2CppString*)>(&RuntimeResourceSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeResourceSet::*)(::Il2CppString*)>(&RuntimeResourceSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeResourceSet::*)(System::IO::Stream*)>(&RuntimeResourceSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeResourceSet::*)(System::IO::Stream*)>(&RuntimeResourceSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (RuntimeResourceSet::*)()>(&RuntimeResourceSet::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::GetObject
// Il2CppName: GetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (RuntimeResourceSet::*)(::Il2CppString*, bool, bool)>(&RuntimeResourceSet::GetObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "GetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::ResolveResourceLocator
// Il2CppName: ResolveResourceLocator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (RuntimeResourceSet::*)(System::Resources::ResourceLocator, ::Il2CppString*, System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Resources::ResourceLocator>*, bool)>(&RuntimeResourceSet::ResolveResourceLocator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "ResolveResourceLocator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Resources::ResourceLocator>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Resources::ResourceLocator>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeResourceSet::*)(bool)>(&RuntimeResourceSet::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IDictionaryEnumerator* (RuntimeResourceSet::*)()>(&RuntimeResourceSet::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::GetEnumeratorHelper
// Il2CppName: GetEnumeratorHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IDictionaryEnumerator* (RuntimeResourceSet::*)()>(&RuntimeResourceSet::GetEnumeratorHelper)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "GetEnumeratorHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RuntimeResourceSet::*)(::Il2CppString*)>(&RuntimeResourceSet::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RuntimeResourceSet::*)(::Il2CppString*, bool)>(&RuntimeResourceSet::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::GetObject
// Il2CppName: GetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (RuntimeResourceSet::*)(::Il2CppString*)>(&RuntimeResourceSet::GetObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "GetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeResourceSet::GetObject
// Il2CppName: GetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (RuntimeResourceSet::*)(::Il2CppString*, bool)>(&RuntimeResourceSet::GetObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeResourceSet*), "GetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.SatelliteContractVersionAttribute
#include "System/Resources/SatelliteContractVersionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: SatelliteContractVersionAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SatelliteContractVersionAttribute::*)(::Il2CppString*)>(&SatelliteContractVersionAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SatelliteContractVersionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SatelliteContractVersionAttribute::*)(::Il2CppString*)>(&SatelliteContractVersionAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SatelliteContractVersionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Resources.UltimateResourceFallbackLocation
#include "System/Resources/UltimateResourceFallbackLocation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Resources.UltimateResourceFallbackLocation MainAssembly
System::Resources::UltimateResourceFallbackLocation System::Resources::UltimateResourceFallbackLocation::_get_MainAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::UltimateResourceFallbackLocation::_get_MainAssembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::UltimateResourceFallbackLocation>("System.Resources", "UltimateResourceFallbackLocation", "MainAssembly"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.UltimateResourceFallbackLocation MainAssembly
void System::Resources::UltimateResourceFallbackLocation::_set_MainAssembly(System::Resources::UltimateResourceFallbackLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::UltimateResourceFallbackLocation::_set_MainAssembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "UltimateResourceFallbackLocation", "MainAssembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Resources.UltimateResourceFallbackLocation Satellite
System::Resources::UltimateResourceFallbackLocation System::Resources::UltimateResourceFallbackLocation::_get_Satellite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::UltimateResourceFallbackLocation::_get_Satellite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Resources::UltimateResourceFallbackLocation>("System.Resources", "UltimateResourceFallbackLocation", "Satellite"));
}
// Autogenerated static field setter
// Set static field: static public System.Resources.UltimateResourceFallbackLocation Satellite
void System::Resources::UltimateResourceFallbackLocation::_set_Satellite(System::Resources::UltimateResourceFallbackLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::UltimateResourceFallbackLocation::_set_Satellite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Resources", "UltimateResourceFallbackLocation", "Satellite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.CustomAttributeExtensions
#include "System/Reflection/CustomAttributeExtensions.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
System::Attribute* System::Reflection::CustomAttributeExtensions::GetCustomAttribute(System::Reflection::Assembly* element, System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeExtensions::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "CustomAttributeExtensions", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Attribute*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
System::Collections::Generic::IEnumerable_1<System::Attribute*>* System::Reflection::CustomAttributeExtensions::GetCustomAttributes(System::Reflection::Assembly* element, System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeExtensions::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "CustomAttributeExtensions", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Attribute*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
System::Collections::Generic::IEnumerable_1<System::Attribute*>* System::Reflection::CustomAttributeExtensions::GetCustomAttributes(System::Reflection::MemberInfo* element, System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeExtensions::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "CustomAttributeExtensions", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Attribute*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Writing MetadataGetter for method: CustomAttributeExtensions::GetCustomAttribute
// Il2CppName: GetCustomAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Attribute* (*)(System::Reflection::Assembly*, System::Type*)>(&CustomAttributeExtensions::GetCustomAttribute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeExtensions*), "GetCustomAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeExtensions::GetCustomAttribute
// Il2CppName: GetCustomAttribute
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: CustomAttributeExtensions::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerable_1<System::Attribute*>* (*)(System::Reflection::Assembly*, System::Type*)>(&CustomAttributeExtensions::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeExtensions*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeExtensions::GetCustomAttributes
// Il2CppName: GetCustomAttributes
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: CustomAttributeExtensions::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerable_1<System::Attribute*>* (*)(System::Reflection::MemberInfo*, System::Type*, bool)>(&CustomAttributeExtensions::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeExtensions*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeExtensions::GetCustomAttributes
// Il2CppName: GetCustomAttributes
// Cannot write MetadataGetter for generic methods!
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AmbiguousMatchException
#include "System/Reflection/AmbiguousMatchException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AmbiguousMatchException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmbiguousMatchException::*)()>(&AmbiguousMatchException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmbiguousMatchException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmbiguousMatchException::*)()>(&AmbiguousMatchException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmbiguousMatchException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AmbiguousMatchException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmbiguousMatchException::*)(::Il2CppString*)>(&AmbiguousMatchException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmbiguousMatchException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmbiguousMatchException::*)(::Il2CppString*)>(&AmbiguousMatchException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmbiguousMatchException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AmbiguousMatchException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmbiguousMatchException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&AmbiguousMatchException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmbiguousMatchException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmbiguousMatchException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&AmbiguousMatchException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmbiguousMatchException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyCopyrightAttribute
#include "System/Reflection/AssemblyCopyrightAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyCopyrightAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyCopyrightAttribute::*)(::Il2CppString*)>(&AssemblyCopyrightAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyCopyrightAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyCopyrightAttribute::*)(::Il2CppString*)>(&AssemblyCopyrightAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyCopyrightAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyTrademarkAttribute
#include "System/Reflection/AssemblyTrademarkAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyTrademarkAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyTrademarkAttribute::*)(::Il2CppString*)>(&AssemblyTrademarkAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyTrademarkAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyTrademarkAttribute::*)(::Il2CppString*)>(&AssemblyTrademarkAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyTrademarkAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyProductAttribute
#include "System/Reflection/AssemblyProductAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyProductAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyProductAttribute::*)(::Il2CppString*)>(&AssemblyProductAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyProductAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyProductAttribute::*)(::Il2CppString*)>(&AssemblyProductAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyProductAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyCompanyAttribute
#include "System/Reflection/AssemblyCompanyAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyCompanyAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyCompanyAttribute::*)(::Il2CppString*)>(&AssemblyCompanyAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyCompanyAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyCompanyAttribute::*)(::Il2CppString*)>(&AssemblyCompanyAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyCompanyAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyDescriptionAttribute
#include "System/Reflection/AssemblyDescriptionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyDescriptionAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyDescriptionAttribute::*)(::Il2CppString*)>(&AssemblyDescriptionAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyDescriptionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyDescriptionAttribute::*)(::Il2CppString*)>(&AssemblyDescriptionAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyDescriptionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyTitleAttribute
#include "System/Reflection/AssemblyTitleAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyTitleAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyTitleAttribute::*)(::Il2CppString*)>(&AssemblyTitleAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyTitleAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyTitleAttribute::*)(::Il2CppString*)>(&AssemblyTitleAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyTitleAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyConfigurationAttribute
#include "System/Reflection/AssemblyConfigurationAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyConfigurationAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyConfigurationAttribute::*)(::Il2CppString*)>(&AssemblyConfigurationAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyConfigurationAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyConfigurationAttribute::*)(::Il2CppString*)>(&AssemblyConfigurationAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyConfigurationAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyDefaultAliasAttribute
#include "System/Reflection/AssemblyDefaultAliasAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyDefaultAliasAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyDefaultAliasAttribute::*)(::Il2CppString*)>(&AssemblyDefaultAliasAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyDefaultAliasAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyDefaultAliasAttribute::*)(::Il2CppString*)>(&AssemblyDefaultAliasAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyDefaultAliasAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyInformationalVersionAttribute
#include "System/Reflection/AssemblyInformationalVersionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyInformationalVersionAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyInformationalVersionAttribute::*)(::Il2CppString*)>(&AssemblyInformationalVersionAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyInformationalVersionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyInformationalVersionAttribute::*)(::Il2CppString*)>(&AssemblyInformationalVersionAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyInformationalVersionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyFileVersionAttribute
#include "System/Reflection/AssemblyFileVersionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyFileVersionAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyFileVersionAttribute::*)(::Il2CppString*)>(&AssemblyFileVersionAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyFileVersionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyFileVersionAttribute::*)(::Il2CppString*)>(&AssemblyFileVersionAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyFileVersionAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyKeyFileAttribute
#include "System/Reflection/AssemblyKeyFileAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyKeyFileAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyKeyFileAttribute::*)(::Il2CppString*)>(&AssemblyKeyFileAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyKeyFileAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyKeyFileAttribute::*)(::Il2CppString*)>(&AssemblyKeyFileAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyKeyFileAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.AssemblyDelaySignAttribute
#include "System/Reflection/AssemblyDelaySignAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssemblyDelaySignAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyDelaySignAttribute::*)(bool)>(&AssemblyDelaySignAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyDelaySignAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyDelaySignAttribute::*)(bool)>(&AssemblyDelaySignAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyDelaySignAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.AssemblyNameFlags
#include "System/Reflection/AssemblyNameFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.AssemblyNameFlags None
System::Reflection::AssemblyNameFlags System::Reflection::AssemblyNameFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::AssemblyNameFlags>("System.Reflection", "AssemblyNameFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.AssemblyNameFlags None
void System::Reflection::AssemblyNameFlags::_set_None(System::Reflection::AssemblyNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "AssemblyNameFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.AssemblyNameFlags PublicKey
System::Reflection::AssemblyNameFlags System::Reflection::AssemblyNameFlags::_get_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_get_PublicKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::AssemblyNameFlags>("System.Reflection", "AssemblyNameFlags", "PublicKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.AssemblyNameFlags PublicKey
void System::Reflection::AssemblyNameFlags::_set_PublicKey(System::Reflection::AssemblyNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_set_PublicKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "AssemblyNameFlags", "PublicKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.AssemblyNameFlags EnableJITcompileOptimizer
System::Reflection::AssemblyNameFlags System::Reflection::AssemblyNameFlags::_get_EnableJITcompileOptimizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_get_EnableJITcompileOptimizer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::AssemblyNameFlags>("System.Reflection", "AssemblyNameFlags", "EnableJITcompileOptimizer"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.AssemblyNameFlags EnableJITcompileOptimizer
void System::Reflection::AssemblyNameFlags::_set_EnableJITcompileOptimizer(System::Reflection::AssemblyNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_set_EnableJITcompileOptimizer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "AssemblyNameFlags", "EnableJITcompileOptimizer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.AssemblyNameFlags EnableJITcompileTracking
System::Reflection::AssemblyNameFlags System::Reflection::AssemblyNameFlags::_get_EnableJITcompileTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_get_EnableJITcompileTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::AssemblyNameFlags>("System.Reflection", "AssemblyNameFlags", "EnableJITcompileTracking"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.AssemblyNameFlags EnableJITcompileTracking
void System::Reflection::AssemblyNameFlags::_set_EnableJITcompileTracking(System::Reflection::AssemblyNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_set_EnableJITcompileTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "AssemblyNameFlags", "EnableJITcompileTracking", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.AssemblyNameFlags Retargetable
System::Reflection::AssemblyNameFlags System::Reflection::AssemblyNameFlags::_get_Retargetable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_get_Retargetable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::AssemblyNameFlags>("System.Reflection", "AssemblyNameFlags", "Retargetable"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.AssemblyNameFlags Retargetable
void System::Reflection::AssemblyNameFlags::_set_Retargetable(System::Reflection::AssemblyNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyNameFlags::_set_Retargetable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "AssemblyNameFlags", "Retargetable", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.AssemblyContentType
#include "System/Reflection/AssemblyContentType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.AssemblyContentType Default
System::Reflection::AssemblyContentType System::Reflection::AssemblyContentType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyContentType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::AssemblyContentType>("System.Reflection", "AssemblyContentType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.AssemblyContentType Default
void System::Reflection::AssemblyContentType::_set_Default(System::Reflection::AssemblyContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyContentType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "AssemblyContentType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.AssemblyContentType WindowsRuntime
System::Reflection::AssemblyContentType System::Reflection::AssemblyContentType::_get_WindowsRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyContentType::_get_WindowsRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::AssemblyContentType>("System.Reflection", "AssemblyContentType", "WindowsRuntime"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.AssemblyContentType WindowsRuntime
void System::Reflection::AssemblyContentType::_set_WindowsRuntime(System::Reflection::AssemblyContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyContentType::_set_WindowsRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "AssemblyContentType", "WindowsRuntime", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.ProcessorArchitecture
#include "System/Reflection/ProcessorArchitecture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.ProcessorArchitecture None
System::Reflection::ProcessorArchitecture System::Reflection::ProcessorArchitecture::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ProcessorArchitecture>("System.Reflection", "ProcessorArchitecture", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ProcessorArchitecture None
void System::Reflection::ProcessorArchitecture::_set_None(System::Reflection::ProcessorArchitecture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ProcessorArchitecture", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ProcessorArchitecture MSIL
System::Reflection::ProcessorArchitecture System::Reflection::ProcessorArchitecture::_get_MSIL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_get_MSIL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ProcessorArchitecture>("System.Reflection", "ProcessorArchitecture", "MSIL"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ProcessorArchitecture MSIL
void System::Reflection::ProcessorArchitecture::_set_MSIL(System::Reflection::ProcessorArchitecture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_set_MSIL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ProcessorArchitecture", "MSIL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ProcessorArchitecture X86
System::Reflection::ProcessorArchitecture System::Reflection::ProcessorArchitecture::_get_X86() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_get_X86");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ProcessorArchitecture>("System.Reflection", "ProcessorArchitecture", "X86"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ProcessorArchitecture X86
void System::Reflection::ProcessorArchitecture::_set_X86(System::Reflection::ProcessorArchitecture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_set_X86");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ProcessorArchitecture", "X86", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ProcessorArchitecture IA64
System::Reflection::ProcessorArchitecture System::Reflection::ProcessorArchitecture::_get_IA64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_get_IA64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ProcessorArchitecture>("System.Reflection", "ProcessorArchitecture", "IA64"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ProcessorArchitecture IA64
void System::Reflection::ProcessorArchitecture::_set_IA64(System::Reflection::ProcessorArchitecture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_set_IA64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ProcessorArchitecture", "IA64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ProcessorArchitecture Amd64
System::Reflection::ProcessorArchitecture System::Reflection::ProcessorArchitecture::_get_Amd64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_get_Amd64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ProcessorArchitecture>("System.Reflection", "ProcessorArchitecture", "Amd64"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ProcessorArchitecture Amd64
void System::Reflection::ProcessorArchitecture::_set_Amd64(System::Reflection::ProcessorArchitecture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_set_Amd64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ProcessorArchitecture", "Amd64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ProcessorArchitecture Arm
System::Reflection::ProcessorArchitecture System::Reflection::ProcessorArchitecture::_get_Arm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_get_Arm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ProcessorArchitecture>("System.Reflection", "ProcessorArchitecture", "Arm"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ProcessorArchitecture Arm
void System::Reflection::ProcessorArchitecture::_set_Arm(System::Reflection::ProcessorArchitecture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ProcessorArchitecture::_set_Arm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ProcessorArchitecture", "Arm", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Binder.BindToMethod
System::Reflection::MethodBase* System::Reflection::Binder::BindToMethod(System::Reflection::BindingFlags bindingAttr, ::Array<System::Reflection::MethodBase*>* match, ::Array<::Il2CppObject*>*& args, ::Array<System::Reflection::ParameterModifier>* modifiers, System::Globalization::CultureInfo* culture, ::Array<::Il2CppString*>* names, ::Il2CppObject*& state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Binder::BindToMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(match), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method, bindingAttr, match, args, modifiers, culture, names, state);
}
// Autogenerated method: System.Reflection.Binder.BindToField
System::Reflection::FieldInfo* System::Reflection::Binder::BindToField(System::Reflection::BindingFlags bindingAttr, ::Array<System::Reflection::FieldInfo*>* match, ::Il2CppObject* value, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Binder::BindToField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(match), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(this, ___internal__method, bindingAttr, match, value, culture);
}
// Autogenerated method: System.Reflection.Binder.SelectMethod
System::Reflection::MethodBase* System::Reflection::Binder::SelectMethod(System::Reflection::BindingFlags bindingAttr, ::Array<System::Reflection::MethodBase*>* match, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Binder::SelectMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(match), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method, bindingAttr, match, types, modifiers);
}
// Autogenerated method: System.Reflection.Binder.SelectProperty
System::Reflection::PropertyInfo* System::Reflection::Binder::SelectProperty(System::Reflection::BindingFlags bindingAttr, ::Array<System::Reflection::PropertyInfo*>* match, System::Type* returnType, ::Array<System::Type*>* indexes, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Binder::SelectProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(match), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(indexes), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method, bindingAttr, match, returnType, indexes, modifiers);
}
// Autogenerated method: System.Reflection.Binder.ChangeType
::Il2CppObject* System::Reflection::Binder::ChangeType(::Il2CppObject* value, System::Type* type, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Binder::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value, type, culture);
}
// Autogenerated method: System.Reflection.Binder.ReorderArgumentArray
void System::Reflection::Binder::ReorderArgumentArray(::Array<::Il2CppObject*>*& args, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Binder::ReorderArgumentArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReorderArgumentArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, state);
}
// Writing MetadataGetter for method: Binder::BindToMethod
// Il2CppName: BindToMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodBase* (Binder::*)(System::Reflection::BindingFlags, ::Array<System::Reflection::MethodBase*>*, ::Array<::Il2CppObject*>*&, ::Array<System::Reflection::ParameterModifier>*, System::Globalization::CultureInfo*, ::Array<::Il2CppString*>*, ::Il2CppObject*&)>(&Binder::BindToMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Binder*), "BindToMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::BindingFlags>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::MethodBase*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::ParameterModifier>*>(), ::il2cpp_utils::ExtractIndependentType<System::Globalization::CultureInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()});
  }
};
// Writing MetadataGetter for method: Binder::BindToField
// Il2CppName: BindToField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::FieldInfo* (Binder::*)(System::Reflection::BindingFlags, ::Array<System::Reflection::FieldInfo*>*, ::Il2CppObject*, System::Globalization::CultureInfo*)>(&Binder::BindToField)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Binder*), "BindToField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::BindingFlags>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::FieldInfo*>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Globalization::CultureInfo*>()});
  }
};
// Writing MetadataGetter for method: Binder::SelectMethod
// Il2CppName: SelectMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodBase* (Binder::*)(System::Reflection::BindingFlags, ::Array<System::Reflection::MethodBase*>*, ::Array<System::Type*>*, ::Array<System::Reflection::ParameterModifier>*)>(&Binder::SelectMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Binder*), "SelectMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::BindingFlags>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::MethodBase*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::ParameterModifier>*>()});
  }
};
// Writing MetadataGetter for method: Binder::SelectProperty
// Il2CppName: SelectProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::PropertyInfo* (Binder::*)(System::Reflection::BindingFlags, ::Array<System::Reflection::PropertyInfo*>*, System::Type*, ::Array<System::Type*>*, ::Array<System::Reflection::ParameterModifier>*)>(&Binder::SelectProperty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Binder*), "SelectProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::BindingFlags>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::PropertyInfo*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::ParameterModifier>*>()});
  }
};
// Writing MetadataGetter for method: Binder::ChangeType
// Il2CppName: ChangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Binder::*)(::Il2CppObject*, System::Type*, System::Globalization::CultureInfo*)>(&Binder::ChangeType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Binder*), "ChangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Globalization::CultureInfo*>()});
  }
};
// Writing MetadataGetter for method: Binder::ReorderArgumentArray
// Il2CppName: ReorderArgumentArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Binder::*)(::Array<::Il2CppObject*>*&, ::Il2CppObject*)>(&Binder::ReorderArgumentArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Binder*), "ReorderArgumentArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Binder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Binder::*)()>(&Binder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Binder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Binder::*)()>(&Binder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Binder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags Default
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags Default
void System::Reflection::BindingFlags::_set_Default(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags IgnoreCase
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags IgnoreCase
void System::Reflection::BindingFlags::_set_IgnoreCase(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags DeclaredOnly
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_DeclaredOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_DeclaredOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "DeclaredOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags DeclaredOnly
void System::Reflection::BindingFlags::_set_DeclaredOnly(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_DeclaredOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "DeclaredOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags Instance
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags Instance
void System::Reflection::BindingFlags::_set_Instance(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "Instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags Static
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "Static"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags Static
void System::Reflection::BindingFlags::_set_Static(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags Public
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "Public"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags Public
void System::Reflection::BindingFlags::_set_Public(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "Public", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags NonPublic
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_NonPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_NonPublic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "NonPublic"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags NonPublic
void System::Reflection::BindingFlags::_set_NonPublic(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_NonPublic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "NonPublic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags FlattenHierarchy
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_FlattenHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_FlattenHierarchy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "FlattenHierarchy"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags FlattenHierarchy
void System::Reflection::BindingFlags::_set_FlattenHierarchy(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_FlattenHierarchy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "FlattenHierarchy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags InvokeMethod
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_InvokeMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_InvokeMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "InvokeMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags InvokeMethod
void System::Reflection::BindingFlags::_set_InvokeMethod(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_InvokeMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "InvokeMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags CreateInstance
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_CreateInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "CreateInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags CreateInstance
void System::Reflection::BindingFlags::_set_CreateInstance(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_CreateInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "CreateInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags GetField
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_GetField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_GetField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "GetField"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags GetField
void System::Reflection::BindingFlags::_set_GetField(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_GetField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "GetField", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags SetField
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_SetField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_SetField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "SetField"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags SetField
void System::Reflection::BindingFlags::_set_SetField(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_SetField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "SetField", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags GetProperty
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_GetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_GetProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "GetProperty"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags GetProperty
void System::Reflection::BindingFlags::_set_GetProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_GetProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "GetProperty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags SetProperty
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_SetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_SetProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "SetProperty"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags SetProperty
void System::Reflection::BindingFlags::_set_SetProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_SetProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "SetProperty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags PutDispProperty
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_PutDispProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_PutDispProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "PutDispProperty"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags PutDispProperty
void System::Reflection::BindingFlags::_set_PutDispProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_PutDispProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "PutDispProperty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags PutRefDispProperty
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_PutRefDispProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_PutRefDispProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "PutRefDispProperty"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags PutRefDispProperty
void System::Reflection::BindingFlags::_set_PutRefDispProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_PutRefDispProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "PutRefDispProperty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags ExactBinding
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_ExactBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_ExactBinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "ExactBinding"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags ExactBinding
void System::Reflection::BindingFlags::_set_ExactBinding(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_ExactBinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "ExactBinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags SuppressChangeType
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_SuppressChangeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_SuppressChangeType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "SuppressChangeType"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags SuppressChangeType
void System::Reflection::BindingFlags::_set_SuppressChangeType(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_SuppressChangeType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "SuppressChangeType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags OptionalParamBinding
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_OptionalParamBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_OptionalParamBinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "OptionalParamBinding"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags OptionalParamBinding
void System::Reflection::BindingFlags::_set_OptionalParamBinding(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_OptionalParamBinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "OptionalParamBinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.BindingFlags IgnoreReturn
System::Reflection::BindingFlags System::Reflection::BindingFlags::_get_IgnoreReturn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_get_IgnoreReturn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System.Reflection", "BindingFlags", "IgnoreReturn"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.BindingFlags IgnoreReturn
void System::Reflection::BindingFlags::_set_IgnoreReturn(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::BindingFlags::_set_IgnoreReturn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "BindingFlags", "IgnoreReturn", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.CallingConventions Standard
System::Reflection::CallingConventions System::Reflection::CallingConventions::_get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_get_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::CallingConventions>("System.Reflection", "CallingConventions", "Standard"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.CallingConventions Standard
void System::Reflection::CallingConventions::_set_Standard(System::Reflection::CallingConventions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_set_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "CallingConventions", "Standard", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.CallingConventions VarArgs
System::Reflection::CallingConventions System::Reflection::CallingConventions::_get_VarArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_get_VarArgs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::CallingConventions>("System.Reflection", "CallingConventions", "VarArgs"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.CallingConventions VarArgs
void System::Reflection::CallingConventions::_set_VarArgs(System::Reflection::CallingConventions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_set_VarArgs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "CallingConventions", "VarArgs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.CallingConventions Any
System::Reflection::CallingConventions System::Reflection::CallingConventions::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::CallingConventions>("System.Reflection", "CallingConventions", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.CallingConventions Any
void System::Reflection::CallingConventions::_set_Any(System::Reflection::CallingConventions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "CallingConventions", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.CallingConventions HasThis
System::Reflection::CallingConventions System::Reflection::CallingConventions::_get_HasThis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_get_HasThis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::CallingConventions>("System.Reflection", "CallingConventions", "HasThis"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.CallingConventions HasThis
void System::Reflection::CallingConventions::_set_HasThis(System::Reflection::CallingConventions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_set_HasThis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "CallingConventions", "HasThis", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.CallingConventions ExplicitThis
System::Reflection::CallingConventions System::Reflection::CallingConventions::_get_ExplicitThis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_get_ExplicitThis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::CallingConventions>("System.Reflection", "CallingConventions", "ExplicitThis"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.CallingConventions ExplicitThis
void System::Reflection::CallingConventions::_set_ExplicitThis(System::Reflection::CallingConventions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CallingConventions::_set_ExplicitThis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "CallingConventions", "ExplicitThis", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.DefaultMemberAttribute
#include "System/Reflection/DefaultMemberAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.DefaultMemberAttribute.get_MemberName
::Il2CppString* System::Reflection::DefaultMemberAttribute::get_MemberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::DefaultMemberAttribute::get_MemberName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DefaultMemberAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultMemberAttribute::*)(::Il2CppString*)>(&DefaultMemberAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultMemberAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultMemberAttribute::*)(::Il2CppString*)>(&DefaultMemberAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultMemberAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DefaultMemberAttribute::get_MemberName
// Il2CppName: get_MemberName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DefaultMemberAttribute::*)()>(&DefaultMemberAttribute::get_MemberName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultMemberAttribute*), "get_MemberName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.EventAttributes
#include "System/Reflection/EventAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.EventAttributes None
System::Reflection::EventAttributes System::Reflection::EventAttributes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventAttributes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::EventAttributes>("System.Reflection", "EventAttributes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.EventAttributes None
void System::Reflection::EventAttributes::_set_None(System::Reflection::EventAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventAttributes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "EventAttributes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.EventAttributes SpecialName
System::Reflection::EventAttributes System::Reflection::EventAttributes::_get_SpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventAttributes::_get_SpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::EventAttributes>("System.Reflection", "EventAttributes", "SpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.EventAttributes SpecialName
void System::Reflection::EventAttributes::_set_SpecialName(System::Reflection::EventAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventAttributes::_set_SpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "EventAttributes", "SpecialName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.EventAttributes ReservedMask
System::Reflection::EventAttributes System::Reflection::EventAttributes::_get_ReservedMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventAttributes::_get_ReservedMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::EventAttributes>("System.Reflection", "EventAttributes", "ReservedMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.EventAttributes ReservedMask
void System::Reflection::EventAttributes::_set_ReservedMask(System::Reflection::EventAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventAttributes::_set_ReservedMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "EventAttributes", "ReservedMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.EventAttributes RTSpecialName
System::Reflection::EventAttributes System::Reflection::EventAttributes::_get_RTSpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventAttributes::_get_RTSpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::EventAttributes>("System.Reflection", "EventAttributes", "RTSpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.EventAttributes RTSpecialName
void System::Reflection::EventAttributes::_set_RTSpecialName(System::Reflection::EventAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventAttributes::_set_RTSpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "EventAttributes", "RTSpecialName", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.FieldAttributes
#include "System/Reflection/FieldAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes FieldAccessMask
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_FieldAccessMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_FieldAccessMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "FieldAccessMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes FieldAccessMask
void System::Reflection::FieldAttributes::_set_FieldAccessMask(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_FieldAccessMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "FieldAccessMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes PrivateScope
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_PrivateScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_PrivateScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "PrivateScope"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes PrivateScope
void System::Reflection::FieldAttributes::_set_PrivateScope(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_PrivateScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "PrivateScope", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes Private
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "Private"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes Private
void System::Reflection::FieldAttributes::_set_Private(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "Private", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes FamANDAssem
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_FamANDAssem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_FamANDAssem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "FamANDAssem"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes FamANDAssem
void System::Reflection::FieldAttributes::_set_FamANDAssem(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_FamANDAssem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "FamANDAssem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes Assembly
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_Assembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "Assembly"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes Assembly
void System::Reflection::FieldAttributes::_set_Assembly(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_Assembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "Assembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes Family
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_Family() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_Family");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "Family"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes Family
void System::Reflection::FieldAttributes::_set_Family(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_Family");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "Family", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes FamORAssem
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_FamORAssem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_FamORAssem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "FamORAssem"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes FamORAssem
void System::Reflection::FieldAttributes::_set_FamORAssem(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_FamORAssem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "FamORAssem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes Public
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "Public"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes Public
void System::Reflection::FieldAttributes::_set_Public(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "Public", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes Static
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "Static"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes Static
void System::Reflection::FieldAttributes::_set_Static(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes InitOnly
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_InitOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_InitOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "InitOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes InitOnly
void System::Reflection::FieldAttributes::_set_InitOnly(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_InitOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "InitOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes Literal
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_Literal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_Literal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "Literal"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes Literal
void System::Reflection::FieldAttributes::_set_Literal(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_Literal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "Literal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes NotSerialized
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_NotSerialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_NotSerialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "NotSerialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes NotSerialized
void System::Reflection::FieldAttributes::_set_NotSerialized(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_NotSerialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "NotSerialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes SpecialName
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_SpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_SpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "SpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes SpecialName
void System::Reflection::FieldAttributes::_set_SpecialName(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_SpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "SpecialName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes PinvokeImpl
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_PinvokeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_PinvokeImpl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "PinvokeImpl"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes PinvokeImpl
void System::Reflection::FieldAttributes::_set_PinvokeImpl(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_PinvokeImpl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "PinvokeImpl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes ReservedMask
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_ReservedMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_ReservedMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "ReservedMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes ReservedMask
void System::Reflection::FieldAttributes::_set_ReservedMask(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_ReservedMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "ReservedMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes RTSpecialName
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_RTSpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_RTSpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "RTSpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes RTSpecialName
void System::Reflection::FieldAttributes::_set_RTSpecialName(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_RTSpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "RTSpecialName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes HasFieldMarshal
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_HasFieldMarshal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_HasFieldMarshal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "HasFieldMarshal"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes HasFieldMarshal
void System::Reflection::FieldAttributes::_set_HasFieldMarshal(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_HasFieldMarshal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "HasFieldMarshal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes HasDefault
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_HasDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_HasDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "HasDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes HasDefault
void System::Reflection::FieldAttributes::_set_HasDefault(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_HasDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "HasDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.FieldAttributes HasFieldRVA
System::Reflection::FieldAttributes System::Reflection::FieldAttributes::_get_HasFieldRVA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_get_HasFieldRVA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::FieldAttributes>("System.Reflection", "FieldAttributes", "HasFieldRVA"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.FieldAttributes HasFieldRVA
void System::Reflection::FieldAttributes::_set_HasFieldRVA(System::Reflection::FieldAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::FieldAttributes::_set_HasFieldRVA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "FieldAttributes", "HasFieldRVA", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.GenericParameterAttributes None
System::Reflection::GenericParameterAttributes System::Reflection::GenericParameterAttributes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::GenericParameterAttributes>("System.Reflection", "GenericParameterAttributes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.GenericParameterAttributes None
void System::Reflection::GenericParameterAttributes::_set_None(System::Reflection::GenericParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "GenericParameterAttributes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.GenericParameterAttributes VarianceMask
System::Reflection::GenericParameterAttributes System::Reflection::GenericParameterAttributes::_get_VarianceMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_get_VarianceMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::GenericParameterAttributes>("System.Reflection", "GenericParameterAttributes", "VarianceMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.GenericParameterAttributes VarianceMask
void System::Reflection::GenericParameterAttributes::_set_VarianceMask(System::Reflection::GenericParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_set_VarianceMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "GenericParameterAttributes", "VarianceMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.GenericParameterAttributes Covariant
System::Reflection::GenericParameterAttributes System::Reflection::GenericParameterAttributes::_get_Covariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_get_Covariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::GenericParameterAttributes>("System.Reflection", "GenericParameterAttributes", "Covariant"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.GenericParameterAttributes Covariant
void System::Reflection::GenericParameterAttributes::_set_Covariant(System::Reflection::GenericParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_set_Covariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "GenericParameterAttributes", "Covariant", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.GenericParameterAttributes Contravariant
System::Reflection::GenericParameterAttributes System::Reflection::GenericParameterAttributes::_get_Contravariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_get_Contravariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::GenericParameterAttributes>("System.Reflection", "GenericParameterAttributes", "Contravariant"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.GenericParameterAttributes Contravariant
void System::Reflection::GenericParameterAttributes::_set_Contravariant(System::Reflection::GenericParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_set_Contravariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "GenericParameterAttributes", "Contravariant", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.GenericParameterAttributes SpecialConstraintMask
System::Reflection::GenericParameterAttributes System::Reflection::GenericParameterAttributes::_get_SpecialConstraintMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_get_SpecialConstraintMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::GenericParameterAttributes>("System.Reflection", "GenericParameterAttributes", "SpecialConstraintMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.GenericParameterAttributes SpecialConstraintMask
void System::Reflection::GenericParameterAttributes::_set_SpecialConstraintMask(System::Reflection::GenericParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_set_SpecialConstraintMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "GenericParameterAttributes", "SpecialConstraintMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.GenericParameterAttributes ReferenceTypeConstraint
System::Reflection::GenericParameterAttributes System::Reflection::GenericParameterAttributes::_get_ReferenceTypeConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_get_ReferenceTypeConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::GenericParameterAttributes>("System.Reflection", "GenericParameterAttributes", "ReferenceTypeConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.GenericParameterAttributes ReferenceTypeConstraint
void System::Reflection::GenericParameterAttributes::_set_ReferenceTypeConstraint(System::Reflection::GenericParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_set_ReferenceTypeConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "GenericParameterAttributes", "ReferenceTypeConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.GenericParameterAttributes NotNullableValueTypeConstraint
System::Reflection::GenericParameterAttributes System::Reflection::GenericParameterAttributes::_get_NotNullableValueTypeConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_get_NotNullableValueTypeConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::GenericParameterAttributes>("System.Reflection", "GenericParameterAttributes", "NotNullableValueTypeConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.GenericParameterAttributes NotNullableValueTypeConstraint
void System::Reflection::GenericParameterAttributes::_set_NotNullableValueTypeConstraint(System::Reflection::GenericParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_set_NotNullableValueTypeConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "GenericParameterAttributes", "NotNullableValueTypeConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.GenericParameterAttributes DefaultConstructorConstraint
System::Reflection::GenericParameterAttributes System::Reflection::GenericParameterAttributes::_get_DefaultConstructorConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_get_DefaultConstructorConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::GenericParameterAttributes>("System.Reflection", "GenericParameterAttributes", "DefaultConstructorConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.GenericParameterAttributes DefaultConstructorConstraint
void System::Reflection::GenericParameterAttributes::_set_DefaultConstructorConstraint(System::Reflection::GenericParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::GenericParameterAttributes::_set_DefaultConstructorConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "GenericParameterAttributes", "DefaultConstructorConstraint", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.ICustomAttributeProvider
#include "System/Reflection/ICustomAttributeProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.ICustomAttributeProvider.GetCustomAttributes
::Array<::Il2CppObject*>* System::Reflection::ICustomAttributeProvider::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ICustomAttributeProvider::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.ICustomAttributeProvider.IsDefined
bool System::Reflection::ICustomAttributeProvider::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ICustomAttributeProvider::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Writing MetadataGetter for method: ICustomAttributeProvider::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppObject*>* (ICustomAttributeProvider::*)(System::Type*, bool)>(&ICustomAttributeProvider::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICustomAttributeProvider*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ICustomAttributeProvider::IsDefined
// Il2CppName: IsDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ICustomAttributeProvider::*)(System::Type*, bool)>(&ICustomAttributeProvider::IsDefined)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICustomAttributeProvider*), "IsDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.InvalidFilterCriteriaException
#include "System/Reflection/InvalidFilterCriteriaException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: InvalidFilterCriteriaException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvalidFilterCriteriaException::*)()>(&InvalidFilterCriteriaException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvalidFilterCriteriaException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvalidFilterCriteriaException::*)()>(&InvalidFilterCriteriaException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvalidFilterCriteriaException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InvalidFilterCriteriaException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvalidFilterCriteriaException::*)(::Il2CppString*)>(&InvalidFilterCriteriaException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvalidFilterCriteriaException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvalidFilterCriteriaException::*)(::Il2CppString*)>(&InvalidFilterCriteriaException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvalidFilterCriteriaException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: InvalidFilterCriteriaException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvalidFilterCriteriaException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&InvalidFilterCriteriaException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvalidFilterCriteriaException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvalidFilterCriteriaException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&InvalidFilterCriteriaException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvalidFilterCriteriaException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.PInvokeAttributes
#include "System/Reflection/PInvokeAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes NoMangle
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_NoMangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_NoMangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "NoMangle"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes NoMangle
void System::Reflection::PInvokeAttributes::_set_NoMangle(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_NoMangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "NoMangle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CharSetMask
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CharSetMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CharSetMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CharSetMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CharSetMask
void System::Reflection::PInvokeAttributes::_set_CharSetMask(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CharSetMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CharSetMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CharSetNotSpec
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CharSetNotSpec() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CharSetNotSpec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CharSetNotSpec"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CharSetNotSpec
void System::Reflection::PInvokeAttributes::_set_CharSetNotSpec(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CharSetNotSpec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CharSetNotSpec", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CharSetAnsi
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CharSetAnsi() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CharSetAnsi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CharSetAnsi"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CharSetAnsi
void System::Reflection::PInvokeAttributes::_set_CharSetAnsi(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CharSetAnsi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CharSetAnsi", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CharSetUnicode
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CharSetUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CharSetUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CharSetUnicode"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CharSetUnicode
void System::Reflection::PInvokeAttributes::_set_CharSetUnicode(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CharSetUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CharSetUnicode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CharSetAuto
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CharSetAuto() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CharSetAuto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CharSetAuto"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CharSetAuto
void System::Reflection::PInvokeAttributes::_set_CharSetAuto(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CharSetAuto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CharSetAuto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes BestFitUseAssem
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_BestFitUseAssem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_BestFitUseAssem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "BestFitUseAssem"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes BestFitUseAssem
void System::Reflection::PInvokeAttributes::_set_BestFitUseAssem(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_BestFitUseAssem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "BestFitUseAssem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes BestFitEnabled
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_BestFitEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_BestFitEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "BestFitEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes BestFitEnabled
void System::Reflection::PInvokeAttributes::_set_BestFitEnabled(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_BestFitEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "BestFitEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes BestFitDisabled
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_BestFitDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_BestFitDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "BestFitDisabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes BestFitDisabled
void System::Reflection::PInvokeAttributes::_set_BestFitDisabled(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_BestFitDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "BestFitDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes BestFitMask
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_BestFitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_BestFitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "BestFitMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes BestFitMask
void System::Reflection::PInvokeAttributes::_set_BestFitMask(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_BestFitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "BestFitMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes ThrowOnUnmappableCharUseAssem
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_ThrowOnUnmappableCharUseAssem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_ThrowOnUnmappableCharUseAssem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "ThrowOnUnmappableCharUseAssem"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes ThrowOnUnmappableCharUseAssem
void System::Reflection::PInvokeAttributes::_set_ThrowOnUnmappableCharUseAssem(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_ThrowOnUnmappableCharUseAssem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "ThrowOnUnmappableCharUseAssem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes ThrowOnUnmappableCharEnabled
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_ThrowOnUnmappableCharEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_ThrowOnUnmappableCharEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "ThrowOnUnmappableCharEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes ThrowOnUnmappableCharEnabled
void System::Reflection::PInvokeAttributes::_set_ThrowOnUnmappableCharEnabled(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_ThrowOnUnmappableCharEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "ThrowOnUnmappableCharEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes ThrowOnUnmappableCharDisabled
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_ThrowOnUnmappableCharDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_ThrowOnUnmappableCharDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "ThrowOnUnmappableCharDisabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes ThrowOnUnmappableCharDisabled
void System::Reflection::PInvokeAttributes::_set_ThrowOnUnmappableCharDisabled(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_ThrowOnUnmappableCharDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "ThrowOnUnmappableCharDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes ThrowOnUnmappableCharMask
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_ThrowOnUnmappableCharMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_ThrowOnUnmappableCharMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "ThrowOnUnmappableCharMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes ThrowOnUnmappableCharMask
void System::Reflection::PInvokeAttributes::_set_ThrowOnUnmappableCharMask(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_ThrowOnUnmappableCharMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "ThrowOnUnmappableCharMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes SupportsLastError
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_SupportsLastError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_SupportsLastError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "SupportsLastError"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes SupportsLastError
void System::Reflection::PInvokeAttributes::_set_SupportsLastError(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_SupportsLastError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "SupportsLastError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CallConvMask
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CallConvMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CallConvMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CallConvMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CallConvMask
void System::Reflection::PInvokeAttributes::_set_CallConvMask(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CallConvMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CallConvMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CallConvWinapi
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CallConvWinapi() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CallConvWinapi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CallConvWinapi"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CallConvWinapi
void System::Reflection::PInvokeAttributes::_set_CallConvWinapi(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CallConvWinapi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CallConvWinapi", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CallConvCdecl
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CallConvCdecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CallConvCdecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CallConvCdecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CallConvCdecl
void System::Reflection::PInvokeAttributes::_set_CallConvCdecl(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CallConvCdecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CallConvCdecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CallConvStdcall
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CallConvStdcall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CallConvStdcall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CallConvStdcall"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CallConvStdcall
void System::Reflection::PInvokeAttributes::_set_CallConvStdcall(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CallConvStdcall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CallConvStdcall", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CallConvThiscall
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CallConvThiscall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CallConvThiscall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CallConvThiscall"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CallConvThiscall
void System::Reflection::PInvokeAttributes::_set_CallConvThiscall(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CallConvThiscall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CallConvThiscall", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes CallConvFastcall
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_CallConvFastcall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_CallConvFastcall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "CallConvFastcall"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes CallConvFastcall
void System::Reflection::PInvokeAttributes::_set_CallConvFastcall(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_CallConvFastcall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "CallConvFastcall", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInvokeAttributes MaxValue
System::Reflection::PInvokeAttributes System::Reflection::PInvokeAttributes::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PInvokeAttributes>("System.Reflection", "PInvokeAttributes", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInvokeAttributes MaxValue
void System::Reflection::PInvokeAttributes::_set_MaxValue(System::Reflection::PInvokeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PInvokeAttributes::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInvokeAttributes", "MaxValue", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MemberFilter
#include "System/Reflection/MemberFilter.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.MemberFilter.Invoke
bool System::Reflection::MemberFilter::Invoke(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberFilter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, m, filterCriteria);
}
// Autogenerated method: System.Reflection.MemberFilter.BeginInvoke
System::IAsyncResult* System::Reflection::MemberFilter::BeginInvoke(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberFilter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, m, filterCriteria, callback, object);
}
// Autogenerated method: System.Reflection.MemberFilter.EndInvoke
bool System::Reflection::MemberFilter::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberFilter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: MemberFilter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberFilter::*)(::Il2CppObject*, System::IntPtr)>(&MemberFilter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberFilter::*)(::Il2CppObject*, System::IntPtr)>(&MemberFilter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MemberFilter::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MemberFilter::*)(System::Reflection::MemberInfo*, ::Il2CppObject*)>(&MemberFilter::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberFilter*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MemberFilter::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (MemberFilter::*)(System::Reflection::MemberInfo*, ::Il2CppObject*, System::AsyncCallback*, ::Il2CppObject*)>(&MemberFilter::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberFilter*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MemberFilter::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MemberFilter::*)(System::IAsyncResult*)>(&MemberFilter::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberFilter*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.MemberInfo.get_MemberType
System::Reflection::MemberTypes System::Reflection::MemberInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MemberInfo.get_Name
::Il2CppString* System::Reflection::MemberInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MemberInfo.get_DeclaringType
System::Type* System::Reflection::MemberInfo::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MemberInfo.get_ReflectedType
System::Type* System::Reflection::MemberInfo::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MemberInfo.GetCustomAttributes
::Array<::Il2CppObject*>* System::Reflection::MemberInfo::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.MemberInfo.GetCustomAttributes
::Array<::Il2CppObject*>* System::Reflection::MemberInfo::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MemberInfo.IsDefined
bool System::Reflection::MemberInfo::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MemberInfo.GetCustomAttributesData
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* System::Reflection::MemberInfo::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::GetCustomAttributesData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MemberInfo.get_MetadataToken
int System::Reflection::MemberInfo::get_MetadataToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::get_MetadataToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MetadataToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MemberInfo.get_Module
System::Reflection::Module* System::Reflection::MemberInfo::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MemberInfo.Equals
bool System::Reflection::MemberInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.MemberInfo.GetHashCode
int System::Reflection::MemberInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MemberInfo.op_Equality
bool System::Reflection::operator ==(System::Reflection::MemberInfo* left, System::Reflection::MemberInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MemberInfo", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Reflection.MemberInfo.op_Inequality
bool System::Reflection::operator !=(System::Reflection::MemberInfo* left, System::Reflection::MemberInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfo::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MemberInfo", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Writing MetadataGetter for method: MemberInfo::get_MemberType
// Il2CppName: get_MemberType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MemberTypes (MemberInfo::*)()>(&MemberInfo::get_MemberType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "get_MemberType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberInfo::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MemberInfo::*)()>(&MemberInfo::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberInfo::get_DeclaringType
// Il2CppName: get_DeclaringType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (MemberInfo::*)()>(&MemberInfo::get_DeclaringType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "get_DeclaringType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberInfo::get_ReflectedType
// Il2CppName: get_ReflectedType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (MemberInfo::*)()>(&MemberInfo::get_ReflectedType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "get_ReflectedType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberInfo::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppObject*>* (MemberInfo::*)(bool)>(&MemberInfo::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MemberInfo::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppObject*>* (MemberInfo::*)(System::Type*, bool)>(&MemberInfo::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MemberInfo::IsDefined
// Il2CppName: IsDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MemberInfo::*)(System::Type*, bool)>(&MemberInfo::IsDefined)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "IsDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MemberInfo::GetCustomAttributesData
// Il2CppName: GetCustomAttributesData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* (MemberInfo::*)()>(&MemberInfo::GetCustomAttributesData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "GetCustomAttributesData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberInfo::get_MetadataToken
// Il2CppName: get_MetadataToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MemberInfo::*)()>(&MemberInfo::get_MetadataToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "get_MetadataToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberInfo::get_Module
// Il2CppName: get_Module
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Module* (MemberInfo::*)()>(&MemberInfo::get_Module)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "get_Module", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberInfo::*)()>(&MemberInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberInfo::*)()>(&MemberInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberInfo::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MemberInfo::*)(::Il2CppObject*)>(&MemberInfo::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MemberInfo::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MemberInfo::*)()>(&MemberInfo::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberInfo::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::MemberInfo*, System::Reflection::MemberInfo&)>(&MemberInfo::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo&>()});
  }
};
// Writing MetadataGetter for method: MemberInfo::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::MemberInfo*, System::Reflection::MemberInfo&)>(&MemberInfo::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfo*), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MemberInfoSerializationHolder
#include "System/Reflection/MemberInfoSerializationHolder.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.MemberInfoSerializationHolder.GetSerializationInfo
void System::Reflection::MemberInfoSerializationHolder::GetSerializationInfo(System::Runtime::Serialization::SerializationInfo* info, ::Il2CppString* name, System::RuntimeType* reflectedClass, ::Il2CppString* signature, System::Reflection::MemberTypes type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfoSerializationHolder::GetSerializationInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MemberInfoSerializationHolder", "GetSerializationInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(reflectedClass), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, info, name, reflectedClass, signature, type);
}
// Autogenerated method: System.Reflection.MemberInfoSerializationHolder.GetSerializationInfo
void System::Reflection::MemberInfoSerializationHolder::GetSerializationInfo(System::Runtime::Serialization::SerializationInfo* info, ::Il2CppString* name, System::RuntimeType* reflectedClass, ::Il2CppString* signature, ::Il2CppString* signature2, System::Reflection::MemberTypes type, ::Array<System::Type*>* genericArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfoSerializationHolder::GetSerializationInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MemberInfoSerializationHolder", "GetSerializationInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(reflectedClass), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(signature2), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericArguments)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, info, name, reflectedClass, signature, signature2, type, genericArguments);
}
// Autogenerated method: System.Reflection.MemberInfoSerializationHolder.GetObjectData
void System::Reflection::MemberInfoSerializationHolder::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfoSerializationHolder::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.MemberInfoSerializationHolder.GetRealObject
::Il2CppObject* System::Reflection::MemberInfoSerializationHolder::GetRealObject(System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberInfoSerializationHolder::GetRealObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRealObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: MemberInfoSerializationHolder::GetSerializationInfo
// Il2CppName: GetSerializationInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Runtime::Serialization::SerializationInfo*, ::Il2CppString*, System::RuntimeType*, ::Il2CppString*, System::Reflection::MemberTypes)>(&MemberInfoSerializationHolder::GetSerializationInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfoSerializationHolder*), "GetSerializationInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::RuntimeType*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberTypes>()});
  }
};
// Writing MetadataGetter for method: MemberInfoSerializationHolder::GetSerializationInfo
// Il2CppName: GetSerializationInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Runtime::Serialization::SerializationInfo*, ::Il2CppString*, System::RuntimeType*, ::Il2CppString*, ::Il2CppString*, System::Reflection::MemberTypes, ::Array<System::Type*>*)>(&MemberInfoSerializationHolder::GetSerializationInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfoSerializationHolder*), "GetSerializationInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::RuntimeType*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberTypes>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>()});
  }
};
// Writing MetadataGetter for method: MemberInfoSerializationHolder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberInfoSerializationHolder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&MemberInfoSerializationHolder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfoSerializationHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberInfoSerializationHolder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&MemberInfoSerializationHolder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfoSerializationHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: MemberInfoSerializationHolder::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberInfoSerializationHolder::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&MemberInfoSerializationHolder::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfoSerializationHolder*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: MemberInfoSerializationHolder::GetRealObject
// Il2CppName: GetRealObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MemberInfoSerializationHolder::*)(System::Runtime::Serialization::StreamingContext)>(&MemberInfoSerializationHolder::GetRealObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberInfoSerializationHolder*), "GetRealObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.MemberTypes Constructor
System::Reflection::MemberTypes System::Reflection::MemberTypes::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberTypes>("System.Reflection", "MemberTypes", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MemberTypes Constructor
void System::Reflection::MemberTypes::_set_Constructor(System::Reflection::MemberTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MemberTypes", "Constructor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MemberTypes Event
System::Reflection::MemberTypes System::Reflection::MemberTypes::_get_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_get_Event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberTypes>("System.Reflection", "MemberTypes", "Event"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MemberTypes Event
void System::Reflection::MemberTypes::_set_Event(System::Reflection::MemberTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_set_Event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MemberTypes", "Event", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MemberTypes Field
System::Reflection::MemberTypes System::Reflection::MemberTypes::_get_Field() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_get_Field");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberTypes>("System.Reflection", "MemberTypes", "Field"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MemberTypes Field
void System::Reflection::MemberTypes::_set_Field(System::Reflection::MemberTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_set_Field");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MemberTypes", "Field", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MemberTypes Method
System::Reflection::MemberTypes System::Reflection::MemberTypes::_get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_get_Method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberTypes>("System.Reflection", "MemberTypes", "Method"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MemberTypes Method
void System::Reflection::MemberTypes::_set_Method(System::Reflection::MemberTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_set_Method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MemberTypes", "Method", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MemberTypes Property
System::Reflection::MemberTypes System::Reflection::MemberTypes::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberTypes>("System.Reflection", "MemberTypes", "Property"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MemberTypes Property
void System::Reflection::MemberTypes::_set_Property(System::Reflection::MemberTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MemberTypes", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MemberTypes TypeInfo
System::Reflection::MemberTypes System::Reflection::MemberTypes::_get_TypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_get_TypeInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberTypes>("System.Reflection", "MemberTypes", "TypeInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MemberTypes TypeInfo
void System::Reflection::MemberTypes::_set_TypeInfo(System::Reflection::MemberTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_set_TypeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MemberTypes", "TypeInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MemberTypes Custom
System::Reflection::MemberTypes System::Reflection::MemberTypes::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberTypes>("System.Reflection", "MemberTypes", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MemberTypes Custom
void System::Reflection::MemberTypes::_set_Custom(System::Reflection::MemberTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MemberTypes", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MemberTypes NestedType
System::Reflection::MemberTypes System::Reflection::MemberTypes::_get_NestedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_get_NestedType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberTypes>("System.Reflection", "MemberTypes", "NestedType"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MemberTypes NestedType
void System::Reflection::MemberTypes::_set_NestedType(System::Reflection::MemberTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_set_NestedType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MemberTypes", "NestedType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MemberTypes All
System::Reflection::MemberTypes System::Reflection::MemberTypes::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberTypes>("System.Reflection", "MemberTypes", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MemberTypes All
void System::Reflection::MemberTypes::_set_All(System::Reflection::MemberTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MemberTypes::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MemberTypes", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes MemberAccessMask
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_MemberAccessMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_MemberAccessMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "MemberAccessMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes MemberAccessMask
void System::Reflection::MethodAttributes::_set_MemberAccessMask(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_MemberAccessMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "MemberAccessMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes PrivateScope
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_PrivateScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_PrivateScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "PrivateScope"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes PrivateScope
void System::Reflection::MethodAttributes::_set_PrivateScope(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_PrivateScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "PrivateScope", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes Private
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "Private"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes Private
void System::Reflection::MethodAttributes::_set_Private(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "Private", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes FamANDAssem
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_FamANDAssem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_FamANDAssem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "FamANDAssem"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes FamANDAssem
void System::Reflection::MethodAttributes::_set_FamANDAssem(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_FamANDAssem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "FamANDAssem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes Assembly
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_Assembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "Assembly"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes Assembly
void System::Reflection::MethodAttributes::_set_Assembly(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_Assembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "Assembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes Family
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_Family() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_Family");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "Family"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes Family
void System::Reflection::MethodAttributes::_set_Family(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_Family");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "Family", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes FamORAssem
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_FamORAssem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_FamORAssem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "FamORAssem"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes FamORAssem
void System::Reflection::MethodAttributes::_set_FamORAssem(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_FamORAssem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "FamORAssem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes Public
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "Public"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes Public
void System::Reflection::MethodAttributes::_set_Public(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "Public", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes Static
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "Static"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes Static
void System::Reflection::MethodAttributes::_set_Static(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes Final
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_Final() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_Final");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "Final"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes Final
void System::Reflection::MethodAttributes::_set_Final(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_Final");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "Final", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes Virtual
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_Virtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_Virtual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "Virtual"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes Virtual
void System::Reflection::MethodAttributes::_set_Virtual(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_Virtual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "Virtual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes HideBySig
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_HideBySig() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_HideBySig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "HideBySig"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes HideBySig
void System::Reflection::MethodAttributes::_set_HideBySig(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_HideBySig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "HideBySig", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes CheckAccessOnOverride
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_CheckAccessOnOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_CheckAccessOnOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "CheckAccessOnOverride"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes CheckAccessOnOverride
void System::Reflection::MethodAttributes::_set_CheckAccessOnOverride(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_CheckAccessOnOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "CheckAccessOnOverride", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes VtableLayoutMask
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_VtableLayoutMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_VtableLayoutMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "VtableLayoutMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes VtableLayoutMask
void System::Reflection::MethodAttributes::_set_VtableLayoutMask(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_VtableLayoutMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "VtableLayoutMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes ReuseSlot
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_ReuseSlot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_ReuseSlot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "ReuseSlot"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes ReuseSlot
void System::Reflection::MethodAttributes::_set_ReuseSlot(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_ReuseSlot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "ReuseSlot", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes NewSlot
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_NewSlot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_NewSlot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "NewSlot"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes NewSlot
void System::Reflection::MethodAttributes::_set_NewSlot(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_NewSlot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "NewSlot", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes Abstract
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_Abstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_Abstract");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "Abstract"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes Abstract
void System::Reflection::MethodAttributes::_set_Abstract(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_Abstract");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "Abstract", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes SpecialName
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_SpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_SpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "SpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes SpecialName
void System::Reflection::MethodAttributes::_set_SpecialName(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_SpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "SpecialName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes PinvokeImpl
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_PinvokeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_PinvokeImpl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "PinvokeImpl"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes PinvokeImpl
void System::Reflection::MethodAttributes::_set_PinvokeImpl(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_PinvokeImpl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "PinvokeImpl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes UnmanagedExport
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_UnmanagedExport() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_UnmanagedExport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "UnmanagedExport"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes UnmanagedExport
void System::Reflection::MethodAttributes::_set_UnmanagedExport(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_UnmanagedExport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "UnmanagedExport", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes RTSpecialName
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_RTSpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_RTSpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "RTSpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes RTSpecialName
void System::Reflection::MethodAttributes::_set_RTSpecialName(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_RTSpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "RTSpecialName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes ReservedMask
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_ReservedMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_ReservedMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "ReservedMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes ReservedMask
void System::Reflection::MethodAttributes::_set_ReservedMask(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_ReservedMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "ReservedMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes HasSecurity
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_HasSecurity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_HasSecurity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "HasSecurity"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes HasSecurity
void System::Reflection::MethodAttributes::_set_HasSecurity(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_HasSecurity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "HasSecurity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodAttributes RequireSecObject
System::Reflection::MethodAttributes System::Reflection::MethodAttributes::_get_RequireSecObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_get_RequireSecObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodAttributes>("System.Reflection", "MethodAttributes", "RequireSecObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodAttributes RequireSecObject
void System::Reflection::MethodAttributes::_set_RequireSecObject(System::Reflection::MethodAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodAttributes::_set_RequireSecObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodAttributes", "RequireSecObject", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.MethodBase.GetMethodFromHandle
System::Reflection::MethodBase* System::Reflection::MethodBase::GetMethodFromHandle(System::RuntimeMethodHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetMethodFromHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodBase", "GetMethodFromHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Reflection.MethodBase.GetParametersNoCopy
::Array<System::Reflection::ParameterInfo*>* System::Reflection::MethodBase::GetParametersNoCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetParametersNoCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParametersNoCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::ParameterInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.GetParameters
::Array<System::Reflection::ParameterInfo*>* System::Reflection::MethodBase::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::ParameterInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.GetMethodImplementationFlags
System::Reflection::MethodImplAttributes System::Reflection::MethodBase::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_MethodHandle
System::RuntimeMethodHandle System::Reflection::MethodBase::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_Attributes
System::Reflection::MethodAttributes System::Reflection::MethodBase::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.Invoke
::Il2CppObject* System::Reflection::MethodBase::Invoke(::Il2CppObject* obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::Array<::Il2CppObject*>* parameters, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.MethodBase.get_CallingConvention
System::Reflection::CallingConventions System::Reflection::MethodBase::get_CallingConvention() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_CallingConvention");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallingConvention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::CallingConventions, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.GetGenericArguments
::Array<System::Type*>* System::Reflection::MethodBase::GetGenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetGenericArguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_IsGenericMethodDefinition
bool System::Reflection::MethodBase::get_IsGenericMethodDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_IsGenericMethodDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericMethodDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_ContainsGenericParameters
bool System::Reflection::MethodBase::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_IsGenericMethod
bool System::Reflection::MethodBase::get_IsGenericMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_IsGenericMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_IsSecurityCritical
bool System::Reflection::MethodBase::get_IsSecurityCritical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_IsSecurityCritical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSecurityCritical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.Invoke
::Il2CppObject* System::Reflection::MethodBase::Invoke(::Il2CppObject* obj, ::Array<::Il2CppObject*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, obj, parameters);
}
// Autogenerated method: System.Reflection.MethodBase.get_IsPublic
bool System::Reflection::MethodBase::get_IsPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_IsPublic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_IsFamily
bool System::Reflection::MethodBase::get_IsFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_IsFamily");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_IsStatic
bool System::Reflection::MethodBase::get_IsStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_IsStatic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_IsVirtual
bool System::Reflection::MethodBase::get_IsVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_IsVirtual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_IsAbstract
bool System::Reflection::MethodBase::get_IsAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_IsAbstract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.get_IsConstructor
bool System::Reflection::MethodBase::get_IsConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::get_IsConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.ConstructParameters
::Il2CppString* System::Reflection::MethodBase::ConstructParameters(::Array<System::Type*>* parameterTypes, System::Reflection::CallingConventions callingConvention, bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::ConstructParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodBase", "ConstructParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterTypes), ::il2cpp_utils::ExtractType(callingConvention), ::il2cpp_utils::ExtractType(serialization)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parameterTypes, callingConvention, serialization);
}
// Autogenerated method: System.Reflection.MethodBase.FormatNameAndSig
::Il2CppString* System::Reflection::MethodBase::FormatNameAndSig(bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::FormatNameAndSig");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatNameAndSig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialization)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, serialization);
}
// Autogenerated method: System.Reflection.MethodBase.GetParameterTypes
::Array<System::Type*>* System::Reflection::MethodBase::GetParameterTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetParameterTypes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.GetParametersInternal
::Array<System::Reflection::ParameterInfo*>* System::Reflection::MethodBase::GetParametersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetParametersInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParametersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::ParameterInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.GetParametersCount
int System::Reflection::MethodBase::GetParametersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetParametersCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParametersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.GetMethodFromHandleNoGenericCheck
System::Reflection::MethodBase* System::Reflection::MethodBase::GetMethodFromHandleNoGenericCheck(System::RuntimeMethodHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetMethodFromHandleNoGenericCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodBase", "GetMethodFromHandleNoGenericCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Reflection.MethodBase.GetMethodFromHandleNoGenericCheck
System::Reflection::MethodBase* System::Reflection::MethodBase::GetMethodFromHandleNoGenericCheck(System::RuntimeMethodHandle handle, System::RuntimeTypeHandle reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetMethodFromHandleNoGenericCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodBase", "GetMethodFromHandleNoGenericCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, reflectedType);
}
// Autogenerated method: System.Reflection.MethodBase.GetMethodFromHandleInternalType
System::Reflection::MethodBase* System::Reflection::MethodBase::GetMethodFromHandleInternalType(System::IntPtr method_handle, System::IntPtr type_handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetMethodFromHandleInternalType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodBase", "GetMethodFromHandleInternalType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method_handle), ::il2cpp_utils::ExtractType(type_handle)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method_handle, type_handle);
}
// Autogenerated method: System.Reflection.MethodBase.GetMethodFromHandleInternalType_native
System::Reflection::MethodBase* System::Reflection::MethodBase::GetMethodFromHandleInternalType_native(System::IntPtr method_handle, System::IntPtr type_handle, bool genericCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetMethodFromHandleInternalType_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodBase", "GetMethodFromHandleInternalType_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method_handle), ::il2cpp_utils::ExtractType(type_handle), ::il2cpp_utils::ExtractType(genericCheck)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method_handle, type_handle, genericCheck);
}
// Autogenerated method: System.Reflection.MethodBase.Equals
bool System::Reflection::MethodBase::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.MethodBase.GetHashCode
int System::Reflection::MethodBase::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodBase.op_Equality
bool System::Reflection::operator ==(System::Reflection::MethodBase* left, System::Reflection::MethodBase& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodBase", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Reflection.MethodBase.op_Inequality
bool System::Reflection::operator !=(System::Reflection::MethodBase* left, System::Reflection::MethodBase& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodBase::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodBase", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Writing MetadataGetter for method: MethodBase::GetMethodFromHandle
// Il2CppName: GetMethodFromHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodBase* (*)(System::RuntimeMethodHandle)>(&MethodBase::GetMethodFromHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetMethodFromHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeMethodHandle>()});
  }
};
// Writing MetadataGetter for method: MethodBase::GetParametersNoCopy
// Il2CppName: GetParametersNoCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::ParameterInfo*>* (MethodBase::*)()>(&MethodBase::GetParametersNoCopy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetParametersNoCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::GetParameters
// Il2CppName: GetParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::ParameterInfo*>* (MethodBase::*)()>(&MethodBase::GetParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::GetMethodImplementationFlags
// Il2CppName: GetMethodImplementationFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodImplAttributes (MethodBase::*)()>(&MethodBase::GetMethodImplementationFlags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetMethodImplementationFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_MethodHandle
// Il2CppName: get_MethodHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::RuntimeMethodHandle (MethodBase::*)()>(&MethodBase::get_MethodHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_MethodHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_Attributes
// Il2CppName: get_Attributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodAttributes (MethodBase::*)()>(&MethodBase::get_Attributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_Attributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MethodBase::*)(::Il2CppObject*, System::Reflection::BindingFlags, System::Reflection::Binder*, ::Array<::Il2CppObject*>*, System::Globalization::CultureInfo*)>(&MethodBase::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::BindingFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Binder*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Globalization::CultureInfo*>()});
  }
};
// Writing MetadataGetter for method: MethodBase::get_CallingConvention
// Il2CppName: get_CallingConvention
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::CallingConventions (MethodBase::*)()>(&MethodBase::get_CallingConvention)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_CallingConvention", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::GetGenericArguments
// Il2CppName: GetGenericArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Type*>* (MethodBase::*)()>(&MethodBase::GetGenericArguments)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetGenericArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_IsGenericMethodDefinition
// Il2CppName: get_IsGenericMethodDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_IsGenericMethodDefinition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_IsGenericMethodDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_ContainsGenericParameters
// Il2CppName: get_ContainsGenericParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_ContainsGenericParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_ContainsGenericParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_IsGenericMethod
// Il2CppName: get_IsGenericMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_IsGenericMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_IsGenericMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_IsSecurityCritical
// Il2CppName: get_IsSecurityCritical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_IsSecurityCritical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_IsSecurityCritical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MethodBase::*)(::Il2CppObject*, ::Array<::Il2CppObject*>*)>(&MethodBase::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: MethodBase::get_IsPublic
// Il2CppName: get_IsPublic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_IsPublic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_IsPublic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_IsFamily
// Il2CppName: get_IsFamily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_IsFamily)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_IsFamily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_IsStatic
// Il2CppName: get_IsStatic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_IsStatic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_IsStatic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_IsVirtual
// Il2CppName: get_IsVirtual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_IsVirtual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_IsVirtual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_IsAbstract
// Il2CppName: get_IsAbstract
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_IsAbstract)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_IsAbstract", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::get_IsConstructor
// Il2CppName: get_IsConstructor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)()>(&MethodBase::get_IsConstructor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "get_IsConstructor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::ConstructParameters
// Il2CppName: ConstructParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Array<System::Type*>*, System::Reflection::CallingConventions, bool)>(&MethodBase::ConstructParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "ConstructParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::CallingConventions>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MethodBase::FormatNameAndSig
// Il2CppName: FormatNameAndSig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MethodBase::*)(bool)>(&MethodBase::FormatNameAndSig)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "FormatNameAndSig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MethodBase::GetParameterTypes
// Il2CppName: GetParameterTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Type*>* (MethodBase::*)()>(&MethodBase::GetParameterTypes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetParameterTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::GetParametersInternal
// Il2CppName: GetParametersInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::ParameterInfo*>* (MethodBase::*)()>(&MethodBase::GetParametersInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetParametersInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::GetParametersCount
// Il2CppName: GetParametersCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MethodBase::*)()>(&MethodBase::GetParametersCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetParametersCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::GetMethodFromHandleNoGenericCheck
// Il2CppName: GetMethodFromHandleNoGenericCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodBase* (*)(System::RuntimeMethodHandle)>(&MethodBase::GetMethodFromHandleNoGenericCheck)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetMethodFromHandleNoGenericCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeMethodHandle>()});
  }
};
// Writing MetadataGetter for method: MethodBase::GetMethodFromHandleNoGenericCheck
// Il2CppName: GetMethodFromHandleNoGenericCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodBase* (*)(System::RuntimeMethodHandle, System::RuntimeTypeHandle)>(&MethodBase::GetMethodFromHandleNoGenericCheck)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetMethodFromHandleNoGenericCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeMethodHandle>(), ::il2cpp_utils::ExtractIndependentType<System::RuntimeTypeHandle>()});
  }
};
// Writing MetadataGetter for method: MethodBase::GetMethodFromHandleInternalType
// Il2CppName: GetMethodFromHandleInternalType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodBase* (*)(System::IntPtr, System::IntPtr)>(&MethodBase::GetMethodFromHandleInternalType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetMethodFromHandleInternalType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MethodBase::GetMethodFromHandleInternalType_native
// Il2CppName: GetMethodFromHandleInternalType_native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodBase* (*)(System::IntPtr, System::IntPtr, bool)>(&MethodBase::GetMethodFromHandleInternalType_native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetMethodFromHandleInternalType_native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MethodBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MethodBase::*)()>(&MethodBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MethodBase::*)()>(&MethodBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodBase::*)(::Il2CppObject*)>(&MethodBase::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MethodBase::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MethodBase::*)()>(&MethodBase::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodBase::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::MethodBase*, System::Reflection::MethodBase&)>(&MethodBase::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodBase*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodBase&>()});
  }
};
// Writing MetadataGetter for method: MethodBase::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::MethodBase*, System::Reflection::MethodBase&)>(&MethodBase::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodBase*), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodBase*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodBase&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.ExceptionHandlingClauseOptions
#include "System/Reflection/ExceptionHandlingClauseOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.ExceptionHandlingClauseOptions Clause
System::Reflection::ExceptionHandlingClauseOptions System::Reflection::ExceptionHandlingClauseOptions::_get_Clause() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ExceptionHandlingClauseOptions::_get_Clause");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ExceptionHandlingClauseOptions>("System.Reflection", "ExceptionHandlingClauseOptions", "Clause"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ExceptionHandlingClauseOptions Clause
void System::Reflection::ExceptionHandlingClauseOptions::_set_Clause(System::Reflection::ExceptionHandlingClauseOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ExceptionHandlingClauseOptions::_set_Clause");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ExceptionHandlingClauseOptions", "Clause", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ExceptionHandlingClauseOptions Filter
System::Reflection::ExceptionHandlingClauseOptions System::Reflection::ExceptionHandlingClauseOptions::_get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ExceptionHandlingClauseOptions::_get_Filter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ExceptionHandlingClauseOptions>("System.Reflection", "ExceptionHandlingClauseOptions", "Filter"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ExceptionHandlingClauseOptions Filter
void System::Reflection::ExceptionHandlingClauseOptions::_set_Filter(System::Reflection::ExceptionHandlingClauseOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ExceptionHandlingClauseOptions::_set_Filter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ExceptionHandlingClauseOptions", "Filter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ExceptionHandlingClauseOptions Finally
System::Reflection::ExceptionHandlingClauseOptions System::Reflection::ExceptionHandlingClauseOptions::_get_Finally() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ExceptionHandlingClauseOptions::_get_Finally");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ExceptionHandlingClauseOptions>("System.Reflection", "ExceptionHandlingClauseOptions", "Finally"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ExceptionHandlingClauseOptions Finally
void System::Reflection::ExceptionHandlingClauseOptions::_set_Finally(System::Reflection::ExceptionHandlingClauseOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ExceptionHandlingClauseOptions::_set_Finally");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ExceptionHandlingClauseOptions", "Finally", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ExceptionHandlingClauseOptions Fault
System::Reflection::ExceptionHandlingClauseOptions System::Reflection::ExceptionHandlingClauseOptions::_get_Fault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ExceptionHandlingClauseOptions::_get_Fault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ExceptionHandlingClauseOptions>("System.Reflection", "ExceptionHandlingClauseOptions", "Fault"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ExceptionHandlingClauseOptions Fault
void System::Reflection::ExceptionHandlingClauseOptions::_set_Fault(System::Reflection::ExceptionHandlingClauseOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ExceptionHandlingClauseOptions::_set_Fault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ExceptionHandlingClauseOptions", "Fault", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes CodeTypeMask
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_CodeTypeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_CodeTypeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "CodeTypeMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes CodeTypeMask
void System::Reflection::MethodImplAttributes::_set_CodeTypeMask(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_CodeTypeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "CodeTypeMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes IL
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_IL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_IL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "IL"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes IL
void System::Reflection::MethodImplAttributes::_set_IL(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_IL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "IL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes Native
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_Native() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_Native");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "Native"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes Native
void System::Reflection::MethodImplAttributes::_set_Native(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_Native");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "Native", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes OPTIL
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_OPTIL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_OPTIL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "OPTIL"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes OPTIL
void System::Reflection::MethodImplAttributes::_set_OPTIL(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_OPTIL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "OPTIL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes Runtime
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_Runtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_Runtime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "Runtime"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes Runtime
void System::Reflection::MethodImplAttributes::_set_Runtime(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_Runtime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "Runtime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes ManagedMask
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_ManagedMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_ManagedMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "ManagedMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes ManagedMask
void System::Reflection::MethodImplAttributes::_set_ManagedMask(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_ManagedMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "ManagedMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes Unmanaged
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_Unmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_Unmanaged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "Unmanaged"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes Unmanaged
void System::Reflection::MethodImplAttributes::_set_Unmanaged(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_Unmanaged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "Unmanaged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes Managed
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_Managed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_Managed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "Managed"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes Managed
void System::Reflection::MethodImplAttributes::_set_Managed(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_Managed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "Managed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes ForwardRef
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_ForwardRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_ForwardRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "ForwardRef"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes ForwardRef
void System::Reflection::MethodImplAttributes::_set_ForwardRef(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_ForwardRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "ForwardRef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes PreserveSig
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_PreserveSig() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_PreserveSig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "PreserveSig"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes PreserveSig
void System::Reflection::MethodImplAttributes::_set_PreserveSig(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_PreserveSig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "PreserveSig", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes InternalCall
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_InternalCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_InternalCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "InternalCall"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes InternalCall
void System::Reflection::MethodImplAttributes::_set_InternalCall(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_InternalCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "InternalCall", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes Synchronized
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_Synchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_Synchronized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "Synchronized"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes Synchronized
void System::Reflection::MethodImplAttributes::_set_Synchronized(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_Synchronized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "Synchronized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes NoInlining
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_NoInlining() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_NoInlining");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "NoInlining"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes NoInlining
void System::Reflection::MethodImplAttributes::_set_NoInlining(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_NoInlining");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "NoInlining", value));
}
// [ComVisibleAttribute] Offset: 0xD813D4
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes AggressiveInlining
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_AggressiveInlining() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_AggressiveInlining");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "AggressiveInlining"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes AggressiveInlining
void System::Reflection::MethodImplAttributes::_set_AggressiveInlining(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_AggressiveInlining");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "AggressiveInlining", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes NoOptimization
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_NoOptimization() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_NoOptimization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "NoOptimization"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes NoOptimization
void System::Reflection::MethodImplAttributes::_set_NoOptimization(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_NoOptimization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "NoOptimization", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.MethodImplAttributes MaxMethodImplVal
System::Reflection::MethodImplAttributes System::Reflection::MethodImplAttributes::_get_MaxMethodImplVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_get_MaxMethodImplVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodImplAttributes>("System.Reflection", "MethodImplAttributes", "MaxMethodImplVal"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.MethodImplAttributes MaxMethodImplVal
void System::Reflection::MethodImplAttributes::_set_MaxMethodImplVal(System::Reflection::MethodImplAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodImplAttributes::_set_MaxMethodImplVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "MethodImplAttributes", "MaxMethodImplVal", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.MethodInfo.get_ReturnType
System::Type* System::Reflection::MethodInfo::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodInfo.GetBaseDefinition
System::Reflection::MethodInfo* System::Reflection::MethodInfo::GetBaseDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::GetBaseDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodInfo.GetGenericMethodDefinition
System::Reflection::MethodInfo* System::Reflection::MethodInfo::GetGenericMethodDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::GetGenericMethodDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericMethodDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodInfo.MakeGenericMethod
System::Reflection::MethodInfo* System::Reflection::MethodInfo::MakeGenericMethod(::Array<System::Type*>* typeArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::MakeGenericMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeArguments)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, typeArguments);
}
// Creating initializer_list -> params proxy for: System.Reflection.MethodInfo MakeGenericMethod(params System.Type[] typeArguments)
System::Reflection::MethodInfo* System::Reflection::MethodInfo::MakeGenericMethod(std::initializer_list<System::Type*> typeArguments) {
  return System::Reflection::MethodInfo::MakeGenericMethod(::Array<System::Type*>::New(typeArguments));
}
// Autogenerated method: System.Reflection.MethodInfo.GetBaseMethod
System::Reflection::MethodInfo* System::Reflection::MethodInfo::GetBaseMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::GetBaseMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodInfo.Equals
bool System::Reflection::MethodInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.MethodInfo.GetHashCode
int System::Reflection::MethodInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodInfo.get_MemberType
System::Reflection::MemberTypes System::Reflection::MethodInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodInfo.GetGenericArguments
::Array<System::Type*>* System::Reflection::MethodInfo::GetGenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::GetGenericArguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MethodInfo.op_Equality
bool System::Reflection::operator ==(System::Reflection::MethodInfo* left, System::Reflection::MethodInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodInfo", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Reflection.MethodInfo.op_Inequality
bool System::Reflection::operator !=(System::Reflection::MethodInfo* left, System::Reflection::MethodInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::MethodInfo::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MethodInfo", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Writing MetadataGetter for method: MethodInfo::get_ReturnType
// Il2CppName: get_ReturnType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (MethodInfo::*)()>(&MethodInfo::get_ReturnType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "get_ReturnType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodInfo::GetBaseDefinition
// Il2CppName: GetBaseDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (MethodInfo::*)()>(&MethodInfo::GetBaseDefinition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "GetBaseDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodInfo::GetGenericMethodDefinition
// Il2CppName: GetGenericMethodDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (MethodInfo::*)()>(&MethodInfo::GetGenericMethodDefinition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "GetGenericMethodDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodInfo::MakeGenericMethod
// Il2CppName: MakeGenericMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (MethodInfo::*)(::Array<System::Type*>*)>(&MethodInfo::MakeGenericMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "MakeGenericMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>()});
  }
};
// Writing MetadataGetter for method: MethodInfo::GetBaseMethod
// Il2CppName: GetBaseMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (MethodInfo::*)()>(&MethodInfo::GetBaseMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "GetBaseMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MethodInfo::*)()>(&MethodInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MethodInfo::*)()>(&MethodInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodInfo::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MethodInfo::*)(::Il2CppObject*)>(&MethodInfo::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MethodInfo::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MethodInfo::*)()>(&MethodInfo::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodInfo::get_MemberType
// Il2CppName: get_MemberType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MemberTypes (MethodInfo::*)()>(&MethodInfo::get_MemberType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "get_MemberType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodInfo::GetGenericArguments
// Il2CppName: GetGenericArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Type*>* (MethodInfo::*)()>(&MethodInfo::GetGenericArguments)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "GetGenericArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MethodInfo::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::MethodInfo*, System::Reflection::MethodInfo&)>(&MethodInfo::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo&>()});
  }
};
// Writing MetadataGetter for method: MethodInfo::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::MethodInfo*, System::Reflection::MethodInfo&)>(&MethodInfo::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MethodInfo*), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.Missing
#include "System/Reflection/Missing.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Reflection.Missing Value
System::Reflection::Missing* System::Reflection::Missing::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Missing::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::Missing*>("System.Reflection", "Missing", "Value"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Reflection.Missing Value
void System::Reflection::Missing::_set_Value(System::Reflection::Missing* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Missing::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "Missing", "Value", value));
}
// Autogenerated method: System.Reflection.Missing.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Reflection::Missing::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Missing::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.Missing..cctor
void System::Reflection::Missing::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Missing::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Missing", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Missing::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Missing::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&Missing::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Missing*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: Missing::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Missing::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Missing*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Missing::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Missing::*)()>(&Missing::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Missing*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Missing::*)()>(&Missing::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Missing*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.ParameterAttributes
#include "System/Reflection/ParameterAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes None
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes None
void System::Reflection::ParameterAttributes::_set_None(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes In
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "In"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes In
void System::Reflection::ParameterAttributes::_set_In(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "In", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes Out
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "Out"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes Out
void System::Reflection::ParameterAttributes::_set_Out(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "Out", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes Lcid
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_Lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_Lcid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "Lcid"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes Lcid
void System::Reflection::ParameterAttributes::_set_Lcid(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_Lcid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "Lcid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes Retval
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_Retval() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_Retval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "Retval"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes Retval
void System::Reflection::ParameterAttributes::_set_Retval(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_Retval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "Retval", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes Optional
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_Optional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "Optional"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes Optional
void System::Reflection::ParameterAttributes::_set_Optional(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_Optional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "Optional", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes ReservedMask
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_ReservedMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_ReservedMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "ReservedMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes ReservedMask
void System::Reflection::ParameterAttributes::_set_ReservedMask(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_ReservedMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "ReservedMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes HasDefault
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_HasDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_HasDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "HasDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes HasDefault
void System::Reflection::ParameterAttributes::_set_HasDefault(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_HasDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "HasDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes HasFieldMarshal
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_HasFieldMarshal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_HasFieldMarshal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "HasFieldMarshal"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes HasFieldMarshal
void System::Reflection::ParameterAttributes::_set_HasFieldMarshal(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_HasFieldMarshal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "HasFieldMarshal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes Reserved3
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_Reserved3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_Reserved3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "Reserved3"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes Reserved3
void System::Reflection::ParameterAttributes::_set_Reserved3(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_Reserved3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "Reserved3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.ParameterAttributes Reserved4
System::Reflection::ParameterAttributes System::Reflection::ParameterAttributes::_get_Reserved4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_get_Reserved4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::ParameterAttributes>("System.Reflection", "ParameterAttributes", "Reserved4"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.ParameterAttributes Reserved4
void System::Reflection::ParameterAttributes::_set_Reserved4(System::Reflection::ParameterAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ParameterAttributes::_set_Reserved4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ParameterAttributes", "Reserved4", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Pointer
#include "System/Reflection/Pointer.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Pointer.Box
::Il2CppObject* System::Reflection::Pointer::Box(void* ptr, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Pointer::Box");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Pointer", "Box", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr, type);
}
// Autogenerated method: System.Reflection.Pointer.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Reflection::Pointer::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Pointer::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Writing MetadataGetter for method: Pointer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pointer::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&Pointer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pointer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pointer::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&Pointer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pointer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: Pointer::Box
// Il2CppName: Box
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(void*, System::Type*)>(&Pointer::Box)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pointer*), "Box", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<void*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: Pointer::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pointer::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&Pointer::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pointer*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: Pointer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pointer::*)()>(&Pointer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pointer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pointer::*)()>(&Pointer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pointer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.PropertyAttributes
#include "System/Reflection/PropertyAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.PropertyAttributes None
System::Reflection::PropertyAttributes System::Reflection::PropertyAttributes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PropertyAttributes>("System.Reflection", "PropertyAttributes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PropertyAttributes None
void System::Reflection::PropertyAttributes::_set_None(System::Reflection::PropertyAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PropertyAttributes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PropertyAttributes SpecialName
System::Reflection::PropertyAttributes System::Reflection::PropertyAttributes::_get_SpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_get_SpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PropertyAttributes>("System.Reflection", "PropertyAttributes", "SpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PropertyAttributes SpecialName
void System::Reflection::PropertyAttributes::_set_SpecialName(System::Reflection::PropertyAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_set_SpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PropertyAttributes", "SpecialName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PropertyAttributes ReservedMask
System::Reflection::PropertyAttributes System::Reflection::PropertyAttributes::_get_ReservedMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_get_ReservedMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PropertyAttributes>("System.Reflection", "PropertyAttributes", "ReservedMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PropertyAttributes ReservedMask
void System::Reflection::PropertyAttributes::_set_ReservedMask(System::Reflection::PropertyAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_set_ReservedMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PropertyAttributes", "ReservedMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PropertyAttributes RTSpecialName
System::Reflection::PropertyAttributes System::Reflection::PropertyAttributes::_get_RTSpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_get_RTSpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PropertyAttributes>("System.Reflection", "PropertyAttributes", "RTSpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PropertyAttributes RTSpecialName
void System::Reflection::PropertyAttributes::_set_RTSpecialName(System::Reflection::PropertyAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_set_RTSpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PropertyAttributes", "RTSpecialName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PropertyAttributes HasDefault
System::Reflection::PropertyAttributes System::Reflection::PropertyAttributes::_get_HasDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_get_HasDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PropertyAttributes>("System.Reflection", "PropertyAttributes", "HasDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PropertyAttributes HasDefault
void System::Reflection::PropertyAttributes::_set_HasDefault(System::Reflection::PropertyAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_set_HasDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PropertyAttributes", "HasDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PropertyAttributes Reserved2
System::Reflection::PropertyAttributes System::Reflection::PropertyAttributes::_get_Reserved2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_get_Reserved2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PropertyAttributes>("System.Reflection", "PropertyAttributes", "Reserved2"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PropertyAttributes Reserved2
void System::Reflection::PropertyAttributes::_set_Reserved2(System::Reflection::PropertyAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_set_Reserved2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PropertyAttributes", "Reserved2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PropertyAttributes Reserved3
System::Reflection::PropertyAttributes System::Reflection::PropertyAttributes::_get_Reserved3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_get_Reserved3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PropertyAttributes>("System.Reflection", "PropertyAttributes", "Reserved3"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PropertyAttributes Reserved3
void System::Reflection::PropertyAttributes::_set_Reserved3(System::Reflection::PropertyAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_set_Reserved3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PropertyAttributes", "Reserved3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PropertyAttributes Reserved4
System::Reflection::PropertyAttributes System::Reflection::PropertyAttributes::_get_Reserved4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_get_Reserved4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::PropertyAttributes>("System.Reflection", "PropertyAttributes", "Reserved4"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PropertyAttributes Reserved4
void System::Reflection::PropertyAttributes::_set_Reserved4(System::Reflection::PropertyAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyAttributes::_set_Reserved4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PropertyAttributes", "Reserved4", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.ReflectionTypeLoadException
#include "System/Reflection/ReflectionTypeLoadException.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.ReflectionTypeLoadException.GetObjectData
void System::Reflection::ReflectionTypeLoadException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ReflectionTypeLoadException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Writing MetadataGetter for method: ReflectionTypeLoadException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionTypeLoadException::*)(::Array<System::Type*>*, ::Array<System::Exception*>*)>(&ReflectionTypeLoadException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionTypeLoadException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Exception*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionTypeLoadException::*)(::Array<System::Type*>*, ::Array<System::Exception*>*)>(&ReflectionTypeLoadException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionTypeLoadException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Exception*>*>()});
  }
};
// Writing MetadataGetter for method: ReflectionTypeLoadException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionTypeLoadException::*)()>(&ReflectionTypeLoadException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionTypeLoadException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionTypeLoadException::*)()>(&ReflectionTypeLoadException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionTypeLoadException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ReflectionTypeLoadException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionTypeLoadException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&ReflectionTypeLoadException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionTypeLoadException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionTypeLoadException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&ReflectionTypeLoadException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionTypeLoadException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: ReflectionTypeLoadException::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionTypeLoadException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&ReflectionTypeLoadException::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionTypeLoadException*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.TargetException
#include "System/Reflection/TargetException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TargetException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetException::*)()>(&TargetException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetException::*)()>(&TargetException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TargetException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetException::*)(::Il2CppString*)>(&TargetException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetException::*)(::Il2CppString*)>(&TargetException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: TargetException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&TargetException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&TargetException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.TargetInvocationException
#include "System/Reflection/TargetInvocationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TargetInvocationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetInvocationException::*)(System::Exception*)>(&TargetInvocationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetInvocationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetInvocationException::*)(System::Exception*)>(&TargetInvocationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetInvocationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
// Writing MetadataGetter for method: TargetInvocationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetInvocationException::*)()>(&TargetInvocationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetInvocationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetInvocationException::*)()>(&TargetInvocationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetInvocationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TargetInvocationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetInvocationException::*)(::Il2CppString*, System::Exception*)>(&TargetInvocationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetInvocationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetInvocationException::*)(::Il2CppString*, System::Exception*)>(&TargetInvocationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetInvocationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
// Writing MetadataGetter for method: TargetInvocationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetInvocationException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&TargetInvocationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetInvocationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetInvocationException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&TargetInvocationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetInvocationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.TargetParameterCountException
#include "System/Reflection/TargetParameterCountException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TargetParameterCountException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetParameterCountException::*)()>(&TargetParameterCountException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetParameterCountException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetParameterCountException::*)()>(&TargetParameterCountException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetParameterCountException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TargetParameterCountException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetParameterCountException::*)(::Il2CppString*)>(&TargetParameterCountException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetParameterCountException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetParameterCountException::*)(::Il2CppString*)>(&TargetParameterCountException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetParameterCountException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: TargetParameterCountException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetParameterCountException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&TargetParameterCountException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetParameterCountException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetParameterCountException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&TargetParameterCountException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetParameterCountException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes VisibilityMask
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_VisibilityMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_VisibilityMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "VisibilityMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes VisibilityMask
void System::Reflection::TypeAttributes::_set_VisibilityMask(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_VisibilityMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "VisibilityMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes NotPublic
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_NotPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_NotPublic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "NotPublic"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes NotPublic
void System::Reflection::TypeAttributes::_set_NotPublic(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_NotPublic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "NotPublic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes Public
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "Public"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes Public
void System::Reflection::TypeAttributes::_set_Public(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "Public", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes NestedPublic
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_NestedPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_NestedPublic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "NestedPublic"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes NestedPublic
void System::Reflection::TypeAttributes::_set_NestedPublic(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_NestedPublic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "NestedPublic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes NestedPrivate
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_NestedPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_NestedPrivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "NestedPrivate"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes NestedPrivate
void System::Reflection::TypeAttributes::_set_NestedPrivate(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_NestedPrivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "NestedPrivate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes NestedFamily
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_NestedFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_NestedFamily");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "NestedFamily"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes NestedFamily
void System::Reflection::TypeAttributes::_set_NestedFamily(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_NestedFamily");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "NestedFamily", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes NestedAssembly
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_NestedAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_NestedAssembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "NestedAssembly"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes NestedAssembly
void System::Reflection::TypeAttributes::_set_NestedAssembly(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_NestedAssembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "NestedAssembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes NestedFamANDAssem
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_NestedFamANDAssem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_NestedFamANDAssem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "NestedFamANDAssem"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes NestedFamANDAssem
void System::Reflection::TypeAttributes::_set_NestedFamANDAssem(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_NestedFamANDAssem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "NestedFamANDAssem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes NestedFamORAssem
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_NestedFamORAssem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_NestedFamORAssem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "NestedFamORAssem"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes NestedFamORAssem
void System::Reflection::TypeAttributes::_set_NestedFamORAssem(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_NestedFamORAssem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "NestedFamORAssem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes LayoutMask
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_LayoutMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_LayoutMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "LayoutMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes LayoutMask
void System::Reflection::TypeAttributes::_set_LayoutMask(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_LayoutMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "LayoutMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes AutoLayout
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_AutoLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_AutoLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "AutoLayout"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes AutoLayout
void System::Reflection::TypeAttributes::_set_AutoLayout(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_AutoLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "AutoLayout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes SequentialLayout
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_SequentialLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_SequentialLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "SequentialLayout"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes SequentialLayout
void System::Reflection::TypeAttributes::_set_SequentialLayout(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_SequentialLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "SequentialLayout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes ExplicitLayout
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_ExplicitLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_ExplicitLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "ExplicitLayout"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes ExplicitLayout
void System::Reflection::TypeAttributes::_set_ExplicitLayout(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_ExplicitLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "ExplicitLayout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes ClassSemanticsMask
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_ClassSemanticsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_ClassSemanticsMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "ClassSemanticsMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes ClassSemanticsMask
void System::Reflection::TypeAttributes::_set_ClassSemanticsMask(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_ClassSemanticsMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "ClassSemanticsMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes Class
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_Class() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_Class");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "Class"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes Class
void System::Reflection::TypeAttributes::_set_Class(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_Class");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "Class", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes Interface
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_Interface() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_Interface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "Interface"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes Interface
void System::Reflection::TypeAttributes::_set_Interface(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_Interface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "Interface", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes Abstract
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_Abstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_Abstract");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "Abstract"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes Abstract
void System::Reflection::TypeAttributes::_set_Abstract(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_Abstract");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "Abstract", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes Sealed
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_Sealed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_Sealed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "Sealed"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes Sealed
void System::Reflection::TypeAttributes::_set_Sealed(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_Sealed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "Sealed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes SpecialName
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_SpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_SpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "SpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes SpecialName
void System::Reflection::TypeAttributes::_set_SpecialName(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_SpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "SpecialName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes Import
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_Import() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_Import");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "Import"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes Import
void System::Reflection::TypeAttributes::_set_Import(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_Import");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "Import", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes Serializable
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_Serializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_Serializable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "Serializable"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes Serializable
void System::Reflection::TypeAttributes::_set_Serializable(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_Serializable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "Serializable", value));
}
// [ComVisibleAttribute] Offset: 0xD813E8
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes WindowsRuntime
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_WindowsRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_WindowsRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "WindowsRuntime"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes WindowsRuntime
void System::Reflection::TypeAttributes::_set_WindowsRuntime(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_WindowsRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "WindowsRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes StringFormatMask
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_StringFormatMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_StringFormatMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "StringFormatMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes StringFormatMask
void System::Reflection::TypeAttributes::_set_StringFormatMask(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_StringFormatMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "StringFormatMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes AnsiClass
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_AnsiClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_AnsiClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "AnsiClass"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes AnsiClass
void System::Reflection::TypeAttributes::_set_AnsiClass(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_AnsiClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "AnsiClass", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes UnicodeClass
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_UnicodeClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_UnicodeClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "UnicodeClass"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes UnicodeClass
void System::Reflection::TypeAttributes::_set_UnicodeClass(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_UnicodeClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "UnicodeClass", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes AutoClass
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_AutoClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_AutoClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "AutoClass"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes AutoClass
void System::Reflection::TypeAttributes::_set_AutoClass(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_AutoClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "AutoClass", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes CustomFormatClass
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_CustomFormatClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_CustomFormatClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "CustomFormatClass"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes CustomFormatClass
void System::Reflection::TypeAttributes::_set_CustomFormatClass(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_CustomFormatClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "CustomFormatClass", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes CustomFormatMask
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_CustomFormatMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_CustomFormatMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "CustomFormatMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes CustomFormatMask
void System::Reflection::TypeAttributes::_set_CustomFormatMask(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_CustomFormatMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "CustomFormatMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes BeforeFieldInit
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_BeforeFieldInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_BeforeFieldInit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "BeforeFieldInit"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes BeforeFieldInit
void System::Reflection::TypeAttributes::_set_BeforeFieldInit(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_BeforeFieldInit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "BeforeFieldInit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes ReservedMask
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_ReservedMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_ReservedMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "ReservedMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes ReservedMask
void System::Reflection::TypeAttributes::_set_ReservedMask(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_ReservedMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "ReservedMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes RTSpecialName
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_RTSpecialName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_RTSpecialName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "RTSpecialName"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes RTSpecialName
void System::Reflection::TypeAttributes::_set_RTSpecialName(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_RTSpecialName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "RTSpecialName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.TypeAttributes HasSecurity
System::Reflection::TypeAttributes System::Reflection::TypeAttributes::_get_HasSecurity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_get_HasSecurity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::TypeAttributes>("System.Reflection", "TypeAttributes", "HasSecurity"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.TypeAttributes HasSecurity
void System::Reflection::TypeAttributes::_set_HasSecurity(System::Reflection::TypeAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeAttributes::_set_HasSecurity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "TypeAttributes", "HasSecurity", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.TypeFilter
#include "System/Reflection/TypeFilter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.TypeFilter.Invoke
bool System::Reflection::TypeFilter::Invoke(System::Type* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeFilter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, m, filterCriteria);
}
// Autogenerated method: System.Reflection.TypeFilter.BeginInvoke
System::IAsyncResult* System::Reflection::TypeFilter::BeginInvoke(System::Type* m, ::Il2CppObject* filterCriteria, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeFilter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, m, filterCriteria, callback, object);
}
// Autogenerated method: System.Reflection.TypeFilter.EndInvoke
bool System::Reflection::TypeFilter::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::TypeFilter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: TypeFilter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TypeFilter::*)(::Il2CppObject*, System::IntPtr)>(&TypeFilter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TypeFilter::*)(::Il2CppObject*, System::IntPtr)>(&TypeFilter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: TypeFilter::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TypeFilter::*)(System::Type*, ::Il2CppObject*)>(&TypeFilter::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeFilter*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: TypeFilter::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (TypeFilter::*)(System::Type*, ::Il2CppObject*, System::AsyncCallback*, ::Il2CppObject*)>(&TypeFilter::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeFilter*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: TypeFilter::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TypeFilter::*)(System::IAsyncResult*)>(&TypeFilter::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeFilter*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.TypeInfo
#include "System/Reflection/TypeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TypeInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TypeInfo::*)()>(&TypeInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TypeInfo::*)()>(&TypeInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Reflection.Assembly/ResolveEventHolder
#include "System/Reflection/Assembly_ResolveEventHolder.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
// Including type: System.Security.Policy.Evidence
#include "System/Security/Policy/Evidence.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Assembly.get_code_base
::Il2CppString* System::Reflection::Assembly::get_code_base(bool escaped) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::get_code_base");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code_base", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(escaped)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, escaped);
}
// Autogenerated method: System.Reflection.Assembly.get_fullname
::Il2CppString* System::Reflection::Assembly::get_fullname() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::get_fullname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.get_location
::Il2CppString* System::Reflection::Assembly::get_location() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::get_location");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetAotId
::Il2CppString* System::Reflection::Assembly::GetAotId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetAotId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "GetAotId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetCodeBase
::Il2CppString* System::Reflection::Assembly::GetCodeBase(bool escaped) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetCodeBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCodeBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(escaped)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, escaped);
}
// Autogenerated method: System.Reflection.Assembly.get_CodeBase
::Il2CppString* System::Reflection::Assembly::get_CodeBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::get_CodeBase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CodeBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.get_FullName
::Il2CppString* System::Reflection::Assembly::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.get_Location
::Il2CppString* System::Reflection::Assembly::get_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::get_Location");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetObjectData
void System::Reflection::Assembly::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.Assembly.IsDefined
bool System::Reflection::Assembly::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Assembly.GetCustomAttributes
::Array<::Il2CppObject*>* System::Reflection::Assembly::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Assembly.GetManifestResourceInternal
System::IntPtr System::Reflection::Assembly::GetManifestResourceInternal(::Il2CppString* name, int& size, System::Reflection::Module*& module) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetManifestResourceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetManifestResourceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Module*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, size, module);
}
// Autogenerated method: System.Reflection.Assembly.GetTypes
::Array<System::Type*>* System::Reflection::Assembly::GetTypes(bool exportedOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetTypes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exportedOnly)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method, exportedOnly);
}
// Autogenerated method: System.Reflection.Assembly.GetTypes
::Array<System::Type*>* System::Reflection::Assembly::GetTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetTypes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetType
System::Type* System::Reflection::Assembly::GetType(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Reflection.Assembly.InternalGetType
System::Type* System::Reflection::Assembly::InternalGetType(System::Reflection::Module* module, ::Il2CppString* name, bool throwOnError, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::InternalGetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(module), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, module, name, throwOnError, ignoreCase);
}
// Autogenerated method: System.Reflection.Assembly.GetName
System::Reflection::AssemblyName* System::Reflection::Assembly::GetName(bool copiedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(copiedName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::AssemblyName*, false>(this, ___internal__method, copiedName);
}
// Autogenerated method: System.Reflection.Assembly.GetName
System::Reflection::AssemblyName* System::Reflection::Assembly::GetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::AssemblyName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetAssembly
System::Reflection::Assembly* System::Reflection::Assembly::GetAssembly(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "GetAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Reflection.Assembly.Load
System::Reflection::Assembly* System::Reflection::Assembly::Load(::Il2CppString* assemblyString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyString)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assemblyString);
}
// Autogenerated method: System.Reflection.Assembly.load_with_partial_name
System::Reflection::Assembly* System::Reflection::Assembly::load_with_partial_name(::Il2CppString* name, System::Security::Policy::Evidence* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::load_with_partial_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "load_with_partial_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, e);
}
// Autogenerated method: System.Reflection.Assembly.LoadWithPartialName
System::Reflection::Assembly* System::Reflection::Assembly::LoadWithPartialName(::Il2CppString* partialName, System::Security::Policy::Evidence* securityEvidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::LoadWithPartialName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "LoadWithPartialName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partialName), ::il2cpp_utils::ExtractType(securityEvidence)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, partialName, securityEvidence);
}
// Autogenerated method: System.Reflection.Assembly.LoadWithPartialName
System::Reflection::Assembly* System::Reflection::Assembly::LoadWithPartialName(::Il2CppString* partialName, System::Security::Policy::Evidence* securityEvidence, bool oldBehavior) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::LoadWithPartialName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "LoadWithPartialName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partialName), ::il2cpp_utils::ExtractType(securityEvidence), ::il2cpp_utils::ExtractType(oldBehavior)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, partialName, securityEvidence, oldBehavior);
}
// Autogenerated method: System.Reflection.Assembly.GetModulesInternal
::Array<System::Reflection::Module*>* System::Reflection::Assembly::GetModulesInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetModulesInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModulesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::Module*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetExecutingAssembly
System::Reflection::Assembly* System::Reflection::Assembly::GetExecutingAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetExecutingAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "GetExecutingAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetCallingAssembly
System::Reflection::Assembly* System::Reflection::Assembly::GetCallingAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetCallingAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "GetCallingAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.InternalGetReferencedAssemblies
System::IntPtr System::Reflection::Assembly::InternalGetReferencedAssemblies(System::Reflection::Assembly* module) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::InternalGetReferencedAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "InternalGetReferencedAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(module)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, module);
}
// Autogenerated method: System.Reflection.Assembly.GetReferencedAssemblies
::Array<System::Reflection::AssemblyName*>* System::Reflection::Assembly::GetReferencedAssemblies(System::Reflection::Assembly* module) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetReferencedAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "GetReferencedAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(module)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::AssemblyName*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, module);
}
// Autogenerated method: System.Reflection.Assembly.CreateNIE
System::Exception* System::Reflection::Assembly::CreateNIE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::CreateNIE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "CreateNIE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.get_IsFullyTrusted
bool System::Reflection::Assembly::get_IsFullyTrusted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::get_IsFullyTrusted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFullyTrusted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetType
System::Type* System::Reflection::Assembly::GetType(::Il2CppString* name, bool throwOnError, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, name, throwOnError, ignoreCase);
}
// Autogenerated method: System.Reflection.Assembly.GetModule
System::Reflection::Module* System::Reflection::Assembly::GetModule(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Reflection.Assembly.GetReferencedAssemblies
::Array<System::Reflection::AssemblyName*>* System::Reflection::Assembly::GetReferencedAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetReferencedAssemblies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReferencedAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::AssemblyName*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetModules
::Array<System::Reflection::Module*>* System::Reflection::Assembly::GetModules(bool getResourceModules) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetModules");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getResourceModules)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::Module*>*, false>(this, ___internal__method, getResourceModules);
}
// Autogenerated method: System.Reflection.Assembly.ToString
::Il2CppString* System::Reflection::Assembly::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.GetHashCode
int System::Reflection::Assembly::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Assembly.Equals
bool System::Reflection::Assembly::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Reflection.Assembly.op_Equality
bool System::Reflection::operator ==(System::Reflection::Assembly* left, System::Reflection::Assembly& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Reflection.Assembly.op_Inequality
bool System::Reflection::operator !=(System::Reflection::Assembly* left, System::Reflection::Assembly& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "Assembly", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Writing MetadataGetter for method: Assembly::get_code_base
// Il2CppName: get_code_base
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Assembly::*)(bool)>(&Assembly::get_code_base)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "get_code_base", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::get_fullname
// Il2CppName: get_fullname
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Assembly::*)()>(&Assembly::get_fullname)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "get_fullname", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::get_location
// Il2CppName: get_location
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Assembly::*)()>(&Assembly::get_location)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "get_location", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetAotId
// Il2CppName: GetAotId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&Assembly::GetAotId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetAotId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetCodeBase
// Il2CppName: GetCodeBase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Assembly::*)(bool)>(&Assembly::GetCodeBase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetCodeBase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::get_CodeBase
// Il2CppName: get_CodeBase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Assembly::*)()>(&Assembly::get_CodeBase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "get_CodeBase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::get_FullName
// Il2CppName: get_FullName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Assembly::*)()>(&Assembly::get_FullName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "get_FullName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::get_Location
// Il2CppName: get_Location
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Assembly::*)()>(&Assembly::get_Location)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "get_Location", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Assembly::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&Assembly::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: Assembly::IsDefined
// Il2CppName: IsDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Assembly::*)(System::Type*, bool)>(&Assembly::IsDefined)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "IsDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppObject*>* (Assembly::*)(System::Type*, bool)>(&Assembly::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetManifestResourceInternal
// Il2CppName: GetManifestResourceInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Assembly::*)(::Il2CppString*, int&, System::Reflection::Module*&)>(&Assembly::GetManifestResourceInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetManifestResourceInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Module*&>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetTypes
// Il2CppName: GetTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Type*>* (Assembly::*)(bool)>(&Assembly::GetTypes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetTypes
// Il2CppName: GetTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Type*>* (Assembly::*)()>(&Assembly::GetTypes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetType
// Il2CppName: GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (Assembly::*)(::Il2CppString*)>(&Assembly::GetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Assembly::InternalGetType
// Il2CppName: InternalGetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (Assembly::*)(System::Reflection::Module*, ::Il2CppString*, bool, bool)>(&Assembly::InternalGetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "InternalGetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Module*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetName
// Il2CppName: GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::AssemblyName* (Assembly::*)(bool)>(&Assembly::GetName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetName
// Il2CppName: GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::AssemblyName* (Assembly::*)()>(&Assembly::GetName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetAssembly
// Il2CppName: GetAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)(System::Type*)>(&Assembly::GetAssembly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: Assembly::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)(::Il2CppString*)>(&Assembly::Load)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Assembly::load_with_partial_name
// Il2CppName: load_with_partial_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)(::Il2CppString*, System::Security::Policy::Evidence*)>(&Assembly::load_with_partial_name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "load_with_partial_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Policy::Evidence*>()});
  }
};
// Writing MetadataGetter for method: Assembly::LoadWithPartialName
// Il2CppName: LoadWithPartialName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)(::Il2CppString*, System::Security::Policy::Evidence*)>(&Assembly::LoadWithPartialName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "LoadWithPartialName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Policy::Evidence*>()});
  }
};
// Writing MetadataGetter for method: Assembly::LoadWithPartialName
// Il2CppName: LoadWithPartialName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)(::Il2CppString*, System::Security::Policy::Evidence*, bool)>(&Assembly::LoadWithPartialName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "LoadWithPartialName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Policy::Evidence*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetModulesInternal
// Il2CppName: GetModulesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::Module*>* (Assembly::*)()>(&Assembly::GetModulesInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetModulesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetExecutingAssembly
// Il2CppName: GetExecutingAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)()>(&Assembly::GetExecutingAssembly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetExecutingAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetCallingAssembly
// Il2CppName: GetCallingAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)()>(&Assembly::GetCallingAssembly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetCallingAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::InternalGetReferencedAssemblies
// Il2CppName: InternalGetReferencedAssemblies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::Reflection::Assembly*)>(&Assembly::InternalGetReferencedAssemblies)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "InternalGetReferencedAssemblies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetReferencedAssemblies
// Il2CppName: GetReferencedAssemblies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::AssemblyName*>* (*)(System::Reflection::Assembly*)>(&Assembly::GetReferencedAssemblies)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetReferencedAssemblies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>()});
  }
};
// Writing MetadataGetter for method: Assembly::CreateNIE
// Il2CppName: CreateNIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&Assembly::CreateNIE)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "CreateNIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::get_IsFullyTrusted
// Il2CppName: get_IsFullyTrusted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Assembly::*)()>(&Assembly::get_IsFullyTrusted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "get_IsFullyTrusted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetType
// Il2CppName: GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (Assembly::*)(::Il2CppString*, bool, bool)>(&Assembly::GetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetModule
// Il2CppName: GetModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Module* (Assembly::*)(::Il2CppString*)>(&Assembly::GetModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Assembly::GetReferencedAssemblies
// Il2CppName: GetReferencedAssemblies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::AssemblyName*>* (Assembly::*)()>(&Assembly::GetReferencedAssemblies)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetReferencedAssemblies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetModules
// Il2CppName: GetModules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::Module*>* (Assembly::*)(bool)>(&Assembly::GetModules)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetModules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Assembly::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Assembly::*)()>(&Assembly::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Assembly::*)()>(&Assembly::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Assembly::*)()>(&Assembly::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Assembly::*)()>(&Assembly::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Assembly::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Assembly::*)(::Il2CppObject*)>(&Assembly::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Assembly::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::Assembly*, System::Reflection::Assembly&)>(&Assembly::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly&>()});
  }
};
// Writing MetadataGetter for method: Assembly::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::Assembly*, System::Reflection::Assembly&)>(&Assembly::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly*), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.Assembly/ResolveEventHolder
#include "System/Reflection/Assembly_ResolveEventHolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Assembly::ResolveEventHolder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Assembly::ResolveEventHolder::*)()>(&Assembly::ResolveEventHolder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly::ResolveEventHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Assembly::ResolveEventHolder::*)()>(&Assembly::ResolveEventHolder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Assembly::ResolveEventHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.StrongNameKeyPair
#include "System/Reflection/StrongNameKeyPair.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.MonoAssemblyName
#include "Mono/MonoAssemblyName.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.AssemblyName.ParseAssemblyName
bool System::Reflection::AssemblyName::ParseAssemblyName(System::IntPtr name, Mono::MonoAssemblyName& aname, bool& is_version_definited, bool& is_token_defined) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::ParseAssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "AssemblyName", "ParseAssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<Mono::MonoAssemblyName&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, aname, is_version_definited, is_token_defined);
}
// Autogenerated method: System.Reflection.AssemblyName.get_Name
::Il2CppString* System::Reflection::AssemblyName::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.get_CultureInfo
System::Globalization::CultureInfo* System::Reflection::AssemblyName::get_CultureInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::get_CultureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.get_Flags
System::Reflection::AssemblyNameFlags System::Reflection::AssemblyName::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::AssemblyNameFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.get_FullName
::Il2CppString* System::Reflection::AssemblyName::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::get_FullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.get_Version
System::Version* System::Reflection::AssemblyName::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.set_Version
void System::Reflection::AssemblyName::set_Version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Reflection.AssemblyName.GetPublicKeyToken
::Array<uint8_t>* System::Reflection::AssemblyName::GetPublicKeyToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::GetPublicKeyToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicKeyToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.get_IsPublicKeyValid
bool System::Reflection::AssemblyName::get_IsPublicKeyValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::get_IsPublicKeyValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPublicKeyValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.InternalGetPublicKeyToken
::Array<uint8_t>* System::Reflection::AssemblyName::InternalGetPublicKeyToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::InternalGetPublicKeyToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetPublicKeyToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.get_public_token
void System::Reflection::AssemblyName::get_public_token(uint8_t* token, uint8_t* pubkey, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::get_public_token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "AssemblyName", "get_public_token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(pubkey), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, token, pubkey, len);
}
// Autogenerated method: System.Reflection.AssemblyName.ComputePublicKeyToken
::Array<uint8_t>* System::Reflection::AssemblyName::ComputePublicKeyToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::ComputePublicKeyToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputePublicKeyToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.GetObjectData
void System::Reflection::AssemblyName::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.AssemblyName.Clone
::Il2CppObject* System::Reflection::AssemblyName::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.AssemblyName.OnDeserialization
void System::Reflection::AssemblyName::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Reflection.AssemblyName.GetNativeName
Mono::MonoAssemblyName* System::Reflection::AssemblyName::GetNativeName(System::IntPtr assembly_ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::GetNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "AssemblyName", "GetNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly_ptr)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::MonoAssemblyName*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assembly_ptr);
}
// Autogenerated method: System.Reflection.AssemblyName.FillName
void System::Reflection::AssemblyName::FillName(Mono::MonoAssemblyName* native, ::Il2CppString* codeBase, bool addVersion, bool addPublickey, bool defaultToken, bool assemblyRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::FillName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(native), ::il2cpp_utils::ExtractType(codeBase), ::il2cpp_utils::ExtractType(addVersion), ::il2cpp_utils::ExtractType(addPublickey), ::il2cpp_utils::ExtractType(defaultToken), ::il2cpp_utils::ExtractType(assemblyRef)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, native, codeBase, addVersion, addPublickey, defaultToken, assemblyRef);
}
// Autogenerated method: System.Reflection.AssemblyName.Create
System::Reflection::AssemblyName* System::Reflection::AssemblyName::Create(System::Reflection::Assembly* assembly, bool fillCodebase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "AssemblyName", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly), ::il2cpp_utils::ExtractType(fillCodebase)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::AssemblyName*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assembly, fillCodebase);
}
// Autogenerated method: System.Reflection.AssemblyName.ToString
::Il2CppString* System::Reflection::AssemblyName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::AssemblyName::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AssemblyName::ParseAssemblyName
// Il2CppName: ParseAssemblyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr, Mono::MonoAssemblyName&, bool&, bool&)>(&AssemblyName::ParseAssemblyName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "ParseAssemblyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Mono::MonoAssemblyName&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)(::Il2CppString*)>(&AssemblyName::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)(::Il2CppString*)>(&AssemblyName::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&AssemblyName::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&AssemblyName::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AssemblyName::*)()>(&AssemblyName::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::get_CultureInfo
// Il2CppName: get_CultureInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Globalization::CultureInfo* (AssemblyName::*)()>(&AssemblyName::get_CultureInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "get_CultureInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::get_Flags
// Il2CppName: get_Flags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::AssemblyNameFlags (AssemblyName::*)()>(&AssemblyName::get_Flags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "get_Flags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::get_FullName
// Il2CppName: get_FullName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AssemblyName::*)()>(&AssemblyName::get_FullName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "get_FullName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Version* (AssemblyName::*)()>(&AssemblyName::get_Version)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::set_Version
// Il2CppName: set_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)(System::Version*)>(&AssemblyName::set_Version)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "set_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Version*>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::GetPublicKeyToken
// Il2CppName: GetPublicKeyToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (AssemblyName::*)()>(&AssemblyName::GetPublicKeyToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "GetPublicKeyToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::get_IsPublicKeyValid
// Il2CppName: get_IsPublicKeyValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AssemblyName::*)()>(&AssemblyName::get_IsPublicKeyValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "get_IsPublicKeyValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::InternalGetPublicKeyToken
// Il2CppName: InternalGetPublicKeyToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (AssemblyName::*)()>(&AssemblyName::InternalGetPublicKeyToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "InternalGetPublicKeyToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::get_public_token
// Il2CppName: get_public_token
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, uint8_t*, int)>(&AssemblyName::get_public_token)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "get_public_token", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::ComputePublicKeyToken
// Il2CppName: ComputePublicKeyToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (AssemblyName::*)()>(&AssemblyName::ComputePublicKeyToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "ComputePublicKeyToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&AssemblyName::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (AssemblyName::*)()>(&AssemblyName::Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::OnDeserialization
// Il2CppName: OnDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)(::Il2CppObject*)>(&AssemblyName::OnDeserialization)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "OnDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::GetNativeName
// Il2CppName: GetNativeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::MonoAssemblyName* (*)(System::IntPtr)>(&AssemblyName::GetNativeName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "GetNativeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::FillName
// Il2CppName: FillName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)(Mono::MonoAssemblyName*, ::Il2CppString*, bool, bool, bool, bool)>(&AssemblyName::FillName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "FillName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::MonoAssemblyName*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::AssemblyName* (*)(System::Reflection::Assembly*, bool)>(&AssemblyName::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AssemblyName::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)()>(&AssemblyName::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyName::*)()>(&AssemblyName::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AssemblyName::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AssemblyName::*)()>(&AssemblyName::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyName*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ComVisibleAttribute] Offset: 0xD813FC
// Autogenerated static field getter
// Get static field: static public readonly System.String ConstructorName
::Il2CppString* System::Reflection::ConstructorInfo::_get_ConstructorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::_get_ConstructorName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Reflection", "ConstructorInfo", "ConstructorName"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String ConstructorName
void System::Reflection::ConstructorInfo::_set_ConstructorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::_set_ConstructorName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ConstructorInfo", "ConstructorName", value));
}
// [ComVisibleAttribute] Offset: 0xD81410
// Autogenerated static field getter
// Get static field: static public readonly System.String TypeConstructorName
::Il2CppString* System::Reflection::ConstructorInfo::_get_TypeConstructorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::_get_TypeConstructorName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Reflection", "ConstructorInfo", "TypeConstructorName"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String TypeConstructorName
void System::Reflection::ConstructorInfo::_set_TypeConstructorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::_set_TypeConstructorName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "ConstructorInfo", "TypeConstructorName", value));
}
// Autogenerated method: System.Reflection.ConstructorInfo.Invoke
::Il2CppObject* System::Reflection::ConstructorInfo::Invoke(::Array<::Il2CppObject*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, parameters);
}
// Autogenerated method: System.Reflection.ConstructorInfo.Invoke
::Il2CppObject* System::Reflection::ConstructorInfo::Invoke(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::Array<::Il2CppObject*>* parameters, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.ConstructorInfo..cctor
void System::Reflection::ConstructorInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "ConstructorInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Reflection.ConstructorInfo.get_MemberType
System::Reflection::MemberTypes System::Reflection::ConstructorInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ConstructorInfo.Equals
bool System::Reflection::ConstructorInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.ConstructorInfo.GetHashCode
int System::Reflection::ConstructorInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ConstructorInfo.op_Equality
bool System::Reflection::operator ==(System::Reflection::ConstructorInfo* left, System::Reflection::ConstructorInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "ConstructorInfo", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Reflection.ConstructorInfo.op_Inequality
bool System::Reflection::operator !=(System::Reflection::ConstructorInfo* left, System::Reflection::ConstructorInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ConstructorInfo::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "ConstructorInfo", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Writing MetadataGetter for method: ConstructorInfo::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ConstructorInfo::*)(::Array<::Il2CppObject*>*)>(&ConstructorInfo::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: ConstructorInfo::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ConstructorInfo::*)(System::Reflection::BindingFlags, System::Reflection::Binder*, ::Array<::Il2CppObject*>*, System::Globalization::CultureInfo*)>(&ConstructorInfo::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::BindingFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Binder*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Globalization::CultureInfo*>()});
  }
};
// Writing MetadataGetter for method: ConstructorInfo::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ConstructorInfo::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ConstructorInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConstructorInfo::*)()>(&ConstructorInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConstructorInfo::*)()>(&ConstructorInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ConstructorInfo::get_MemberType
// Il2CppName: get_MemberType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MemberTypes (ConstructorInfo::*)()>(&ConstructorInfo::get_MemberType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), "get_MemberType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ConstructorInfo::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ConstructorInfo::*)(::Il2CppObject*)>(&ConstructorInfo::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ConstructorInfo::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ConstructorInfo::*)()>(&ConstructorInfo::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ConstructorInfo::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::ConstructorInfo*, System::Reflection::ConstructorInfo&)>(&ConstructorInfo::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::ConstructorInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::ConstructorInfo&>()});
  }
};
// Writing MetadataGetter for method: ConstructorInfo::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::ConstructorInfo*, System::Reflection::ConstructorInfo&)>(&ConstructorInfo::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructorInfo*), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::ConstructorInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::ConstructorInfo&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
// Including type: System.Reflection.CustomAttributeData/LazyCAttrData
#include "System/Reflection/CustomAttributeData_LazyCAttrData.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.CustomAttributeData.ResolveArgumentsInternal
void System::Reflection::CustomAttributeData::ResolveArgumentsInternal(System::Reflection::ConstructorInfo* ctor, System::Reflection::Assembly* assembly, System::IntPtr data, uint data_length, ::Array<::Il2CppObject*>*& ctorArgs, ::Array<::Il2CppObject*>*& namedArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::ResolveArgumentsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "CustomAttributeData", "ResolveArgumentsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctor), ::il2cpp_utils::ExtractType(assembly), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(data_length), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ctor, assembly, data, data_length, ctorArgs, namedArgs);
}
// Autogenerated method: System.Reflection.CustomAttributeData.ResolveArguments
void System::Reflection::CustomAttributeData::ResolveArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::ResolveArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.CustomAttributeData.get_Constructor
System::Reflection::ConstructorInfo* System::Reflection::CustomAttributeData::get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::get_Constructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Constructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.CustomAttributeData.get_ConstructorArguments
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument>* System::Reflection::CustomAttributeData::get_ConstructorArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::get_ConstructorArguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConstructorArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.CustomAttributeData.get_NamedArguments
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument>* System::Reflection::CustomAttributeData::get_NamedArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::get_NamedArguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamedArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.CustomAttributeData.GetCustomAttributes
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* System::Reflection::CustomAttributeData::GetCustomAttributes(System::Reflection::Assembly* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "CustomAttributeData", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Reflection.CustomAttributeData.GetCustomAttributes
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* System::Reflection::CustomAttributeData::GetCustomAttributes(System::Reflection::MemberInfo* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "CustomAttributeData", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Reflection.CustomAttributeData.GetCustomAttributesInternal
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* System::Reflection::CustomAttributeData::GetCustomAttributesInternal(System::RuntimeType* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::GetCustomAttributesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "CustomAttributeData", "GetCustomAttributesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Reflection.CustomAttributeData.GetCustomAttributes
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* System::Reflection::CustomAttributeData::GetCustomAttributes(System::Reflection::Module* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "CustomAttributeData", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Reflection.CustomAttributeData.GetCustomAttributes
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* System::Reflection::CustomAttributeData::GetCustomAttributes(System::Reflection::ParameterInfo* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "CustomAttributeData", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Reflection.CustomAttributeData.get_AttributeType
System::Type* System::Reflection::CustomAttributeData::get_AttributeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::get_AttributeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.CustomAttributeData.ToString
::Il2CppString* System::Reflection::CustomAttributeData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.CustomAttributeData.Equals
bool System::Reflection::CustomAttributeData::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.CustomAttributeData.GetHashCode
int System::Reflection::CustomAttributeData::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeData::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomAttributeData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeData::*)(System::Reflection::ConstructorInfo*, System::Reflection::Assembly*, System::IntPtr, uint)>(&CustomAttributeData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::ConstructorInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeData::*)(System::Reflection::ConstructorInfo*, System::Reflection::Assembly*, System::IntPtr, uint)>(&CustomAttributeData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::ConstructorInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::ResolveArgumentsInternal
// Il2CppName: ResolveArgumentsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Reflection::ConstructorInfo*, System::Reflection::Assembly*, System::IntPtr, uint, ::Array<::Il2CppObject*>*&, ::Array<::Il2CppObject*>*&)>(&CustomAttributeData::ResolveArgumentsInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "ResolveArgumentsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::ConstructorInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*&>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::ResolveArguments
// Il2CppName: ResolveArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeData::*)()>(&CustomAttributeData::ResolveArguments)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "ResolveArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::get_Constructor
// Il2CppName: get_Constructor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::ConstructorInfo* (CustomAttributeData::*)()>(&CustomAttributeData::get_Constructor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "get_Constructor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::get_ConstructorArguments
// Il2CppName: get_ConstructorArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeTypedArgument>* (CustomAttributeData::*)()>(&CustomAttributeData::get_ConstructorArguments)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "get_ConstructorArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::get_NamedArguments
// Il2CppName: get_NamedArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeNamedArgument>* (CustomAttributeData::*)()>(&CustomAttributeData::get_NamedArguments)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "get_NamedArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* (*)(System::Reflection::Assembly*)>(&CustomAttributeData::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* (*)(System::Reflection::MemberInfo*)>(&CustomAttributeData::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::GetCustomAttributesInternal
// Il2CppName: GetCustomAttributesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* (*)(System::RuntimeType*)>(&CustomAttributeData::GetCustomAttributesInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "GetCustomAttributesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeType*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* (*)(System::Reflection::Module*)>(&CustomAttributeData::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Module*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* (*)(System::Reflection::ParameterInfo*)>(&CustomAttributeData::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::ParameterInfo*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::get_AttributeType
// Il2CppName: get_AttributeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (CustomAttributeData::*)()>(&CustomAttributeData::get_AttributeType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "get_AttributeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::UnboxValues
// Il2CppName: UnboxValues
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: CustomAttributeData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeData::*)()>(&CustomAttributeData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeData::*)()>(&CustomAttributeData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CustomAttributeData::*)()>(&CustomAttributeData::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CustomAttributeData::*)(::Il2CppObject*)>(&CustomAttributeData::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeData::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CustomAttributeData::*)()>(&CustomAttributeData::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.CustomAttributeData/LazyCAttrData
#include "System/Reflection/CustomAttributeData_LazyCAttrData.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CustomAttributeData::LazyCAttrData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeData::LazyCAttrData::*)()>(&CustomAttributeData::LazyCAttrData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData::LazyCAttrData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeData::LazyCAttrData::*)()>(&CustomAttributeData::LazyCAttrData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeData::LazyCAttrData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.CustomAttributeFormatException
#include "System/Reflection/CustomAttributeFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CustomAttributeFormatException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeFormatException::*)()>(&CustomAttributeFormatException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeFormatException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeFormatException::*)()>(&CustomAttributeFormatException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeFormatException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeFormatException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeFormatException::*)(::Il2CppString*)>(&CustomAttributeFormatException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeFormatException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeFormatException::*)(::Il2CppString*)>(&CustomAttributeFormatException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeFormatException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeFormatException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeFormatException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&CustomAttributeFormatException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeFormatException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeFormatException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&CustomAttributeFormatException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeFormatException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.CustomAttributeNamedArgument
#include "System/Reflection/CustomAttributeNamedArgument.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.CustomAttributeNamedArgument.ToString
::Il2CppString* System::Reflection::CustomAttributeNamedArgument::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeNamedArgument::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Reflection.CustomAttributeNamedArgument.Equals
bool System::Reflection::CustomAttributeNamedArgument::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeNamedArgument::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.CustomAttributeNamedArgument.GetHashCode
int System::Reflection::CustomAttributeNamedArgument::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeNamedArgument::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: CustomAttributeNamedArgument::CustomAttributeNamedArgument
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeNamedArgument::*)(System::Reflection::MemberInfo*, ::Il2CppObject*)>(&CustomAttributeNamedArgument::CustomAttributeNamedArgument<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeNamedArgument), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeNamedArgument::*)(System::Reflection::MemberInfo*, ::Il2CppObject*)>(&CustomAttributeNamedArgument::CustomAttributeNamedArgument<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeNamedArgument), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeNamedArgument::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CustomAttributeNamedArgument::*)()>(&CustomAttributeNamedArgument::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeNamedArgument), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeNamedArgument::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CustomAttributeNamedArgument::*)(::Il2CppObject*)>(&CustomAttributeNamedArgument::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeNamedArgument), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeNamedArgument::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CustomAttributeNamedArgument::*)()>(&CustomAttributeNamedArgument::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeNamedArgument), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.CustomAttributeTypedArgument
#include "System/Reflection/CustomAttributeTypedArgument.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.CustomAttributeTypedArgument.ToString
::Il2CppString* System::Reflection::CustomAttributeTypedArgument::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeTypedArgument::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Reflection.CustomAttributeTypedArgument.Equals
bool System::Reflection::CustomAttributeTypedArgument::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeTypedArgument::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.CustomAttributeTypedArgument.GetHashCode
int System::Reflection::CustomAttributeTypedArgument::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::CustomAttributeTypedArgument::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: CustomAttributeTypedArgument::CustomAttributeTypedArgument
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeTypedArgument::*)(System::Type*, ::Il2CppObject*)>(&CustomAttributeTypedArgument::CustomAttributeTypedArgument<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeTypedArgument), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomAttributeTypedArgument::*)(System::Type*, ::Il2CppObject*)>(&CustomAttributeTypedArgument::CustomAttributeTypedArgument<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeTypedArgument), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeTypedArgument::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CustomAttributeTypedArgument::*)()>(&CustomAttributeTypedArgument::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeTypedArgument), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomAttributeTypedArgument::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CustomAttributeTypedArgument::*)(::Il2CppObject*)>(&CustomAttributeTypedArgument::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeTypedArgument), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CustomAttributeTypedArgument::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CustomAttributeTypedArgument::*)()>(&CustomAttributeTypedArgument::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomAttributeTypedArgument), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.EventInfo/AddEventAdapter
#include "System/Reflection/EventInfo_AddEventAdapter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.RuntimeEventHandle
#include "Mono/RuntimeEventHandle.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.EventInfo.get_EventHandlerType
System::Type* System::Reflection::EventInfo::get_EventHandlerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::get_EventHandlerType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventHandlerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.EventInfo.GetAddMethod
System::Reflection::MethodInfo* System::Reflection::EventInfo::GetAddMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::GetAddMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAddMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.EventInfo.GetRaiseMethod
System::Reflection::MethodInfo* System::Reflection::EventInfo::GetRaiseMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::GetRaiseMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRaiseMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.EventInfo.GetRemoveMethod
System::Reflection::MethodInfo* System::Reflection::EventInfo::GetRemoveMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::GetRemoveMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemoveMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.EventInfo.internal_from_handle_type
System::Reflection::EventInfo* System::Reflection::EventInfo::internal_from_handle_type(System::IntPtr event_handle, System::IntPtr type_handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::internal_from_handle_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "EventInfo", "internal_from_handle_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(event_handle), ::il2cpp_utils::ExtractType(type_handle)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::EventInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, event_handle, type_handle);
}
// Autogenerated method: System.Reflection.EventInfo.GetEventFromHandle
System::Reflection::EventInfo* System::Reflection::EventInfo::GetEventFromHandle(Mono::RuntimeEventHandle handle, System::RuntimeTypeHandle reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::GetEventFromHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "EventInfo", "GetEventFromHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::EventInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, reflectedType);
}
// Autogenerated method: System.Reflection.EventInfo.get_MemberType
System::Reflection::MemberTypes System::Reflection::EventInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.EventInfo.Equals
bool System::Reflection::EventInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.EventInfo.GetHashCode
int System::Reflection::EventInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.EventInfo.op_Equality
bool System::Reflection::operator ==(System::Reflection::EventInfo* left, System::Reflection::EventInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "EventInfo", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Reflection.EventInfo.op_Inequality
bool System::Reflection::operator !=(System::Reflection::EventInfo* left, System::Reflection::EventInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "EventInfo", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Writing MetadataGetter for method: EventInfo::get_EventHandlerType
// Il2CppName: get_EventHandlerType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (EventInfo::*)()>(&EventInfo::get_EventHandlerType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "get_EventHandlerType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventInfo::GetAddMethod
// Il2CppName: GetAddMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (EventInfo::*)(bool)>(&EventInfo::GetAddMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "GetAddMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EventInfo::GetRaiseMethod
// Il2CppName: GetRaiseMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (EventInfo::*)(bool)>(&EventInfo::GetRaiseMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "GetRaiseMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EventInfo::GetRemoveMethod
// Il2CppName: GetRemoveMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (EventInfo::*)(bool)>(&EventInfo::GetRemoveMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "GetRemoveMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EventInfo::internal_from_handle_type
// Il2CppName: internal_from_handle_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::EventInfo* (*)(System::IntPtr, System::IntPtr)>(&EventInfo::internal_from_handle_type)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "internal_from_handle_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: EventInfo::GetEventFromHandle
// Il2CppName: GetEventFromHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::EventInfo* (*)(Mono::RuntimeEventHandle, System::RuntimeTypeHandle)>(&EventInfo::GetEventFromHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "GetEventFromHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::RuntimeEventHandle>(), ::il2cpp_utils::ExtractIndependentType<System::RuntimeTypeHandle>()});
  }
};
// Writing MetadataGetter for method: EventInfo::get_MemberType
// Il2CppName: get_MemberType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MemberTypes (EventInfo::*)()>(&EventInfo::get_MemberType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "get_MemberType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventInfo::*)()>(&EventInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventInfo::*)()>(&EventInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventInfo::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EventInfo::*)(::Il2CppObject*)>(&EventInfo::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: EventInfo::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EventInfo::*)()>(&EventInfo::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventInfo::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::EventInfo*, System::Reflection::EventInfo&)>(&EventInfo::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::EventInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::EventInfo&>()});
  }
};
// Writing MetadataGetter for method: EventInfo::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Reflection::EventInfo*, System::Reflection::EventInfo&)>(&EventInfo::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo*), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::EventInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::EventInfo&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.EventInfo/AddEventAdapter
#include "System/Reflection/EventInfo_AddEventAdapter.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.EventInfo/AddEventAdapter.Invoke
void System::Reflection::EventInfo::AddEventAdapter::Invoke(::Il2CppObject* _this, System::Delegate* dele) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::AddEventAdapter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_this), ::il2cpp_utils::ExtractType(dele)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, _this, dele);
}
// Autogenerated method: System.Reflection.EventInfo/AddEventAdapter.BeginInvoke
System::IAsyncResult* System::Reflection::EventInfo::AddEventAdapter::BeginInvoke(::Il2CppObject* _this, System::Delegate* dele, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::AddEventAdapter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_this), ::il2cpp_utils::ExtractType(dele), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, _this, dele, callback, object);
}
// Autogenerated method: System.Reflection.EventInfo/AddEventAdapter.EndInvoke
void System::Reflection::EventInfo::AddEventAdapter::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::EventInfo::AddEventAdapter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: EventInfo::AddEventAdapter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventInfo::AddEventAdapter::*)(::Il2CppObject*, System::IntPtr)>(&EventInfo::AddEventAdapter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo::AddEventAdapter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventInfo::AddEventAdapter::*)(::Il2CppObject*, System::IntPtr)>(&EventInfo::AddEventAdapter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo::AddEventAdapter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: EventInfo::AddEventAdapter::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventInfo::AddEventAdapter::*)(::Il2CppObject*, System::Delegate*)>(&EventInfo::AddEventAdapter::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo::AddEventAdapter*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Delegate*>()});
  }
};
// Writing MetadataGetter for method: EventInfo::AddEventAdapter::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (EventInfo::AddEventAdapter::*)(::Il2CppObject*, System::Delegate*, System::AsyncCallback*, ::Il2CppObject*)>(&EventInfo::AddEventAdapter::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo::AddEventAdapter*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Delegate*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: EventInfo::AddEventAdapter::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventInfo::AddEventAdapter::*)(System::IAsyncResult*)>(&EventInfo::AddEventAdapter::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventInfo::AddEventAdapter*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
