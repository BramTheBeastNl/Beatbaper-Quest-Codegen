// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Globalization.Unicode.SortKeyBuffer
#include "Mono/Globalization/Unicode/SortKeyBuffer.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l1b
::ArrayWrapper<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1b() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l1b"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l2b
::ArrayWrapper<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2b() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l2b"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l3b
::ArrayWrapper<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3b() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l3b"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4sb
::ArrayWrapper<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4sb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4sb"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4tb
::ArrayWrapper<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4tb() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4tb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4tb"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4kb
::ArrayWrapper<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4kb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4kb"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4wb
::ArrayWrapper<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4wb() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4wb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4wb"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l5b
::ArrayWrapper<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5b() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l5b"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String source
::Il2CppString*& Mono::Globalization::Unicode::SortKeyBuffer::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l1
int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l2
int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l3
int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4s
int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4s() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4s"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4t
int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4t() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4t"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4k
int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4k() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4k");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4k"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4w
int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4w() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4w");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4w"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l5
int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lcid
int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareOptions options
System::Globalization::CompareOptions& Mono::Globalization::Unicode::SortKeyBuffer::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean processLevel2
bool& Mono::Globalization::Unicode::SortKeyBuffer::dyn_processLevel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_processLevel2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processLevel2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean frenchSort
bool& Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frenchSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean frenchSorted
bool& Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSorted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frenchSorted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.Reset
void Mono::Globalization::Unicode::SortKeyBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.Initialize
void Mono::Globalization::Unicode::SortKeyBuffer::Initialize(System::Globalization::CompareOptions options, int lcid, ::Il2CppString* s, bool frenchSort) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(lcid), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(frenchSort)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, options, lcid, s, frenchSort);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendCJKExtension
void Mono::Globalization::Unicode::SortKeyBuffer::AppendCJKExtension(uint8_t lv1msb, uint8_t lv1lsb) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendCJKExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendCJKExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lv1msb), ::il2cpp_utils::ExtractType(lv1lsb)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, lv1msb, lv1lsb);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendKana
void Mono::Globalization::Unicode::SortKeyBuffer::AppendKana(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3, bool isSmallKana, uint8_t markType, bool isKatakana, bool isHalfWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendKana");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendKana", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(lv1), ::il2cpp_utils::ExtractType(lv2), ::il2cpp_utils::ExtractType(lv3), ::il2cpp_utils::ExtractType(isSmallKana), ::il2cpp_utils::ExtractType(markType), ::il2cpp_utils::ExtractType(isKatakana), ::il2cpp_utils::ExtractType(isHalfWidth)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, category, lv1, lv2, lv3, isSmallKana, markType, isKatakana, isHalfWidth);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendNormal
void Mono::Globalization::Unicode::SortKeyBuffer::AppendNormal(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(lv1), ::il2cpp_utils::ExtractType(lv2), ::il2cpp_utils::ExtractType(lv3)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, category, lv1, lv2, lv3);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendLevel5
void Mono::Globalization::Unicode::SortKeyBuffer::AppendLevel5(uint8_t category, uint8_t lv1) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendLevel5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendLevel5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(lv1)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, category, lv1);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendBufferPrimitive
void Mono::Globalization::Unicode::SortKeyBuffer::AppendBufferPrimitive(uint8_t value, ByRef<::ArrayWrapper<uint8_t>> buf, ByRef<int> bidx) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::AppendBufferPrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendBufferPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(bidx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, byref(buf), byref(bidx));
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetResultAndReset
System::Globalization::SortKey* Mono::Globalization::Unicode::SortKeyBuffer::GetResultAndReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::GetResultAndReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResultAndReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetOptimizedLength
int Mono::Globalization::Unicode::SortKeyBuffer::GetOptimizedLength(::ArrayWrapper<uint8_t> data, int len, uint8_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::GetOptimizedLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOptimizedLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(defaultValue)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, data, len, defaultValue);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetResult
System::Globalization::SortKey* Mono::Globalization::Unicode::SortKeyBuffer::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Globalization::Unicode::SortKeyBuffer::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.KeyPairPersistence
#include "Mono/Security/Cryptography/KeyPairPersistence.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _userPathExists
bool Mono::Security::Cryptography::KeyPairPersistence::_get__userPathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get__userPathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Cryptography", "KeyPairPersistence", "_userPathExists"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _userPathExists
void Mono::Security::Cryptography::KeyPairPersistence::_set__userPathExists(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set__userPathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_userPathExists", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _userPath
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::_get__userPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get__userPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Mono.Security.Cryptography", "KeyPairPersistence", "_userPath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _userPath
void Mono::Security::Cryptography::KeyPairPersistence::_set__userPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set__userPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_userPath", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _machinePathExists
bool Mono::Security::Cryptography::KeyPairPersistence::_get__machinePathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get__machinePathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePathExists"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _machinePathExists
void Mono::Security::Cryptography::KeyPairPersistence::_set__machinePathExists(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set__machinePathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePathExists", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _machinePath
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::_get__machinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get__machinePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _machinePath
void Mono::Security::Cryptography::KeyPairPersistence::_set__machinePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set__machinePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePath", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object lockobj
::Il2CppObject* Mono::Security::Cryptography::KeyPairPersistence::_get_lockobj() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_get_lockobj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Security.Cryptography", "KeyPairPersistence", "lockobj"));
}
// Autogenerated static field setter
// Set static field: static private System.Object lockobj
void Mono::Security::Cryptography::KeyPairPersistence::_set_lockobj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_set_lockobj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "lockobj", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.CspParameters _params
System::Security::Cryptography::CspParameters*& Mono::Security::Cryptography::KeyPairPersistence::dyn__params() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::dyn__params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_params"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::CspParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _keyvalue
::Il2CppString*& Mono::Security::Cryptography::KeyPairPersistence::dyn__keyvalue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::dyn__keyvalue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyvalue"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _filename
::Il2CppString*& Mono::Security::Cryptography::KeyPairPersistence::dyn__filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::dyn__filename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _container
::Il2CppString*& Mono::Security::Cryptography::KeyPairPersistence::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_Filename
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_Filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_Filename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_KeyValue
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_KeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_KeyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.set_KeyValue
void Mono::Security::Cryptography::KeyPairPersistence::set_KeyValue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::set_KeyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UserPath
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_UserPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_UserPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "get_UserPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_MachinePath
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_MachinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_MachinePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "get_MachinePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_CanChange
bool Mono::Security::Cryptography::KeyPairPersistence::get_CanChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_CanChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UseDefaultKeyContainer
bool Mono::Security::Cryptography::KeyPairPersistence::get_UseDefaultKeyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_UseDefaultKeyContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultKeyContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UseMachineKeyStore
bool Mono::Security::Cryptography::KeyPairPersistence::get_UseMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_UseMachineKeyStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseMachineKeyStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_ContainerName
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::get_ContainerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::get_ContainerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence..cctor
void Mono::Security::Cryptography::KeyPairPersistence::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Load
bool Mono::Security::Cryptography::KeyPairPersistence::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Save
void Mono::Security::Cryptography::KeyPairPersistence::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Remove
void Mono::Security::Cryptography::KeyPairPersistence::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._CanSecure
bool Mono::Security::Cryptography::KeyPairPersistence::_CanSecure(::Il2CppString* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_CanSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_CanSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._ProtectUser
bool Mono::Security::Cryptography::KeyPairPersistence::_ProtectUser(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_ProtectUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_ProtectUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._ProtectMachine
bool Mono::Security::Cryptography::KeyPairPersistence::_ProtectMachine(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_ProtectMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_ProtectMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._IsUserProtected
bool Mono::Security::Cryptography::KeyPairPersistence::_IsUserProtected(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_IsUserProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_IsUserProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._IsMachineProtected
bool Mono::Security::Cryptography::KeyPairPersistence::_IsMachineProtected(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::_IsMachineProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_IsMachineProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.CanSecure
bool Mono::Security::Cryptography::KeyPairPersistence::CanSecure(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::CanSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "CanSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ProtectUser
bool Mono::Security::Cryptography::KeyPairPersistence::ProtectUser(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::ProtectUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "ProtectUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ProtectMachine
bool Mono::Security::Cryptography::KeyPairPersistence::ProtectMachine(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::ProtectMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "ProtectMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.IsUserProtected
bool Mono::Security::Cryptography::KeyPairPersistence::IsUserProtected(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::IsUserProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "IsUserProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.IsMachineProtected
bool Mono::Security::Cryptography::KeyPairPersistence::IsMachineProtected(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::IsMachineProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "IsMachineProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Copy
System::Security::Cryptography::CspParameters* Mono::Security::Cryptography::KeyPairPersistence::Copy(System::Security::Cryptography::CspParameters* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::CspParameters*, false>(___instance_arg, ___internal__method, p);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.FromXml
void Mono::Security::Cryptography::KeyPairPersistence::FromXml(::Il2CppString* xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::FromXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xml)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, xml);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ToXml
::Il2CppString* Mono::Security::Cryptography::KeyPairPersistence::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyPairPersistence::ToXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.SymmetricTransform
#include "Mono/Security/Cryptography/SymmetricTransform.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.SymmetricAlgorithm algo
System::Security::Cryptography::SymmetricAlgorithm*& Mono::Security::Cryptography::SymmetricTransform::dyn_algo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_algo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "algo"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::SymmetricAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean encrypt
bool& Mono::Security::Cryptography::SymmetricTransform::dyn_encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_encrypt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encrypt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 BlockSizeByte
int& Mono::Security::Cryptography::SymmetricTransform::dyn_BlockSizeByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_BlockSizeByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockSizeByte"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] temp
::ArrayWrapper<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_temp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "temp"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] temp2
::ArrayWrapper<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_temp2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_temp2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "temp2"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] workBuff
::ArrayWrapper<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_workBuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_workBuff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workBuff"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] workout
::ArrayWrapper<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_workout() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_workout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workout"))->offset;
  return *reinterpret_cast<::ArrayWrapper<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.PaddingMode padmode
System::Security::Cryptography::PaddingMode& Mono::Security::Cryptography::SymmetricTransform::dyn_padmode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_padmode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "padmode"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::PaddingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 FeedBackByte
int& Mono::Security::Cryptography::SymmetricTransform::dyn_FeedBackByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_FeedBackByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FeedBackByte"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
bool& Mono::Security::Cryptography::SymmetricTransform::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean lastBlock
bool& Mono::Security::Cryptography::SymmetricTransform::dyn_lastBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn_lastBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBlock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator _rng
System::Security::Cryptography::RandomNumberGenerator*& Mono::Security::Cryptography::SymmetricTransform::dyn__rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::dyn__rng");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rng"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_CanTransformMultipleBlocks
bool Mono::Security::Cryptography::SymmetricTransform::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanTransformMultipleBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_InputBlockSize
int Mono::Security::Cryptography::SymmetricTransform::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_OutputBlockSize
int Mono::Security::Cryptography::SymmetricTransform::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_KeepLastBlock
bool Mono::Security::Cryptography::SymmetricTransform::get_KeepLastBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::get_KeepLastBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeepLastBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.System.IDisposable.Dispose
void Mono::Security::Cryptography::SymmetricTransform::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Dispose
void Mono::Security::Cryptography::SymmetricTransform::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Transform
void Mono::Security::Cryptography::SymmetricTransform::Transform(::ArrayWrapper<uint8_t> input, ::ArrayWrapper<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::Transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.ECB
void Mono::Security::Cryptography::SymmetricTransform::ECB(::ArrayWrapper<uint8_t> input, ::ArrayWrapper<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::ECB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ECB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CBC
void Mono::Security::Cryptography::SymmetricTransform::CBC(::ArrayWrapper<uint8_t> input, ::ArrayWrapper<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::CBC");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CBC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CFB
void Mono::Security::Cryptography::SymmetricTransform::CFB(::ArrayWrapper<uint8_t> input, ::ArrayWrapper<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::CFB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CFB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.OFB
void Mono::Security::Cryptography::SymmetricTransform::OFB(::ArrayWrapper<uint8_t> input, ::ArrayWrapper<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::OFB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OFB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CTS
void Mono::Security::Cryptography::SymmetricTransform::CTS(::ArrayWrapper<uint8_t> input, ::ArrayWrapper<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::CTS");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CTS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CheckInput
void Mono::Security::Cryptography::SymmetricTransform::CheckInput(::ArrayWrapper<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::CheckInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.TransformBlock
int Mono::Security::Cryptography::SymmetricTransform::TransformBlock(::ArrayWrapper<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayWrapper<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::TransformBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.InternalTransformBlock
int Mono::Security::Cryptography::SymmetricTransform::InternalTransformBlock(::ArrayWrapper<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayWrapper<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::InternalTransformBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalTransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Random
void Mono::Security::Cryptography::SymmetricTransform::Random(::ArrayWrapper<uint8_t> buffer, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::Random");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Random", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, start, length);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.ThrowBadPaddingException
void Mono::Security::Cryptography::SymmetricTransform::ThrowBadPaddingException(System::Security::Cryptography::PaddingMode padding, int length, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::ThrowBadPaddingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowBadPaddingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(position)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, padding, length, position);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.FinalEncrypt
::ArrayWrapper<uint8_t> Mono::Security::Cryptography::SymmetricTransform::FinalEncrypt(::ArrayWrapper<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::FinalEncrypt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<uint8_t>, false>(___instance_arg, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.FinalDecrypt
::ArrayWrapper<uint8_t> Mono::Security::Cryptography::SymmetricTransform::FinalDecrypt(::ArrayWrapper<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::FinalDecrypt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<uint8_t>, false>(___instance_arg, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.TransformFinalBlock
::ArrayWrapper<uint8_t> Mono::Security::Cryptography::SymmetricTransform::TransformFinalBlock(::ArrayWrapper<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<uint8_t>, false>(___instance_arg, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Finalize
void Mono::Security::Cryptography::SymmetricTransform::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::SymmetricTransform::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.DSAManaged
#include "Mono/Security/Cryptography/DSAManaged.hpp"
// Including type: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/DSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean keypairGenerated
bool& Mono::Security::Cryptography::DSAManaged::dyn_keypairGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_keypairGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keypairGenerated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
bool& Mono::Security::Cryptography::DSAManaged::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger p
Mono::Math::BigInteger*& Mono::Security::Cryptography::DSAManaged::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger q
Mono::Math::BigInteger*& Mono::Security::Cryptography::DSAManaged::dyn_q() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "q"))->offset;
  return *reinterpret_cast<Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger g
Mono::Math::BigInteger*& Mono::Security::Cryptography::DSAManaged::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_g");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger x
Mono::Math::BigInteger*& Mono::Security::Cryptography::DSAManaged::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger y
Mono::Math::BigInteger*& Mono::Security::Cryptography::DSAManaged::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger j
Mono::Math::BigInteger*& Mono::Security::Cryptography::DSAManaged::dyn_j() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_j");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "j"))->offset;
  return *reinterpret_cast<Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger seed
Mono::Math::BigInteger*& Mono::Security::Cryptography::DSAManaged::dyn_seed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_seed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seed"))->offset;
  return *reinterpret_cast<Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 counter
int& Mono::Security::Cryptography::DSAManaged::dyn_counter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_counter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean j_missing
bool& Mono::Security::Cryptography::DSAManaged::dyn_j_missing() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_j_missing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "j_missing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator rng
System::Security::Cryptography::RandomNumberGenerator*& Mono::Security::Cryptography::DSAManaged::dyn_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_rng");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rng"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler KeyGenerated
Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler*& Mono::Security::Cryptography::DSAManaged::dyn_KeyGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::dyn_KeyGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyGenerated"))->offset;
  return *reinterpret_cast<Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_Random
System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::DSAManaged::get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::get_Random");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Random", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RandomNumberGenerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_PublicOnly
bool Mono::Security::Cryptography::DSAManaged::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.add_KeyGenerated
void Mono::Security::Cryptography::DSAManaged::add_KeyGenerated(Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::add_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.remove_KeyGenerated
void Mono::Security::Cryptography::DSAManaged::remove_KeyGenerated(Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::remove_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Generate
void Mono::Security::Cryptography::DSAManaged::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.GenerateKeyPair
void Mono::Security::Cryptography::DSAManaged::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::GenerateKeyPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.add
void Mono::Security::Cryptography::DSAManaged::add(::ArrayWrapper<uint8_t> a, ::ArrayWrapper<uint8_t> b, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, a, b, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.GenerateParams
void Mono::Security::Cryptography::DSAManaged::GenerateParams(int keyLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::GenerateParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyLength)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, keyLength);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.NormalizeArray
::ArrayWrapper<uint8_t> Mono::Security::Cryptography::DSAManaged::NormalizeArray(::ArrayWrapper<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::NormalizeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<uint8_t>, false>(___instance_arg, ___internal__method, array);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_KeySize
int Mono::Security::Cryptography::DSAManaged::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Finalize
void Mono::Security::Cryptography::DSAManaged::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.ExportParameters
System::Security::Cryptography::DSAParameters Mono::Security::Cryptography::DSAManaged::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::ExportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrivateParameters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::DSAParameters, false>(___instance_arg, ___internal__method, includePrivateParameters);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.ImportParameters
void Mono::Security::Cryptography::DSAManaged::ImportParameters(System::Security::Cryptography::DSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::ImportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, parameters);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.VerifySignature
bool Mono::Security::Cryptography::DSAManaged::VerifySignature(::ArrayWrapper<uint8_t> rgbHash, ::ArrayWrapper<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::VerifySignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(rgbSignature)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Dispose
void Mono::Security::Cryptography::DSAManaged::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/DSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.Invoke
void Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::Invoke(::Il2CppObject* sender, System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sender, e);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.BeginInvoke
System::IAsyncResult* Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::BeginInvoke(::Il2CppObject* sender, System::EventArgs* e, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.EndInvoke
void Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.IRegistryApi
#include "Microsoft/Win32/IRegistryApi.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.IRegistryApi.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::IRegistryApi::OpenSubKey(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyname, bool writtable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::OpenSubKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyname), ::il2cpp_utils::ExtractType(writtable)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(___instance_arg, ___internal__method, rkey, keyname, writtable);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.Flush
void Microsoft::Win32::IRegistryApi::Flush(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.Close
void Microsoft::Win32::IRegistryApi::Close(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::IRegistryApi::GetValue(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, ::Il2CppObject* default_value, Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(default_value), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, rkey, name, default_value, options);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.GetSubKeyNames
::ArrayWrapper<::Il2CppString*> Microsoft::Win32::IRegistryApi::GetSubKeyNames(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::GetSubKeyNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<::Il2CppString*>, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.ToString
::Il2CppString* Microsoft::Win32::IRegistryApi::ToString(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.GetHandle
System::IntPtr Microsoft::Win32::IRegistryApi::GetHandle(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::IRegistryApi::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(___instance_arg, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.Registry
#include "Microsoft/Win32/Registry.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey ClassesRoot
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_ClassesRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_ClassesRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "ClassesRoot"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey ClassesRoot
void Microsoft::Win32::Registry::_set_ClassesRoot(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_ClassesRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "ClassesRoot", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey CurrentConfig
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_CurrentConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_CurrentConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "CurrentConfig"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey CurrentConfig
void Microsoft::Win32::Registry::_set_CurrentConfig(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_CurrentConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "CurrentConfig", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey CurrentUser
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_CurrentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_CurrentUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "CurrentUser"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey CurrentUser
void Microsoft::Win32::Registry::_set_CurrentUser(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_CurrentUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "CurrentUser", value));
}
// [ObsoleteAttribute] Offset: 0xE62924
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey DynData
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_DynData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_DynData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "DynData"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey DynData
void Microsoft::Win32::Registry::_set_DynData(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_DynData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "DynData", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey LocalMachine
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_LocalMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_LocalMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "LocalMachine"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey LocalMachine
void Microsoft::Win32::Registry::_set_LocalMachine(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_LocalMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "LocalMachine", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey PerformanceData
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_PerformanceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_PerformanceData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "PerformanceData"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey PerformanceData
void Microsoft::Win32::Registry::_set_PerformanceData(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_PerformanceData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "PerformanceData", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey Users
Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_get_Users");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "Users"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey Users
void Microsoft::Win32::Registry::_set_Users(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::_set_Users");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "Users", value));
}
// Autogenerated method: Microsoft.Win32.Registry..cctor
void Microsoft::Win32::Registry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Registry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Registry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.RegistryHive
#include "Microsoft/Win32/RegistryHive.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive ClassesRoot
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_ClassesRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_ClassesRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "ClassesRoot"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive ClassesRoot
void Microsoft::Win32::RegistryHive::_set_ClassesRoot(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_ClassesRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "ClassesRoot", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive CurrentConfig
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_CurrentConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_CurrentConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "CurrentConfig"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive CurrentConfig
void Microsoft::Win32::RegistryHive::_set_CurrentConfig(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_CurrentConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "CurrentConfig", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive CurrentUser
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_CurrentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_CurrentUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "CurrentUser"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive CurrentUser
void Microsoft::Win32::RegistryHive::_set_CurrentUser(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_CurrentUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "CurrentUser", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive DynData
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_DynData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_DynData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "DynData"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive DynData
void Microsoft::Win32::RegistryHive::_set_DynData(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_DynData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "DynData", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive LocalMachine
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_LocalMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_LocalMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "LocalMachine"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive LocalMachine
void Microsoft::Win32::RegistryHive::_set_LocalMachine(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_LocalMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "LocalMachine", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive PerformanceData
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_PerformanceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_PerformanceData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "PerformanceData"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive PerformanceData
void Microsoft::Win32::RegistryHive::_set_PerformanceData(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_PerformanceData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "PerformanceData", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive Users
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_get_Users");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "Users"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive Users
void Microsoft::Win32::RegistryHive::_set_Users(Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::_set_Users");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "Users", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Microsoft::Win32::RegistryHive::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryHive::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
#include "Microsoft/Win32/SafeHandles/SafeRegistryHandle.hpp"
// Including type: Microsoft.Win32.IRegistryApi
#include "Microsoft/Win32/IRegistryApi.hpp"
// Including type: System.IO.IOException
#include "System/IO/IOException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Microsoft.Win32.IRegistryApi RegistryApi
Microsoft::Win32::IRegistryApi* Microsoft::Win32::RegistryKey::_get_RegistryApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::_get_RegistryApi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::IRegistryApi*>("Microsoft.Win32", "RegistryKey", "RegistryApi"));
}
// Autogenerated static field setter
// Set static field: static private readonly Microsoft.Win32.IRegistryApi RegistryApi
void Microsoft::Win32::RegistryKey::_set_RegistryApi(Microsoft::Win32::IRegistryApi* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::_set_RegistryApi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryKey", "RegistryApi", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object handle
::Il2CppObject*& Microsoft::Win32::RegistryKey::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeRegistryHandle safe_handle
Microsoft::Win32::SafeHandles::SafeRegistryHandle*& Microsoft::Win32::RegistryKey::dyn_safe_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::dyn_safe_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "safe_handle"))->offset;
  return *reinterpret_cast<Microsoft::Win32::SafeHandles::SafeRegistryHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object hive
::Il2CppObject*& Microsoft::Win32::RegistryKey::dyn_hive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::dyn_hive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hive"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String qname
::Il2CppString*& Microsoft::Win32::RegistryKey::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::dyn_qname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean isRemoteRoot
bool& Microsoft::Win32::RegistryKey::dyn_isRemoteRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::dyn_isRemoteRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRemoteRoot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean isWritable
bool& Microsoft::Win32::RegistryKey::dyn_isWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::dyn_isWritable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isWritable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_Name
::Il2CppString* Microsoft::Win32::RegistryKey::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_Handle
Microsoft::Win32::SafeHandles::SafeRegistryHandle* Microsoft::Win32::RegistryKey::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeRegistryHandle*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_IsRoot
bool Microsoft::Win32::RegistryKey::get_IsRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_IsRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_Hive
Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryKey::get_Hive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_Hive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryHive, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_InternalHandle
::Il2CppObject* Microsoft::Win32::RegistryKey::get_InternalHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::get_InternalHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey..cctor
void Microsoft::Win32::RegistryKey::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.IsEquals
bool Microsoft::Win32::RegistryKey::IsEquals(Microsoft::Win32::RegistryKey* a, Microsoft::Win32::RegistryKey* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::IsEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "IsEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.Dispose
void Microsoft::Win32::RegistryKey::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.Flush
void Microsoft::Win32::RegistryKey::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.Close
void Microsoft::Win32::RegistryKey::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::RegistryKey::OpenSubKey(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::OpenSubKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(___instance_arg, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::RegistryKey::OpenSubKey(::Il2CppString* name, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::OpenSubKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(writable)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(___instance_arg, ___internal__method, name, writable);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetValue
::Il2CppObject* Microsoft::Win32::RegistryKey::GetValue(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetValue
::Il2CppObject* Microsoft::Win32::RegistryKey::GetValue(::Il2CppString* name, ::Il2CppObject* defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(defaultValue)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, name, defaultValue);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetSubKeyNames
::ArrayWrapper<::Il2CppString*> Microsoft::Win32::RegistryKey::GetSubKeyNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::GetSubKeyNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.AssertKeyStillValid
void Microsoft::Win32::RegistryKey::AssertKeyStillValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::AssertKeyStillValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertKeyStillValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.AssertKeyNameLength
void Microsoft::Win32::RegistryKey::AssertKeyNameLength(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::AssertKeyNameLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertKeyNameLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.DecodeString
::Il2CppString* Microsoft::Win32::RegistryKey::DecodeString(::ArrayWrapper<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::DecodeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "DecodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.CreateMarkedForDeletionException
System::IO::IOException* Microsoft::Win32::RegistryKey::CreateMarkedForDeletionException() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::CreateMarkedForDeletionException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "CreateMarkedForDeletionException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::IOException*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetHiveName
::Il2CppString* Microsoft::Win32::RegistryKey::GetHiveName(Microsoft::Win32::RegistryHive hive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::GetHiveName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "GetHiveName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hive)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hive);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.ToString
::Il2CppString* Microsoft::Win32::RegistryKey::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKey::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.RegistryValueKind
#include "Microsoft/Win32/RegistryValueKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind Unknown
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind Unknown
void Microsoft::Win32::RegistryValueKind::_set_Unknown(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind String
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "String"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind String
void Microsoft::Win32::RegistryValueKind::_set_String(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind ExpandString
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_ExpandString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_ExpandString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "ExpandString"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind ExpandString
void Microsoft::Win32::RegistryValueKind::_set_ExpandString(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_ExpandString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "ExpandString", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind Binary
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind Binary
void Microsoft::Win32::RegistryValueKind::_set_Binary(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind DWord
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_DWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_DWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "DWord"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind DWord
void Microsoft::Win32::RegistryValueKind::_set_DWord(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_DWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "DWord", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind MultiString
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_MultiString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_MultiString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "MultiString"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind MultiString
void Microsoft::Win32::RegistryValueKind::_set_MultiString(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_MultiString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "MultiString", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind QWord
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_QWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_QWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "QWord"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind QWord
void Microsoft::Win32::RegistryValueKind::_set_QWord(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_QWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "QWord", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind None
Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind None
void Microsoft::Win32::RegistryValueKind::_set_None(Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Microsoft::Win32::RegistryValueKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueOptions None
Microsoft::Win32::RegistryValueOptions Microsoft::Win32::RegistryValueOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueOptions>("Microsoft.Win32", "RegistryValueOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueOptions None
void Microsoft::Win32::RegistryValueOptions::_set_None(Microsoft::Win32::RegistryValueOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames
Microsoft::Win32::RegistryValueOptions Microsoft::Win32::RegistryValueOptions::_get_DoNotExpandEnvironmentNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueOptions::_get_DoNotExpandEnvironmentNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryValueOptions>("Microsoft.Win32", "RegistryValueOptions", "DoNotExpandEnvironmentNames"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames
void Microsoft::Win32::RegistryValueOptions::_set_DoNotExpandEnvironmentNames(Microsoft::Win32::RegistryValueOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueOptions::_set_DoNotExpandEnvironmentNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueOptions", "DoNotExpandEnvironmentNames", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Microsoft::Win32::RegistryValueOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryValueOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.ExpandString
#include "Microsoft/Win32/ExpandString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String value
::Il2CppString*& Microsoft::Win32::ExpandString::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::ExpandString::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Microsoft.Win32.ExpandString.Expand
::Il2CppString* Microsoft::Win32::ExpandString::Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::ExpandString::Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.ExpandString.ToString
::Il2CppString* Microsoft::Win32::ExpandString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::ExpandString::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.RegistryKeyComparer
#include "Microsoft/Win32/RegistryKeyComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.RegistryKeyComparer.Equals
bool Microsoft::Win32::RegistryKeyComparer::Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKeyComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, x, y);
}
// Autogenerated method: Microsoft.Win32.RegistryKeyComparer.GetHashCode
int Microsoft::Win32::RegistryKeyComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::RegistryKeyComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.KeyHandler
#include "Microsoft/Win32/KeyHandler.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable key_to_handler
System::Collections::Hashtable* Microsoft::Win32::KeyHandler::_get_key_to_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_get_key_to_handler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("Microsoft.Win32", "KeyHandler", "key_to_handler"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable key_to_handler
void Microsoft::Win32::KeyHandler::_set_key_to_handler(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_set_key_to_handler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "key_to_handler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable dir_to_handler
System::Collections::Hashtable* Microsoft::Win32::KeyHandler::_get_dir_to_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_get_dir_to_handler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("Microsoft.Win32", "KeyHandler", "dir_to_handler"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable dir_to_handler
void Microsoft::Win32::KeyHandler::_set_dir_to_handler(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_set_dir_to_handler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "dir_to_handler", value));
}
// Autogenerated static field getter
// Get static field: static private System.String user_store
::Il2CppString* Microsoft::Win32::KeyHandler::_get_user_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_get_user_store");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Microsoft.Win32", "KeyHandler", "user_store"));
}
// Autogenerated static field setter
// Set static field: static private System.String user_store
void Microsoft::Win32::KeyHandler::_set_user_store(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_set_user_store");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "user_store", value));
}
// Autogenerated static field getter
// Get static field: static private System.String machine_store
::Il2CppString* Microsoft::Win32::KeyHandler::_get_machine_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_get_machine_store");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Microsoft.Win32", "KeyHandler", "machine_store"));
}
// Autogenerated static field setter
// Set static field: static private System.String machine_store
void Microsoft::Win32::KeyHandler::_set_machine_store(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::_set_machine_store");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "machine_store", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String Dir
::Il2CppString*& Microsoft::Win32::KeyHandler::dyn_Dir() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::dyn_Dir");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dir"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ActualDir
::Il2CppString*& Microsoft::Win32::KeyHandler::dyn_ActualDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::dyn_ActualDir");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActualDir"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsVolatile
bool& Microsoft::Win32::KeyHandler::dyn_IsVolatile() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::dyn_IsVolatile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsVolatile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable values
System::Collections::Hashtable*& Microsoft::Win32::KeyHandler::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String file
::Il2CppString*& Microsoft::Win32::KeyHandler::dyn_file() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::dyn_file");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "file"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean dirty
bool& Microsoft::Win32::KeyHandler::dyn_dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::dyn_dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_IsMarkedForDeletion
bool Microsoft::Win32::KeyHandler::get_IsMarkedForDeletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::get_IsMarkedForDeletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMarkedForDeletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_UserStore
::Il2CppString* Microsoft::Win32::KeyHandler::get_UserStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::get_UserStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "get_UserStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_MachineStore
::Il2CppString* Microsoft::Win32::KeyHandler::get_MachineStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::get_MachineStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "get_MachineStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler..cctor
void Microsoft::Win32::KeyHandler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Load
void Microsoft::Win32::KeyHandler::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.LoadKey
void Microsoft::Win32::KeyHandler::LoadKey(System::Security::SecurityElement* se) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::LoadKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(se)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, se);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Ensure
Microsoft::Win32::RegistryKey* Microsoft::Win32::KeyHandler::Ensure(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* extra, bool writable, bool is_volatile) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Ensure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ensure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(extra), ::il2cpp_utils::ExtractType(writable), ::il2cpp_utils::ExtractType(is_volatile)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(___instance_arg, ___internal__method, rkey, extra, writable, is_volatile);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Probe
Microsoft::Win32::RegistryKey* Microsoft::Win32::KeyHandler::Probe(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* extra, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Probe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Probe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(extra), ::il2cpp_utils::ExtractType(writable)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(___instance_arg, ___internal__method, rkey, extra, writable);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.CombineName
::Il2CppString* Microsoft::Win32::KeyHandler::CombineName(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* extra) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::CombineName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "CombineName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(extra)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rkey, extra);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetSystemBootTime
int64_t Microsoft::Win32::KeyHandler::GetSystemBootTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetSystemBootTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetSystemBootTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetRegisteredBootTime
int64_t Microsoft::Win32::KeyHandler::GetRegisteredBootTime(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetRegisteredBootTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetRegisteredBootTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.SaveRegisteredBootTime
void Microsoft::Win32::KeyHandler::SaveRegisteredBootTime(::Il2CppString* path, int64_t btime) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::SaveRegisteredBootTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "SaveRegisteredBootTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(btime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, btime);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.CleanVolatileKeys
void Microsoft::Win32::KeyHandler::CleanVolatileKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::CleanVolatileKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "CleanVolatileKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.VolatileKeyExists
bool Microsoft::Win32::KeyHandler::VolatileKeyExists(::Il2CppString* dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::VolatileKeyExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "VolatileKeyExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetVolatileDir
::Il2CppString* Microsoft::Win32::KeyHandler::GetVolatileDir(::Il2CppString* dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetVolatileDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetVolatileDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Lookup
Microsoft::Win32::KeyHandler* Microsoft::Win32::KeyHandler::Lookup(Microsoft::Win32::RegistryKey* rkey, bool createNonExisting) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Lookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "Lookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(createNonExisting)})));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::KeyHandler*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rkey, createNonExisting);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetRootFromDir
::Il2CppString* Microsoft::Win32::KeyHandler::GetRootFromDir(::Il2CppString* dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetRootFromDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetRootFromDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Drop
void Microsoft::Win32::KeyHandler::Drop(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Drop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "Drop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetValue
::Il2CppObject* Microsoft::Win32::KeyHandler::GetValue(::Il2CppString* name, Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, name, options);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetSubKeyNames
::ArrayWrapper<::Il2CppString*> Microsoft::Win32::KeyHandler::GetSubKeyNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::GetSubKeyNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Flush
void Microsoft::Win32::KeyHandler::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.ValueExists
bool Microsoft::Win32::KeyHandler::ValueExists(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::ValueExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Save
void Microsoft::Win32::KeyHandler::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Finalize
void Microsoft::Win32::KeyHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::KeyHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.UnixRegistryApi
#include "Microsoft/Win32/UnixRegistryApi.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.ToUnix
::Il2CppString* Microsoft::Win32::UnixRegistryApi::ToUnix(::Il2CppString* keyname) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::ToUnix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "UnixRegistryApi", "ToUnix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyname)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyname);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.IsWellKnownKey
bool Microsoft::Win32::UnixRegistryApi::IsWellKnownKey(::Il2CppString* parentKeyName, ::Il2CppString* keyname) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::IsWellKnownKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "UnixRegistryApi", "IsWellKnownKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentKeyName), ::il2cpp_utils::ExtractType(keyname)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentKeyName, keyname);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::UnixRegistryApi::OpenSubKey(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyname, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::OpenSubKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyname), ::il2cpp_utils::ExtractType(writable)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(___instance_arg, ___internal__method, rkey, keyname, writable);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.Flush
void Microsoft::Win32::UnixRegistryApi::Flush(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.Close
void Microsoft::Win32::UnixRegistryApi::Close(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::UnixRegistryApi::GetValue(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, ::Il2CppObject* default_value, Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(default_value), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, rkey, name, default_value, options);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.GetSubKeyNames
::ArrayWrapper<::Il2CppString*> Microsoft::Win32::UnixRegistryApi::GetSubKeyNames(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::GetSubKeyNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<::Il2CppString*>, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.ToString
::Il2CppString* Microsoft::Win32::UnixRegistryApi::ToString(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.CreateSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::UnixRegistryApi::CreateSubKey(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyname, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::CreateSubKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyname), ::il2cpp_utils::ExtractType(writable)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(___instance_arg, ___internal__method, rkey, keyname, writable);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.CreateSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::UnixRegistryApi::CreateSubKey(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyname, bool writable, bool is_volatile) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::CreateSubKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyname), ::il2cpp_utils::ExtractType(writable), ::il2cpp_utils::ExtractType(is_volatile)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(___instance_arg, ___internal__method, rkey, keyname, writable, is_volatile);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.GetHandle
System::IntPtr Microsoft::Win32::UnixRegistryApi::GetHandle(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::UnixRegistryApi::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(___instance_arg, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.Win32RegistryApi
#include "Microsoft/Win32/Win32RegistryApi.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Microsoft.Win32.RegistryValueKind
#include "Microsoft/Win32/RegistryValueKind.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 NativeBytesPerCharacter
int& Microsoft::Win32::Win32RegistryApi::dyn_NativeBytesPerCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::dyn_NativeBytesPerCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NativeBytesPerCharacter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegCloseKey
int Microsoft::Win32::Win32RegistryApi::RegCloseKey(System::IntPtr keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegCloseKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegCloseKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyHandle)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegFlushKey
int Microsoft::Win32::Win32RegistryApi::RegFlushKey(System::IntPtr keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegFlushKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegFlushKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyHandle)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegOpenKeyEx
int Microsoft::Win32::Win32RegistryApi::RegOpenKeyEx(System::IntPtr keyBase, ::Il2CppString* keyName, System::IntPtr reserved, int access, ByRef<System::IntPtr> keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegOpenKeyEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegOpenKeyEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(keyName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, keyName, reserved, access, byref(keyHandle));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegEnumKeyEx
int Microsoft::Win32::Win32RegistryApi::RegEnumKeyEx(System::IntPtr keyHandle, int dwIndex, ::Il2CppChar* lpName, ByRef<int> lpcbName, ::ArrayWrapper<int> lpReserved, ByRef<System::Text::StringBuilder*> lpClass, ::ArrayWrapper<int> lpcbClass, ::ArrayWrapper<int64_t> lpftLastWriteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegEnumKeyEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegEnumKeyEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyHandle), ::il2cpp_utils::ExtractType(dwIndex), ::il2cpp_utils::ExtractType(lpName), ::il2cpp_utils::ExtractType(lpcbName), ::il2cpp_utils::ExtractType(lpReserved), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractType(lpcbClass), ::il2cpp_utils::ExtractType(lpftLastWriteTime)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyHandle, dwIndex, lpName, byref(lpcbName), lpReserved, byref(lpClass), lpcbClass, lpftLastWriteTime);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, ByRef<Microsoft::Win32::RegistryValueKind> type, System::IntPtr zero, ByRef<int> dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(valueName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(zero), ::il2cpp_utils::ExtractType(dataSize)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, byref(type), zero, byref(dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, ByRef<Microsoft::Win32::RegistryValueKind> type, ByRef<::ArrayWrapper<uint8_t>> data, ByRef<int> dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(valueName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::ArrayWrapper<uint8_t>&>(), ::il2cpp_utils::ExtractType(dataSize)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, byref(type), byref(data), byref(dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, ByRef<Microsoft::Win32::RegistryValueKind> type, ByRef<int> data, ByRef<int> dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(valueName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, byref(type), byref(data), byref(dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, ByRef<Microsoft::Win32::RegistryValueKind> type, ByRef<int64_t> data, ByRef<int> dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(valueName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, byref(type), byref(data), byref(dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryInfoKey
int Microsoft::Win32::Win32RegistryApi::RegQueryInfoKey(System::IntPtr hKey, ByRef<System::Text::StringBuilder*> lpClass, ::ArrayWrapper<int> lpcbClass, System::IntPtr lpReserved_MustBeZero, ByRef<int> lpcSubKeys, ::ArrayWrapper<int> lpcbMaxSubKeyLen, ::ArrayWrapper<int> lpcbMaxClassLen, ByRef<int> lpcValues, ::ArrayWrapper<int> lpcbMaxValueNameLen, ::ArrayWrapper<int> lpcbMaxValueLen, ::ArrayWrapper<int> lpcbSecurityDescriptor, ::ArrayWrapper<int> lpftLastWriteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::RegQueryInfoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryInfoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hKey), ::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractType(lpcbClass), ::il2cpp_utils::ExtractType(lpReserved_MustBeZero), ::il2cpp_utils::ExtractType(lpcSubKeys), ::il2cpp_utils::ExtractType(lpcbMaxSubKeyLen), ::il2cpp_utils::ExtractType(lpcbMaxClassLen), ::il2cpp_utils::ExtractType(lpcValues), ::il2cpp_utils::ExtractType(lpcbMaxValueNameLen), ::il2cpp_utils::ExtractType(lpcbMaxValueLen), ::il2cpp_utils::ExtractType(lpcbSecurityDescriptor), ::il2cpp_utils::ExtractType(lpftLastWriteTime)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hKey, byref(lpClass), lpcbClass, lpReserved_MustBeZero, byref(lpcSubKeys), lpcbMaxSubKeyLen, lpcbMaxClassLen, byref(lpcValues), lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetHandle
System::IntPtr Microsoft::Win32::Win32RegistryApi::GetHandle(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(___instance_arg, ___internal__method, key);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.IsHandleValid
bool Microsoft::Win32::Win32RegistryApi::IsHandleValid(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::IsHandleValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "IsHandleValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::Win32RegistryApi::GetValue(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, ::Il2CppObject* defaultValue, Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(defaultValue), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, rkey, name, defaultValue, options);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetBinaryValue
int Microsoft::Win32::Win32RegistryApi::GetBinaryValue(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, Microsoft::Win32::RegistryValueKind type, ByRef<::ArrayWrapper<uint8_t>> data, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GetBinaryValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinaryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::ArrayWrapper<uint8_t>&>(), ::il2cpp_utils::ExtractType(size)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, rkey, name, type, byref(data), size);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.SubKeyCount
int Microsoft::Win32::Win32RegistryApi::SubKeyCount(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::SubKeyCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubKeyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::Win32RegistryApi::OpenSubKey(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyName, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::OpenSubKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyName), ::il2cpp_utils::ExtractType(writable)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(___instance_arg, ___internal__method, rkey, keyName, writable);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Flush
void Microsoft::Win32::Win32RegistryApi::Flush(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Close
void Microsoft::Win32::Win32RegistryApi::Close(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetSubKeyNames
::ArrayWrapper<::Il2CppString*> Microsoft::Win32::Win32RegistryApi::GetSubKeyNames(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GetSubKeyNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<::Il2CppString*>, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GenerateException
void Microsoft::Win32::Win32RegistryApi::GenerateException(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::GenerateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, errorCode);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.ToString
::Il2CppString* Microsoft::Win32::Win32RegistryApi::ToString(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.CombineName
::Il2CppString* Microsoft::Win32::Win32RegistryApi::CombineName(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32RegistryApi::CombineName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "CombineName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rkey, localName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.Win32Native
#include "Microsoft/Win32/Win32Native.hpp"
// Including type: Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.Win32Native.GetMessage
::Il2CppString* Microsoft::Win32::Win32Native::GetMessage(int hr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32Native::GetMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32Native", "GetMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hr)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hr);
}
// Autogenerated method: Microsoft.Win32.Win32Native.MakeHRFromErrorCode
int Microsoft::Win32::Win32Native::MakeHRFromErrorCode(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32Native::MakeHRFromErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32Native", "MakeHRFromErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 dwFileAttributes
int& Microsoft::Win32::Win32Native::WIN32_FIND_DATA::dyn_dwFileAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32Native::WIN32_FIND_DATA::dyn_dwFileAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dwFileAttributes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String cFileName
::Il2CppString*& Microsoft::Win32::Win32Native::WIN32_FIND_DATA::dyn_cFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::Win32Native::WIN32_FIND_DATA::dyn_cFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cFileName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeFileHandle
#include "Microsoft/Win32/SafeHandles/SafeFileHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeFileHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeFileHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeFindHandle
#include "Microsoft/Win32/SafeHandles/SafeFindHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeFindHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeFindHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeFindHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
#include "Microsoft/Win32/SafeHandles/SafeRegistryHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeRegistryHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeRegistryHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeWaitHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeWaitHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeWaitHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
#include "Microsoft/Win32/SafeHandles/SafeHandleZeroOrMinusOneIsInvalid.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid
bool Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ThrowHelper
#include "System/ThrowHelper.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ExceptionResource
#include "System/ExceptionResource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ThrowHelper.ThrowArgumentNullException
void System::ThrowHelper::ThrowArgumentNullException(System::ExceptionArgument argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowArgumentNullException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentNullException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argument);
}
// Autogenerated method: System.ThrowHelper.CreateArgumentNullException
System::Exception* System::ThrowHelper::CreateArgumentNullException(System::ExceptionArgument argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::CreateArgumentNullException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "CreateArgumentNullException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argument);
}
// Autogenerated method: System.ThrowHelper.ThrowArgumentOutOfRangeException
void System::ThrowHelper::ThrowArgumentOutOfRangeException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ThrowHelper.ThrowWrongValueTypeArgumentException
void System::ThrowHelper::ThrowWrongValueTypeArgumentException(::Il2CppObject* value, System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowWrongValueTypeArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowWrongValueTypeArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(targetType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, targetType);
}
// Autogenerated method: System.ThrowHelper.ThrowArgumentException
void System::ThrowHelper::ThrowArgumentException(System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: System.ThrowHelper.ThrowArgumentOutOfRangeException
void System::ThrowHelper::ThrowArgumentOutOfRangeException(System::ExceptionArgument argument, System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument), ::il2cpp_utils::ExtractType(resource)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argument, resource);
}
// Autogenerated method: System.ThrowHelper.ThrowInvalidOperationException
void System::ThrowHelper::ThrowInvalidOperationException(System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowInvalidOperationException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowInvalidOperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: System.ThrowHelper.ThrowNotSupportedException
void System::ThrowHelper::ThrowNotSupportedException(System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: System.ThrowHelper.GetArgumentName
::Il2CppString* System::ThrowHelper::GetArgumentName(System::ExceptionArgument argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::GetArgumentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "GetArgumentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argument);
}
// Autogenerated method: System.ThrowHelper.GetResourceName
::Il2CppString* System::ThrowHelper::GetResourceName(System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ThrowHelper::GetResourceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "GetResourceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resource);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TupleExtensions
#include "System/TupleExtensions.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueTuple
#include "System/ValueTuple.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ValueTuple.Equals
bool System::ValueTuple::Equals(System::ValueTuple other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.ValueTuple.System.Collections.IStructuralEquatable.Equals
bool System::ValueTuple::System_Collections_IStructuralEquatable_Equals(::Il2CppObject* other, System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::System.Collections.IStructuralEquatable.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IStructuralEquatable.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other, comparer);
}
// Autogenerated method: System.ValueTuple.System.IComparable.CompareTo
int System::ValueTuple::System_IComparable_CompareTo(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::System.IComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IComparable.CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.ValueTuple.CompareTo
int System::ValueTuple::CompareTo(System::ValueTuple other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.ValueTuple.System.Collections.IStructuralComparable.CompareTo
int System::ValueTuple::System_Collections_IStructuralComparable_CompareTo(::Il2CppObject* other, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::System.Collections.IStructuralComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IStructuralComparable.CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other, comparer);
}
// Autogenerated method: System.ValueTuple.System.Collections.IStructuralEquatable.GetHashCode
int System::ValueTuple::System_Collections_IStructuralEquatable_GetHashCode(System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::System.Collections.IStructuralEquatable.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IStructuralEquatable.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, comparer);
}
// Autogenerated method: System.ValueTuple.CombineHashCodes
int System::ValueTuple::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ValueTuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.ValueTuple.Equals
bool System::ValueTuple::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.ValueTuple.GetHashCode
int System::ValueTuple::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.ValueTuple.ToString
::Il2CppString* System::ValueTuple::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ValueTuple::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Array/System.ArrayEnumerator
#include "System/Array_ArrayEnumerator.hpp"
// Including type: System.Array/System.InternalEnumerator`1
#include "System/Array_InternalEnumerator_1.hpp"
// Including type: System.Array/System.EmptyInternalEnumerator`1
#include "System/Array_EmptyInternalEnumerator_1.hpp"
// Including type: System.Array/System.SorterObjectArray
#include "System/Array_SorterObjectArray.hpp"
// Including type: System.Array/System.SorterGenericArray
#include "System/Array_SorterGenericArray.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Array.System.Collections.ICollection.get_Count
int System::Array::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IList.get_IsReadOnly
bool System::Array::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IList.get_Item
::Il2CppObject* System::Array::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated method: System.Array.System.Collections.IList.set_Item
void System::Array::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, index, value);
}
// Autogenerated method: System.Array.get_LongLength
int64_t System::Array::get_LongLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_LongLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.get_IsFixedSize
bool System::Array::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.get_IsReadOnly
bool System::Array::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.get_IsSynchronized
bool System::Array::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSynchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.get_SyncRoot
::Il2CppObject* System::Array::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.get_Length
int System::Array::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.get_Rank
int System::Array::get_Rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::get_Rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, ::ArrayWrapper<int64_t> lengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths);
}
// Autogenerated method: System.Array.System.Collections.IList.Add
int System::Array::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Contains
bool System::Array::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Clear
void System::Array::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IList.IndexOf
int System::Array::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Insert
void System::Array::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, index, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Remove
void System::Array::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.RemoveAt
void System::Array::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated method: System.Array.CopyTo
void System::Array::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, array, index);
}
// Autogenerated method: System.Array.Clone
::Il2CppObject* System::Array::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IStructuralComparable.CompareTo
int System::Array::System_Collections_IStructuralComparable_CompareTo(::Il2CppObject* other, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IStructuralComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IStructuralComparable.CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, other, comparer);
}
// Autogenerated method: System.Array.System.Collections.IStructuralEquatable.Equals
bool System::Array::System_Collections_IStructuralEquatable_Equals(::Il2CppObject* other, System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IStructuralEquatable.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IStructuralEquatable.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, other, comparer);
}
// Autogenerated method: System.Array.CombineHashCodes
int System::Array::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.Array.System.Collections.IStructuralEquatable.GetHashCode
int System::Array::System_Collections_IStructuralEquatable_GetHashCode(System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::System.Collections.IStructuralEquatable.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IStructuralEquatable.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, comparer);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(System::Array* sourceArray, System::Array* destinationArray, int64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, destinationArray, length);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(System::Array* sourceArray, int64_t sourceIndex, System::Array* destinationArray, int64_t destinationIndex, int64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, sourceIndex, destinationArray, destinationIndex, length);
}
// Autogenerated method: System.Array.CopyTo
void System::Array::CopyTo(System::Array* array, int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, array, index);
}
// Autogenerated method: System.Array.GetLongLength
int64_t System::Array::GetLongLength(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetLongLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLongLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int64_t index1, int64_t index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, index1, index2);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int64_t index1, int64_t index2, int64_t index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2), ::il2cpp_utils::ExtractType(index3)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, index1, index2, index3);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(::ArrayWrapper<int64_t> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, indices);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(System::Array* array, int index, int length, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length, value);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(System::Array* array, ::Il2CppObject* value, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, comparer);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(System::Array* array, int index, int length, ::Il2CppObject* value, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length, value, comparer);
}
// Autogenerated method: System.Array.GetMedian
int System::Array::GetMedian(int low, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetMedian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "GetMedian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, low, hi);
}
// Autogenerated method: System.Array.IndexOf
int System::Array::IndexOf(System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Array.IndexOf
int System::Array::IndexOf(System::Array* array, ::Il2CppObject* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, startIndex);
}
// Autogenerated method: System.Array.IndexOf
int System::Array::IndexOf(System::Array* array, ::Il2CppObject* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Array.LastIndexOf
int System::Array::LastIndexOf(System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Array.LastIndexOf
int System::Array::LastIndexOf(System::Array* array, ::Il2CppObject* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, startIndex);
}
// Autogenerated method: System.Array.LastIndexOf
int System::Array::LastIndexOf(System::Array* array, ::Il2CppObject* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Array.Reverse
void System::Array::Reverse(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Array.Reverse
void System::Array::Reverse(System::Array* array, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, index);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int64_t index1, int64_t index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, index1, index2);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int64_t index1, int64_t index2, int64_t index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2), ::il2cpp_utils::ExtractType(index3)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, index1, index2, index3);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, ::ArrayWrapper<int64_t> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(indices)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, indices);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* array, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* array, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, comparer);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* array, int index, int length, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length, comparer);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* keys, System::Array* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* keys, System::Array* items, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items, comparer);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* keys, System::Array* items, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items, index, length);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(System::Array* keys, System::Array* items, int index, int length, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items, index, length, comparer);
}
// Autogenerated method: System.Array.GetEnumerator
System::Collections::IEnumerator* System::Array::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__ICollection_get_Count
int System::Array::InternalArray__ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__ICollection_get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__ICollection_get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__ICollection_get_IsReadOnly
bool System::Array::InternalArray__ICollection_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__ICollection_get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__ICollection_get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__ICollection_Clear
void System::Array::InternalArray__ICollection_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__ICollection_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__ICollection_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__IReadOnlyCollection_get_Count
int System::Array::InternalArray__IReadOnlyCollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__IReadOnlyCollection_get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__IReadOnlyCollection_get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__RemoveAt
void System::Array::InternalArray__RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::InternalArray__RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated method: System.Array.GetRank
int System::Array::GetRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.GetLength
int System::Array::GetLength(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetLowerBound
int System::Array::GetLowerBound(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetLowerBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLowerBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(::ArrayWrapper<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, indices);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, ::ArrayWrapper<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(indices)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, indices);
}
// Autogenerated method: System.Array.GetValueImpl
::Il2CppObject* System::Array::GetValueImpl(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValueImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated method: System.Array.SetValueImpl
void System::Array::SetValueImpl(::Il2CppObject* value, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValueImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, pos);
}
// Autogenerated method: System.Array.FastCopy
bool System::Array::FastCopy(System::Array* source, int source_idx, System::Array* dest, int dest_idx, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::FastCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "FastCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(source_idx), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_idx), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, source_idx, dest, dest_idx, length);
}
// Autogenerated method: System.Array.CreateInstanceImpl
System::Array* System::Array::CreateInstanceImpl(System::Type* elementType, ::ArrayWrapper<int> lengths, ::ArrayWrapper<int> bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstanceImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstanceImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths), ::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths, bounds);
}
// Autogenerated method: System.Array.GetUpperBound
int System::Array::GetUpperBound(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetUpperBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUpperBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int index1, int index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, index1, index2);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int index1, int index2, int index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2), ::il2cpp_utils::ExtractType(index3)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, index1, index2, index3);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, index);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int index1, int index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, index1, index2);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int index1, int index2, int index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2), ::il2cpp_utils::ExtractType(index3)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, index1, index2, index3);
}
// Autogenerated method: System.Array.UnsafeCreateInstance
System::Array* System::Array::UnsafeCreateInstance(System::Type* elementType, ::ArrayWrapper<int> lengths, ::ArrayWrapper<int> lowerBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::UnsafeCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "UnsafeCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths), ::il2cpp_utils::ExtractType(lowerBounds)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths, lowerBounds);
}
// Autogenerated method: System.Array.UnsafeCreateInstance
System::Array* System::Array::UnsafeCreateInstance(System::Type* elementType, int length1, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::UnsafeCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "UnsafeCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(length2)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, length1, length2);
}
// Autogenerated method: System.Array.UnsafeCreateInstance
System::Array* System::Array::UnsafeCreateInstance(System::Type* elementType, ::ArrayWrapper<int> lengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::UnsafeCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "UnsafeCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths);
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, length);
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, int length1, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(length2)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, length1, length2);
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, int length1, int length2, int length3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(length3)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, length1, length2, length3);
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, ::ArrayWrapper<int> lengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths);
}
// Autogenerated method: System.Array.CreateInstance
System::Array* System::Array::CreateInstance(System::Type* elementType, ::ArrayWrapper<int> lengths, ::ArrayWrapper<int> lowerBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths), ::il2cpp_utils::ExtractType(lowerBounds)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementType, lengths, lowerBounds);
}
// Autogenerated method: System.Array.Clear
void System::Array::Clear(System::Array* array, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, length);
}
// Autogenerated method: System.Array.ClearInternal
void System::Array::ClearInternal(System::Array* a, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ClearInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "ClearInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, index, count);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(System::Array* sourceArray, System::Array* destinationArray, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, destinationArray, length);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(System::Array* sourceArray, int sourceIndex, System::Array* destinationArray, int destinationIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, sourceIndex, destinationArray, destinationIndex, length);
}
// Autogenerated method: System.Array.CreateArrayTypeMismatchException
System::Exception* System::Array::CreateArrayTypeMismatchException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CreateArrayTypeMismatchException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateArrayTypeMismatchException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Array.CanAssignArrayElement
bool System::Array::CanAssignArrayElement(System::Type* source, System::Type* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::CanAssignArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CanAssignArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, target);
}
// Autogenerated method: System.Array.ConstrainedCopy
void System::Array::ConstrainedCopy(System::Array* sourceArray, int sourceIndex, System::Array* destinationArray, int destinationIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ConstrainedCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "ConstrainedCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceArray, sourceIndex, destinationArray, destinationIndex, length);
}
// Autogenerated method: System.Array.Initialize
void System::Array::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array.SortImpl
void System::Array::SortImpl(System::Array* keys, System::Array* items, int index, int length, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SortImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "SortImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keys, items, index, length, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array/System.ArrayEnumerator
#include "System/Array_ArrayEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Array _array
System::Array*& System::Array::ArrayEnumerator::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
int& System::Array::ArrayEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _endIndex
int& System::Array::ArrayEnumerator::dyn__endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::dyn__endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Array/System.ArrayEnumerator.get_Current
::Il2CppObject* System::Array::ArrayEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array/System.ArrayEnumerator.MoveNext
bool System::Array::ArrayEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array/System.ArrayEnumerator.Reset
void System::Array::ArrayEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Array/System.ArrayEnumerator.Clone
::Il2CppObject* System::Array::ArrayEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::ArrayEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array/System.SorterObjectArray
#include "System/Array_SorterObjectArray.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] keys
::ArrayWrapper<::Il2CppObject*>& System::Array::SorterObjectArray::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::dyn_keys");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::ArrayWrapper<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] items
::ArrayWrapper<::Il2CppObject*>& System::Array::SorterObjectArray::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::dyn_items");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::ArrayWrapper<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
System::Collections::IComparer*& System::Array::SorterObjectArray::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::dyn_comparer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Array/System.SorterObjectArray.SwapIfGreaterWithItems
void System::Array::SorterObjectArray::SwapIfGreaterWithItems(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::SwapIfGreaterWithItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SwapIfGreaterWithItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, a, b);
}
// Autogenerated method: System.Array/System.SorterObjectArray.Swap
void System::Array::SorterObjectArray::Swap(int i, int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::Swap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Swap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(j)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, i, j);
}
// Autogenerated method: System.Array/System.SorterObjectArray.Sort
void System::Array::SorterObjectArray::Sort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/System.SorterObjectArray.IntrospectiveSort
void System::Array::SorterObjectArray::IntrospectiveSort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::IntrospectiveSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntrospectiveSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/System.SorterObjectArray.IntroSort
void System::Array::SorterObjectArray::IntroSort(int lo, int hi, int depthLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::IntroSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntroSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(depthLimit)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi, depthLimit);
}
// Autogenerated method: System.Array/System.SorterObjectArray.PickPivotAndPartition
int System::Array::SorterObjectArray::PickPivotAndPartition(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::PickPivotAndPartition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PickPivotAndPartition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/System.SorterObjectArray.Heapsort
void System::Array::SorterObjectArray::Heapsort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::Heapsort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Heapsort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/System.SorterObjectArray.DownHeap
void System::Array::SorterObjectArray::DownHeap(int i, int n, int lo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::DownHeap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DownHeap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(lo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, i, n, lo);
}
// Autogenerated method: System.Array/System.SorterObjectArray.InsertionSort
void System::Array::SorterObjectArray::InsertionSort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterObjectArray::InsertionSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InsertionSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Array/System.SorterGenericArray
#include "System/Array_SorterGenericArray.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Array keys
System::Array*& System::Array::SorterGenericArray::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::dyn_keys");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Array items
System::Array*& System::Array::SorterGenericArray::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::dyn_items");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
System::Collections::IComparer*& System::Array::SorterGenericArray::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::dyn_comparer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Array/System.SorterGenericArray.SwapIfGreaterWithItems
void System::Array::SorterGenericArray::SwapIfGreaterWithItems(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::SwapIfGreaterWithItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SwapIfGreaterWithItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, a, b);
}
// Autogenerated method: System.Array/System.SorterGenericArray.Swap
void System::Array::SorterGenericArray::Swap(int i, int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::Swap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Swap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(j)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, i, j);
}
// Autogenerated method: System.Array/System.SorterGenericArray.Sort
void System::Array::SorterGenericArray::Sort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/System.SorterGenericArray.IntrospectiveSort
void System::Array::SorterGenericArray::IntrospectiveSort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::IntrospectiveSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntrospectiveSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/System.SorterGenericArray.IntroSort
void System::Array::SorterGenericArray::IntroSort(int lo, int hi, int depthLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::IntroSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntroSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(depthLimit)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi, depthLimit);
}
// Autogenerated method: System.Array/System.SorterGenericArray.PickPivotAndPartition
int System::Array::SorterGenericArray::PickPivotAndPartition(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::PickPivotAndPartition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PickPivotAndPartition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/System.SorterGenericArray.Heapsort
void System::Array::SorterGenericArray::Heapsort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::Heapsort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Heapsort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/System.SorterGenericArray.DownHeap
void System::Array::SorterGenericArray::DownHeap(int i, int n, int lo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::DownHeap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DownHeap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(lo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, i, n, lo);
}
// Autogenerated method: System.Array/System.SorterGenericArray.InsertionSort
void System::Array::SorterGenericArray::InsertionSort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Array::SorterGenericArray::InsertionSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InsertionSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, lo, hi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ITupleInternal
#include "System/ITupleInternal.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ITupleInternal.ToString
::Il2CppString* System::ITupleInternal::ToString(System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ITupleInternal::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Tuple
#include "System/Tuple.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Tuple`3
#include "System/Tuple_3.hpp"
// Including type: System.Tuple`4
#include "System/Tuple_4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Tuple.CombineHashCodes
int System::Tuple::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Tuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Tuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.Tuple.CombineHashCodes
int System::Tuple::CombineHashCodes(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Tuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Tuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: System.Tuple.CombineHashCodes
int System::Tuple::CombineHashCodes(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Tuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Tuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MonoTODOAttribute
#include "System/MonoTODOAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String comment
::Il2CppString*& System::MonoTODOAttribute::dyn_comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MonoTODOAttribute::dyn_comment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comment"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MonoLimitationAttribute
#include "System/MonoLimitationAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.ReadOnlyCollection`1<System.Exception> m_innerExceptions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*& System::AggregateException::dyn_m_innerExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::dyn_m_innerExceptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_innerExceptions"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.AggregateException.get_InnerExceptions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>* System::AggregateException::get_InnerExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::get_InnerExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.AggregateException.Flatten
System::AggregateException* System::AggregateException::Flatten() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::Flatten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flatten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::AggregateException*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.AggregateException.GetObjectData
void System::AggregateException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, info, context);
}
// Autogenerated method: System.AggregateException.ToString
::Il2CppString* System::AggregateException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AppContextSwitches
#include "System/AppContextSwitches.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean ThrowExceptionIfDisposedCancellationTokenSource
bool System::AppContextSwitches::_get_ThrowExceptionIfDisposedCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_get_ThrowExceptionIfDisposedCancellationTokenSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "AppContextSwitches", "ThrowExceptionIfDisposedCancellationTokenSource"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean ThrowExceptionIfDisposedCancellationTokenSource
void System::AppContextSwitches::_set_ThrowExceptionIfDisposedCancellationTokenSource(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_set_ThrowExceptionIfDisposedCancellationTokenSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppContextSwitches", "ThrowExceptionIfDisposedCancellationTokenSource", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean SetActorAsReferenceWhenCopyingClaimsIdentity
bool System::AppContextSwitches::_get_SetActorAsReferenceWhenCopyingClaimsIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_get_SetActorAsReferenceWhenCopyingClaimsIdentity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "AppContextSwitches", "SetActorAsReferenceWhenCopyingClaimsIdentity"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean SetActorAsReferenceWhenCopyingClaimsIdentity
void System::AppContextSwitches::_set_SetActorAsReferenceWhenCopyingClaimsIdentity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_set_SetActorAsReferenceWhenCopyingClaimsIdentity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppContextSwitches", "SetActorAsReferenceWhenCopyingClaimsIdentity", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean NoAsyncCurrentCulture
bool System::AppContextSwitches::_get_NoAsyncCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_get_NoAsyncCurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "AppContextSwitches", "NoAsyncCurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean NoAsyncCurrentCulture
void System::AppContextSwitches::_set_NoAsyncCurrentCulture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppContextSwitches::_set_NoAsyncCurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppContextSwitches", "NoAsyncCurrentCulture", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.LazyHelpers
#include "System/LazyHelpers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Object PUBLICATION_ONLY_SENTINEL
::Il2CppObject* System::LazyHelpers::_get_PUBLICATION_ONLY_SENTINEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LazyHelpers::_get_PUBLICATION_ONLY_SENTINEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "LazyHelpers", "PUBLICATION_ONLY_SENTINEL"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Object PUBLICATION_ONLY_SENTINEL
void System::LazyHelpers::_set_PUBLICATION_ONLY_SENTINEL(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LazyHelpers::_set_PUBLICATION_ONLY_SENTINEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyHelpers", "PUBLICATION_ONLY_SENTINEL", value));
}
// Autogenerated method: System.LazyHelpers..cctor
void System::LazyHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LazyHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "LazyHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.__Filters
#include "System/__Filters.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.__Filters Instance
System::__Filters* System::__Filters::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::__Filters*>("System", "__Filters", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.__Filters Instance
void System::__Filters::_set_Instance(System::__Filters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "__Filters", "Instance", value));
}
// Autogenerated method: System.__Filters..cctor
void System::__Filters::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "__Filters", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.__Filters.FilterAttribute
bool System::__Filters::FilterAttribute(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::FilterAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, m, filterCriteria);
}
// Autogenerated method: System.__Filters.FilterName
bool System::__Filters::FilterName(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::FilterName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, m, filterCriteria);
}
// Autogenerated method: System.__Filters.FilterIgnoreCase
bool System::__Filters::FilterIgnoreCase(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::FilterIgnoreCase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, m, filterCriteria);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalDataStoreHolder
#include "System/LocalDataStoreHolder.hpp"
// Including type: System.LocalDataStore
#include "System/LocalDataStore.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.LocalDataStore m_Store
System::LocalDataStore*& System::LocalDataStoreHolder::dyn_m_Store() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreHolder::dyn_m_Store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Store"))->offset;
  return *reinterpret_cast<System::LocalDataStore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStoreHolder.get_Store
System::LocalDataStore* System::LocalDataStoreHolder::get_Store() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreHolder::get_Store");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Store", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStore*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreHolder.Finalize
void System::LocalDataStoreHolder::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreHolder::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.LocalDataStoreElement
#include "System/LocalDataStoreElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object m_value
::Il2CppObject*& System::LocalDataStoreElement::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreElement::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_cookie
int64_t& System::LocalDataStoreElement::dyn_m_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreElement::dyn_m_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cookie"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStoreElement.get_Value
::Il2CppObject* System::LocalDataStoreElement::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreElement::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreElement.set_Value
void System::LocalDataStoreElement::set_Value(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreElement::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.LocalDataStoreElement.get_Cookie
int64_t System::LocalDataStoreElement::get_Cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreElement::get_Cookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.LocalDataStore
#include "System/LocalDataStore.hpp"
// Including type: System.LocalDataStoreElement
#include "System/LocalDataStoreElement.hpp"
// Including type: System.LocalDataStoreMgr
#include "System/LocalDataStoreMgr.hpp"
// Including type: System.LocalDataStoreSlot
#include "System/LocalDataStoreSlot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.LocalDataStoreElement[] m_DataTable
::ArrayWrapper<System::LocalDataStoreElement*>& System::LocalDataStore::dyn_m_DataTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStore::dyn_m_DataTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DataTable"))->offset;
  return *reinterpret_cast<::ArrayWrapper<System::LocalDataStoreElement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.LocalDataStoreMgr m_Manager
System::LocalDataStoreMgr*& System::LocalDataStore::dyn_m_Manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStore::dyn_m_Manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Manager"))->offset;
  return *reinterpret_cast<System::LocalDataStoreMgr**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStore.Dispose
void System::LocalDataStore::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStore::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.LocalDataStore.GetData
::Il2CppObject* System::LocalDataStore::GetData(System::LocalDataStoreSlot* slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStore::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, slot);
}
// Autogenerated method: System.LocalDataStore.SetData
void System::LocalDataStore::SetData(System::LocalDataStoreSlot* slot, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStore::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(data)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, slot, data);
}
// Autogenerated method: System.LocalDataStore.FreeData
void System::LocalDataStore::FreeData(int slot, int64_t cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStore::FreeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(cookie)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, slot, cookie);
}
// Autogenerated method: System.LocalDataStore.PopulateElement
System::LocalDataStoreElement* System::LocalDataStore::PopulateElement(System::LocalDataStoreSlot* slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStore::PopulateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStoreElement*, false>(___instance_arg, ___internal__method, slot);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalDataStoreSlot
#include "System/LocalDataStoreSlot.hpp"
// Including type: System.LocalDataStoreMgr
#include "System/LocalDataStoreMgr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.LocalDataStoreMgr m_mgr
System::LocalDataStoreMgr*& System::LocalDataStoreSlot::dyn_m_mgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreSlot::dyn_m_mgr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mgr"))->offset;
  return *reinterpret_cast<System::LocalDataStoreMgr**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_slot
int& System::LocalDataStoreSlot::dyn_m_slot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreSlot::dyn_m_slot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_slot"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_cookie
int64_t& System::LocalDataStoreSlot::dyn_m_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreSlot::dyn_m_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cookie"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStoreSlot.get_Manager
System::LocalDataStoreMgr* System::LocalDataStoreSlot::get_Manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreSlot::get_Manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStoreMgr*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreSlot.get_Slot
int System::LocalDataStoreSlot::get_Slot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreSlot::get_Slot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Slot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreSlot.get_Cookie
int64_t System::LocalDataStoreSlot::get_Cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreSlot::get_Cookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreSlot.Finalize
void System::LocalDataStoreSlot::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreSlot::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.LocalDataStoreMgr
#include "System/LocalDataStoreMgr.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.LocalDataStore
#include "System/LocalDataStore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.LocalDataStoreSlot
#include "System/LocalDataStoreSlot.hpp"
// Including type: System.LocalDataStoreHolder
#include "System/LocalDataStoreHolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 InitialSlotTableSize
int System::LocalDataStoreMgr::_get_InitialSlotTableSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::_get_InitialSlotTableSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "LocalDataStoreMgr", "InitialSlotTableSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InitialSlotTableSize
void System::LocalDataStoreMgr::_set_InitialSlotTableSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::_set_InitialSlotTableSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalDataStoreMgr", "InitialSlotTableSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SlotTableDoubleThreshold
int System::LocalDataStoreMgr::_get_SlotTableDoubleThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::_get_SlotTableDoubleThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "LocalDataStoreMgr", "SlotTableDoubleThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SlotTableDoubleThreshold
void System::LocalDataStoreMgr::_set_SlotTableDoubleThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::_set_SlotTableDoubleThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalDataStoreMgr", "SlotTableDoubleThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LargeSlotTableSizeIncrease
int System::LocalDataStoreMgr::_get_LargeSlotTableSizeIncrease() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::_get_LargeSlotTableSizeIncrease");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "LocalDataStoreMgr", "LargeSlotTableSizeIncrease"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LargeSlotTableSizeIncrease
void System::LocalDataStoreMgr::_set_LargeSlotTableSizeIncrease(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::_set_LargeSlotTableSizeIncrease");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalDataStoreMgr", "LargeSlotTableSizeIncrease", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] m_SlotInfoTable
::ArrayWrapper<bool>& System::LocalDataStoreMgr::dyn_m_SlotInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::dyn_m_SlotInfoTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SlotInfoTable"))->offset;
  return *reinterpret_cast<::ArrayWrapper<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_FirstAvailableSlot
int& System::LocalDataStoreMgr::dyn_m_FirstAvailableSlot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::dyn_m_FirstAvailableSlot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstAvailableSlot"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.LocalDataStore> m_ManagedLocalDataStores
System::Collections::Generic::List_1<System::LocalDataStore*>*& System::LocalDataStoreMgr::dyn_m_ManagedLocalDataStores() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::dyn_m_ManagedLocalDataStores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ManagedLocalDataStores"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<System::LocalDataStore*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.LocalDataStoreSlot> m_KeyToSlotMap
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::LocalDataStoreSlot*>*& System::LocalDataStoreMgr::dyn_m_KeyToSlotMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::dyn_m_KeyToSlotMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KeyToSlotMap"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::LocalDataStoreSlot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_CookieGenerator
int64_t& System::LocalDataStoreMgr::dyn_m_CookieGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::dyn_m_CookieGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CookieGenerator"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStoreMgr.CreateLocalDataStore
System::LocalDataStoreHolder* System::LocalDataStoreMgr::CreateLocalDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::CreateLocalDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLocalDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStoreHolder*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreMgr.DeleteLocalDataStore
void System::LocalDataStoreMgr::DeleteLocalDataStore(System::LocalDataStore* store) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::DeleteLocalDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteLocalDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(store)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, store);
}
// Autogenerated method: System.LocalDataStoreMgr.AllocateDataSlot
System::LocalDataStoreSlot* System::LocalDataStoreMgr::AllocateDataSlot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::AllocateDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStoreSlot*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreMgr.AllocateNamedDataSlot
System::LocalDataStoreSlot* System::LocalDataStoreMgr::AllocateNamedDataSlot(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::AllocateNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStoreSlot*, false>(___instance_arg, ___internal__method, name);
}
// Autogenerated method: System.LocalDataStoreMgr.GetNamedDataSlot
System::LocalDataStoreSlot* System::LocalDataStoreMgr::GetNamedDataSlot(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::GetNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStoreSlot*, false>(___instance_arg, ___internal__method, name);
}
// Autogenerated method: System.LocalDataStoreMgr.FreeNamedDataSlot
void System::LocalDataStoreMgr::FreeNamedDataSlot(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::FreeNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, name);
}
// Autogenerated method: System.LocalDataStoreMgr.FreeDataSlot
void System::LocalDataStoreMgr::FreeDataSlot(int slot, int64_t cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::FreeDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(cookie)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, slot, cookie);
}
// Autogenerated method: System.LocalDataStoreMgr.ValidateSlot
void System::LocalDataStoreMgr::ValidateSlot(System::LocalDataStoreSlot* slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::ValidateSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, slot);
}
// Autogenerated method: System.LocalDataStoreMgr.GetSlotTableLength
int System::LocalDataStoreMgr::GetSlotTableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalDataStoreMgr::GetSlotTableLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSlotTableLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Action.Invoke
void System::Action::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Action::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Action.BeginInvoke
System::IAsyncResult* System::Action::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Action::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, callback, object);
}
// Autogenerated method: System.Action.EndInvoke
void System::Action::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Action::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Activator
#include "System/Activator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, ::ArrayWrapper<::Il2CppObject*> args, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, bindingAttr, binder, args, culture);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, ::ArrayWrapper<::Il2CppObject*> args, System::Globalization::CultureInfo* culture, ::ArrayWrapper<::Il2CppObject*> activationAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(activationAttributes)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, bindingAttr, binder, args, culture, activationAttributes);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type, ::ArrayWrapper<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, args);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, nonPublic);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AppDomainUnloadedException
#include "System/AppDomainUnloadedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ApplicationException
#include "System/ApplicationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_paramName
::Il2CppString*& System::ArgumentException::dyn_m_paramName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgumentException::dyn_m_paramName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paramName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ArgumentException.get_Message
::Il2CppString* System::ArgumentException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgumentException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.ArgumentException.GetObjectData
void System::ArgumentException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgumentException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ArgumentNullException
#include "System/ArgumentNullException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ArgumentOutOfRangeException
#include "System/ArgumentOutOfRangeException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _rangeMessage
::Il2CppString* System::ArgumentOutOfRangeException::_get__rangeMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgumentOutOfRangeException::_get__rangeMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "ArgumentOutOfRangeException", "_rangeMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String _rangeMessage
void System::ArgumentOutOfRangeException::_set__rangeMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgumentOutOfRangeException::_set__rangeMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ArgumentOutOfRangeException", "_rangeMessage", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_actualValue
::Il2CppObject*& System::ArgumentOutOfRangeException::dyn_m_actualValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgumentOutOfRangeException::dyn_m_actualValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actualValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ArgumentOutOfRangeException.get_RangeMessage
::Il2CppString* System::ArgumentOutOfRangeException::get_RangeMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgumentOutOfRangeException::get_RangeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ArgumentOutOfRangeException", "get_RangeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ArgumentOutOfRangeException.get_Message
::Il2CppString* System::ArgumentOutOfRangeException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgumentOutOfRangeException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.ArgumentOutOfRangeException.GetObjectData
void System::ArgumentOutOfRangeException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgumentOutOfRangeException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ArithmeticException
#include "System/ArithmeticException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ArrayTypeMismatchException
#include "System/ArrayTypeMismatchException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.AsyncCallback.Invoke
void System::AsyncCallback::Invoke(System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AsyncCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ar);
}
// Autogenerated method: System.AsyncCallback.BeginInvoke
System::IAsyncResult* System::AsyncCallback::BeginInvoke(System::IAsyncResult* ar, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AsyncCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, ar, callback, object);
}
// Autogenerated method: System.AsyncCallback.EndInvoke
void System::AsyncCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AsyncCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Attribute.InternalGetCustomAttributes
::ArrayWrapper<System::Attribute*> System::Attribute::InternalGetCustomAttributes(System::Reflection::PropertyInfo* element, System::Type* type, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::InternalGetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalGetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<System::Attribute*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, type, inherit);
}
// Autogenerated method: System.Attribute.InternalGetCustomAttributes
::ArrayWrapper<System::Attribute*> System::Attribute::InternalGetCustomAttributes(System::Reflection::EventInfo* element, System::Type* type, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::InternalGetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalGetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<System::Attribute*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, type, inherit);
}
// Autogenerated method: System.Attribute.InternalParamGetCustomAttributes
::ArrayWrapper<System::Attribute*> System::Attribute::InternalParamGetCustomAttributes(System::Reflection::ParameterInfo* parameter, System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::InternalParamGetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalParamGetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<System::Attribute*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parameter, attributeType, inherit);
}
// Autogenerated method: System.Attribute.InternalIsDefined
bool System::Attribute::InternalIsDefined(System::Reflection::PropertyInfo* element, System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::InternalIsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalIsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.InternalIsDefined
bool System::Attribute::InternalIsDefined(System::Reflection::EventInfo* element, System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::InternalIsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalIsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayWrapper<System::Attribute*> System::Attribute::GetCustomAttributes(System::Reflection::MemberInfo* element, System::Type* type, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<System::Attribute*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, type, inherit);
}
// Autogenerated method: System.Attribute.IsDefined
bool System::Attribute::IsDefined(System::Reflection::MemberInfo* element, System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::IsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Attribute.IsDefined
bool System::Attribute::IsDefined(System::Reflection::MemberInfo* element, System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::IsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttribute
System::Attribute* System::Attribute::GetCustomAttribute(System::Reflection::MemberInfo* element, System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Attribute*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Attribute.GetCustomAttribute
System::Attribute* System::Attribute::GetCustomAttribute(System::Reflection::MemberInfo* element, System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<System::Attribute*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayWrapper<System::Attribute*> System::Attribute::GetCustomAttributes(System::Reflection::ParameterInfo* element, System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<System::Attribute*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayWrapper<System::Attribute*> System::Attribute::GetCustomAttributes(System::Reflection::Assembly* element, System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<System::Attribute*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayWrapper<System::Attribute*> System::Attribute::GetCustomAttributes(System::Reflection::Assembly* element, System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<System::Attribute*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttribute
System::Attribute* System::Attribute::GetCustomAttribute(System::Reflection::Assembly* element, System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Attribute*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Attribute.GetCustomAttribute
System::Attribute* System::Attribute::GetCustomAttribute(System::Reflection::Assembly* element, System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<System::Attribute*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.AreFieldValuesEqual
bool System::Attribute::AreFieldValuesEqual(::Il2CppObject* thisValue, ::Il2CppObject* thatValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::AreFieldValuesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "AreFieldValuesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisValue), ::il2cpp_utils::ExtractType(thatValue)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thisValue, thatValue);
}
// Autogenerated method: System.Attribute.Equals
bool System::Attribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: System.Attribute.GetHashCode
int System::Attribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Attribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AttributeTargets
#include "System/AttributeTargets.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Assembly
System::AttributeTargets System::AttributeTargets::_get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Assembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Assembly"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Assembly
void System::AttributeTargets::_set_Assembly(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Assembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Assembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Module
System::AttributeTargets System::AttributeTargets::_get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Module");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Module"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Module
void System::AttributeTargets::_set_Module(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Module");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Module", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Class
System::AttributeTargets System::AttributeTargets::_get_Class() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Class");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Class"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Class
void System::AttributeTargets::_set_Class(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Class");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Class", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Struct
System::AttributeTargets System::AttributeTargets::_get_Struct() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Struct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Struct"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Struct
void System::AttributeTargets::_set_Struct(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Struct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Struct", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Enum
System::AttributeTargets System::AttributeTargets::_get_Enum() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Enum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Enum"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Enum
void System::AttributeTargets::_set_Enum(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Enum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Enum", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Constructor
System::AttributeTargets System::AttributeTargets::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Constructor
void System::AttributeTargets::_set_Constructor(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Constructor", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Method
System::AttributeTargets System::AttributeTargets::_get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Method"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Method
void System::AttributeTargets::_set_Method(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Method", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Property
System::AttributeTargets System::AttributeTargets::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Property"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Property
void System::AttributeTargets::_set_Property(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Field
System::AttributeTargets System::AttributeTargets::_get_Field() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Field");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Field"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Field
void System::AttributeTargets::_set_Field(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Field");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Field", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Event
System::AttributeTargets System::AttributeTargets::_get_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Event"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Event
void System::AttributeTargets::_set_Event(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Event", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Interface
System::AttributeTargets System::AttributeTargets::_get_Interface() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Interface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Interface"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Interface
void System::AttributeTargets::_set_Interface(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Interface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Interface", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Parameter
System::AttributeTargets System::AttributeTargets::_get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Parameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Parameter"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Parameter
void System::AttributeTargets::_set_Parameter(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Parameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Parameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Delegate
System::AttributeTargets System::AttributeTargets::_get_Delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_Delegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "Delegate"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Delegate
void System::AttributeTargets::_set_Delegate(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_Delegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Delegate", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets ReturnValue
System::AttributeTargets System::AttributeTargets::_get_ReturnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_ReturnValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "ReturnValue"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets ReturnValue
void System::AttributeTargets::_set_ReturnValue(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_ReturnValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "ReturnValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets GenericParameter
System::AttributeTargets System::AttributeTargets::_get_GenericParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_GenericParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "GenericParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets GenericParameter
void System::AttributeTargets::_set_GenericParameter(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_GenericParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "GenericParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets All
System::AttributeTargets System::AttributeTargets::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeTargets>("System", "AttributeTargets", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets All
void System::AttributeTargets::_set_All(System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::AttributeTargets::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeTargets::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AttributeUsageAttribute
#include "System/AttributeUsageAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.AttributeUsageAttribute Default
System::AttributeUsageAttribute* System::AttributeUsageAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AttributeUsageAttribute*>("System", "AttributeUsageAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static System.AttributeUsageAttribute Default
void System::AttributeUsageAttribute::_set_Default(System::AttributeUsageAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeUsageAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: System.AttributeTargets m_attributeTarget
System::AttributeTargets& System::AttributeUsageAttribute::dyn_m_attributeTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::dyn_m_attributeTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_attributeTarget"))->offset;
  return *reinterpret_cast<System::AttributeTargets*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_allowMultiple
bool& System::AttributeUsageAttribute::dyn_m_allowMultiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::dyn_m_allowMultiple");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowMultiple"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_inherited
bool& System::AttributeUsageAttribute::dyn_m_inherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::dyn_m_inherited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inherited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.AttributeUsageAttribute.get_AllowMultiple
bool System::AttributeUsageAttribute::get_AllowMultiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::get_AllowMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.AttributeUsageAttribute.set_AllowMultiple
void System::AttributeUsageAttribute::set_AllowMultiple(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::set_AllowMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.AttributeUsageAttribute.get_Inherited
bool System::AttributeUsageAttribute::get_Inherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::get_Inherited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inherited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.AttributeUsageAttribute.set_Inherited
void System::AttributeUsageAttribute::set_Inherited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::set_Inherited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inherited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.AttributeUsageAttribute..cctor
void System::AttributeUsageAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AttributeUsageAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AttributeUsageAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.BadImageFormatException
#include "System/BadImageFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _fileName
::Il2CppString*& System::BadImageFormatException::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BadImageFormatException::dyn__fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fusionLog
::Il2CppString*& System::BadImageFormatException::dyn__fusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BadImageFormatException::dyn__fusionLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionLog"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.BadImageFormatException.get_FusionLog
::Il2CppString* System::BadImageFormatException::get_FusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BadImageFormatException::get_FusionLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FusionLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.SetMessageField
void System::BadImageFormatException::SetMessageField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BadImageFormatException::SetMessageField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMessageField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.get_Message
::Il2CppString* System::BadImageFormatException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BadImageFormatException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.ToString
::Il2CppString* System::BadImageFormatException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BadImageFormatException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.GetObjectData
void System::BadImageFormatException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BadImageFormatException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.BitConverter
#include "System/BitConverter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsLittleEndian
bool System::BitConverter::_get_IsLittleEndian() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::_get_IsLittleEndian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "BitConverter", "IsLittleEndian"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsLittleEndian
void System::BitConverter::_set_IsLittleEndian(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::_set_IsLittleEndian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "BitConverter", "IsLittleEndian", value));
}
// Autogenerated method: System.BitConverter..cctor
void System::BitConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.BitConverter.AmILittleEndian
bool System::BitConverter::AmILittleEndian() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::AmILittleEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "AmILittleEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayWrapper<uint8_t> System::BitConverter::GetBytes(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<uint8_t>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayWrapper<uint8_t> System::BitConverter::GetBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<uint8_t>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayWrapper<uint8_t> System::BitConverter::GetBytes(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<uint8_t>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayWrapper<uint8_t> System::BitConverter::GetBytes(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<uint8_t>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayWrapper<uint8_t> System::BitConverter::GetBytes(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayWrapper<uint8_t>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.ToChar
::Il2CppChar System::BitConverter::ToChar(::ArrayWrapper<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToInt16
int16_t System::BitConverter::ToInt16(::ArrayWrapper<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToInt32
int System::BitConverter::ToInt32(::ArrayWrapper<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToInt64
int64_t System::BitConverter::ToInt64(::ArrayWrapper<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToUInt16
uint16_t System::BitConverter::ToUInt16(::ArrayWrapper<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToUInt32
uint System::BitConverter::ToUInt32(::ArrayWrapper<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToUInt64
uint64_t System::BitConverter::ToUInt64(::ArrayWrapper<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToSingle
float System::BitConverter::ToSingle(::ArrayWrapper<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToDouble
double System::BitConverter::ToDouble(::ArrayWrapper<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.GetHexValue
::Il2CppChar System::BitConverter::GetHexValue(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::GetHexValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetHexValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i);
}
// Autogenerated method: System.BitConverter.ToString
::Il2CppString* System::BitConverter::ToString(::ArrayWrapper<uint8_t> value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.BitConverter.ToString
::Il2CppString* System::BitConverter::ToString(::ArrayWrapper<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.DoubleToInt64Bits
int64_t System::BitConverter::DoubleToInt64Bits(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::DoubleToInt64Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "DoubleToInt64Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.Int64BitsToDouble
double System::BitConverter::Int64BitsToDouble(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::BitConverter::Int64BitsToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "Int64BitsToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Boolean
#include "System/Boolean.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 True
int System::Boolean::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Boolean", "True"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 True
void System::Boolean::_set_True(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "True", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 False
int System::Boolean::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Boolean", "False"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 False
void System::Boolean::_set_False(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "False", value));
}
// Autogenerated static field getter
// Get static field: static System.String TrueLiteral
::Il2CppString* System::Boolean::_get_TrueLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_get_TrueLiteral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Boolean", "TrueLiteral"));
}
// Autogenerated static field setter
// Set static field: static System.String TrueLiteral
void System::Boolean::_set_TrueLiteral(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_set_TrueLiteral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "TrueLiteral", value));
}
// Autogenerated static field getter
// Get static field: static System.String FalseLiteral
::Il2CppString* System::Boolean::_get_FalseLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_get_FalseLiteral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Boolean", "FalseLiteral"));
}
// Autogenerated static field setter
// Set static field: static System.String FalseLiteral
void System::Boolean::_set_FalseLiteral(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_set_FalseLiteral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "FalseLiteral", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String TrueString
::Il2CppString* System::Boolean::_get_TrueString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_get_TrueString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Boolean", "TrueString"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String TrueString
void System::Boolean::_set_TrueString(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_set_TrueString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "TrueString", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String FalseString
::Il2CppString* System::Boolean::_get_FalseString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_get_FalseString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Boolean", "FalseString"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String FalseString
void System::Boolean::_set_FalseString(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::_set_FalseString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "FalseString", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_value
bool& System::Boolean::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Boolean..cctor
void System::Boolean::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Boolean.ToString
::Il2CppString* System::Boolean::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.Equals
bool System::Boolean::Equals(bool obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Boolean.CompareTo
int System::Boolean::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Boolean.CompareTo
int System::Boolean::CompareTo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Boolean.Parse
bool System::Boolean::Parse(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Boolean.TryParse
bool System::Boolean::TryParse(::Il2CppString* value, ByRef<bool> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, byref(result));
}
// Autogenerated method: System.Boolean.TrimWhiteSpaceAndNull
::Il2CppString* System::Boolean::TrimWhiteSpaceAndNull(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::TrimWhiteSpaceAndNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", "TrimWhiteSpaceAndNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Boolean.GetTypeCode
System::TypeCode System::Boolean::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToBoolean
bool System::Boolean::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToChar
::Il2CppChar System::Boolean::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToSByte
int8_t System::Boolean::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToByte
uint8_t System::Boolean::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToInt16
int16_t System::Boolean::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToUInt16
uint16_t System::Boolean::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToInt32
int System::Boolean::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToUInt32
uint System::Boolean::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToInt64
int64_t System::Boolean::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToUInt64
uint64_t System::Boolean::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToSingle
float System::Boolean::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToDouble
double System::Boolean::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToDecimal
System::Decimal System::Boolean::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToDateTime
System::DateTime System::Boolean::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToType
::Il2CppObject* System::Boolean::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated method: System.Boolean.GetHashCode
int System::Boolean::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Boolean.ToString
::Il2CppString* System::Boolean::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Boolean.Equals
bool System::Boolean::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Boolean::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffer
#include "System/Buffer.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffer.InternalBlockCopy
bool System::Buffer::InternalBlockCopy(System::Array* src, int srcOffsetBytes, System::Array* dst, int dstOffsetBytes, int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::InternalBlockCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "InternalBlockCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOffsetBytes), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOffsetBytes), ::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, srcOffsetBytes, dst, dstOffsetBytes, byteCount);
}
// Autogenerated method: System.Buffer.IndexOfByte
int System::Buffer::IndexOfByte(uint8_t* src, uint8_t value, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::IndexOfByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "IndexOfByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, value, index, count);
}
// Autogenerated method: System.Buffer._ByteLength
int System::Buffer::_ByteLength(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::_ByteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "_ByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Buffer.ZeroMemory
void System::Buffer::ZeroMemory(uint8_t* src, int64_t len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::ZeroMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "ZeroMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, len);
}
// Autogenerated method: System.Buffer.Memcpy
void System::Buffer::Memcpy(::ArrayWrapper<uint8_t> dest, int destIndex, uint8_t* src, int srcIndex, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::Memcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "Memcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destIndex), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, destIndex, src, srcIndex, len);
}
// Autogenerated method: System.Buffer.Memcpy
void System::Buffer::Memcpy(uint8_t* pDest, int destIndex, ::ArrayWrapper<uint8_t> src, int srcIndex, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::Memcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "Memcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDest), ::il2cpp_utils::ExtractType(destIndex), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDest, destIndex, src, srcIndex, len);
}
// Autogenerated method: System.Buffer.ByteLength
int System::Buffer::ByteLength(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::ByteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "ByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Buffer.BlockCopy
void System::Buffer::BlockCopy(System::Array* src, int srcOffset, System::Array* dst, int dstOffset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::BlockCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "BlockCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOffset), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOffset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, srcOffset, dst, dstOffset, count);
}
// Autogenerated method: System.Buffer.memcpy4
void System::Buffer::memcpy4(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::memcpy4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "memcpy4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.Buffer.memcpy2
void System::Buffer::memcpy2(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::memcpy2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "memcpy2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.Buffer.memcpy1
void System::Buffer::memcpy1(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::memcpy1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "memcpy1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.Buffer.Memcpy
void System::Buffer::Memcpy(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Buffer::Memcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Buffer", "Memcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Byte
#include "System/Byte.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte MaxValue
uint8_t System::Byte::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System", "Byte", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MaxValue
void System::Byte::_set_MaxValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Byte", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MinValue
uint8_t System::Byte::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System", "Byte", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MinValue
void System::Byte::_set_MinValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Byte", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_value
uint8_t& System::Byte::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Byte.CompareTo
int System::Byte::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Byte.CompareTo
int System::Byte::CompareTo(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Byte.Equals
bool System::Byte::Equals(uint8_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Byte.Parse
uint8_t System::Byte::Parse(::Il2CppString* s, System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style);
}
// Autogenerated method: System.Byte.Parse
uint8_t System::Byte::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Byte.Parse
uint8_t System::Byte::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Byte.Parse
uint8_t System::Byte::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Byte.TryParse
bool System::Byte::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider, ByRef<uint8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.Byte.TryParse
bool System::Byte::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, ByRef<uint8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, byref(result));
}
// Autogenerated method: System.Byte.ToString
::Il2CppString* System::Byte::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.Byte.ToString
::Il2CppString* System::Byte::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.ToString
::Il2CppString* System::Byte::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.Byte.GetTypeCode
System::TypeCode System::Byte::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.Byte.System.IConvertible.ToBoolean
bool System::Byte::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToChar
::Il2CppChar System::Byte::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToSByte
int8_t System::Byte::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToByte
uint8_t System::Byte::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToInt16
int16_t System::Byte::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToUInt16
uint16_t System::Byte::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToInt32
int System::Byte::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToUInt32
uint System::Byte::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToInt64
int64_t System::Byte::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToUInt64
uint64_t System::Byte::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToSingle
float System::Byte::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToDouble
double System::Byte::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToDecimal
System::Decimal System::Byte::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToDateTime
System::DateTime System::Byte::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToType
::Il2CppObject* System::Byte::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated method: System.Byte.Equals
bool System::Byte::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Byte.GetHashCode
int System::Byte::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Byte.ToString
::Il2CppString* System::Byte::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Byte::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.CannotUnloadAppDomainException
#include "System/CannotUnloadAppDomainException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Char
#include "System/Char.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Char MaxValue
::Il2CppChar System::Char::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System", "Char", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Char MaxValue
void System::Char::_set_MaxValue(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Char MinValue
::Il2CppChar System::Char::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System", "Char", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Char MinValue
void System::Char::_set_MinValue(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] categoryForLatin1
::ArrayWrapper<uint8_t> System::Char::_get_categoryForLatin1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_get_categoryForLatin1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayWrapper<uint8_t>>("System", "Char", "categoryForLatin1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] categoryForLatin1
void System::Char::_set_categoryForLatin1(::ArrayWrapper<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_set_categoryForLatin1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "categoryForLatin1", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 UNICODE_PLANE00_END
int System::Char::_get_UNICODE_PLANE00_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_get_UNICODE_PLANE00_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "UNICODE_PLANE00_END"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 UNICODE_PLANE00_END
void System::Char::_set_UNICODE_PLANE00_END(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_set_UNICODE_PLANE00_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "UNICODE_PLANE00_END", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 UNICODE_PLANE01_START
int System::Char::_get_UNICODE_PLANE01_START() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_get_UNICODE_PLANE01_START");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "UNICODE_PLANE01_START"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 UNICODE_PLANE01_START
void System::Char::_set_UNICODE_PLANE01_START(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_set_UNICODE_PLANE01_START");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "UNICODE_PLANE01_START", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 UNICODE_PLANE16_END
int System::Char::_get_UNICODE_PLANE16_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_get_UNICODE_PLANE16_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "UNICODE_PLANE16_END"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 UNICODE_PLANE16_END
void System::Char::_set_UNICODE_PLANE16_END(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_set_UNICODE_PLANE16_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "UNICODE_PLANE16_END", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 HIGH_SURROGATE_START
int System::Char::_get_HIGH_SURROGATE_START() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_get_HIGH_SURROGATE_START");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "HIGH_SURROGATE_START"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 HIGH_SURROGATE_START
void System::Char::_set_HIGH_SURROGATE_START(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_set_HIGH_SURROGATE_START");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "HIGH_SURROGATE_START", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 LOW_SURROGATE_END
int System::Char::_get_LOW_SURROGATE_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_get_LOW_SURROGATE_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "LOW_SURROGATE_END"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 LOW_SURROGATE_END
void System::Char::_set_LOW_SURROGATE_END(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::_set_LOW_SURROGATE_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "LOW_SURROGATE_END", value));
}
// Autogenerated instance field getter
// Get instance field: System.Char m_value
::Il2CppChar& System::Char::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Char..cctor
void System::Char::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Char.IsLatin1
bool System::Char::IsLatin1(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsLatin1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLatin1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Char.IsAscii
bool System::Char::IsAscii(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Char.GetLatin1UnicodeCategory
System::Globalization::UnicodeCategory System::Char::GetLatin1UnicodeCategory(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::GetLatin1UnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "GetLatin1UnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Char.Equals
bool System::Char::Equals(::Il2CppChar obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Char.CompareTo
int System::Char::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Char.CompareTo
int System::Char::CompareTo(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Char.ToString
::Il2CppString* System::Char::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.ToString
::Il2CppString* System::Char::ToString(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.Parse
::Il2CppChar System::Char::Parse(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Char.IsDigit
bool System::Char::IsDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.CheckLetter
bool System::Char::CheckLetter(System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::CheckLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsLetter
bool System::Char::IsLetter(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsWhiteSpaceLatin1
bool System::Char::IsWhiteSpaceLatin1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsWhiteSpaceLatin1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsWhiteSpaceLatin1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsWhiteSpace
bool System::Char::IsWhiteSpace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsUpper
bool System::Char::IsUpper(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsLower
bool System::Char::IsLower(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.CheckPunctuation
bool System::Char::CheckPunctuation(System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::CheckPunctuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckPunctuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsPunctuation
bool System::Char::IsPunctuation(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsPunctuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsPunctuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.CheckLetterOrDigit
bool System::Char::CheckLetterOrDigit(System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::CheckLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckLetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsLetterOrDigit
bool System::Char::IsLetterOrDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.ToUpper
::Il2CppChar System::Char::ToUpper(::Il2CppChar c, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c, culture);
}
// Autogenerated method: System.Char.ToUpper
::Il2CppChar System::Char::ToUpper(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.ToUpperInvariant
::Il2CppChar System::Char::ToUpperInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ToUpperInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToUpperInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.ToLower
::Il2CppChar System::Char::ToLower(::Il2CppChar c, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c, culture);
}
// Autogenerated method: System.Char.ToLower
::Il2CppChar System::Char::ToLower(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.ToLowerInvariant
::Il2CppChar System::Char::ToLowerInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ToLowerInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToLowerInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.GetTypeCode
System::TypeCode System::Char::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.Char.System.IConvertible.ToBoolean
bool System::Char::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToChar
::Il2CppChar System::Char::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToSByte
int8_t System::Char::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToByte
uint8_t System::Char::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToInt16
int16_t System::Char::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToUInt16
uint16_t System::Char::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToInt32
int System::Char::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToUInt32
uint System::Char::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToInt64
int64_t System::Char::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToUInt64
uint64_t System::Char::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToSingle
float System::Char::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToDouble
double System::Char::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToDecimal
System::Decimal System::Char::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToDateTime
System::DateTime System::Char::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToType
::Il2CppObject* System::Char::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated method: System.Char.IsControl
bool System::Char::IsControl(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsLetterOrDigit
bool System::Char::IsLetterOrDigit(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.CheckNumber
bool System::Char::CheckNumber(System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::CheckNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsNumber
bool System::Char::IsNumber(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsNumber
bool System::Char::IsNumber(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.CheckSeparator
bool System::Char::CheckSeparator(System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::CheckSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsSeparatorLatin1
bool System::Char::IsSeparatorLatin1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsSeparatorLatin1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSeparatorLatin1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsSeparator
bool System::Char::IsSeparator(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsSurrogate
bool System::Char::IsSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsSurrogate
bool System::Char::IsSurrogate(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.IsWhiteSpace
bool System::Char::IsWhiteSpace(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.GetUnicodeCategory
System::Globalization::UnicodeCategory System::Char::GetUnicodeCategory(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.GetUnicodeCategory
System::Globalization::UnicodeCategory System::Char::GetUnicodeCategory(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.IsHighSurrogate
bool System::Char::IsHighSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsHighSurrogate
bool System::Char::IsHighSurrogate(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.IsLowSurrogate
bool System::Char::IsLowSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsSurrogatePair
bool System::Char::IsSurrogatePair(::Il2CppChar highSurrogate, ::Il2CppChar lowSurrogate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::IsSurrogatePair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSurrogatePair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurrogate), ::il2cpp_utils::ExtractType(lowSurrogate)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, highSurrogate, lowSurrogate);
}
// Autogenerated method: System.Char.ConvertFromUtf32
::Il2CppString* System::Char::ConvertFromUtf32(int utf32) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ConvertFromUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ConvertFromUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(utf32)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, utf32);
}
// Autogenerated method: System.Char.ConvertToUtf32
int System::Char::ConvertToUtf32(::Il2CppChar highSurrogate, ::Il2CppChar lowSurrogate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ConvertToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ConvertToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurrogate), ::il2cpp_utils::ExtractType(lowSurrogate)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, highSurrogate, lowSurrogate);
}
// Autogenerated method: System.Char.GetHashCode
int System::Char::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Char.Equals
bool System::Char::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Char.ToString
::Il2CppString* System::Char::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Char::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.CharEnumerator
#include "System/CharEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String str
::Il2CppString*& System::CharEnumerator::dyn_str() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CharEnumerator::dyn_str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "str"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
int& System::CharEnumerator::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CharEnumerator::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char currentElement
::Il2CppChar& System::CharEnumerator::dyn_currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CharEnumerator::dyn_currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElement"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.CharEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::CharEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CharEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.get_Current
::Il2CppChar System::CharEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CharEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.Clone
::Il2CppObject* System::CharEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CharEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.MoveNext
bool System::CharEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CharEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.Dispose
void System::CharEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CharEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.Reset
void System::CharEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CharEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.CLSCompliantAttribute
#include "System/CLSCompliantAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_compliant
bool& System::CLSCompliantAttribute::dyn_m_compliant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CLSCompliantAttribute::dyn_m_compliant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_compliant"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ConsoleCancelEventHandler
#include "System/ConsoleCancelEventHandler.hpp"
// Including type: System.ConsoleCancelEventArgs
#include "System/ConsoleCancelEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ConsoleCancelEventHandler.Invoke
void System::ConsoleCancelEventHandler::Invoke(::Il2CppObject* sender, System::ConsoleCancelEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleCancelEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sender, e);
}
// Autogenerated method: System.ConsoleCancelEventHandler.BeginInvoke
System::IAsyncResult* System::ConsoleCancelEventHandler::BeginInvoke(::Il2CppObject* sender, System::ConsoleCancelEventArgs* e, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleCancelEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ConsoleCancelEventHandler.EndInvoke
void System::ConsoleCancelEventHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleCancelEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ConsoleCancelEventArgs
#include "System/ConsoleCancelEventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ConsoleSpecialKey _type
System::ConsoleSpecialKey& System::ConsoleCancelEventArgs::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleCancelEventArgs::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<System::ConsoleSpecialKey*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cancel
bool& System::ConsoleCancelEventArgs::dyn__cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleCancelEventArgs::dyn__cancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ConsoleCancelEventArgs.get_Cancel
bool System::ConsoleCancelEventArgs::get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleCancelEventArgs::get_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ConsoleColor
#include "System/ConsoleColor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor Black
System::ConsoleColor System::ConsoleColor::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "Black"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor Black
void System::ConsoleColor::_set_Black(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "Black", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor DarkBlue
System::ConsoleColor System::ConsoleColor::_get_DarkBlue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_DarkBlue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "DarkBlue"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor DarkBlue
void System::ConsoleColor::_set_DarkBlue(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_DarkBlue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "DarkBlue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor DarkGreen
System::ConsoleColor System::ConsoleColor::_get_DarkGreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_DarkGreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "DarkGreen"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor DarkGreen
void System::ConsoleColor::_set_DarkGreen(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_DarkGreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "DarkGreen", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor DarkCyan
System::ConsoleColor System::ConsoleColor::_get_DarkCyan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_DarkCyan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "DarkCyan"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor DarkCyan
void System::ConsoleColor::_set_DarkCyan(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_DarkCyan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "DarkCyan", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor DarkRed
System::ConsoleColor System::ConsoleColor::_get_DarkRed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_DarkRed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "DarkRed"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor DarkRed
void System::ConsoleColor::_set_DarkRed(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_DarkRed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "DarkRed", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor DarkMagenta
System::ConsoleColor System::ConsoleColor::_get_DarkMagenta() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_DarkMagenta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "DarkMagenta"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor DarkMagenta
void System::ConsoleColor::_set_DarkMagenta(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_DarkMagenta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "DarkMagenta", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor DarkYellow
System::ConsoleColor System::ConsoleColor::_get_DarkYellow() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_DarkYellow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "DarkYellow"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor DarkYellow
void System::ConsoleColor::_set_DarkYellow(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_DarkYellow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "DarkYellow", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor Gray
System::ConsoleColor System::ConsoleColor::_get_Gray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_Gray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "Gray"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor Gray
void System::ConsoleColor::_set_Gray(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_Gray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "Gray", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor DarkGray
System::ConsoleColor System::ConsoleColor::_get_DarkGray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_DarkGray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "DarkGray"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor DarkGray
void System::ConsoleColor::_set_DarkGray(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_DarkGray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "DarkGray", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor Blue
System::ConsoleColor System::ConsoleColor::_get_Blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_Blue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "Blue"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor Blue
void System::ConsoleColor::_set_Blue(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_Blue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "Blue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor Green
System::ConsoleColor System::ConsoleColor::_get_Green() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_Green");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "Green"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor Green
void System::ConsoleColor::_set_Green(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_Green");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "Green", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor Cyan
System::ConsoleColor System::ConsoleColor::_get_Cyan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_Cyan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "Cyan"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor Cyan
void System::ConsoleColor::_set_Cyan(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_Cyan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "Cyan", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor Red
System::ConsoleColor System::ConsoleColor::_get_Red() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_Red");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "Red"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor Red
void System::ConsoleColor::_set_Red(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_Red");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "Red", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor Magenta
System::ConsoleColor System::ConsoleColor::_get_Magenta() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_Magenta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "Magenta"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor Magenta
void System::ConsoleColor::_set_Magenta(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_Magenta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "Magenta", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor Yellow
System::ConsoleColor System::ConsoleColor::_get_Yellow() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_Yellow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "Yellow"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor Yellow
void System::ConsoleColor::_set_Yellow(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_Yellow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "Yellow", value));
}
// Autogenerated static field getter
// Get static field: static public System.ConsoleColor White
System::ConsoleColor System::ConsoleColor::_get_White() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_get_White");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleColor>("System", "ConsoleColor", "White"));
}
// Autogenerated static field setter
// Set static field: static public System.ConsoleColor White
void System::ConsoleColor::_set_White(System::ConsoleColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::_set_White");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleColor", "White", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::ConsoleColor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleColor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
