// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IMediaAsyncLoader
#include "GlobalNamespace/IMediaAsyncLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMediaAsyncLoader.LoadAudioClipFromFilePathAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::IMediaAsyncLoader::LoadAudioClipFromFilePathAsync(::Il2CppString* filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMediaAsyncLoader::LoadAudioClipFromFilePathAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioClipFromFilePathAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, filePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ISpriteAsyncLoader
#include "GlobalNamespace/ISpriteAsyncLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISpriteAsyncLoader.LoadSpriteAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::ISpriteAsyncLoader::LoadSpriteAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISpriteAsyncLoader::LoadSpriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InternetConnectionChecker
#include "GlobalNamespace/InternetConnectionChecker.hpp"
// Including type: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0
#include "GlobalNamespace/InternetConnectionChecker_-IsConnectedToInternetAsync-d__0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InternetConnectionChecker.IsConnectedToInternetAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::InternetConnectionChecker::IsConnectedToInternetAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InternetConnectionChecker::IsConnectedToInternetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "InternetConnectionChecker", "IsConnectedToInternetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0
#include "GlobalNamespace/InternetConnectionChecker_-IsConnectedToInternetAsync-d__0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0.MoveNext
void GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0.SetStateMachine
void GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader
#include "GlobalNamespace/MediaAsyncLoader.hpp"
// Including type: MediaAsyncLoader/<LoadWebpage>d__0
#include "GlobalNamespace/MediaAsyncLoader_-LoadWebpage-d__0.hpp"
// Including type: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1
#include "GlobalNamespace/MediaAsyncLoader_-LoadAudioClipFromFilePathAsync-d__1.hpp"
// Including type: MediaAsyncLoader/<LoadTextureAsync>d__2
#include "GlobalNamespace/MediaAsyncLoader_-LoadTextureAsync-d__2.hpp"
// Including type: MediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/MediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MediaAsyncLoader.LoadWebpage
System::Threading::Tasks::Task_1<::Il2CppString*>* GlobalNamespace::MediaAsyncLoader::LoadWebpage(::Il2CppString* uri, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::LoadWebpage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadWebpage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.LoadAudioClipFromFilePathAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::MediaAsyncLoader::LoadAudioClipFromFilePathAsync(::Il2CppString* filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::LoadAudioClipFromFilePathAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioClipFromFilePathAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: MediaAsyncLoader.LoadTextureAsync
System::Threading::Tasks::Task_1<UnityEngine::Texture2D*>* GlobalNamespace::MediaAsyncLoader::LoadTextureAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::LoadTextureAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadTextureAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Texture2D*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.LoadSpriteAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::MediaAsyncLoader::LoadSpriteAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::LoadSpriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.Log
void GlobalNamespace::MediaAsyncLoader::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader/<LoadWebpage>d__0
#include "GlobalNamespace/MediaAsyncLoader_-LoadWebpage-d__0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Il2CppString*>& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String uri
::Il2CppString*& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_uri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadWebpage>d__0.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadWebpage>d__0.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1
#include "GlobalNamespace/MediaAsyncLoader_-LoadAudioClipFromFilePathAsync-d__1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.AudioClip> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*>& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String filePath
::Il2CppString*& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_filePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader/<LoadTextureAsync>d__2
#include "GlobalNamespace/MediaAsyncLoader_-LoadTextureAsync-d__2.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Texture2D> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Texture2D*>& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
::Il2CppString*& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadTextureAsync>d__2.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadTextureAsync>d__2.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/MediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
::Il2CppString*& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadSpriteAsync>d__3.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadSpriteAsync>d__3.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CachedMediaAsyncLoader
#include "GlobalNamespace/CachedMediaAsyncLoader.hpp"
// Including type: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: AsyncCachedLoader`2
#include "GlobalNamespace/AsyncCachedLoader_2.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxNumberOfSpriteCachedElements
int& GlobalNamespace::CachedMediaAsyncLoader::dyn__maxNumberOfSpriteCachedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::dyn__maxNumberOfSpriteCachedElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxNumberOfSpriteCachedElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AsyncCachedLoader`2<System.String,UnityEngine.Sprite> _spriteAsyncCachedLoader
GlobalNamespace::AsyncCachedLoader_2<::Il2CppString*, UnityEngine::Sprite*>*& GlobalNamespace::CachedMediaAsyncLoader::dyn__spriteAsyncCachedLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::dyn__spriteAsyncCachedLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteAsyncCachedLoader"))->offset;
  return *reinterpret_cast<GlobalNamespace::AsyncCachedLoader_2<::Il2CppString*, UnityEngine::Sprite*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CachedMediaAsyncLoader.ClearCache
void GlobalNamespace::CachedMediaAsyncLoader::ClearCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::ClearCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CachedMediaAsyncLoader.LoadSpriteAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::CachedMediaAsyncLoader::LoadSpriteAsync(::Il2CppString* path, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::LoadSpriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CachedMediaAsyncLoader <>4__this
GlobalNamespace::CachedMediaAsyncLoader*& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::CachedMediaAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
::Il2CppString*& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3.MoveNext
void GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3.SetStateMachine
void GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoveAndRotateWithMainCamera
#include "GlobalNamespace/MoveAndRotateWithMainCamera.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MainCamera _mainCamera
GlobalNamespace::MainCamera*& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveAndRotateWithMainCamera::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotationOffset
UnityEngine::Quaternion& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveAndRotateWithMainCamera::dyn__rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
UnityEngine::Vector3& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveAndRotateWithMainCamera::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform*& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveAndRotateWithMainCamera::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoveAndRotateWithMainCamera.Awake
void GlobalNamespace::MoveAndRotateWithMainCamera::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveAndRotateWithMainCamera::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoveAndRotateWithMainCamera.LateUpdate
void GlobalNamespace::MoveAndRotateWithMainCamera::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveAndRotateWithMainCamera::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayObjectsRecorderController
#include "GlobalNamespace/GameplayObjectsRecorderController.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: PosesRecorder
#include "GlobalNamespace/PosesRecorder.hpp"
// Including type: PosesPlayback
#include "GlobalNamespace/PosesPlayback.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kDefaultRecordingFileName
::Il2CppString* GlobalNamespace::GameplayObjectsRecorderController::_get_kDefaultRecordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::_get_kDefaultRecordingFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "GameplayObjectsRecorderController", "kDefaultRecordingFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultRecordingFileName
void GlobalNamespace::GameplayObjectsRecorderController::_set_kDefaultRecordingFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::_set_kDefaultRecordingFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayObjectsRecorderController", "kDefaultRecordingFileName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _recordingFileName
::Il2CppString*& GlobalNamespace::GameplayObjectsRecorderController::dyn__recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::dyn__recordingFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFileName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayObjectsRecorderController/Mode _mode
GlobalNamespace::GameplayObjectsRecorderController::Mode& GlobalNamespace::GameplayObjectsRecorderController::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayObjectsRecorderController::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PoseObject[] _poseObjects
::ArrayW<GlobalNamespace::PoseObject*>& GlobalNamespace::GameplayObjectsRecorderController::dyn__poseObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::dyn__poseObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseObjects"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::PoseObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::GameplayObjectsRecorderController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecorder _recorder
GlobalNamespace::PosesRecorder*& GlobalNamespace::GameplayObjectsRecorderController::dyn__recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::dyn__recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorder"))->offset;
  return *reinterpret_cast<GlobalNamespace::PosesRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesPlayback _playback
GlobalNamespace::PosesPlayback*& GlobalNamespace::GameplayObjectsRecorderController::dyn__playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::dyn__playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playback"))->offset;
  return *reinterpret_cast<GlobalNamespace::PosesPlayback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayObjectsRecorderController.get_recordingFileName
::Il2CppString* GlobalNamespace::GameplayObjectsRecorderController::get_recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::get_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayObjectsRecorderController.set_recordingFileName
void GlobalNamespace::GameplayObjectsRecorderController::set_recordingFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::set_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayObjectsRecorderController.get_mode
GlobalNamespace::GameplayObjectsRecorderController::Mode GlobalNamespace::GameplayObjectsRecorderController::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayObjectsRecorderController::Mode, false>(this, ___internal__method);
}
// Autogenerated method: GameplayObjectsRecorderController.set_mode
void GlobalNamespace::GameplayObjectsRecorderController::set_mode(GlobalNamespace::GameplayObjectsRecorderController::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayObjectsRecorderController.Start
void GlobalNamespace::GameplayObjectsRecorderController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayObjectsRecorderController.Update
void GlobalNamespace::GameplayObjectsRecorderController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayObjectsRecorderController.LateUpdate
void GlobalNamespace::GameplayObjectsRecorderController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayObjectsRecorderController.OnDestroy
void GlobalNamespace::GameplayObjectsRecorderController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayObjectsRecorderController/Mode
#include "GlobalNamespace/GameplayObjectsRecorderController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayObjectsRecorderController/Mode Record
GlobalNamespace::GameplayObjectsRecorderController::Mode GlobalNamespace::GameplayObjectsRecorderController::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayObjectsRecorderController::Mode>("", "GameplayObjectsRecorderController/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public GameplayObjectsRecorderController/Mode Record
void GlobalNamespace::GameplayObjectsRecorderController::Mode::_set_Record(GlobalNamespace::GameplayObjectsRecorderController::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayObjectsRecorderController/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayObjectsRecorderController/Mode Playback
GlobalNamespace::GameplayObjectsRecorderController::Mode GlobalNamespace::GameplayObjectsRecorderController::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayObjectsRecorderController::Mode>("", "GameplayObjectsRecorderController/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public GameplayObjectsRecorderController/Mode Playback
void GlobalNamespace::GameplayObjectsRecorderController::Mode::_set_Playback(GlobalNamespace::GameplayObjectsRecorderController::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayObjectsRecorderController/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayObjectsRecorderController/Mode Off
GlobalNamespace::GameplayObjectsRecorderController::Mode GlobalNamespace::GameplayObjectsRecorderController::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayObjectsRecorderController::Mode>("", "GameplayObjectsRecorderController/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public GameplayObjectsRecorderController/Mode Off
void GlobalNamespace::GameplayObjectsRecorderController::Mode::_set_Off(GlobalNamespace::GameplayObjectsRecorderController::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayObjectsRecorderController/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::GameplayObjectsRecorderController::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayObjectsRecorderController::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform*& GlobalNamespace::PoseObject::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseObject::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _id
::Il2CppString*& GlobalNamespace::PoseObject::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseObject::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoseObject.get_objectTransform
UnityEngine::Transform* GlobalNamespace::PoseObject::get_objectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseObject::get_objectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: PoseObject.set_objectTransform
void GlobalNamespace::PoseObject::set_objectTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseObject::set_objectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_objectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PoseObject.get_id
::Il2CppString* GlobalNamespace::PoseObject::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseObject::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PoseObject.set_id
void GlobalNamespace::PoseObject::set_id(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseObject::set_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesPlayback
#include "GlobalNamespace/PosesPlayback.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _transforms
::ArrayW<UnityEngine::Transform*>& GlobalNamespace::PosesPlayback::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesPlayback::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingData _data
GlobalNamespace::PosesRecordingData*& GlobalNamespace::PosesPlayback::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesPlayback::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<GlobalNamespace::PosesRecordingData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int& GlobalNamespace::PosesPlayback::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesPlayback::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesPlayback.StartPlayback
void GlobalNamespace::PosesPlayback::StartPlayback(::ArrayW<GlobalNamespace::PoseObject*> poseObjects, GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesPlayback::StartPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseObjects), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, poseObjects, data);
}
// Autogenerated method: PosesPlayback.PlaybackTick
void GlobalNamespace::PosesPlayback::PlaybackTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesPlayback::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecorder
#include "GlobalNamespace/PosesRecorder.hpp"
// Including type: PosesRecorder/<>c
#include "GlobalNamespace/PosesRecorder_--c.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _transforms
::ArrayW<UnityEngine::Transform*>& GlobalNamespace::PosesRecorder::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingData _data
GlobalNamespace::PosesRecordingData*& GlobalNamespace::PosesRecorder::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<GlobalNamespace::PosesRecordingData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecorder.StartRecording
void GlobalNamespace::PosesRecorder::StartRecording(::ArrayW<GlobalNamespace::PoseObject*> poseObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseObjects)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, poseObjects);
}
// Autogenerated method: PosesRecorder.RecordTick
void GlobalNamespace::PosesRecorder::RecordTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PosesRecorder.FinishRecording
GlobalNamespace::PosesRecordingData* GlobalNamespace::PosesRecorder::FinishRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::FinishRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PosesRecorder/<>c
#include "GlobalNamespace/PosesRecorder_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PosesRecorder/<>c <>9
GlobalNamespace::PosesRecorder::$$c* GlobalNamespace::PosesRecorder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PosesRecorder::$$c*>("", "PosesRecorder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PosesRecorder/<>c <>9
void GlobalNamespace::PosesRecorder::$$c::_set_$$9(GlobalNamespace::PosesRecorder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PosesRecorder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PoseObject,UnityEngine.Transform> <>9__2_0
System::Func_2<GlobalNamespace::PoseObject*, UnityEngine::Transform*>* GlobalNamespace::PosesRecorder::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::PoseObject*, UnityEngine::Transform*>*>("", "PosesRecorder/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PoseObject,UnityEngine.Transform> <>9__2_0
void GlobalNamespace::PosesRecorder::$$c::_set_$$9__2_0(System::Func_2<GlobalNamespace::PoseObject*, UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PosesRecorder/<>c", "<>9__2_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PoseObject,System.String> <>9__2_1
System::Func_2<GlobalNamespace::PoseObject*, ::Il2CppString*>* GlobalNamespace::PosesRecorder::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::PoseObject*, ::Il2CppString*>*>("", "PosesRecorder/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PoseObject,System.String> <>9__2_1
void GlobalNamespace::PosesRecorder::$$c::_set_$$9__2_1(System::Func_2<GlobalNamespace::PoseObject*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PosesRecorder/<>c", "<>9__2_1", value)));
}
// Autogenerated method: PosesRecorder/<>c..cctor
void GlobalNamespace::PosesRecorder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesRecorder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PosesRecorder/<>c.<StartRecording>b__2_0
UnityEngine::Transform* GlobalNamespace::PosesRecorder::$$c::$StartRecording$b__2_0(GlobalNamespace::PoseObject* ro) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::$$c::<StartRecording>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartRecording>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ro)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, ro);
}
// Autogenerated method: PosesRecorder/<>c.<StartRecording>b__2_1
::Il2CppString* GlobalNamespace::PosesRecorder::$$c::$StartRecording$b__2_1(GlobalNamespace::PoseObject* ro) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecorder::$$c::<StartRecording>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartRecording>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ro)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ro);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
// Including type: PosesRecordingData/Pose
#include "GlobalNamespace/PosesRecordingData_Pose.hpp"
// Including type: PosesRecordingData/TransformsKeyframe
#include "GlobalNamespace/PosesRecordingData_TransformsKeyframe.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] objectIds
::ArrayW<::Il2CppString*>& GlobalNamespace::PosesRecordingData::dyn_objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingData::dyn_objectIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectIds"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<PosesRecordingData/TransformsKeyframe> keyframes
System::Collections::Generic::List_1<GlobalNamespace::PosesRecordingData::TransformsKeyframe*>*& GlobalNamespace::PosesRecordingData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::PosesRecordingData::TransformsKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecordingData.AddKeyframe
void GlobalNamespace::PosesRecordingData::AddKeyframe(GlobalNamespace::PosesRecordingData::TransformsKeyframe* keyframe) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingData::AddKeyframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyframe)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyframe);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingData/Pose
#include "GlobalNamespace/PosesRecordingData_Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 pos
UnityEngine::Vector3& GlobalNamespace::PosesRecordingData::Pose::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingData::Pose::dyn_pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rot
UnityEngine::Quaternion& GlobalNamespace::PosesRecordingData::Pose::dyn_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingData::Pose::dyn_rot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecordingData/Pose..ctor
// ABORTED elsewhere.  GlobalNamespace::PosesRecordingData::Pose::Pose(UnityEngine::Vector3 pos, UnityEngine::Quaternion rot)
// Autogenerated method: PosesRecordingData/Pose.Lerp
GlobalNamespace::PosesRecordingData::Pose GlobalNamespace::PosesRecordingData::Pose::Lerp(GlobalNamespace::PosesRecordingData::Pose a, GlobalNamespace::PosesRecordingData::Pose b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingData::Pose::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesRecordingData/Pose", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PosesRecordingData::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingData/TransformsKeyframe
#include "GlobalNamespace/PosesRecordingData_TransformsKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingData/Pose[] poses
::ArrayW<GlobalNamespace::PosesRecordingData::Pose>& GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_poses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_poses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poses"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::PosesRecordingData::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
float& GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PosesRecordingSaveData
#include "GlobalNamespace/PosesRecordingSaveData.hpp"
// Including type: PosesRecordingSaveData/PoseSaveData
#include "GlobalNamespace/PosesRecordingSaveData_PoseSaveData.hpp"
// Including type: PosesRecordingSaveData/TransformsSaveKeyframe
#include "GlobalNamespace/PosesRecordingSaveData_TransformsSaveKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String[] objectIds
::ArrayW<::Il2CppString*>& GlobalNamespace::PosesRecordingSaveData::dyn_objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::dyn_objectIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectIds"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PosesRecordingSaveData/TransformsSaveKeyframe[] keyframes
::ArrayW<GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*>& GlobalNamespace::PosesRecordingSaveData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData/PoseSaveData
#include "GlobalNamespace/PosesRecordingSaveData_PoseSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single posX
float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posY
float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posZ
float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotX
float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotY
float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotZ
float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotW
float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData/TransformsSaveKeyframe
#include "GlobalNamespace/PosesRecordingSaveData_TransformsSaveKeyframe.hpp"
// Including type: PosesRecordingSaveData/PoseSaveData
#include "GlobalNamespace/PosesRecordingSaveData_PoseSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingSaveData/PoseSaveData[] poses
::ArrayW<GlobalNamespace::PosesRecordingSaveData::PoseSaveData*>& GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_poses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_poses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poses"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::PosesRecordingSaveData::PoseSaveData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
float& GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PosesSerializer
#include "GlobalNamespace/PosesSerializer.hpp"
// Including type: PosesSerializer/TypeSerializationBinder
#include "GlobalNamespace/PosesSerializer_TypeSerializationBinder.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
// Including type: PosesRecordingSaveData
#include "GlobalNamespace/PosesRecordingSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PosesSerializer.SaveToFile
void GlobalNamespace::PosesSerializer::SaveToFile(::Il2CppString* filePath, GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesSerializer::SaveToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesSerializer", "SaveToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: PosesSerializer.LoadSaveDataFromFile
GlobalNamespace::PosesRecordingSaveData* GlobalNamespace::PosesSerializer::LoadSaveDataFromFile(::Il2CppString* filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesSerializer::LoadSaveDataFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesSerializer", "LoadSaveDataFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PosesRecordingSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: PosesSerializer.LoadFromFile
GlobalNamespace::PosesRecordingData* GlobalNamespace::PosesSerializer::LoadFromFile(::Il2CppString* filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesSerializer::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesSerializer", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PosesRecordingData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PosesSerializer/TypeSerializationBinder
#include "GlobalNamespace/PosesSerializer_TypeSerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PosesSerializer/TypeSerializationBinder.BindToType
System::Type* GlobalNamespace::PosesSerializer::TypeSerializationBinder::BindToType(::Il2CppString* assemblyName, ::Il2CppString* typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosesSerializer::TypeSerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder
#include "GlobalNamespace/AveragingValueRecorder.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _averageWindowDuration
float& GlobalNamespace::AveragingValueRecorder::dyn__averageWindowDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__averageWindowDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _historyValuesPerSecond
float& GlobalNamespace::AveragingValueRecorder::dyn__historyValuesPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__historyValuesPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _historyValuesCount
int& GlobalNamespace::AveragingValueRecorder::dyn__historyValuesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__historyValuesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<AveragingValueRecorder/AverageValueData> _averageWindowValues
System::Collections::Generic::Queue_1<GlobalNamespace::AveragingValueRecorder::AverageValueData>*& GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValues"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Queue_1<GlobalNamespace::AveragingValueRecorder::AverageValueData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Single> _historyValues
System::Collections::Generic::Queue_1<float>*& GlobalNamespace::AveragingValueRecorder::dyn__historyValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__historyValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValues"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Queue_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _time
float& GlobalNamespace::AveragingValueRecorder::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _historyTime
float& GlobalNamespace::AveragingValueRecorder::dyn__historyTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__historyTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _averageValue
float& GlobalNamespace::AveragingValueRecorder::dyn__averageValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__averageValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _averageWindowValuesDuration
float& GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValuesDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValuesDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValuesDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastValue
float& GlobalNamespace::AveragingValueRecorder::dyn__lastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::dyn__lastValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AveragingValueRecorder.Update
void GlobalNamespace::AveragingValueRecorder::Update(float value, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, deltaTime);
}
// Autogenerated method: AveragingValueRecorder.GetAverageValue
float GlobalNamespace::AveragingValueRecorder::GetAverageValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::GetAverageValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAverageValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetLastValue
float GlobalNamespace::AveragingValueRecorder::GetLastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::GetLastValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetHistoryValues
System::Collections::Generic::Queue_1<float>* GlobalNamespace::AveragingValueRecorder::GetHistoryValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::GetHistoryValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHistoryValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Queue_1<float>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder/AverageValueData
#include "GlobalNamespace/AveragingValueRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <value>k__BackingField
float& GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$value$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
float& GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$time$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_value
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_value
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_time
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_time
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData..ctor
// ABORTED elsewhere.  GlobalNamespace::AveragingValueRecorder::AverageValueData::AverageValueData(float value, float time)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _recordingFilePath
::Il2CppString*& GlobalNamespace::FullVRControllersRecorder::dyn__recordingFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__recordingFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFilePath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FullVRControllersRecorder/Mode _mode
GlobalNamespace::FullVRControllersRecorder::Mode& GlobalNamespace::FullVRControllersRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::FullVRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeOffset
float& GlobalNamespace::FullVRControllersRecorder::dyn__timeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__timeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _othersSmooth
float& GlobalNamespace::FullVRControllersRecorder::dyn__othersSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__othersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_othersSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _handsSmooth
float& GlobalNamespace::FullVRControllersRecorder::dyn__handsSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__handsSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handsSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _playbackFloorOffset
float& GlobalNamespace::FullVRControllersRecorder::dyn__playbackFloorOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__playbackFloorOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackFloorOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController[] _controllers
::ArrayW<GlobalNamespace::VRController*>& GlobalNamespace::FullVRControllersRecorder::dyn__controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllers"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::FullVRControllersRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<VRController> didSetControllerTransformEvent
System::Action_1<GlobalNamespace::VRController*>*& GlobalNamespace::FullVRControllersRecorder::dyn_didSetControllerTransformEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn_didSetControllerTransformEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSetControllerTransformEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::VRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int& GlobalNamespace::FullVRControllersRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRControllersRecorderData _data
GlobalNamespace::VRControllersRecorderData*& GlobalNamespace::FullVRControllersRecorder::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllersRecorderData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FullVRControllersRecorder.add_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent(System::Action_1<GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.remove_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent(System::Action_1<GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.Start
void GlobalNamespace::FullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.OnDestroy
void GlobalNamespace::FullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.PlaybackTick
void GlobalNamespace::FullVRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.RecordTick
void GlobalNamespace::FullVRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.Update
void GlobalNamespace::FullVRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.LateUpdate
void GlobalNamespace::FullVRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FullVRControllersRecorder/Mode
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Record
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Record
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Playback
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Playback
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Off
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Off
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::FullVRControllersRecorder::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OverridePlayerTransformsFromFullVRControllersRecorder
#include "GlobalNamespace/OverridePlayerTransformsFromFullVRControllersRecorder.hpp"
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: PlayerVRControllersManager
#include "GlobalNamespace/PlayerVRControllersManager.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FullVRControllersRecorder _fullVRControllersRecorder
GlobalNamespace::FullVRControllersRecorder*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__fullVRControllersRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__fullVRControllersRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullVRControllersRecorder"))->offset;
  return *reinterpret_cast<GlobalNamespace::FullVRControllersRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
GlobalNamespace::PlayerTransforms*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
GlobalNamespace::SaberManager*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerVRControllersManager _playerVRControllersManager
GlobalNamespace::PlayerVRControllersManager*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerVRControllersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerVRControllersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerVRControllersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerVRControllersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.Start
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.OnDestroy
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.HandleFullVRControllersRecorderDidSetControllerTransform
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform(GlobalNamespace::VRController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFullVRControllersRecorderDidSetControllerTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayableDirectorTimer
#include "GlobalNamespace/PlayableDirectorTimer.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _playableDirector
UnityEngine::Playables::PlayableDirector*& GlobalNamespace::PlayableDirectorTimer::dyn__playableDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayableDirectorTimer::dyn__playableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirector"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PlayableDirectorTimer::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayableDirectorTimer::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayableDirectorTimer.Update
void GlobalNamespace::PlayableDirectorTimer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayableDirectorTimer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleVRNodeRecorder
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _songTime
GlobalNamespace::FloatSO*& GlobalNamespace::SimpleVRNodeRecorder::dyn__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _saveFilename
::Il2CppString*& GlobalNamespace::SimpleVRNodeRecorder::dyn__saveFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleVRNodeRecorder/RecordMode _mode
GlobalNamespace::SimpleVRNodeRecorder::RecordMode& GlobalNamespace::SimpleVRNodeRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleVRNodeRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode _node
UnityEngine::XR::XRNode& GlobalNamespace::SimpleVRNodeRecorder::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _playbackTransform
UnityEngine::Transform*& GlobalNamespace::SimpleVRNodeRecorder::dyn__playbackTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__playbackTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float& GlobalNamespace::SimpleVRNodeRecorder::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _forwardOffset
float& GlobalNamespace::SimpleVRNodeRecorder::dyn__forwardOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__forwardOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forwardOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IVRPlatformHelper _vrPlatformHelper
GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::SimpleVRNodeRecorder::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<SimpleVRNodeRecorder/SavedData/NodeKeyframe> _keyframes
System::Collections::Generic::List_1<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>*& GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int& GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPos
UnityEngine::Vector3& GlobalNamespace::SimpleVRNodeRecorder::dyn__prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _prevRot
UnityEngine::Quaternion& GlobalNamespace::SimpleVRNodeRecorder::dyn__prevRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::dyn__prevRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleVRNodeRecorder.Awake
void GlobalNamespace::SimpleVRNodeRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.OnDestroy
void GlobalNamespace::SimpleVRNodeRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.RecordNewKeyFrame
void GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordNewKeyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Update
void GlobalNamespace::SimpleVRNodeRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Save
void GlobalNamespace::SimpleVRNodeRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Load
void GlobalNamespace::SimpleVRNodeRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/SavedData
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SimpleVRNodeRecorder/SavedData/NodeKeyframe[] keyframes
::ArrayW<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>& GlobalNamespace::SimpleVRNodeRecorder::SavedData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single posX
float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posY
float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posZ
float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotX
float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotY
float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotZ
float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotW
float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_pos
UnityEngine::Vector3 GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_rot
UnityEngine::Quaternion GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/RecordMode
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Record
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Record
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Playback
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Playback
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Off
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Off
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::SimpleVRNodeRecorder::RecordMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder
#include "GlobalNamespace/VRControllersRecorder.hpp"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset _recordingTextAsset
UnityEngine::TextAsset*& GlobalNamespace::VRControllersRecorder::dyn__recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__recordingTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingTextAsset"))->offset;
  return *reinterpret_cast<UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _recordingFileName
::Il2CppString*& GlobalNamespace::VRControllersRecorder::dyn__recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__recordingFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFileName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRControllersRecorder/Mode _mode
GlobalNamespace::VRControllersRecorder::Mode& GlobalNamespace::VRControllersRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dontMoveHead
bool& GlobalNamespace::VRControllersRecorder::dyn__dontMoveHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__dontMoveHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontMoveHead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _changeToNonVRCamera
bool& GlobalNamespace::VRControllersRecorder::dyn__changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__changeToNonVRCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeToNonVRCamera"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _adjustSabersPositionBasedOnHeadPosition
bool& GlobalNamespace::VRControllersRecorder::dyn__adjustSabersPositionBasedOnHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__adjustSabersPositionBasedOnHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adjustSabersPositionBasedOnHeadPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headRotationOffset
UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::dyn__headRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__headRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headRotationOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headPositionOffset
UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::dyn__headPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__headPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPositionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _headSmooth
float& GlobalNamespace::VRControllersRecorder::dyn__headSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__headSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cameraFOV
float& GlobalNamespace::VRControllersRecorder::dyn__cameraFOV() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__cameraFOV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraFOV"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controllersTimeOffset
float& GlobalNamespace::VRControllersRecorder::dyn__controllersTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__controllersTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controllersSmooth
float& GlobalNamespace::VRControllersRecorder::dyn__controllersSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__controllersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller0
GlobalNamespace::VRController*& GlobalNamespace::VRControllersRecorder::dyn__controller0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__controller0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller0"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller1
GlobalNamespace::VRController*& GlobalNamespace::VRControllersRecorder::dyn__controller1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__controller1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller1"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headTransform
UnityEngine::Transform*& GlobalNamespace::VRControllersRecorder::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
UnityEngine::Camera*& GlobalNamespace::VRControllersRecorder::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _recorderCamera
UnityEngine::Camera*& GlobalNamespace::VRControllersRecorder::dyn__recorderCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__recorderCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorderCamera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _spawnRotationTransform
UnityEngine::Transform*& GlobalNamespace::VRControllersRecorder::dyn__spawnRotationTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__spawnRotationTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originTransform
UnityEngine::Transform*& GlobalNamespace::VRControllersRecorder::dyn__originTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::VRControllersRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRControllersRecorder/Keyframe> _keyframes
System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorder::Keyframe*>*& GlobalNamespace::VRControllersRecorder::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int& GlobalNamespace::VRControllersRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersRecorder.get_mode
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorder::Mode, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_mode
void GlobalNamespace::VRControllersRecorder::set_mode(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingTextAsset
UnityEngine::TextAsset* GlobalNamespace::VRControllersRecorder::get_recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingTextAsset
void GlobalNamespace::VRControllersRecorder::set_recordingTextAsset(UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingFileName
::Il2CppString* GlobalNamespace::VRControllersRecorder::get_recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingFileName
void GlobalNamespace::VRControllersRecorder::set_recordingFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_changeToNonVRCamera
bool GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_changeToNonVRCamera
void GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.Start
void GlobalNamespace::VRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.OnDestroy
void GlobalNamespace::VRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetInGamePlaybackDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInGamePlaybackDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.PlaybackTick
void GlobalNamespace::VRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetPositionAndRotation
void GlobalNamespace::VRControllersRecorder::SetPositionAndRotation(UnityEngine::Transform* transf, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion targetRot, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transf), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(targetRot), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transf, targetPos, targetRot, t);
}
// Autogenerated method: VRControllersRecorder.RecordTick
void GlobalNamespace::VRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Update
void GlobalNamespace::VRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.LateUpdate
void GlobalNamespace::VRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Save
void GlobalNamespace::VRControllersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Load
void GlobalNamespace::VRControllersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.CreateAnimationClipFromRecording
UnityEngine::AnimationClip* GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording(::Il2CppString* recordingfilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorder", "CreateAnimationClipFromRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingfilePath)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingfilePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorder/TypeSerializationBinder.BindToType
System::Type* GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType(::Il2CppString* assemblyName, ::Il2CppString* typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorder/SavedData/KeyframeSerializable[] _keyframes
::ArrayW<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>& GlobalNamespace::VRControllersRecorder::SavedData::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos1
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos1
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos1
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos2
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos2
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos2
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos3
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos3
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos3
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot1
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot1
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot1
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot1
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot2
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot2
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot2
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot2
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot3
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot3
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot3
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot3
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Mode
#include "GlobalNamespace/VRControllersRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Record
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Record
void GlobalNamespace::VRControllersRecorder::Mode::_set_Record(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Playback
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Playback
void GlobalNamespace::VRControllersRecorder::Mode::_set_Playback(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Off
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Off
void GlobalNamespace::VRControllersRecorder::Mode::_set_Off(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::VRControllersRecorder::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos1
UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos1"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos2
UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos2"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos3
UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos3"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot1
UnityEngine::Quaternion& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot1"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot2
UnityEngine::Quaternion& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot2"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot3
UnityEngine::Quaternion& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot3"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly VRControllersRecorderData/NodeInfo[] nodesInfo
::ArrayW<GlobalNamespace::VRControllersRecorderData::NodeInfo*>& GlobalNamespace::VRControllersRecorderData::dyn_nodesInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::dyn_nodesInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodesInfo"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRControllersRecorderData::NodeInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<VRControllersRecorderData/Keyframe> _keyframes
System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorderData::Keyframe*>*& GlobalNamespace::VRControllersRecorderData::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorderData::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersRecorderData.get_numberOfKeyframes
int GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorderData.AddKeyFrame
void GlobalNamespace::VRControllersRecorderData::AddKeyFrame(::ArrayW<GlobalNamespace::VRControllersRecorderData::PositionAndRotation> positionsAndRotations, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::AddKeyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionsAndRotations), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positionsAndRotations, time);
}
// Autogenerated method: VRControllersRecorderData.GetPositionAndRotation
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation(int frameIdx, UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(nodeIdx)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(this, ___internal__method, frameIdx, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetLerpedPositionAndRotation
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation(int frameIdx, float t, UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLerpedPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(nodeIdx)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(this, ___internal__method, frameIdx, t, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetFrameTime
float GlobalNamespace::VRControllersRecorderData::GetFrameTime(int frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, frameIdx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 pos
UnityEngine::Vector3& GlobalNamespace::VRControllersRecorderData::PositionAndRotation::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::dyn_pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rot
UnityEngine::Quaternion& GlobalNamespace::VRControllersRecorderData::PositionAndRotation::dyn_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::dyn_rot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersRecorderData/PositionAndRotation..ctor
// ABORTED elsewhere.  GlobalNamespace::VRControllersRecorderData::PositionAndRotation::PositionAndRotation(UnityEngine::Vector3 pos, UnityEngine::Quaternion rot)
// Autogenerated method: VRControllersRecorderData/PositionAndRotation.Lerp
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp(GlobalNamespace::VRControllersRecorderData::PositionAndRotation a, GlobalNamespace::VRControllersRecorderData::PositionAndRotation b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderData/PositionAndRotation", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly VRControllersRecorderData/PositionAndRotation[] positionsAndRotations
::ArrayW<GlobalNamespace::VRControllersRecorderData::PositionAndRotation>& GlobalNamespace::VRControllersRecorderData::Keyframe::dyn_positionsAndRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::Keyframe::dyn_positionsAndRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsAndRotations"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRControllersRecorderData::PositionAndRotation>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
float& GlobalNamespace::VRControllersRecorderData::Keyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::Keyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.XR.XRNode nodeType
UnityEngine::XR::XRNode& GlobalNamespace::VRControllersRecorderData::NodeInfo::dyn_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::NodeInfo::dyn_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 nodeIdx
int& GlobalNamespace::VRControllersRecorderData::NodeInfo::dyn_nodeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::NodeInfo::dyn_nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveAndLoad
#include "GlobalNamespace/VRControllersRecorderSaveAndLoad.hpp"
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromFile
GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile(::Il2CppString* filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromTextAsset
GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset(UnityEngine::TextAsset* textAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textAsset)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textAsset);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadFromFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile(::Il2CppString* filePath, GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.SaveToFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile(::Il2CppString* filePath, GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "SaveToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/NodeInfo[] nodesInfo
::ArrayW<GlobalNamespace::VRControllersRecorderSaveData::NodeInfo*>& GlobalNamespace::VRControllersRecorderSaveData::dyn_nodesInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::dyn_nodesInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodesInfo"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRControllersRecorderSaveData::NodeInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/Keyframe[] keyframes
::ArrayW<GlobalNamespace::VRControllersRecorderSaveData::Keyframe*>& GlobalNamespace::VRControllersRecorderSaveData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRControllersRecorderSaveData::Keyframe*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single posX
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posY
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posZ
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotX
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotY
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotZ
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotW
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/PositionAndRotation[] positionsAndRotations
::ArrayW<GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>& GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_positionsAndRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_positionsAndRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsAndRotations"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
float& GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.XRNode nodeType
UnityEngine::XR::XRNode& GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 nodeIdx
int& GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder
#include "GlobalNamespace/VRTrackersRecorder.hpp"
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SteamVR_Events/Action
#include "GlobalNamespace/SteamVR_Events_Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _songTime
GlobalNamespace::FloatSO*& GlobalNamespace::VRTrackersRecorder::dyn__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _saveFilename
::Il2CppString*& GlobalNamespace::VRTrackersRecorder::dyn__saveFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRTrackersRecorder/RecordMode _mode
GlobalNamespace::VRTrackersRecorder::RecordMode& GlobalNamespace::VRTrackersRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRTrackersRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originTransform
UnityEngine::Transform*& GlobalNamespace::VRTrackersRecorder::dyn__originTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _playbackTransforms
::ArrayW<UnityEngine::Transform*>& GlobalNamespace::VRTrackersRecorder::dyn__playbackTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__playbackTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRTrackersRecorder/Keyframe> _keyframes
System::Collections::Generic::List_1<GlobalNamespace::VRTrackersRecorder::Keyframe*>*& GlobalNamespace::VRTrackersRecorder::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::VRTrackersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int& GlobalNamespace::VRTrackersRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SteamVR_Events/Action _newPosesAction
GlobalNamespace::SteamVR_Events::Action*& GlobalNamespace::VRTrackersRecorder::dyn__newPosesAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__newPosesAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newPosesAction"))->offset;
  return *reinterpret_cast<GlobalNamespace::SteamVR_Events::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _loadedOriginPos
UnityEngine::Vector3& GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _loadedOriginRot
UnityEngine::Quaternion& GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRTrackersRecorder.Awake
void GlobalNamespace::VRTrackersRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDestroy
void GlobalNamespace::VRTrackersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnEnable
void GlobalNamespace::VRTrackersRecorder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDisable
void GlobalNamespace::VRTrackersRecorder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnNewPoses
void GlobalNamespace::VRTrackersRecorder::OnNewPoses(::ArrayW<Valve::VR::TrackedDevicePose_t> poses) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnNewPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poses)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, poses);
}
// Autogenerated method: VRTrackersRecorder.Update
void GlobalNamespace::VRTrackersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Save
void GlobalNamespace::VRTrackersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Load
void GlobalNamespace::VRTrackersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable[] _keyframes
::ArrayW<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>& GlobalNamespace::VRTrackersRecorder::SavedData::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable[] _transforms
::ArrayW<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__wRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__wRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _valid
bool& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/RecordMode
#include "GlobalNamespace/VRTrackersRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Record
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Record
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Playback
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Playback
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Off
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Off
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::VRTrackersRecorder::RecordMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/Keyframe/KeyframeTransform[] _transforms
::ArrayW<GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>& GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float& GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos
UnityEngine::Vector3& GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot
UnityEngine::Quaternion& GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__rot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _valid
bool& GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResizableTextMeshPro
#include "GlobalNamespace/ResizableTextMeshPro.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text _textMeshPro
TMPro::TMP_Text*& GlobalNamespace::ResizableTextMeshPro::dyn__textMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResizableTextMeshPro::dyn__textMeshPro");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textMeshPro"))->offset;
  return *reinterpret_cast<TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
UnityEngine::RectTransform*& GlobalNamespace::ResizableTextMeshPro::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResizableTextMeshPro::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _textExtraSpace
float& GlobalNamespace::ResizableTextMeshPro::dyn__textExtraSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResizableTextMeshPro::dyn__textExtraSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textExtraSpace"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResizableTextMeshPro.Start
void GlobalNamespace::ResizableTextMeshPro::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResizableTextMeshPro::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResizableTextMeshPro.Update
void GlobalNamespace::ResizableTextMeshPro::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResizableTextMeshPro::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResizableTextMeshPro.OnDestroy
void GlobalNamespace::ResizableTextMeshPro::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResizableTextMeshPro::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResizableTextMeshPro.HandleTextDidChange
void GlobalNamespace::ResizableTextMeshPro::HandleTextDidChange(UnityEngine::Object* textMeshPro) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResizableTextMeshPro::HandleTextDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTextDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textMeshPro)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textMeshPro);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerTimelineMock
#include "GlobalNamespace/MultiplayerTimelineMock.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerIntroAnimators
::ArrayW<UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerIntroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerIntroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerIntroAnimators"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerScoreRingItems
::ArrayW<UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerScoreRingItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerScoreRingItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerScoreRingItems"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerOutroAnimators
::ArrayW<UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerOutroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerOutroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerOutroAnimators"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerIntroAnimator
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerIntroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerScoreRingItem
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerScoreRingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerScoreRingItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerScoreRingItem"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerOutroAnimator
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerOutroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectedDuelIntroAnimator
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelIntroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectedDuelOutroAnimator
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelOutroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localDuelIntroAnimator
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelIntroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localDuelOutroAnimator
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelOutroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _resultAvatars
::ArrayW<UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__resultAvatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__resultAvatars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultAvatars"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _badgeTimelines
::ArrayW<UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__badgeTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__badgeTimelines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badgeTimelines"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _resultsMocks
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__resultsMocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__resultsMocks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsMocks"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _ringsGroup
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__ringsGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__ringsGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringsGroup"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _playersGroup
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__playersGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__playersGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersGroup"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _duelGroup
UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__duelGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::dyn__duelGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duelGroup"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerIntroAnimators
::ArrayW<UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerIntroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerIntroAnimators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerIntroAnimators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerScoreRings
::ArrayW<UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerScoreRings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerScoreRings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerScoreRings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerOutroAnimators
::ArrayW<UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerOutroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerOutroAnimators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerOutroAnimators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerIntroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localPlayerIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerScoreRingItem
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerScoreRingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localPlayerScoreRingItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerScoreRingItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerOutroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localPlayerOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedDuelIntroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedDuelIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedDuelOutroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedDuelOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localDuelIntroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localDuelIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDuelIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localDuelOutroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localDuelOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDuelOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_resultAvatars
::ArrayW<UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_resultAvatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_resultAvatars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultAvatars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_badgeTimelines
::ArrayW<UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_badgeTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_badgeTimelines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_badgeTimelines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_resultsMocks
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_resultsMocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_resultsMocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultsMocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.HandleActivations
void GlobalNamespace::MultiplayerTimelineMock::HandleActivations(bool isDuel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::HandleActivations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleActivations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDuel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isDuel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3SO _roomCenter
GlobalNamespace::Vector3SO*& GlobalNamespace::VRCenterAdjust::dyn__roomCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::dyn__roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomCenter"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _roomRotation
GlobalNamespace::FloatSO*& GlobalNamespace::VRCenterAdjust::dyn__roomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::dyn__roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomRotation"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::VRCenterAdjust::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRCenterAdjust.Awake
void GlobalNamespace::VRCenterAdjust::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Start
void GlobalNamespace::VRCenterAdjust::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnEnable
void GlobalNamespace::VRCenterAdjust::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnDisable
void GlobalNamespace::VRCenterAdjust::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomCenterDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomCenterDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomRotationDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomRotationDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Update
void GlobalNamespace::VRCenterAdjust::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.ResetRoom
void GlobalNamespace::VRCenterAdjust::ResetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::ResetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ArrayPositionTween
#include "GlobalNamespace/ArrayPositionTween.hpp"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*>& GlobalNamespace::ArrayPositionTween::dyn_arrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::dyn_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  return *reinterpret_cast<UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single elementDelay
float& GlobalNamespace::ArrayPositionTween::dyn_elementDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::dyn_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomTweenBehaviour template
GlobalNamespace::CustomTweenBehaviour*& GlobalNamespace::ArrayPositionTween::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ArrayPositionTween.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::ArrayPositionTween::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: ArrayPositionTween.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::ArrayPositionTween::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorAsset
#include "GlobalNamespace/AvatarColorAsset.hpp"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AvatarColorBehaviour _template
GlobalNamespace::AvatarColorBehaviour*& GlobalNamespace::AvatarColorAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarColorAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::AvatarColorAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: AvatarColorAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::AvatarColorAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _startColor
UnityEngine::Color& GlobalNamespace::AvatarColorBehaviour::dyn__startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::dyn__startColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _endColor
UnityEngine::Color& GlobalNamespace::AvatarColorBehaviour::dyn__endColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::dyn__endColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Tweening.EaseType _easeType
Tweening::EaseType& GlobalNamespace::AvatarColorBehaviour::dyn__easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::dyn__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController _avatarVisualController
GlobalNamespace::AvatarVisualController*& GlobalNamespace::AvatarColorBehaviour::dyn__avatarVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::dyn__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float& GlobalNamespace::AvatarColorBehaviour::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarColorBehaviour.OnGraphStart
void GlobalNamespace::AvatarColorBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: AvatarColorBehaviour.ProcessFrame
void GlobalNamespace::AvatarColorBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: AvatarColorBehaviour.OnPlayableDestroy
void GlobalNamespace::AvatarColorBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorTrack
#include "GlobalNamespace/AvatarColorTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomFogParamsAsset
#include "GlobalNamespace/BloomFogParamsAsset.hpp"
// Including type: BloomFogParamsBehaviour
#include "GlobalNamespace/BloomFogParamsBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BloomFogParamsBehaviour _template
GlobalNamespace::BloomFogParamsBehaviour*& GlobalNamespace::BloomFogParamsAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogParamsBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogParamsAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::BloomFogParamsAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogParamsAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::BloomFogParamsAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFogParamsBehaviour
#include "GlobalNamespace/BloomFogParamsBehaviour.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _bloomFogParams
GlobalNamespace::BloomFogEnvironmentParams*& GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFogParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _blend
float& GlobalNamespace::BloomFogParamsBehaviour::dyn__blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::dyn__blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogSO _bloomFog
GlobalNamespace::BloomFogSO*& GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::BloomFogParamsBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogParamsBehaviour.ProcessFrame
void GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: BloomFogParamsBehaviour.OnPlayableDestroy
void GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlPlayableAsset
#include "GlobalNamespace/CustomControlPlayableAsset.hpp"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AvatarColorBehaviour _template
GlobalNamespace::AvatarColorBehaviour*& GlobalNamespace::CustomControlPlayableAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomControlPlayableAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomControlPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::CustomControlPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomControlPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlTrack
#include "GlobalNamespace/CustomControlTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomTimelineTween
#include "GlobalNamespace/CustomTimelineTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] transforms
::ArrayW<UnityEngine::Transform*>& GlobalNamespace::CustomTimelineTween::dyn_transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTimelineTween::dyn_transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transforms"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] startPositions
::ArrayW<UnityEngine::Vector3>& GlobalNamespace::CustomTimelineTween::dyn_startPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTimelineTween::dyn_startPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPositions"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomTimelineTween.OnValidate
void GlobalNamespace::CustomTimelineTween::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTimelineTween::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] _transforms
::ArrayW<UnityEngine::Transform*>& GlobalNamespace::CustomTweenBehaviour::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startLocationCurrentPosition
bool& GlobalNamespace::CustomTweenBehaviour::dyn_startLocationCurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn_startLocationCurrentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocationCurrentPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startLocalPos
UnityEngine::Vector3& GlobalNamespace::CustomTweenBehaviour::dyn_startLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn_startLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocalPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 endLocalPos
UnityEngine::Vector3& GlobalNamespace::CustomTweenBehaviour::dyn_endLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn_endLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endLocalPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Tweening.EaseType easeType
Tweening::EaseType& GlobalNamespace::CustomTweenBehaviour::dyn_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn_easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "easeType"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean endXRelativeToSelfRotation
bool& GlobalNamespace::CustomTweenBehaviour::dyn_endXRelativeToSelfRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn_endXRelativeToSelfRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endXRelativeToSelfRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single elementDelay
float& GlobalNamespace::CustomTweenBehaviour::dyn_elementDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockX
bool& GlobalNamespace::CustomTweenBehaviour::dyn__lockX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__lockX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockY
bool& GlobalNamespace::CustomTweenBehaviour::dyn__lockY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__lockY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockZ
bool& GlobalNamespace::CustomTweenBehaviour::dyn__lockZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__lockZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _randomizeOrder
bool& GlobalNamespace::CustomTweenBehaviour::dyn__randomizeOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__randomizeOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeOrder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _randomizedMinDurationMultiplier
float& GlobalNamespace::CustomTweenBehaviour::dyn__randomizedMinDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__randomizedMinDurationMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedMinDurationMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float& GlobalNamespace::CustomTweenBehaviour::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _perItemDuration
float& GlobalNamespace::CustomTweenBehaviour::dyn__perItemDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__perItemDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perItemDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _originalLocalPos
::ArrayW<UnityEngine::Vector3>& GlobalNamespace::CustomTweenBehaviour::dyn__originalLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__originalLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLocalPos"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::CustomTweenBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _randomizedOrder
::ArrayW<int>& GlobalNamespace::CustomTweenBehaviour::dyn__randomizedOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__randomizedOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedOrder"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _randomizedDuration
::ArrayW<float>& GlobalNamespace::CustomTweenBehaviour::dyn__randomizedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::dyn__randomizedDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedDuration"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomTweenBehaviour.OnGraphStart
void GlobalNamespace::CustomTweenBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.ProcessFrame
void GlobalNamespace::CustomTweenBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: CustomTweenBehaviour.OnPlayableDestroy
void GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.OnBehaviourPlay
void GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly CustomTweenBehaviour/<>c <>9
GlobalNamespace::CustomTweenBehaviour::$$c* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::CustomTweenBehaviour::$$c*>("", "CustomTweenBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly CustomTweenBehaviour/<>c <>9
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9(GlobalNamespace::CustomTweenBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
System::Func_2<int, float>* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<int, float>*>("", "CustomTweenBehaviour/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0(System::Func_2<int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9__21_0", value)));
}
// Autogenerated method: CustomTweenBehaviour/<>c..cctor
void GlobalNamespace::CustomTweenBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CustomTweenBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CustomTweenBehaviour/<>c.<OnBehaviourPlay>b__21_0
float GlobalNamespace::CustomTweenBehaviour::$$c::$OnBehaviourPlay$b__21_0(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::<OnBehaviourPlay>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnBehaviourPlay>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectAsset
#include "GlobalNamespace/GhostEffectAsset.hpp"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
GlobalNamespace::GhostEffectBehaviour::GhostEffectType& GlobalNamespace::GhostEffectAsset::dyn__ghostEffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::dyn__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  return *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*>& GlobalNamespace::GhostEffectAsset::dyn_arrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::dyn_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  return *reinterpret_cast<UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour template
GlobalNamespace::GhostEffectBehaviour*& GlobalNamespace::GhostEffectAsset::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GhostEffectAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::GhostEffectAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: GhostEffectAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::GhostEffectAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GhostEffectBehaviour
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve alphaCurve
UnityEngine::AnimationCurve*& GlobalNamespace::GhostEffectBehaviour::dyn_alphaCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn_alphaCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve sizeCurve
UnityEngine::AnimationCurve*& GlobalNamespace::GhostEffectBehaviour::dyn_sizeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn_sizeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve distanceCurve
UnityEngine::AnimationCurve*& GlobalNamespace::GhostEffectBehaviour::dyn_distanceCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn_distanceCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _distanceMultiplier
UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__distanceMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__distanceMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceMultiplier"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useStartTransform
bool& GlobalNamespace::GhostEffectBehaviour::dyn__useStartTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__useStartTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStartTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useEndTransform
bool& GlobalNamespace::GhostEffectBehaviour::dyn__useEndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__useEndTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useEndTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _startLocalPosition
UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__startLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__startLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLocalPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _startTransform
UnityEngine::Transform*& GlobalNamespace::GhostEffectBehaviour::dyn__startTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__startTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _endLocalPosition
UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__endLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__endLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLocalPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _endTransform
UnityEngine::Transform*& GlobalNamespace::GhostEffectBehaviour::dyn__endTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__endTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Tweening.EaseType _positionEasing
Tweening::EaseType& GlobalNamespace::GhostEffectBehaviour::dyn__positionEasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__positionEasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionEasing"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/EndBehavior _endBehavior
GlobalNamespace::GhostEffectBehaviour::EndBehavior& GlobalNamespace::GhostEffectBehaviour::dyn__endBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__endBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endBehavior"))->offset;
  return *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour::EndBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single progress
float& GlobalNamespace::GhostEffectBehaviour::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshPro[] textMeshPros
::ArrayW<TMPro::TextMeshPro*>& GlobalNamespace::GhostEffectBehaviour::dyn_textMeshPros() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn_textMeshPros");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMeshPros"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TextMeshPro*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CanvasGroup[] _canvasGroups
::ArrayW<UnityEngine::CanvasGroup*>& GlobalNamespace::GhostEffectBehaviour::dyn__canvasGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__canvasGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroups"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::CanvasGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
GlobalNamespace::GhostEffectBehaviour::GhostEffectType& GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  return *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _ghostEffectTransform
UnityEngine::Transform*& GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _direction
UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_direction"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
bool& GlobalNamespace::GhostEffectBehaviour::dyn__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::dyn__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GhostEffectBehaviour.EnableObjects
void GlobalNamespace::GhostEffectBehaviour::EnableObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EnableObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: GhostEffectBehaviour.OnBehaviourPlay
void GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: GhostEffectBehaviour.ProcessFrame
void GlobalNamespace::GhostEffectBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/EndBehavior
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableAll
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableAll"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableAll
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableAll", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableCopies"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableCopies", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior Nothing
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior Nothing
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "Nothing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::GhostEffectBehaviour::EndBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/GhostEffectType
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro(GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType Canvas
GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType Canvas
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas(GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "Canvas", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::GhostEffectBehaviour::GhostEffectType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SinglePositionTween
#include "GlobalNamespace/SinglePositionTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<UnityEngine.Transform> transformReference
UnityEngine::ExposedReference_1<UnityEngine::Transform*>& GlobalNamespace::SinglePositionTween::dyn_transformReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::dyn_transformReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformReference"))->offset;
  return *reinterpret_cast<UnityEngine::ExposedReference_1<UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomTweenBehaviour template
GlobalNamespace::CustomTweenBehaviour*& GlobalNamespace::SinglePositionTween::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SinglePositionTween.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::SinglePositionTween::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: SinglePositionTween.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::SinglePositionTween::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TimelineArrayReference/ArrayTypes arrayType
GlobalNamespace::TimelineArrayReference::ArrayTypes& GlobalNamespace::TimelineArrayReference::dyn_arrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::dyn_arrayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayType"))->offset;
  return *reinterpret_cast<GlobalNamespace::TimelineArrayReference::ArrayTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TubeBloomPrePassLight[] _tubeLightArray
::ArrayW<GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::TimelineArrayReference::dyn__tubeLightArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::dyn__tubeLightArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLightArray"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CanvasGroup[] _canvasGroupArray
::ArrayW<UnityEngine::CanvasGroup*>& GlobalNamespace::TimelineArrayReference::dyn__canvasGroupArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::dyn__canvasGroupArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroupArray"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::CanvasGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshPro[] _tmproArray
::ArrayW<TMPro::TextMeshPro*>& GlobalNamespace::TimelineArrayReference::dyn__tmproArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::dyn__tmproArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tmproArray"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TextMeshPro*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] _transformArray
::ArrayW<UnityEngine::Transform*>& GlobalNamespace::TimelineArrayReference::dyn__transformArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::dyn__transformArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformArray"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DirectionalLight[] _directionalLights
::ArrayW<GlobalNamespace::DirectionalLight*>& GlobalNamespace::TimelineArrayReference::dyn__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::dyn__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::DirectionalLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimelineArrayReference/ArrayTypes
#include "GlobalNamespace/TimelineArrayReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TubeLight
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TubeLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TubeLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TubeLight", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Transform
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Transform"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Transform
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Transform", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Canvas
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Canvas
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Canvas", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "DirectionalLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "DirectionalLight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::TimelineArrayReference::ArrayTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightAsset
#include "GlobalNamespace/TubeLightAsset.hpp"
// Including type: TubeLightBehaviour
#include "GlobalNamespace/TubeLightBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TubeLightBehaviour _template
GlobalNamespace::TubeLightBehaviour*& GlobalNamespace::TubeLightAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::TubeLightBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TubeLightAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::TubeLightAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: TubeLightAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::TubeLightAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TubeLightBehaviour
#include "GlobalNamespace/TubeLightBehaviour.hpp"
// Including type: TubeLightBehaviour/ParameterType
#include "GlobalNamespace/TubeLightBehaviour_ParameterType.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _noPredefinedStartValue
bool& GlobalNamespace::TubeLightBehaviour::dyn__noPredefinedStartValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn__noPredefinedStartValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noPredefinedStartValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorSO startColor
GlobalNamespace::ColorSO*& GlobalNamespace::TubeLightBehaviour::dyn_startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn_startColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorSO endColor
GlobalNamespace::ColorSO*& GlobalNamespace::TubeLightBehaviour::dyn_endColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn_endColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single blend
float& GlobalNamespace::TubeLightBehaviour::dyn_blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn_blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::TubeLightBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _originalColor
UnityEngine::Color& GlobalNamespace::TubeLightBehaviour::dyn__originalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn__originalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _tubeLights
::ArrayW<GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::TubeLightBehaviour::dyn__tubeLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn__tubeLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLights"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight[] _directionalLights
::ArrayW<GlobalNamespace::DirectionalLight*>& GlobalNamespace::TubeLightBehaviour::dyn__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::DirectionalLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean started
bool& GlobalNamespace::TubeLightBehaviour::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _firstFrameColor
UnityEngine::Color& GlobalNamespace::TubeLightBehaviour::dyn__firstFrameColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::dyn__firstFrameColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TubeLightBehaviour.ProcessFrame
void GlobalNamespace::TubeLightBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: TubeLightBehaviour.OnPlayableDestroy
void GlobalNamespace::TubeLightBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightBehaviour/ParameterType
#include "GlobalNamespace/TubeLightBehaviour_ParameterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TubeLightBehaviour/ParameterType Values
GlobalNamespace::TubeLightBehaviour::ParameterType GlobalNamespace::TubeLightBehaviour::ParameterType::_get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_get_Values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TubeLightBehaviour::ParameterType>("", "TubeLightBehaviour/ParameterType", "Values"));
}
// Autogenerated static field setter
// Set static field: static public TubeLightBehaviour/ParameterType Values
void GlobalNamespace::TubeLightBehaviour::ParameterType::_set_Values(GlobalNamespace::TubeLightBehaviour::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_set_Values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TubeLightBehaviour/ParameterType", "Values", value));
}
// Autogenerated static field getter
// Get static field: static public TubeLightBehaviour/ParameterType References
GlobalNamespace::TubeLightBehaviour::ParameterType GlobalNamespace::TubeLightBehaviour::ParameterType::_get_References() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_get_References");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TubeLightBehaviour::ParameterType>("", "TubeLightBehaviour/ParameterType", "References"));
}
// Autogenerated static field setter
// Set static field: static public TubeLightBehaviour/ParameterType References
void GlobalNamespace::TubeLightBehaviour::ParameterType::_set_References(GlobalNamespace::TubeLightBehaviour::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_set_References");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TubeLightBehaviour/ParameterType", "References", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::TubeLightBehaviour::ParameterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightIntensityAsset
#include "GlobalNamespace/TubeLightIntensityAsset.hpp"
// Including type: TubeLightIntensityBehaviour
#include "GlobalNamespace/TubeLightIntensityBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TubeLightIntensityBehaviour _template
GlobalNamespace::TubeLightIntensityBehaviour*& GlobalNamespace::TubeLightIntensityAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::TubeLightIntensityBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TubeLightIntensityAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::TubeLightIntensityAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: TubeLightIntensityAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::TubeLightIntensityAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TubeLightIntensityBehaviour
#include "GlobalNamespace/TubeLightIntensityBehaviour.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _noPredefinedStartValue
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__noPredefinedStartValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__noPredefinedStartValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noPredefinedStartValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _startLightIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__startLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__startLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _startLaserIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__startLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__startLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _endLightIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__endLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__endLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _endLaserIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__endLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__endLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _disableWhenFinished
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__disableWhenFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__disableWhenFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableWhenFinished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _blend
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalLightIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__originalLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__originalLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalLaserIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__originalLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__originalLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _tubeLights
::ArrayW<GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::TubeLightIntensityBehaviour::dyn__tubeLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__tubeLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLights"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight[] _directionalLights
::ArrayW<GlobalNamespace::DirectionalLight*>& GlobalNamespace::TubeLightIntensityBehaviour::dyn__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::DirectionalLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _firstFrameLightIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__firstFrameLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__firstFrameLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _firstFrameLaserIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__firstFrameLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::dyn__firstFrameLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TubeLightIntensityBehaviour.EnableObjects
void GlobalNamespace::TubeLightIntensityBehaviour::EnableObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::EnableObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: TubeLightIntensityBehaviour.ProcessFrame
void GlobalNamespace::TubeLightIntensityBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: TubeLightIntensityBehaviour.OnPlayableDestroy
void GlobalNamespace::TubeLightIntensityBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightIntensityTrack
#include "GlobalNamespace/TubeLightIntensityTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightTrack
#include "GlobalNamespace/TubeLightTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetup
#include "GlobalNamespace/EnvironmentSceneSetup.hpp"
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentSceneSetupData _sceneSetupData
GlobalNamespace::EnvironmentSceneSetupData*& GlobalNamespace::EnvironmentSceneSetup::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSceneSetup::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentSceneSetup.InstallBindings
void GlobalNamespace::EnvironmentSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestSceneSetup
#include "GlobalNamespace/EventsTestSceneSetup.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::EventsTestSceneSetup::dyn__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::dyn__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::EventsTestSceneSetup::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
GlobalNamespace::BeatmapDifficulty& GlobalNamespace::EventsTestSceneSetup::dyn__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::dyn__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _colorScheme
GlobalNamespace::ColorSchemeSO*& GlobalNamespace::EventsTestSceneSetup::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EventsTestSceneSetup.InstallBindings
void GlobalNamespace::EventsTestSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetup
#include "GlobalNamespace/GameCoreSceneSetup.hpp"
// Including type: ScreenCaptureAfterDelay
#include "GlobalNamespace/ScreenCaptureAfterDelay.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPauseButtonPressDurationMultiplier
float GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPauseButtonPressDurationMultiplier
void GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private ScreenCaptureAfterDelay _screenCaptureAfterDelayPrefab
GlobalNamespace::ScreenCaptureAfterDelay*& GlobalNamespace::GameCoreSceneSetup::dyn__screenCaptureAfterDelayPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::dyn__screenCaptureAfterDelayPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenCaptureAfterDelayPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::ScreenCaptureAfterDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::GameCoreSceneSetup::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogSO _bloomFog
GlobalNamespace::BloomFogSO*& GlobalNamespace::GameCoreSceneSetup::dyn__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::dyn__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameCoreSceneSetup.InstallBindings
void GlobalNamespace::GameCoreSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetup
#include "GlobalNamespace/HealthWarningSceneSetup.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly HealthWarningSceneSetupData _sceneSetupData
GlobalNamespace::HealthWarningSceneSetupData*& GlobalNamespace::HealthWarningSceneSetup::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetup::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningSceneSetup.InstallBindings
void GlobalNamespace::HealthWarningSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneStart
#include "GlobalNamespace/HealthWarningSceneStart.hpp"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
// Including type: HealthWarningFlowCoordinator
#include "GlobalNamespace/HealthWarningFlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HealthWarningFlowCoordinator _healthWarninglowCoordinator
GlobalNamespace::HealthWarningFlowCoordinator*& GlobalNamespace::HealthWarningSceneStart::dyn__healthWarninglowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::dyn__healthWarninglowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarninglowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
GlobalNamespace::GameScenesManager*& GlobalNamespace::HealthWarningSceneStart::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HierarchyManager _hierarchyManager
HMUI::HierarchyManager*& GlobalNamespace::HealthWarningSceneStart::dyn__hierarchyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::dyn__hierarchyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hierarchyManager"))->offset;
  return *reinterpret_cast<HMUI::HierarchyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningSceneStart.Start
System::Collections::IEnumerator* GlobalNamespace::HealthWarningSceneStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HealthWarningSceneStart <>4__this
GlobalNamespace::HealthWarningSceneStart*& GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningSceneStart**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.MoveNext
bool GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
