// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Token/Type
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type Error
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type Error
void System::Net::Http::Headers::Token::Type::_set_Error(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type End
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type End
void System::Net::Http::Headers::Token::Type::_set_End(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type Token
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type Token
void System::Net::Http::Headers::Token::Type::_set_Token(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type QuotedString
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_QuotedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_QuotedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "QuotedString"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type QuotedString
void System::Net::Http::Headers::Token::Type::_set_QuotedString(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_QuotedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "QuotedString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type SeparatorEqual
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorEqual"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type SeparatorEqual
void System::Net::Http::Headers::Token::Type::_set_SeparatorEqual(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorEqual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type SeparatorSemicolon
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type SeparatorSemicolon
void System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type SeparatorSlash
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorSlash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSlash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type SeparatorSlash
void System::Net::Http::Headers::Token::Type::_set_SeparatorSlash(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorSlash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSlash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type SeparatorDash
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorDash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorDash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorDash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type SeparatorDash
void System::Net::Http::Headers::Token::Type::_set_SeparatorDash(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorDash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorDash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type SeparatorComma
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorComma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorComma"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type SeparatorComma
void System::Net::Http::Headers::Token::Type::_set_SeparatorComma(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorComma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorComma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/Type OpenParens
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_OpenParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_OpenParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "OpenParens"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/Type OpenParens
void System::Net::Http::Headers::Token::Type::_set_OpenParens(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_OpenParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "OpenParens", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean[] token_chars
::Array<bool>* System::Net::Http::Headers::Lexer::_get_token_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_get_token_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<bool>*>("System.Net.Http.Headers", "Lexer", "token_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean[] token_chars
void System::Net::Http::Headers::Lexer::_set_token_chars(::Array<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_set_token_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "token_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 last_token_char
int System::Net::Http::Headers::Lexer::_get_last_token_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_get_last_token_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Http.Headers", "Lexer", "last_token_char"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 last_token_char
void System::Net::Http::Headers::Lexer::_set_last_token_char(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_set_last_token_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "last_token_char", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] dt_formats
::Array<::Il2CppString*>* System::Net::Http::Headers::Lexer::_get_dt_formats() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_get_dt_formats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Net.Http.Headers", "Lexer", "dt_formats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] dt_formats
void System::Net::Http::Headers::Lexer::_set_dt_formats(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_set_dt_formats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "dt_formats", value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.get_Position
int System::Net::Http::Headers::Lexer::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.set_Position
void System::Net::Http::Headers::Lexer::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::Il2CppString* System::Net::Http::Headers::Lexer::GetStringValue(System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::Il2CppString* System::Net::Http::Headers::Lexer::GetStringValue(System::Net::Http::Headers::Token start, System::Net::Http::Headers::Token end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, start, end);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetQuotedStringValue
::Il2CppString* System::Net::Http::Headers::Lexer::GetQuotedStringValue(System::Net::Http::Headers::Token start) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::GetQuotedStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuotedStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetRemainingStringValue
::Il2CppString* System::Net::Http::Headers::Lexer::GetRemainingStringValue(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::GetRemainingStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, position);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsStarStringValue
bool System::Net::Http::Headers::Lexer::IsStarStringValue(System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::IsStarStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsStarStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(System::Net::Http::Headers::Token token, int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, token, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(System::Net::Http::Headers::Token token, int64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, token, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetTimeSpanValue
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::Lexer::TryGetTimeSpanValue(System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetTimeSpanValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTimeSpanValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(System::Net::Http::Headers::Token token, System::DateTimeOffset& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, token, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(::Il2CppString* text, System::DateTimeOffset& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDoubleValue
bool System::Net::Http::Headers::Lexer::TryGetDoubleValue(System::Net::Http::Headers::Token token, double& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetDoubleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDoubleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, token, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidToken
bool System::Net::Http::Headers::Lexer::IsValidToken(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::IsValidToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidCharacter
bool System::Net::Http::Headers::Lexer::IsValidCharacter(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::IsValidCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.EatChar
void System::Net::Http::Headers::Lexer::EatChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::EatChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.PeekChar
int System::Net::Http::Headers::Lexer::PeekChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::PeekChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.ScanCommentOptional
bool System::Net::Http::Headers::Lexer::ScanCommentOptional(::Il2CppString*& value, System::Net::Http::Headers::Token& readToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::ScanCommentOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCommentOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value, readToken);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.Scan
System::Net::Http::Headers::Token System::Net::Http::Headers::Lexer::Scan(bool recognizeDash) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recognizeDash)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::Token, false>(this, ___internal__method, recognizeDash);
}
// Autogenerated method: System.Net.Http.Headers.Lexer..cctor
void System::Net::Http::Headers::Lexer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_CharSet
::Il2CppString* System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CharSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_Parameters
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::MediaTypeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::MediaTypeHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::MediaTypeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParseMediaType
System::Nullable_1<System::Net::Http::Headers::Token> System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType(System::Net::Http::Headers::Lexer* lexer, ::Il2CppString*& media) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParseMediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::Net::Http::Headers::Token>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, media);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.Equals
bool System::Net::Http::Headers::MediaTypeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
int System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::MediaTypeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/<>c <>9
System::Net::Http::Headers::MediaTypeHeaderValue::$$c* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::Headers::MediaTypeHeaderValue::$$c*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/<>c <>9
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9(System::Net::Http::Headers::MediaTypeHeaderValue::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
System::Predicate_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<System::Net::Http::Headers::NameValueHeaderValue*>*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0(System::Predicate_1<System::Net::Http::Headers::NameValueHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/<>c..cctor
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/<>c.<get_CharSet>b__6_0
bool System::Net::Http::Headers::MediaTypeHeaderValue::$$c::$get_CharSet$b__6_0(System::Net::Http::Headers::NameValueHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::<get_CharSet>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_CharSet>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
#include "System/Net/Http/Headers/MediaTypeWithQualityHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Name
::Il2CppString* System::Net::Http::Headers::NameValueHeaderValue::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.set_Name
void System::Net::Http::Headers::NameValueHeaderValue::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Value
::Il2CppString* System::Net::Http::Headers::NameValueHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Create
System::Net::Http::Headers::NameValueHeaderValue* System::Net::Http::Headers::NameValueHeaderValue::Create(::Il2CppString* name, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::NameValueHeaderValue*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParsePragma
bool System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParsePragma", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseParameters
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters(System::Net::Http::Headers::Lexer* lexer, System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*& result, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, result, t);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::NameValueHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::NameValueHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Equals
bool System::Net::Http::Headers::NameValueHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::NameValueHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueWithParametersHeaderValue
#include "System/Net/Http/Headers/NameValueWithParametersHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.get_Parameters
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueWithParametersHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::NameValueWithParametersHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::NameValueWithParametersHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/Token
#include "System/Net/Http/Headers/Parser_Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/Token.Check
void System::Net::Http::Headers::Parser::Token::Check(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Token::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Net.Http.Headers.Parser/Token.TryCheck
bool System::Net::Http::Headers::Parser::Token::TryCheck(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Token::TryCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "TryCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/DateTime
#include "System/Net/Http/Headers/Parser_DateTime.hpp"
// Including type: System.Net.Http.Headers.Parser/DateTime/<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Func`2<System.Object,System.String> ToString
System::Func_2<::Il2CppObject*, ::Il2CppString*>* System::Net::Http::Headers::Parser::DateTime::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::_get_ToString");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, ::Il2CppString*>*>("System.Net.Http.Headers", "Parser/DateTime", "ToString")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Func`2<System.Object,System.String> ToString
void System::Net::Http::Headers::Parser::DateTime::_set_ToString(System::Func_2<::Il2CppObject*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime", "ToString", value));
}
// Autogenerated method: System.Net.Http.Headers.Parser/DateTime.TryParse
bool System::Net::Http::Headers::Parser::DateTime::TryParse(::Il2CppString* input, System::DateTimeOffset& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, result);
}
// Autogenerated method: System.Net.Http.Headers.Parser/DateTime..cctor
void System::Net::Http::Headers::Parser::DateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/DateTime/<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Parser/DateTime/<>c <>9
System::Net::Http::Headers::Parser::DateTime::$$c* System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Parser::DateTime::$$c*>("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Parser/DateTime/<>c <>9
void System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9(System::Net::Http::Headers::Parser::DateTime::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9", value)));
}
// Autogenerated method: System.Net.Http.Headers.Parser/DateTime/<>c..cctor
void System::Net::Http::Headers::Parser::DateTime::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/DateTime/<>c.<.cctor>b__2_0
::Il2CppString* System::Net::Http::Headers::Parser::DateTime::$$c::$_cctor$b__2_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::$$c::<.cctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/EmailAddress
#include "System/Net/Http/Headers/Parser_EmailAddress.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/EmailAddress.TryParse
bool System::Net::Http::Headers::Parser::EmailAddress::TryParse(::Il2CppString* input, ::Il2CppString*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::EmailAddress::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/EmailAddress", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/Host
#include "System/Net/Http/Headers/Parser_Host.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/Host.TryParse
bool System::Net::Http::Headers::Parser::Host::TryParse(::Il2CppString* input, ::Il2CppString*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Host::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Host", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/Int
#include "System/Net/Http/Headers/Parser_Int.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/Int.TryParse
bool System::Net::Http::Headers::Parser::Int::TryParse(::Il2CppString* input, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Int::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Int", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/Long
#include "System/Net/Http/Headers/Parser_Long.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/Long.TryParse
bool System::Net::Http::Headers::Parser::Long::TryParse(::Il2CppString* input, int64_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Long::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Long", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/MD5
#include "System/Net/Http/Headers/Parser_MD5.hpp"
// Including type: System.Net.Http.Headers.Parser/MD5/<>c
#include "System/Net/Http/Headers/Parser_MD5_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Func`2<System.Object,System.String> ToString
System::Func_2<::Il2CppObject*, ::Il2CppString*>* System::Net::Http::Headers::Parser::MD5::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::_get_ToString");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, ::Il2CppString*>*>("System.Net.Http.Headers", "Parser/MD5", "ToString")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Func`2<System.Object,System.String> ToString
void System::Net::Http::Headers::Parser::MD5::_set_ToString(System::Func_2<::Il2CppObject*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/MD5", "ToString", value));
}
// Autogenerated method: System.Net.Http.Headers.Parser/MD5.TryParse
bool System::Net::Http::Headers::Parser::MD5::TryParse(::Il2CppString* input, ::Array<uint8_t>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, result);
}
// Autogenerated method: System.Net.Http.Headers.Parser/MD5..cctor
void System::Net::Http::Headers::Parser::MD5::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/MD5/<>c
#include "System/Net/Http/Headers/Parser_MD5_--c.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Parser/MD5/<>c <>9
System::Net::Http::Headers::Parser::MD5::$$c* System::Net::Http::Headers::Parser::MD5::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Parser::MD5::$$c*>("System.Net.Http.Headers", "Parser/MD5/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Parser/MD5/<>c <>9
void System::Net::Http::Headers::Parser::MD5::$$c::_set_$$9(System::Net::Http::Headers::Parser::MD5::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/MD5/<>c", "<>9", value)));
}
// Autogenerated method: System.Net.Http.Headers.Parser/MD5/<>c..cctor
void System::Net::Http::Headers::Parser::MD5::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/MD5/<>c.<.cctor>b__2_0
::Il2CppString* System::Net::Http::Headers::Parser::MD5::$$c::$_cctor$b__2_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::$$c::<.cctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/TimeSpanSeconds
#include "System/Net/Http/Headers/Parser_TimeSpanSeconds.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/TimeSpanSeconds.TryParse
bool System::Net::Http::Headers::Parser::TimeSpanSeconds::TryParse(::Il2CppString* input, System::TimeSpan& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::TimeSpanSeconds::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/TimeSpanSeconds", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/Uri
#include "System/Net/Http/Headers/Parser_Uri.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/Uri.TryParse
bool System::Net::Http::Headers::Parser::Uri::TryParse(::Il2CppString* input, System::Uri*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Uri::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Uri", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ProductHeaderValue
#include "System/Net/Http/Headers/ProductHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.get_Name
::Il2CppString* System::Net::Http::Headers::ProductHeaderValue::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.set_Name
void System::Net::Http::Headers::ProductHeaderValue::set_Name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.get_Version
::Il2CppString* System::Net::Http::Headers::ProductHeaderValue::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.set_Version
void System::Net::Http::Headers::ProductHeaderValue::set_Version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ProductHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.TryParse
bool System::Net::Http::Headers::ProductHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::ProductHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::ProductHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.TryParseElement
bool System::Net::Http::Headers::ProductHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::ProductHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ProductHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.Equals
bool System::Net::Http::Headers::ProductHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.GetHashCode
int System::Net::Http::Headers::ProductHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::ProductHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ProductInfoHeaderValue
#include "System/Net/Http/Headers/ProductInfoHeaderValue.hpp"
// Including type: System.Net.Http.Headers.ProductHeaderValue
#include "System/Net/Http/Headers/ProductHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.get_Comment
::Il2CppString* System::Net::Http::Headers::ProductInfoHeaderValue::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.set_Comment
void System::Net::Http::Headers::ProductInfoHeaderValue::set_Comment(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.get_Product
System::Net::Http::Headers::ProductHeaderValue* System::Net::Http::Headers::ProductInfoHeaderValue::get_Product() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::get_Product");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Product", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::ProductHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.set_Product
void System::Net::Http::Headers::ProductInfoHeaderValue::set_Product(System::Net::Http::Headers::ProductHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::set_Product");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Product", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ProductInfoHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.TryParse
bool System::Net::Http::Headers::ProductInfoHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::ProductInfoHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductInfoHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::ProductInfoHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.TryParseElement
bool System::Net::Http::Headers::ProductInfoHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::ProductInfoHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductInfoHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ProductInfoHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.Equals
bool System::Net::Http::Headers::ProductInfoHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode
int System::Net::Http::Headers::ProductInfoHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::ProductInfoHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeConditionHeaderValue
#include "System/Net/Http/Headers/RangeConditionHeaderValue.hpp"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.get_Date
System::Nullable_1<System::DateTimeOffset> System::Net::Http::Headers::RangeConditionHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.set_Date
void System::Net::Http::Headers::RangeConditionHeaderValue::set_Date(System::Nullable_1<System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.get_EntityTag
System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::RangeConditionHeaderValue::get_EntityTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::get_EntityTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntityTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::EntityTagHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.set_EntityTag
void System::Net::Http::Headers::RangeConditionHeaderValue::set_EntityTag(System::Net::Http::Headers::EntityTagHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::set_EntityTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntityTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeConditionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.TryParse
bool System::Net::Http::Headers::RangeConditionHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::RangeConditionHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RangeConditionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::RangeConditionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.Equals
bool System::Net::Http::Headers::RangeConditionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeConditionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::RangeConditionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeHeaderValue
#include "System/Net/Http/Headers/RangeHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.RangeItemHeaderValue
#include "System/Net/Http/Headers/RangeItemHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.get_Ranges
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::RangeItemHeaderValue*>* System::Net::Http::Headers::RangeHeaderValue::get_Ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::get_Ranges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ranges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::RangeItemHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.get_Unit
::Il2CppString* System::Net::Http::Headers::RangeHeaderValue::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.TryParse
bool System::Net::Http::Headers::RangeHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::RangeHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RangeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::RangeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.Equals
bool System::Net::Http::Headers::RangeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::RangeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeItemHeaderValue
#include "System/Net/Http/Headers/RangeItemHeaderValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.get_From
System::Nullable_1<int64_t> System::Net::Http::Headers::RangeItemHeaderValue::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.set_From
void System::Net::Http::Headers::RangeItemHeaderValue::set_From(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::set_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.get_To
System::Nullable_1<int64_t> System::Net::Http::Headers::RangeItemHeaderValue::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.set_To
void System::Net::Http::Headers::RangeItemHeaderValue::set_To(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::set_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeItemHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.Equals
bool System::Net::Http::Headers::RangeItemHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeItemHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::RangeItemHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RetryConditionHeaderValue
#include "System/Net/Http/Headers/RetryConditionHeaderValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.get_Date
System::Nullable_1<System::DateTimeOffset> System::Net::Http::Headers::RetryConditionHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.set_Date
void System::Net::Http::Headers::RetryConditionHeaderValue::set_Date(System::Nullable_1<System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.get_Delta
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::RetryConditionHeaderValue::get_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::get_Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.set_Delta
void System::Net::Http::Headers::RetryConditionHeaderValue::set_Delta(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::set_Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RetryConditionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.TryParse
bool System::Net::Http::Headers::RetryConditionHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::RetryConditionHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RetryConditionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::RetryConditionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.Equals
bool System::Net::Http::Headers::RetryConditionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode
int System::Net::Http::Headers::RetryConditionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::RetryConditionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.StringWithQualityHeaderValue
#include "System/Net/Http/Headers/StringWithQualityHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.get_Quality
System::Nullable_1<double> System::Net::Http::Headers::StringWithQualityHeaderValue::get_Quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::get_Quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<double>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.set_Quality
void System::Net::Http::Headers::StringWithQualityHeaderValue::set_Quality(System::Nullable_1<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::set_Quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.get_Value
::Il2CppString* System::Net::Http::Headers::StringWithQualityHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.set_Value
void System::Net::Http::Headers::StringWithQualityHeaderValue::set_Value(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::StringWithQualityHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::StringWithQualityHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::StringWithQualityHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "StringWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::StringWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::StringWithQualityHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::StringWithQualityHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "StringWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::StringWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals
bool System::Net::Http::Headers::StringWithQualityHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
int System::Net::Http::Headers::StringWithQualityHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::StringWithQualityHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.get_Parameters
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::TransferCodingHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.get_Value
::Il2CppString* System::Net::Http::Headers::TransferCodingHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::TransferCodingHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse
bool System::Net::Http::Headers::TransferCodingHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.TryParseElement
bool System::Net::Http::Headers::TransferCodingHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::TransferCodingHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::TransferCodingHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.Equals
bool System::Net::Http::Headers::TransferCodingHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode
int System::Net::Http::Headers::TransferCodingHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::TransferCodingHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
#include "System/Net/Http/Headers/TransferCodingWithQualityHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ViaHeaderValue
#include "System/Net/Http/Headers/ViaHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_Comment
::Il2CppString* System::Net::Http::Headers::ViaHeaderValue::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_Comment
void System::Net::Http::Headers::ViaHeaderValue::set_Comment(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ProtocolName
::Il2CppString* System::Net::Http::Headers::ViaHeaderValue::get_ProtocolName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::get_ProtocolName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ProtocolName
void System::Net::Http::Headers::ViaHeaderValue::set_ProtocolName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::set_ProtocolName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ProtocolVersion
::Il2CppString* System::Net::Http::Headers::ViaHeaderValue::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ProtocolVersion
void System::Net::Http::Headers::ViaHeaderValue::set_ProtocolVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::set_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ReceivedBy
::Il2CppString* System::Net::Http::Headers::ViaHeaderValue::get_ReceivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::get_ReceivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ReceivedBy
void System::Net::Http::Headers::ViaHeaderValue::set_ReceivedBy(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::set_ReceivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ViaHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.TryParse
bool System::Net::Http::Headers::ViaHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::ViaHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ViaHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::ViaHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.TryParseElement
bool System::Net::Http::Headers::ViaHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::ViaHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ViaHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ViaHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.Equals
bool System::Net::Http::Headers::ViaHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.GetHashCode
int System::Net::Http::Headers::ViaHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::ViaHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.WarningHeaderValue
#include "System/Net/Http/Headers/WarningHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Agent
::Il2CppString* System::Net::Http::Headers::WarningHeaderValue::get_Agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::get_Agent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Agent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Agent
void System::Net::Http::Headers::WarningHeaderValue::set_Agent(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::set_Agent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Agent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Code
int System::Net::Http::Headers::WarningHeaderValue::get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::get_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Code
void System::Net::Http::Headers::WarningHeaderValue::set_Code(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::set_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Date
System::Nullable_1<System::DateTimeOffset> System::Net::Http::Headers::WarningHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Date
void System::Net::Http::Headers::WarningHeaderValue::set_Date(System::Nullable_1<System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Text
::Il2CppString* System::Net::Http::Headers::WarningHeaderValue::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Text
void System::Net::Http::Headers::WarningHeaderValue::set_Text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.IsCodeValid
bool System::Net::Http::Headers::WarningHeaderValue::IsCodeValid(int code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::IsCodeValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "IsCodeValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::WarningHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.TryParse
bool System::Net::Http::Headers::WarningHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::WarningHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::WarningHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.TryParseElement
bool System::Net::Http::Headers::WarningHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::WarningHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::WarningHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.Equals
bool System::Net::Http::Headers::WarningHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.GetHashCode
int System::Net::Http::Headers::WarningHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::WarningHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalAppContextSwitches
#include "System/LocalAppContextSwitches.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean DontThrowOnInvalidSurrogatePairs
bool System::LocalAppContextSwitches::_get_DontThrowOnInvalidSurrogatePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalAppContextSwitches::_get_DontThrowOnInvalidSurrogatePairs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "LocalAppContextSwitches", "DontThrowOnInvalidSurrogatePairs"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean DontThrowOnInvalidSurrogatePairs
void System::LocalAppContextSwitches::_set_DontThrowOnInvalidSurrogatePairs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::LocalAppContextSwitches::_set_DontThrowOnInvalidSurrogatePairs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalAppContextSwitches", "DontThrowOnInvalidSurrogatePairs", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.AsyncHelper
#include "System/Xml/AsyncHelper.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task DoneTask
System::Threading::Tasks::Task* System::Xml::AsyncHelper::_get_DoneTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_get_DoneTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task*>("System.Xml", "AsyncHelper", "DoneTask"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task DoneTask
void System::Xml::AsyncHelper::_set_DoneTask(System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_set_DoneTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTask", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_get_DoneTaskTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskTrue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
void System::Xml::AsyncHelper::_set_DoneTaskTrue(System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_set_DoneTaskTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskTrue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_get_DoneTaskFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskFalse"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
void System::Xml::AsyncHelper::_set_DoneTaskFalse(System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_set_DoneTaskFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskFalse", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
System::Threading::Tasks::Task_1<int>* System::Xml::AsyncHelper::_get_DoneTaskZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_get_DoneTaskZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task_1<int>*>("System.Xml", "AsyncHelper", "DoneTaskZero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
void System::Xml::AsyncHelper::_set_DoneTaskZero(System::Threading::Tasks::Task_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_set_DoneTaskZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskZero", value));
}
// Autogenerated method: System.Xml.AsyncHelper..cctor
void System::Xml::AsyncHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "AsyncHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Base64Encoder
#include "System/Xml/Base64Encoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Base64Encoder.WriteChars
void System::Xml::Base64Encoder::WriteChars(::Array<::Il2CppChar>* chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Base64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Encode
void System::Xml::Base64Encoder::Encode(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Base64Encoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Flush
void System::Xml::Base64Encoder::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Base64Encoder::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlRawWriterBase64Encoder
#include "System/Xml/XmlRawWriterBase64Encoder.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlRawWriterBase64Encoder.WriteChars
void System::Xml::XmlRawWriterBase64Encoder::WriteChars(::Array<::Il2CppChar>* chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriterBase64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.BinHexEncoder
#include "System/Xml/BinHexEncoder.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.BinHexEncoder.Encode
void System::Xml::BinHexEncoder::Encode(::Array<uint8_t>* buffer, int index, int count, System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, index, count, writer);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
int System::Xml::BinHexEncoder::Encode(::Array<uint8_t>* inArray, int offsetIn, int count, ::Array<::Il2CppChar>* outArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(outArray)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inArray, offsetIn, count, outArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.BitStack.PushBit
void System::Xml::BitStack::PushBit(bool bit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PushBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bit)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bit);
}
// Autogenerated method: System.Xml.BitStack.PopBit
bool System::Xml::BitStack::PopBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PopBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PeekBit
bool System::Xml::BitStack::PeekBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PeekBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PushCurr
void System::Xml::BitStack::PushCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PushCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PopCurr
void System::Xml::BitStack::PopCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PopCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.ByteStack.Push
void System::Xml::ByteStack::Push(uint8_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ByteStack::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.ByteStack.Pop
uint8_t System::Xml::ByteStack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ByteStack::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
// Including type: System.Xml.CharEntityEncoderFallbackBuffer
#include "System/Xml/CharEntityEncoderFallbackBuffer.hpp"
// Including type: System.Text.EncoderFallbackBuffer
#include "System/Text/EncoderFallbackBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.CharEntityEncoderFallback.set_StartOffset
void System::Xml::CharEntityEncoderFallback::set_StartOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallback::set_StartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.Reset
void System::Xml::CharEntityEncoderFallback::Reset(::Array<int>* textContentMarks, int endMarkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallback::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textContentMarks), ::il2cpp_utils::ExtractType(endMarkPos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textContentMarks, endMarkPos);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.CanReplaceAt
bool System::Xml::CharEntityEncoderFallback::CanReplaceAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallback::CanReplaceAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanReplaceAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.CreateFallbackBuffer
System::Text::EncoderFallbackBuffer* System::Xml::CharEntityEncoderFallback::CreateFallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallback::CreateFallbackBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFallbackBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::EncoderFallbackBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.get_MaxCharCount
int System::Xml::CharEntityEncoderFallback::get_MaxCharCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallback::get_MaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.CharEntityEncoderFallbackBuffer
#include "System/Xml/CharEntityEncoderFallbackBuffer.hpp"
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.SurrogateCharToUtf32
int System::Xml::CharEntityEncoderFallbackBuffer::SurrogateCharToUtf32(::Il2CppChar highSurrogate, ::Il2CppChar lowSurrogate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallbackBuffer::SurrogateCharToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SurrogateCharToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurrogate), ::il2cpp_utils::ExtractType(lowSurrogate)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, highSurrogate, lowSurrogate);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Fallback
bool System::Xml::CharEntityEncoderFallbackBuffer::Fallback(::Il2CppChar charUnknown, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallbackBuffer::Fallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charUnknown), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, charUnknown, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Fallback
bool System::Xml::CharEntityEncoderFallbackBuffer::Fallback(::Il2CppChar charUnknownHigh, ::Il2CppChar charUnknownLow, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallbackBuffer::Fallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charUnknownHigh), ::il2cpp_utils::ExtractType(charUnknownLow), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, charUnknownHigh, charUnknownLow, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.GetNextChar
::Il2CppChar System::Xml::CharEntityEncoderFallbackBuffer::GetNextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallbackBuffer::GetNextChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.MovePrevious
bool System::Xml::CharEntityEncoderFallbackBuffer::MovePrevious() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallbackBuffer::MovePrevious");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePrevious", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.get_Remaining
int System::Xml::CharEntityEncoderFallbackBuffer::get_Remaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallbackBuffer::get_Remaining");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Remaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Reset
void System::Xml::CharEntityEncoderFallbackBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::CharEntityEncoderFallbackBuffer::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ConformanceLevel
#include "System/Xml/ConformanceLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Auto
System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ConformanceLevel::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Auto
void System::Xml::ConformanceLevel::_set_Auto(System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ConformanceLevel::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Fragment
System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ConformanceLevel::_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Fragment
void System::Xml::ConformanceLevel::_set_Fragment(System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ConformanceLevel::_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Document
System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ConformanceLevel::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Document
void System::Xml::ConformanceLevel::_set_Document(System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ConformanceLevel::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Document", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.HtmlEncodedRawTextWriter
#include "System/Xml/HtmlEncodedRawTextWriter.hpp"
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
System::Xml::TernaryTreeReadOnly* System::Xml::HtmlEncodedRawTextWriter::_get_elementPropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::_get_elementPropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlEncodedRawTextWriter", "elementPropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
void System::Xml::HtmlEncodedRawTextWriter::_set_elementPropertySearch(System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::_set_elementPropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlEncodedRawTextWriter", "elementPropertySearch", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
System::Xml::TernaryTreeReadOnly* System::Xml::HtmlEncodedRawTextWriter::_get_attributePropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::_get_attributePropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlEncodedRawTextWriter", "attributePropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
void System::Xml::HtmlEncodedRawTextWriter::_set_attributePropertySearch(System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::_set_attributePropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlEncodedRawTextWriter", "attributePropertySearch", value));
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.Init
void System::Xml::HtmlEncodedRawTextWriter::Init(System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteMetaElement
void System::Xml::HtmlEncodedRawTextWriter::WriteMetaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteMetaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlElementTextBlock
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteHtmlElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeTextBlock
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeText
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteUriAttributeText
void System::Xml::HtmlEncodedRawTextWriter::WriteUriAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteUriAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUriAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.OutputRestAmps
void System::Xml::HtmlEncodedRawTextWriter::OutputRestAmps() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::OutputRestAmps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutputRestAmps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteDocType
void System::Xml::HtmlEncodedRawTextWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteStartElement
void System::Xml::HtmlEncodedRawTextWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.StartElementContent
void System::Xml::HtmlEncodedRawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEndElement
void System::Xml::HtmlEncodedRawTextWriter::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteFullEndElement
void System::Xml::HtmlEncodedRawTextWriter::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteStartAttribute
void System::Xml::HtmlEncodedRawTextWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEndAttribute
void System::Xml::HtmlEncodedRawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteProcessingInstruction
void System::Xml::HtmlEncodedRawTextWriter::WriteProcessingInstruction(::Il2CppString* target, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteString
void System::Xml::HtmlEncodedRawTextWriter::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEntityRef
void System::Xml::HtmlEncodedRawTextWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteCharEntity
void System::Xml::HtmlEncodedRawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteSurrogateCharEntity
void System::Xml::HtmlEncodedRawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteChars
void System::Xml::HtmlEncodedRawTextWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.HtmlEncodedRawTextWriterIndent
#include "System/Xml/HtmlEncodedRawTextWriterIndent.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteIndent
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteDocType
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteStartElement
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.StartElementContent
void System::Xml::HtmlEncodedRawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteEndElement
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteStartAttribute
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.FlushBuffer
void System::Xml::HtmlEncodedRawTextWriterIndent::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriterIndent::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.Init
void System::Xml::HtmlEncodedRawTextWriterIndent::Init(System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlEncodedRawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.HtmlTernaryTree
#include "System/Xml/HtmlTernaryTree.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Byte[] htmlElements
::Array<uint8_t>* System::Xml::HtmlTernaryTree::_get_htmlElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlTernaryTree::_get_htmlElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Xml", "HtmlTernaryTree", "htmlElements"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] htmlElements
void System::Xml::HtmlTernaryTree::_set_htmlElements(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlTernaryTree::_set_htmlElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlTernaryTree", "htmlElements", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte[] htmlAttributes
::Array<uint8_t>* System::Xml::HtmlTernaryTree::_get_htmlAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlTernaryTree::_get_htmlAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Xml", "HtmlTernaryTree", "htmlAttributes"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] htmlAttributes
void System::Xml::HtmlTernaryTree::_set_htmlAttributes(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlTernaryTree::_set_htmlAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlTernaryTree", "htmlAttributes", value));
}
// Autogenerated method: System.Xml.HtmlTernaryTree..cctor
void System::Xml::HtmlTernaryTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlTernaryTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "HtmlTernaryTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.HtmlUtf8RawTextWriter
#include "System/Xml/HtmlUtf8RawTextWriter.hpp"
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
System::Xml::TernaryTreeReadOnly* System::Xml::HtmlUtf8RawTextWriter::_get_elementPropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::_get_elementPropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlUtf8RawTextWriter", "elementPropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
void System::Xml::HtmlUtf8RawTextWriter::_set_elementPropertySearch(System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::_set_elementPropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlUtf8RawTextWriter", "elementPropertySearch", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
System::Xml::TernaryTreeReadOnly* System::Xml::HtmlUtf8RawTextWriter::_get_attributePropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::_get_attributePropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlUtf8RawTextWriter", "attributePropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
void System::Xml::HtmlUtf8RawTextWriter::_set_attributePropertySearch(System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::_set_attributePropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlUtf8RawTextWriter", "attributePropertySearch", value));
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.Init
void System::Xml::HtmlUtf8RawTextWriter::Init(System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteMetaElement
void System::Xml::HtmlUtf8RawTextWriter::WriteMetaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteMetaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlElementTextBlock
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteHtmlElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeTextBlock
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeText
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteUriAttributeText
void System::Xml::HtmlUtf8RawTextWriter::WriteUriAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteUriAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUriAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.OutputRestAmps
void System::Xml::HtmlUtf8RawTextWriter::OutputRestAmps() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::OutputRestAmps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutputRestAmps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteDocType
void System::Xml::HtmlUtf8RawTextWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteStartElement
void System::Xml::HtmlUtf8RawTextWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.StartElementContent
void System::Xml::HtmlUtf8RawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEndElement
void System::Xml::HtmlUtf8RawTextWriter::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteFullEndElement
void System::Xml::HtmlUtf8RawTextWriter::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteStartAttribute
void System::Xml::HtmlUtf8RawTextWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEndAttribute
void System::Xml::HtmlUtf8RawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteProcessingInstruction
void System::Xml::HtmlUtf8RawTextWriter::WriteProcessingInstruction(::Il2CppString* target, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteString
void System::Xml::HtmlUtf8RawTextWriter::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEntityRef
void System::Xml::HtmlUtf8RawTextWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteCharEntity
void System::Xml::HtmlUtf8RawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteSurrogateCharEntity
void System::Xml::HtmlUtf8RawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteChars
void System::Xml::HtmlUtf8RawTextWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.HtmlUtf8RawTextWriterIndent
#include "System/Xml/HtmlUtf8RawTextWriterIndent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteIndent
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteDocType
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteStartElement
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.StartElementContent
void System::Xml::HtmlUtf8RawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteEndElement
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteStartAttribute
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.FlushBuffer
void System::Xml::HtmlUtf8RawTextWriterIndent::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriterIndent::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.Init
void System::Xml::HtmlUtf8RawTextWriterIndent::Init(System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::HtmlUtf8RawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.OnRemoveWriter
#include "System/Xml/OnRemoveWriter.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.OnRemoveWriter.Invoke
void System::Xml::OnRemoveWriter::Invoke(System::Xml::XmlRawWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::OnRemoveWriter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.OnRemoveWriter.BeginInvoke
System::IAsyncResult* System::Xml::OnRemoveWriter::BeginInvoke(System::Xml::XmlRawWriter* writer, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::OnRemoveWriter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, writer, callback, object);
}
// Autogenerated method: System.Xml.OnRemoveWriter.EndInvoke
void System::Xml::OnRemoveWriter::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::OnRemoveWriter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.NamespaceHandling
#include "System/Xml/NamespaceHandling.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.NamespaceHandling Default
System::Xml::NamespaceHandling System::Xml::NamespaceHandling::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NamespaceHandling::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::NamespaceHandling>("System.Xml", "NamespaceHandling", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NamespaceHandling Default
void System::Xml::NamespaceHandling::_set_Default(System::Xml::NamespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NamespaceHandling::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NamespaceHandling", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.NamespaceHandling OmitDuplicates
System::Xml::NamespaceHandling System::Xml::NamespaceHandling::_get_OmitDuplicates() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NamespaceHandling::_get_OmitDuplicates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::NamespaceHandling>("System.Xml", "NamespaceHandling", "OmitDuplicates"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NamespaceHandling OmitDuplicates
void System::Xml::NamespaceHandling::_set_OmitDuplicates(System::Xml::NamespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NamespaceHandling::_set_OmitDuplicates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NamespaceHandling", "OmitDuplicates", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.NewLineHandling
#include "System/Xml/NewLineHandling.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.NewLineHandling Replace
System::Xml::NewLineHandling System::Xml::NewLineHandling::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NewLineHandling::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::NewLineHandling>("System.Xml", "NewLineHandling", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NewLineHandling Replace
void System::Xml::NewLineHandling::_set_Replace(System::Xml::NewLineHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NewLineHandling::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NewLineHandling", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.NewLineHandling Entitize
System::Xml::NewLineHandling System::Xml::NewLineHandling::_get_Entitize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NewLineHandling::_get_Entitize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::NewLineHandling>("System.Xml", "NewLineHandling", "Entitize"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NewLineHandling Entitize
void System::Xml::NewLineHandling::_set_Entitize(System::Xml::NewLineHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NewLineHandling::_set_Entitize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NewLineHandling", "Entitize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.NewLineHandling None
System::Xml::NewLineHandling System::Xml::NewLineHandling::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NewLineHandling::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::NewLineHandling>("System.Xml", "NewLineHandling", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.NewLineHandling None
void System::Xml::NewLineHandling::_set_None(System::Xml::NewLineHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::NewLineHandling::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "NewLineHandling", "None", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.QueryOutputWriter
#include "System/Xml/QueryOutputWriter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.QueryOutputWriter.StartCDataSection
bool System::Xml::QueryOutputWriter::StartCDataSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::StartCDataSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.EndCDataSection
void System::Xml::QueryOutputWriter::EndCDataSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::EndCDataSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.set_NamespaceResolver
void System::Xml::QueryOutputWriter::set_NamespaceResolver(System::Xml::IXmlNamespaceResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::set_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteXmlDeclaration
void System::Xml::QueryOutputWriter::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteXmlDeclaration
void System::Xml::QueryOutputWriter::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteDocType
void System::Xml::QueryOutputWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteStartElement
void System::Xml::QueryOutputWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteEndElement
void System::Xml::QueryOutputWriter::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteFullEndElement
void System::Xml::QueryOutputWriter::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.StartElementContent
void System::Xml::QueryOutputWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteStartAttribute
void System::Xml::QueryOutputWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteEndAttribute
void System::Xml::QueryOutputWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteNamespaceDeclaration
void System::Xml::QueryOutputWriter::WriteNamespaceDeclaration(::Il2CppString* prefix, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.QueryOutputWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::QueryOutputWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteStartNamespaceDeclaration
void System::Xml::QueryOutputWriter::WriteStartNamespaceDeclaration(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteEndNamespaceDeclaration
void System::Xml::QueryOutputWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteCData
void System::Xml::QueryOutputWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteComment
void System::Xml::QueryOutputWriter::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteProcessingInstruction
void System::Xml::QueryOutputWriter::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteWhitespace
void System::Xml::QueryOutputWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteString
void System::Xml::QueryOutputWriter::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteChars
void System::Xml::QueryOutputWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteEntityRef
void System::Xml::QueryOutputWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteCharEntity
void System::Xml::QueryOutputWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteSurrogateCharEntity
void System::Xml::QueryOutputWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteRaw
void System::Xml::QueryOutputWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.QueryOutputWriter.WriteRaw
void System::Xml::QueryOutputWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.QueryOutputWriter.Close
void System::Xml::QueryOutputWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.QueryOutputWriter.Flush
void System::Xml::QueryOutputWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::QueryOutputWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ElementProperties
#include "System/Xml/ElementProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties DEFAULT
System::Xml::ElementProperties System::Xml::ElementProperties::_get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_get_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ElementProperties>("System.Xml", "ElementProperties", "DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties DEFAULT
void System::Xml::ElementProperties::_set_DEFAULT(System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_set_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties URI_PARENT
System::Xml::ElementProperties System::Xml::ElementProperties::_get_URI_PARENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_get_URI_PARENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ElementProperties>("System.Xml", "ElementProperties", "URI_PARENT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties URI_PARENT
void System::Xml::ElementProperties::_set_URI_PARENT(System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_set_URI_PARENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "URI_PARENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties BOOL_PARENT
System::Xml::ElementProperties System::Xml::ElementProperties::_get_BOOL_PARENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_get_BOOL_PARENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ElementProperties>("System.Xml", "ElementProperties", "BOOL_PARENT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties BOOL_PARENT
void System::Xml::ElementProperties::_set_BOOL_PARENT(System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_set_BOOL_PARENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "BOOL_PARENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties NAME_PARENT
System::Xml::ElementProperties System::Xml::ElementProperties::_get_NAME_PARENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_get_NAME_PARENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ElementProperties>("System.Xml", "ElementProperties", "NAME_PARENT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties NAME_PARENT
void System::Xml::ElementProperties::_set_NAME_PARENT(System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_set_NAME_PARENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "NAME_PARENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties EMPTY
System::Xml::ElementProperties System::Xml::ElementProperties::_get_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_get_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ElementProperties>("System.Xml", "ElementProperties", "EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties EMPTY
void System::Xml::ElementProperties::_set_EMPTY(System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_set_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties NO_ENTITIES
System::Xml::ElementProperties System::Xml::ElementProperties::_get_NO_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_get_NO_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ElementProperties>("System.Xml", "ElementProperties", "NO_ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties NO_ENTITIES
void System::Xml::ElementProperties::_set_NO_ENTITIES(System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_set_NO_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "NO_ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties HEAD
System::Xml::ElementProperties System::Xml::ElementProperties::_get_HEAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_get_HEAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ElementProperties>("System.Xml", "ElementProperties", "HEAD"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties HEAD
void System::Xml::ElementProperties::_set_HEAD(System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_set_HEAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "HEAD", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties BLOCK_WS
System::Xml::ElementProperties System::Xml::ElementProperties::_get_BLOCK_WS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_get_BLOCK_WS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ElementProperties>("System.Xml", "ElementProperties", "BLOCK_WS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties BLOCK_WS
void System::Xml::ElementProperties::_set_BLOCK_WS(System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_set_BLOCK_WS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "BLOCK_WS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ElementProperties HAS_NS
System::Xml::ElementProperties System::Xml::ElementProperties::_get_HAS_NS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_get_HAS_NS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ElementProperties>("System.Xml", "ElementProperties", "HAS_NS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ElementProperties HAS_NS
void System::Xml::ElementProperties::_set_HAS_NS(System::Xml::ElementProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ElementProperties::_set_HAS_NS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ElementProperties", "HAS_NS", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.AttributeProperties
#include "System/Xml/AttributeProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.AttributeProperties DEFAULT
System::Xml::AttributeProperties System::Xml::AttributeProperties::_get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AttributeProperties::_get_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::AttributeProperties>("System.Xml", "AttributeProperties", "DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.AttributeProperties DEFAULT
void System::Xml::AttributeProperties::_set_DEFAULT(System::Xml::AttributeProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AttributeProperties::_set_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AttributeProperties", "DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.AttributeProperties URI
System::Xml::AttributeProperties System::Xml::AttributeProperties::_get_URI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AttributeProperties::_get_URI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::AttributeProperties>("System.Xml", "AttributeProperties", "URI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.AttributeProperties URI
void System::Xml::AttributeProperties::_set_URI(System::Xml::AttributeProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AttributeProperties::_set_URI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AttributeProperties", "URI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.AttributeProperties BOOLEAN
System::Xml::AttributeProperties System::Xml::AttributeProperties::_get_BOOLEAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AttributeProperties::_get_BOOLEAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::AttributeProperties>("System.Xml", "AttributeProperties", "BOOLEAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.AttributeProperties BOOLEAN
void System::Xml::AttributeProperties::_set_BOOLEAN(System::Xml::AttributeProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AttributeProperties::_set_BOOLEAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AttributeProperties", "BOOLEAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.AttributeProperties NAME
System::Xml::AttributeProperties System::Xml::AttributeProperties::_get_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AttributeProperties::_get_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::AttributeProperties>("System.Xml", "AttributeProperties", "NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.AttributeProperties NAME
void System::Xml::AttributeProperties::_set_NAME(System::Xml::AttributeProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AttributeProperties::_set_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AttributeProperties", "NAME", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.TernaryTreeReadOnly.FindCaseInsensitiveString
uint8_t System::Xml::TernaryTreeReadOnly::FindCaseInsensitiveString(::Il2CppString* stringToFind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TernaryTreeReadOnly::FindCaseInsensitiveString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCaseInsensitiveString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToFind)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, stringToFind);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
// Including type: System.Xml.SecureStringHasher/HashCodeOfStringDelegate
#include "System/Xml/SecureStringHasher_HashCodeOfStringDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.SecureStringHasher/HashCodeOfStringDelegate hashCodeDelegate
System::Xml::SecureStringHasher::HashCodeOfStringDelegate* System::Xml::SecureStringHasher::_get_hashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::SecureStringHasher::_get_hashCodeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::SecureStringHasher::HashCodeOfStringDelegate*>("System.Xml", "SecureStringHasher", "hashCodeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.SecureStringHasher/HashCodeOfStringDelegate hashCodeDelegate
void System::Xml::SecureStringHasher::_set_hashCodeDelegate(System::Xml::SecureStringHasher::HashCodeOfStringDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::SecureStringHasher::_set_hashCodeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "SecureStringHasher", "hashCodeDelegate", value));
}
// Autogenerated method: System.Xml.SecureStringHasher.Equals
bool System::Xml::SecureStringHasher::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::SecureStringHasher::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Xml.SecureStringHasher.GetHashCode
int System::Xml::SecureStringHasher::GetHashCode(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::SecureStringHasher::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Xml.SecureStringHasher.GetHashCodeOfString
int System::Xml::SecureStringHasher::GetHashCodeOfString(::Il2CppString* key, int sLen, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::SecureStringHasher::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "SecureStringHasher", "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key, sLen, additionalEntropy);
}
// Autogenerated method: System.Xml.SecureStringHasher.GetHashCodeDelegate
System::Xml::SecureStringHasher::HashCodeOfStringDelegate* System::Xml::SecureStringHasher::GetHashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::SecureStringHasher::GetHashCodeDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "SecureStringHasher", "GetHashCodeDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::SecureStringHasher::HashCodeOfStringDelegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.SecureStringHasher/HashCodeOfStringDelegate
#include "System/Xml/SecureStringHasher_HashCodeOfStringDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.SecureStringHasher/HashCodeOfStringDelegate.Invoke
int System::Xml::SecureStringHasher::HashCodeOfStringDelegate::Invoke(::Il2CppString* s, int sLen, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::SecureStringHasher::HashCodeOfStringDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, sLen, additionalEntropy);
}
// Autogenerated method: System.Xml.SecureStringHasher/HashCodeOfStringDelegate.BeginInvoke
System::IAsyncResult* System::Xml::SecureStringHasher::HashCodeOfStringDelegate::BeginInvoke(::Il2CppString* s, int sLen, int64_t additionalEntropy, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::SecureStringHasher::HashCodeOfStringDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, s, sLen, additionalEntropy, callback, object);
}
// Autogenerated method: System.Xml.SecureStringHasher/HashCodeOfStringDelegate.EndInvoke
int System::Xml::SecureStringHasher::HashCodeOfStringDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::SecureStringHasher::HashCodeOfStringDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.TextEncodedRawTextWriter
#include "System/Xml/TextEncodedRawTextWriter.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::TextEncodedRawTextWriter::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::TextEncodedRawTextWriter::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteDocType
void System::Xml::TextEncodedRawTextWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteStartElement
void System::Xml::TextEncodedRawTextWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteEndElement
void System::Xml::TextEncodedRawTextWriter::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteFullEndElement
void System::Xml::TextEncodedRawTextWriter::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.StartElementContent
void System::Xml::TextEncodedRawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteStartAttribute
void System::Xml::TextEncodedRawTextWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteEndAttribute
void System::Xml::TextEncodedRawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteNamespaceDeclaration
void System::Xml::TextEncodedRawTextWriter::WriteNamespaceDeclaration(::Il2CppString* prefix, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::TextEncodedRawTextWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteCData
void System::Xml::TextEncodedRawTextWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteComment
void System::Xml::TextEncodedRawTextWriter::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteProcessingInstruction
void System::Xml::TextEncodedRawTextWriter::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteEntityRef
void System::Xml::TextEncodedRawTextWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteCharEntity
void System::Xml::TextEncodedRawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteSurrogateCharEntity
void System::Xml::TextEncodedRawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteWhitespace
void System::Xml::TextEncodedRawTextWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteString
void System::Xml::TextEncodedRawTextWriter::WriteString(::Il2CppString* textBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textBlock)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textBlock);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteChars
void System::Xml::TextEncodedRawTextWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteRaw
void System::Xml::TextEncodedRawTextWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.TextEncodedRawTextWriter.WriteRaw
void System::Xml::TextEncodedRawTextWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextEncodedRawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.TextUtf8RawTextWriter
#include "System/Xml/TextUtf8RawTextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::TextUtf8RawTextWriter::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::TextUtf8RawTextWriter::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteDocType
void System::Xml::TextUtf8RawTextWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteStartElement
void System::Xml::TextUtf8RawTextWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteEndElement
void System::Xml::TextUtf8RawTextWriter::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteFullEndElement
void System::Xml::TextUtf8RawTextWriter::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.StartElementContent
void System::Xml::TextUtf8RawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteStartAttribute
void System::Xml::TextUtf8RawTextWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteEndAttribute
void System::Xml::TextUtf8RawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteNamespaceDeclaration
void System::Xml::TextUtf8RawTextWriter::WriteNamespaceDeclaration(::Il2CppString* prefix, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::TextUtf8RawTextWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteCData
void System::Xml::TextUtf8RawTextWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteComment
void System::Xml::TextUtf8RawTextWriter::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteProcessingInstruction
void System::Xml::TextUtf8RawTextWriter::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteEntityRef
void System::Xml::TextUtf8RawTextWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteCharEntity
void System::Xml::TextUtf8RawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteSurrogateCharEntity
void System::Xml::TextUtf8RawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteWhitespace
void System::Xml::TextUtf8RawTextWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteString
void System::Xml::TextUtf8RawTextWriter::WriteString(::Il2CppString* textBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textBlock)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textBlock);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteChars
void System::Xml::TextUtf8RawTextWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteRaw
void System::Xml::TextUtf8RawTextWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.TextUtf8RawTextWriter.WriteRaw
void System::Xml::TextUtf8RawTextWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TextUtf8RawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlAsyncCheckWriter
#include "System/Xml/XmlAsyncCheckWriter.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Xml.WriteState
#include "System/Xml/WriteState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.CheckAsync
void System::Xml::XmlAsyncCheckWriter::CheckAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::CheckAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteStartDocument
void System::Xml::XmlAsyncCheckWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteDocType
void System::Xml::XmlAsyncCheckWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteStartElement
void System::Xml::XmlAsyncCheckWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteEndElement
void System::Xml::XmlAsyncCheckWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteFullEndElement
void System::Xml::XmlAsyncCheckWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteStartAttribute
void System::Xml::XmlAsyncCheckWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteEndAttribute
void System::Xml::XmlAsyncCheckWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteCData
void System::Xml::XmlAsyncCheckWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteComment
void System::Xml::XmlAsyncCheckWriter::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteProcessingInstruction
void System::Xml::XmlAsyncCheckWriter::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteEntityRef
void System::Xml::XmlAsyncCheckWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteCharEntity
void System::Xml::XmlAsyncCheckWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteWhitespace
void System::Xml::XmlAsyncCheckWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteString
void System::Xml::XmlAsyncCheckWriter::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteSurrogateCharEntity
void System::Xml::XmlAsyncCheckWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteChars
void System::Xml::XmlAsyncCheckWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteRaw
void System::Xml::XmlAsyncCheckWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteRaw
void System::Xml::XmlAsyncCheckWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteBase64
void System::Xml::XmlAsyncCheckWriter::WriteBase64(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteBinHex
void System::Xml::XmlAsyncCheckWriter::WriteBinHex(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.get_WriteState
System::Xml::WriteState System::Xml::XmlAsyncCheckWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::get_WriteState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.Close
void System::Xml::XmlAsyncCheckWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.Flush
void System::Xml::XmlAsyncCheckWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.LookupPrefix
::Il2CppString* System::Xml::XmlAsyncCheckWriter::LookupPrefix(::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.WriteValue
void System::Xml::XmlAsyncCheckWriter::WriteValue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAsyncCheckWriter.Dispose
void System::Xml::XmlAsyncCheckWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAsyncCheckWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlAutoDetectWriter
#include "System/Xml/XmlAutoDetectWriter.hpp"
// Including type: System.Xml.OnRemoveWriter
#include "System/Xml/OnRemoveWriter.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.Xml.XmlEventCache
#include "System/Xml/XmlEventCache.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlOutputMethod
#include "System/Xml/XmlOutputMethod.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlAutoDetectWriter.IsHtmlTag
bool System::Xml::XmlAutoDetectWriter::IsHtmlTag(::Il2CppString* tagName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::IsHtmlTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlAutoDetectWriter", "IsHtmlTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tagName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tagName);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.EnsureWrappedWriter
void System::Xml::XmlAutoDetectWriter::EnsureWrappedWriter(System::Xml::XmlOutputMethod outMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::EnsureWrappedWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWrappedWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outMethod)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outMethod);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.TextBlockCreatesWriter
bool System::Xml::XmlAutoDetectWriter::TextBlockCreatesWriter(::Il2CppString* textBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::TextBlockCreatesWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextBlockCreatesWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textBlock)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, textBlock);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.CreateWrappedWriter
void System::Xml::XmlAutoDetectWriter::CreateWrappedWriter(System::Xml::XmlOutputMethod outMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::CreateWrappedWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWrappedWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outMethod)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outMethod);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteDocType
void System::Xml::XmlAutoDetectWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteStartElement
void System::Xml::XmlAutoDetectWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteStartAttribute
void System::Xml::XmlAutoDetectWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteEndAttribute
void System::Xml::XmlAutoDetectWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteCData
void System::Xml::XmlAutoDetectWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteComment
void System::Xml::XmlAutoDetectWriter::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteProcessingInstruction
void System::Xml::XmlAutoDetectWriter::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteWhitespace
void System::Xml::XmlAutoDetectWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteString
void System::Xml::XmlAutoDetectWriter::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteChars
void System::Xml::XmlAutoDetectWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteRaw
void System::Xml::XmlAutoDetectWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteRaw
void System::Xml::XmlAutoDetectWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteEntityRef
void System::Xml::XmlAutoDetectWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteCharEntity
void System::Xml::XmlAutoDetectWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteSurrogateCharEntity
void System::Xml::XmlAutoDetectWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteBase64
void System::Xml::XmlAutoDetectWriter::WriteBase64(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteBinHex
void System::Xml::XmlAutoDetectWriter::WriteBinHex(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.Close
void System::Xml::XmlAutoDetectWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.Flush
void System::Xml::XmlAutoDetectWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteValue
void System::Xml::XmlAutoDetectWriter::WriteValue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.set_NamespaceResolver
void System::Xml::XmlAutoDetectWriter::set_NamespaceResolver(System::Xml::IXmlNamespaceResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::set_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteXmlDeclaration
void System::Xml::XmlAutoDetectWriter::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteXmlDeclaration
void System::Xml::XmlAutoDetectWriter::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.StartElementContent
void System::Xml::XmlAutoDetectWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteEndElement
void System::Xml::XmlAutoDetectWriter::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteFullEndElement
void System::Xml::XmlAutoDetectWriter::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteNamespaceDeclaration
void System::Xml::XmlAutoDetectWriter::WriteNamespaceDeclaration(::Il2CppString* prefix, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::XmlAutoDetectWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteStartNamespaceDeclaration
void System::Xml::XmlAutoDetectWriter::WriteStartNamespaceDeclaration(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlAutoDetectWriter.WriteEndNamespaceDeclaration
void System::Xml::XmlAutoDetectWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlAutoDetectWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlEncodedRawTextWriter
#include "System/Xml/XmlEncodedRawTextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.FlushBuffer
void System::Xml::XmlEncodedRawTextWriter::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.EncodeChars
void System::Xml::XmlEncodedRawTextWriter::EncodeChars(int startOffset, int endOffset, bool writeAllToStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::EncodeChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startOffset), ::il2cpp_utils::ExtractType(endOffset), ::il2cpp_utils::ExtractType(writeAllToStream)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startOffset, endOffset, writeAllToStream);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.FlushEncoder
void System::Xml::XmlEncodedRawTextWriter::FlushEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::FlushEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteAttributeTextBlock
void System::Xml::XmlEncodedRawTextWriter::WriteAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteElementTextBlock
void System::Xml::XmlEncodedRawTextWriter::WriteElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.RawText
void System::Xml::XmlEncodedRawTextWriter::RawText(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::RawText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RawText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.RawText
void System::Xml::XmlEncodedRawTextWriter::RawText(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::RawText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RawText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrcBegin), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrcBegin, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteRawWithCharChecking
void System::Xml::XmlEncodedRawTextWriter::WriteRawWithCharChecking(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteRawWithCharChecking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawWithCharChecking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrcBegin), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrcBegin, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteCommentOrPi
void System::Xml::XmlEncodedRawTextWriter::WriteCommentOrPi(::Il2CppString* text, int stopChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteCommentOrPi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCommentOrPi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(stopChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, stopChar);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteCDataSection
void System::Xml::XmlEncodedRawTextWriter::WriteCDataSection(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteCDataSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.EncodeSurrogate
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::EncodeSurrogate(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd, ::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::EncodeSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "EncodeSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pSrc, pSrcEnd, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.InvalidXmlChar
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::InvalidXmlChar(int ch, ::Il2CppChar* pDst, bool entitize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::InvalidXmlChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidXmlChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(entitize)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(this, ___internal__method, ch, pDst, entitize);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.EncodeChar
void System::Xml::XmlEncodedRawTextWriter::EncodeChar(::Il2CppChar*& pSrc, ::Il2CppChar* pSrcEnd, ::Il2CppChar*& pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::EncodeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.ChangeTextContentMark
void System::Xml::XmlEncodedRawTextWriter::ChangeTextContentMark(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::ChangeTextContentMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTextContentMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.GrowTextContentMarks
void System::Xml::XmlEncodedRawTextWriter::GrowTextContentMarks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::GrowTextContentMarks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrowTextContentMarks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteNewLine
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::WriteNewLine(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(this, ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.LtEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::LtEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::LtEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "LtEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.GtEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::GtEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::GtEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "GtEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.AmpEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::AmpEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::AmpEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "AmpEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.QuoteEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::QuoteEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::QuoteEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "QuoteEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.TabEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::TabEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::TabEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "TabEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.LineFeedEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::LineFeedEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::LineFeedEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "LineFeedEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.CarriageReturnEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::CarriageReturnEntity(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::CarriageReturnEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "CarriageReturnEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.CharEntity
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::CharEntity(::Il2CppChar* pDst, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::CharEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "CharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst, ch);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.RawStartCData
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::RawStartCData(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::RawStartCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "RawStartCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.RawEndCData
::Il2CppChar* System::Xml::XmlEncodedRawTextWriter::RawEndCData(::Il2CppChar* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::RawEndCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEncodedRawTextWriter", "RawEndCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.ValidateContentChars
void System::Xml::XmlEncodedRawTextWriter::ValidateContentChars(::Il2CppString* chars, ::Il2CppString* propertyName, bool allowOnlyWhitespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::ValidateContentChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateContentChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(allowOnlyWhitespace)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chars, propertyName, allowOnlyWhitespace);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteDocType
void System::Xml::XmlEncodedRawTextWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteStartElement
void System::Xml::XmlEncodedRawTextWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.StartElementContent
void System::Xml::XmlEncodedRawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteEndElement
void System::Xml::XmlEncodedRawTextWriter::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteFullEndElement
void System::Xml::XmlEncodedRawTextWriter::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteStartAttribute
void System::Xml::XmlEncodedRawTextWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteEndAttribute
void System::Xml::XmlEncodedRawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteNamespaceDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteNamespaceDeclaration(::Il2CppString* prefix, ::Il2CppString* namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(namespaceName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, namespaceName);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::XmlEncodedRawTextWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteStartNamespaceDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteStartNamespaceDeclaration(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteEndNamespaceDeclaration
void System::Xml::XmlEncodedRawTextWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteCData
void System::Xml::XmlEncodedRawTextWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteComment
void System::Xml::XmlEncodedRawTextWriter::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteProcessingInstruction
void System::Xml::XmlEncodedRawTextWriter::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteEntityRef
void System::Xml::XmlEncodedRawTextWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteCharEntity
void System::Xml::XmlEncodedRawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteWhitespace
void System::Xml::XmlEncodedRawTextWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteString
void System::Xml::XmlEncodedRawTextWriter::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteSurrogateCharEntity
void System::Xml::XmlEncodedRawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteChars
void System::Xml::XmlEncodedRawTextWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteRaw
void System::Xml::XmlEncodedRawTextWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.WriteRaw
void System::Xml::XmlEncodedRawTextWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.Close
void System::Xml::XmlEncodedRawTextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriter.Flush
void System::Xml::XmlEncodedRawTextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlEncodedRawTextWriterIndent
#include "System/Xml/XmlEncodedRawTextWriterIndent.hpp"
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.Init
void System::Xml::XmlEncodedRawTextWriterIndent::Init(System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteIndent
void System::Xml::XmlEncodedRawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteDocType
void System::Xml::XmlEncodedRawTextWriterIndent::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteStartElement
void System::Xml::XmlEncodedRawTextWriterIndent::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.StartElementContent
void System::Xml::XmlEncodedRawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.OnRootElement
void System::Xml::XmlEncodedRawTextWriterIndent::OnRootElement(System::Xml::ConformanceLevel currentConformanceLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::OnRootElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRootElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentConformanceLevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentConformanceLevel);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteEndElement
void System::Xml::XmlEncodedRawTextWriterIndent::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteFullEndElement
void System::Xml::XmlEncodedRawTextWriterIndent::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteStartAttribute
void System::Xml::XmlEncodedRawTextWriterIndent::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteCData
void System::Xml::XmlEncodedRawTextWriterIndent::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteComment
void System::Xml::XmlEncodedRawTextWriterIndent::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteProcessingInstruction
void System::Xml::XmlEncodedRawTextWriterIndent::WriteProcessingInstruction(::Il2CppString* target, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteEntityRef
void System::Xml::XmlEncodedRawTextWriterIndent::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteCharEntity
void System::Xml::XmlEncodedRawTextWriterIndent::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteSurrogateCharEntity
void System::Xml::XmlEncodedRawTextWriterIndent::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteWhitespace
void System::Xml::XmlEncodedRawTextWriterIndent::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteString
void System::Xml::XmlEncodedRawTextWriterIndent::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteChars
void System::Xml::XmlEncodedRawTextWriterIndent::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteRaw
void System::Xml::XmlEncodedRawTextWriterIndent::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteRaw
void System::Xml::XmlEncodedRawTextWriterIndent::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlEncodedRawTextWriterIndent.WriteBase64
void System::Xml::XmlEncodedRawTextWriterIndent::WriteBase64(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEncodedRawTextWriterIndent::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlEventCache
#include "System/Xml/XmlEventCache.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlEventCache.EndEvents
void System::Xml::XmlEventCache::EndEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::EndEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.EventsToWriter
void System::Xml::XmlEventCache::EventsToWriter(System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::EventsToWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EventsToWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(System::Xml::XmlEventCache::XmlEventType eventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventType);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventType, s1);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1, ::Il2CppString* s2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventType, s1, s2);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1, ::Il2CppString* s2, ::Il2CppString* s3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(s3)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventType, s1, s2, s3);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1, ::Il2CppString* s2, ::Il2CppString* s3, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(s3), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventType, s1, s2, s3, o);
}
// Autogenerated method: System.Xml.XmlEventCache.AddEvent
void System::Xml::XmlEventCache::AddEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventType, o);
}
// Autogenerated method: System.Xml.XmlEventCache.NewEvent
int System::Xml::XmlEventCache::NewEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::NewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.ToBytes
::Array<uint8_t>* System::Xml::XmlEventCache::ToBytes(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlEventCache", "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteDocType
void System::Xml::XmlEventCache::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteStartElement
void System::Xml::XmlEventCache::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteStartAttribute
void System::Xml::XmlEventCache::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteEndAttribute
void System::Xml::XmlEventCache::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteCData
void System::Xml::XmlEventCache::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteComment
void System::Xml::XmlEventCache::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteProcessingInstruction
void System::Xml::XmlEventCache::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteWhitespace
void System::Xml::XmlEventCache::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteString
void System::Xml::XmlEventCache::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteChars
void System::Xml::XmlEventCache::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteRaw
void System::Xml::XmlEventCache::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteRaw
void System::Xml::XmlEventCache::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteEntityRef
void System::Xml::XmlEventCache::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteCharEntity
void System::Xml::XmlEventCache::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteSurrogateCharEntity
void System::Xml::XmlEventCache::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteBase64
void System::Xml::XmlEventCache::WriteBase64(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteBinHex
void System::Xml::XmlEventCache::WriteBinHex(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlEventCache.Close
void System::Xml::XmlEventCache::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.Flush
void System::Xml::XmlEventCache::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteValue
void System::Xml::XmlEventCache::WriteValue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlEventCache.Dispose
void System::Xml::XmlEventCache::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteXmlDeclaration
void System::Xml::XmlEventCache::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteXmlDeclaration
void System::Xml::XmlEventCache::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlEventCache.StartElementContent
void System::Xml::XmlEventCache::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteEndElement
void System::Xml::XmlEventCache::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteFullEndElement
void System::Xml::XmlEventCache::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteNamespaceDeclaration
void System::Xml::XmlEventCache::WriteNamespaceDeclaration(::Il2CppString* prefix, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlEventCache.WriteEndBase64
void System::Xml::XmlEventCache::WriteEndBase64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::WriteEndBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlEventCache/XmlEventType
#include "System/Xml/XmlEventCache.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType Unknown
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType Unknown
void System::Xml::XmlEventCache::XmlEventType::_set_Unknown(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType DocType
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_DocType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_DocType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "DocType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType DocType
void System::Xml::XmlEventCache::XmlEventType::_set_DocType(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_DocType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "DocType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType StartElem
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_StartElem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_StartElem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "StartElem"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType StartElem
void System::Xml::XmlEventCache::XmlEventType::_set_StartElem(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_StartElem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "StartElem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType StartAttr
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_StartAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_StartAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "StartAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType StartAttr
void System::Xml::XmlEventCache::XmlEventType::_set_StartAttr(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_StartAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "StartAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType EndAttr
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_EndAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_EndAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "EndAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType EndAttr
void System::Xml::XmlEventCache::XmlEventType::_set_EndAttr(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_EndAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "EndAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType CData
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_CData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_CData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "CData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType CData
void System::Xml::XmlEventCache::XmlEventType::_set_CData(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_CData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "CData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType Comment
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType Comment
void System::Xml::XmlEventCache::XmlEventType::_set_Comment(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType PI
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType PI
void System::Xml::XmlEventCache::XmlEventType::_set_PI(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType Whitespace
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType Whitespace
void System::Xml::XmlEventCache::XmlEventType::_set_Whitespace(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Whitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType String
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType String
void System::Xml::XmlEventCache::XmlEventType::_set_String(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType Raw
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType Raw
void System::Xml::XmlEventCache::XmlEventType::_set_Raw(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType EntRef
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_EntRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_EntRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "EntRef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType EntRef
void System::Xml::XmlEventCache::XmlEventType::_set_EntRef(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_EntRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "EntRef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType CharEnt
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_CharEnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_CharEnt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "CharEnt"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType CharEnt
void System::Xml::XmlEventCache::XmlEventType::_set_CharEnt(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_CharEnt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "CharEnt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType SurrCharEnt
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_SurrCharEnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_SurrCharEnt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "SurrCharEnt"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType SurrCharEnt
void System::Xml::XmlEventCache::XmlEventType::_set_SurrCharEnt(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_SurrCharEnt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "SurrCharEnt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType Base64
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Base64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_Base64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Base64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType Base64
void System::Xml::XmlEventCache::XmlEventType::_set_Base64(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_Base64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Base64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType BinHex
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_BinHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_BinHex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "BinHex"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType BinHex
void System::Xml::XmlEventCache::XmlEventType::_set_BinHex(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_BinHex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "BinHex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType XmlDecl1
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_XmlDecl1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_XmlDecl1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "XmlDecl1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType XmlDecl1
void System::Xml::XmlEventCache::XmlEventType::_set_XmlDecl1(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_XmlDecl1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "XmlDecl1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType XmlDecl2
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_XmlDecl2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_XmlDecl2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "XmlDecl2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType XmlDecl2
void System::Xml::XmlEventCache::XmlEventType::_set_XmlDecl2(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_XmlDecl2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "XmlDecl2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType StartContent
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_StartContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_StartContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "StartContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType StartContent
void System::Xml::XmlEventCache::XmlEventType::_set_StartContent(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_StartContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "StartContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType EndElem
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_EndElem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_EndElem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "EndElem"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType EndElem
void System::Xml::XmlEventCache::XmlEventType::_set_EndElem(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_EndElem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "EndElem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType FullEndElem
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_FullEndElem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_FullEndElem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "FullEndElem"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType FullEndElem
void System::Xml::XmlEventCache::XmlEventType::_set_FullEndElem(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_FullEndElem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "FullEndElem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType Nmsp
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Nmsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_Nmsp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Nmsp"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType Nmsp
void System::Xml::XmlEventCache::XmlEventType::_set_Nmsp(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_Nmsp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Nmsp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType EndBase64
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_EndBase64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_EndBase64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "EndBase64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType EndBase64
void System::Xml::XmlEventCache::XmlEventType::_set_EndBase64(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_EndBase64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "EndBase64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType Close
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_Close");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Close"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType Close
void System::Xml::XmlEventCache::XmlEventType::_set_Close(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_Close");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Close", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType Flush
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType Flush
void System::Xml::XmlEventCache::XmlEventType::_set_Flush(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlEventCache/XmlEventType Dispose
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEventType::_get_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_get_Dispose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlEventCache::XmlEventType>("System.Xml", "XmlEventCache/XmlEventType", "Dispose"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlEventCache/XmlEventType Dispose
void System::Xml::XmlEventCache::XmlEventType::_set_Dispose(System::Xml::XmlEventCache::XmlEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEventType::_set_Dispose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlEventCache/XmlEventType", "Dispose", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlEventCache/XmlEvent
#include "System/Xml/XmlEventCache.hpp"
// Including type: System.Xml.XmlEventCache/XmlEventType
// Already included the same include: System/Xml/XmlEventCache.hpp
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(System::Xml::XmlEventCache::XmlEventType eventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, eventType);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, eventType, s1);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1, ::Il2CppString* s2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, eventType, s1, s2);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1, ::Il2CppString* s2, ::Il2CppString* s3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(s3)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, eventType, s1, s2, s3);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1, ::Il2CppString* s2, ::Il2CppString* s3, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(s3), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, eventType, s1, s2, s3, o);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.InitEvent
void System::Xml::XmlEventCache::XmlEvent::InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::InitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, eventType, o);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.get_EventType
System::Xml::XmlEventCache::XmlEventType System::Xml::XmlEventCache::XmlEvent::get_EventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::get_EventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlEventCache::XmlEventType, false>(*this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.get_String1
::Il2CppString* System::Xml::XmlEventCache::XmlEvent::get_String1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::get_String1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_String1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.get_String2
::Il2CppString* System::Xml::XmlEventCache::XmlEvent::get_String2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::get_String2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_String2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.get_String3
::Il2CppString* System::Xml::XmlEventCache::XmlEvent::get_String3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::get_String3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_String3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEventCache/XmlEvent.get_Object
::Il2CppObject* System::Xml::XmlEventCache::XmlEvent::get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlEventCache::XmlEvent::get_Object");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
// Including type: System.Xml.XmlRawWriterBase64Encoder
#include "System/Xml/XmlRawWriterBase64Encoder.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
// Including type: System.Xml.ConformanceLevel
#include "System/Xml/ConformanceLevel.hpp"
// Including type: System.Xml.WriteState
#include "System/Xml/WriteState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlRawWriter.set_NamespaceResolver
void System::Xml::XmlRawWriter::set_NamespaceResolver(System::Xml::IXmlNamespaceResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::set_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteXmlDeclaration
void System::Xml::XmlRawWriter::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteXmlDeclaration
void System::Xml::XmlRawWriter::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlRawWriter.StartElementContent
void System::Xml::XmlRawWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.OnRootElement
void System::Xml::XmlRawWriter::OnRootElement(System::Xml::ConformanceLevel conformanceLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::OnRootElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRootElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conformanceLevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, conformanceLevel);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteEndElement
void System::Xml::XmlRawWriter::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteFullEndElement
void System::Xml::XmlRawWriter::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteNamespaceDeclaration
void System::Xml::XmlRawWriter::WriteNamespaceDeclaration(::Il2CppString* prefix, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlRawWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::XmlRawWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteStartNamespaceDeclaration
void System::Xml::XmlRawWriter::WriteStartNamespaceDeclaration(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteEndNamespaceDeclaration
void System::Xml::XmlRawWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteEndBase64
void System::Xml::XmlRawWriter::WriteEndBase64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteEndBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.Close
void System::Xml::XmlRawWriter::Close(System::Xml::WriteState currentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentState);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteStartDocument
void System::Xml::XmlRawWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteDocType
void System::Xml::XmlRawWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteEndElement
void System::Xml::XmlRawWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteFullEndElement
void System::Xml::XmlRawWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteBase64
void System::Xml::XmlRawWriter::WriteBase64(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlRawWriter.LookupPrefix
::Il2CppString* System::Xml::XmlRawWriter::LookupPrefix(::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.XmlRawWriter.get_WriteState
System::Xml::WriteState System::Xml::XmlRawWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::get_WriteState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteCData
void System::Xml::XmlRawWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteCharEntity
void System::Xml::XmlRawWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteSurrogateCharEntity
void System::Xml::XmlRawWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteWhitespace
void System::Xml::XmlRawWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteChars
void System::Xml::XmlRawWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteRaw
void System::Xml::XmlRawWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteRaw
void System::Xml::XmlRawWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlRawWriter.WriteValue
void System::Xml::XmlRawWriter::WriteValue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 IsTextualNodeBitmap
uint System::Xml::XmlReader::_get_IsTextualNodeBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlReader::_get_IsTextualNodeBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "IsTextualNodeBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 IsTextualNodeBitmap
void System::Xml::XmlReader::_set_IsTextualNodeBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlReader::_set_IsTextualNodeBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "IsTextualNodeBitmap", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 CanReadContentAsBitmap
uint System::Xml::XmlReader::_get_CanReadContentAsBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlReader::_get_CanReadContentAsBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "CanReadContentAsBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 CanReadContentAsBitmap
void System::Xml::XmlReader::_set_CanReadContentAsBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlReader::_set_CanReadContentAsBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "CanReadContentAsBitmap", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 HasValueBitmap
uint System::Xml::XmlReader::_get_HasValueBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlReader::_get_HasValueBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "HasValueBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 HasValueBitmap
void System::Xml::XmlReader::_set_HasValueBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlReader::_set_HasValueBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "HasValueBitmap", value));
}
// Autogenerated method: System.Xml.XmlReader..cctor
void System::Xml::XmlReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSpace
#include "System/Xml/XmlSpace.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSpace None
System::Xml::XmlSpace System::Xml::XmlSpace::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSpace::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSpace>("System.Xml", "XmlSpace", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSpace None
void System::Xml::XmlSpace::_set_None(System::Xml::XmlSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSpace::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSpace", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSpace Default
System::Xml::XmlSpace System::Xml::XmlSpace::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSpace::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSpace>("System.Xml", "XmlSpace", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSpace Default
void System::Xml::XmlSpace::_set_Default(System::Xml::XmlSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSpace::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSpace", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSpace Preserve
System::Xml::XmlSpace System::Xml::XmlSpace::_get_Preserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSpace::_get_Preserve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSpace>("System.Xml", "XmlSpace", "Preserve"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSpace Preserve
void System::Xml::XmlSpace::_set_Preserve(System::Xml::XmlSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSpace::_set_Preserve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSpace", "Preserve", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlUtf8RawTextWriter
#include "System/Xml/XmlUtf8RawTextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.FlushBuffer
void System::Xml::XmlUtf8RawTextWriter::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.FlushEncoder
void System::Xml::XmlUtf8RawTextWriter::FlushEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::FlushEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteAttributeTextBlock
void System::Xml::XmlUtf8RawTextWriter::WriteAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteElementTextBlock
void System::Xml::XmlUtf8RawTextWriter::WriteElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.RawText
void System::Xml::XmlUtf8RawTextWriter::RawText(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::RawText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RawText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.RawText
void System::Xml::XmlUtf8RawTextWriter::RawText(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::RawText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RawText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrcBegin), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrcBegin, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteRawWithCharChecking
void System::Xml::XmlUtf8RawTextWriter::WriteRawWithCharChecking(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteRawWithCharChecking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawWithCharChecking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrcBegin), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrcBegin, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteCommentOrPi
void System::Xml::XmlUtf8RawTextWriter::WriteCommentOrPi(::Il2CppString* text, int stopChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteCommentOrPi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCommentOrPi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(stopChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, stopChar);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteCDataSection
void System::Xml::XmlUtf8RawTextWriter::WriteCDataSection(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteCDataSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.IsSurrogateByte
bool System::Xml::XmlUtf8RawTextWriter::IsSurrogateByte(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::IsSurrogateByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "IsSurrogateByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, b);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.EncodeSurrogate
uint8_t* System::Xml::XmlUtf8RawTextWriter::EncodeSurrogate(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd, uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::EncodeSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "EncodeSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pSrc, pSrcEnd, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.InvalidXmlChar
uint8_t* System::Xml::XmlUtf8RawTextWriter::InvalidXmlChar(int ch, uint8_t* pDst, bool entitize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::InvalidXmlChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidXmlChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(entitize)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(this, ___internal__method, ch, pDst, entitize);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.EncodeChar
void System::Xml::XmlUtf8RawTextWriter::EncodeChar(::Il2CppChar*& pSrc, ::Il2CppChar* pSrcEnd, uint8_t*& pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::EncodeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pSrc, pSrcEnd, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.EncodeMultibyteUTF8
uint8_t* System::Xml::XmlUtf8RawTextWriter::EncodeMultibyteUTF8(int ch, uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::EncodeMultibyteUTF8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "EncodeMultibyteUTF8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.CharToUTF8
void System::Xml::XmlUtf8RawTextWriter::CharToUTF8(::Il2CppChar*& pSrc, ::Il2CppChar* pSrcEnd, uint8_t*& pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::CharToUTF8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "CharToUTF8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pSrc, pSrcEnd, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteNewLine
uint8_t* System::Xml::XmlUtf8RawTextWriter::WriteNewLine(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(this, ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.LtEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::LtEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::LtEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "LtEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.GtEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::GtEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::GtEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "GtEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.AmpEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::AmpEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::AmpEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "AmpEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.QuoteEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::QuoteEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::QuoteEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "QuoteEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.TabEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::TabEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::TabEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "TabEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.LineFeedEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::LineFeedEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::LineFeedEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "LineFeedEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.CarriageReturnEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::CarriageReturnEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::CarriageReturnEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "CarriageReturnEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.CharEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::CharEntity(uint8_t* pDst, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::CharEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "CharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst, ch);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.RawStartCData
uint8_t* System::Xml::XmlUtf8RawTextWriter::RawStartCData(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::RawStartCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "RawStartCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.RawEndCData
uint8_t* System::Xml::XmlUtf8RawTextWriter::RawEndCData(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::RawEndCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "RawEndCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.ValidateContentChars
void System::Xml::XmlUtf8RawTextWriter::ValidateContentChars(::Il2CppString* chars, ::Il2CppString* propertyName, bool allowOnlyWhitespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::ValidateContentChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateContentChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(allowOnlyWhitespace)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chars, propertyName, allowOnlyWhitespace);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteXmlDeclaration(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteXmlDeclaration(::Il2CppString* xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteDocType
void System::Xml::XmlUtf8RawTextWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteStartElement
void System::Xml::XmlUtf8RawTextWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.StartElementContent
void System::Xml::XmlUtf8RawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteEndElement
void System::Xml::XmlUtf8RawTextWriter::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteFullEndElement
void System::Xml::XmlUtf8RawTextWriter::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteStartAttribute
void System::Xml::XmlUtf8RawTextWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteEndAttribute
void System::Xml::XmlUtf8RawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteNamespaceDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteNamespaceDeclaration(::Il2CppString* prefix, ::Il2CppString* namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(namespaceName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, namespaceName);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::XmlUtf8RawTextWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteStartNamespaceDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteStartNamespaceDeclaration(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteEndNamespaceDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteCData
void System::Xml::XmlUtf8RawTextWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteComment
void System::Xml::XmlUtf8RawTextWriter::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteProcessingInstruction
void System::Xml::XmlUtf8RawTextWriter::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteEntityRef
void System::Xml::XmlUtf8RawTextWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteCharEntity
void System::Xml::XmlUtf8RawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteWhitespace
void System::Xml::XmlUtf8RawTextWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteString
void System::Xml::XmlUtf8RawTextWriter::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteSurrogateCharEntity
void System::Xml::XmlUtf8RawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteChars
void System::Xml::XmlUtf8RawTextWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteRaw
void System::Xml::XmlUtf8RawTextWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteRaw
void System::Xml::XmlUtf8RawTextWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.Close
void System::Xml::XmlUtf8RawTextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.Flush
void System::Xml::XmlUtf8RawTextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlUtf8RawTextWriterIndent
#include "System/Xml/XmlUtf8RawTextWriterIndent.hpp"
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.Init
void System::Xml::XmlUtf8RawTextWriterIndent::Init(System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteIndent
void System::Xml::XmlUtf8RawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteDocType
void System::Xml::XmlUtf8RawTextWriterIndent::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteStartElement
void System::Xml::XmlUtf8RawTextWriterIndent::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.StartElementContent
void System::Xml::XmlUtf8RawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.OnRootElement
void System::Xml::XmlUtf8RawTextWriterIndent::OnRootElement(System::Xml::ConformanceLevel currentConformanceLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::OnRootElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRootElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentConformanceLevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentConformanceLevel);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteEndElement
void System::Xml::XmlUtf8RawTextWriterIndent::WriteEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteFullEndElement
void System::Xml::XmlUtf8RawTextWriterIndent::WriteFullEndElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteStartAttribute
void System::Xml::XmlUtf8RawTextWriterIndent::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteCData
void System::Xml::XmlUtf8RawTextWriterIndent::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteComment
void System::Xml::XmlUtf8RawTextWriterIndent::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteProcessingInstruction
void System::Xml::XmlUtf8RawTextWriterIndent::WriteProcessingInstruction(::Il2CppString* target, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteEntityRef
void System::Xml::XmlUtf8RawTextWriterIndent::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteCharEntity
void System::Xml::XmlUtf8RawTextWriterIndent::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteSurrogateCharEntity
void System::Xml::XmlUtf8RawTextWriterIndent::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteWhitespace
void System::Xml::XmlUtf8RawTextWriterIndent::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteString
void System::Xml::XmlUtf8RawTextWriterIndent::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteChars
void System::Xml::XmlUtf8RawTextWriterIndent::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteRaw
void System::Xml::XmlUtf8RawTextWriterIndent::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteRaw
void System::Xml::XmlUtf8RawTextWriterIndent::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteBase64
void System::Xml::XmlUtf8RawTextWriterIndent::WriteBase64(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlUtf8RawTextWriterIndent::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter
#include "System/Xml/XmlWellFormedWriter.hpp"
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
// Including type: System.Xml.XmlWellFormedWriter/Token
#include "System/Xml/XmlWellFormedWriter_Token.hpp"
// Including type: System.Xml.XmlWellFormedWriter/NamespaceResolverProxy
#include "System/Xml/XmlWellFormedWriter_NamespaceResolverProxy.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.Xml.XmlWellFormedWriter/AttributeValueCache
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XmlException
#include "System/Xml/XmlException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.String[] stateName
::Array<::Il2CppString*>* System::Xml::XmlWellFormedWriter::_get_stateName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_get_stateName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Xml", "XmlWellFormedWriter", "stateName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String[] stateName
void System::Xml::XmlWellFormedWriter::_set_stateName(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_set_stateName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "stateName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String[] tokenName
::Array<::Il2CppString*>* System::Xml::XmlWellFormedWriter::_get_tokenName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_get_tokenName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Xml", "XmlWellFormedWriter", "tokenName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String[] tokenName
void System::Xml::XmlWellFormedWriter::_set_tokenName(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_set_tokenName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "tokenName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.WriteState[] state2WriteState
::Array<System::Xml::WriteState>* System::Xml::XmlWellFormedWriter::_get_state2WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_get_state2WriteState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Xml::WriteState>*>("System.Xml", "XmlWellFormedWriter", "state2WriteState"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.WriteState[] state2WriteState
void System::Xml::XmlWellFormedWriter::_set_state2WriteState(::Array<System::Xml::WriteState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_set_state2WriteState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "state2WriteState", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XmlWellFormedWriter/State[] StateTableDocument
::Array<System::Xml::XmlWellFormedWriter::State>* System::Xml::XmlWellFormedWriter::_get_StateTableDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_get_StateTableDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Xml::XmlWellFormedWriter::State>*>("System.Xml", "XmlWellFormedWriter", "StateTableDocument"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XmlWellFormedWriter/State[] StateTableDocument
void System::Xml::XmlWellFormedWriter::_set_StateTableDocument(::Array<System::Xml::XmlWellFormedWriter::State>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_set_StateTableDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "StateTableDocument", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XmlWellFormedWriter/State[] StateTableAuto
::Array<System::Xml::XmlWellFormedWriter::State>* System::Xml::XmlWellFormedWriter::_get_StateTableAuto() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_get_StateTableAuto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Xml::XmlWellFormedWriter::State>*>("System.Xml", "XmlWellFormedWriter", "StateTableAuto"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XmlWellFormedWriter/State[] StateTableAuto
void System::Xml::XmlWellFormedWriter::_set_StateTableAuto(::Array<System::Xml::XmlWellFormedWriter::State>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::_set_StateTableAuto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "StateTableAuto", value));
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_RawWriter
System::Xml::XmlRawWriter* System::Xml::XmlWellFormedWriter::get_RawWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::get_RawWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlRawWriter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_SaveAttrValue
bool System::Xml::XmlWellFormedWriter::get_SaveAttrValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::get_SaveAttrValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SaveAttrValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_InBase64
bool System::Xml::XmlWellFormedWriter::get_InBase64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::get_InBase64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.SetSpecialAttribute
void System::Xml::XmlWellFormedWriter::SetSpecialAttribute(System::Xml::XmlWellFormedWriter::SpecialAttribute special) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SetSpecialAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpecialAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(special)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, special);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteStartDocumentImpl
void System::Xml::XmlWellFormedWriter::WriteStartDocumentImpl(System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteStartDocumentImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocumentImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.StartFragment
void System::Xml::XmlWellFormedWriter::StartFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::StartFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.PushNamespaceImplicit
void System::Xml::XmlWellFormedWriter::PushNamespaceImplicit(::Il2CppString* prefix, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::PushNamespaceImplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushNamespaceImplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.PushNamespaceExplicit
bool System::Xml::XmlWellFormedWriter::PushNamespaceExplicit(::Il2CppString* prefix, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::PushNamespaceExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushNamespaceExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AddNamespace
void System::Xml::XmlWellFormedWriter::AddNamespace(::Il2CppString* prefix, ::Il2CppString* ns, System::Xml::XmlWellFormedWriter::NamespaceKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AddNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(kind)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, ns, kind);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AddToNamespaceHashtable
void System::Xml::XmlWellFormedWriter::AddToNamespaceHashtable(int namespaceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AddToNamespaceHashtable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToNamespaceHashtable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, namespaceIndex);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.LookupNamespaceIndex
int System::Xml::XmlWellFormedWriter::LookupNamespaceIndex(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::LookupNamespaceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespaceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.PopNamespaces
void System::Xml::XmlWellFormedWriter::PopNamespaces(int indexFrom, int indexTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::PopNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexFrom), ::il2cpp_utils::ExtractType(indexTo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indexFrom, indexTo);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.DupAttrException
System::Xml::XmlException* System::Xml::XmlWellFormedWriter::DupAttrException(::Il2CppString* prefix, ::Il2CppString* localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::DupAttrException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWellFormedWriter", "DupAttrException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlException*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AdvanceState
void System::Xml::XmlWellFormedWriter::AdvanceState(System::Xml::XmlWellFormedWriter::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AdvanceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdvanceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.StartElementContent
void System::Xml::XmlWellFormedWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::StartElementContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.GetStateName
::Il2CppString* System::Xml::XmlWellFormedWriter::GetStateName(System::Xml::XmlWellFormedWriter::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::GetStateName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWellFormedWriter", "GetStateName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.LookupNamespace
::Il2CppString* System::Xml::XmlWellFormedWriter::LookupNamespace(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::LookupNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.LookupLocalNamespace
::Il2CppString* System::Xml::XmlWellFormedWriter::LookupLocalNamespace(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::LookupLocalNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupLocalNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.GeneratePrefix
::Il2CppString* System::Xml::XmlWellFormedWriter::GeneratePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::GeneratePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GeneratePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.CheckNCName
void System::Xml::XmlWellFormedWriter::CheckNCName(::Il2CppString* ncname) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::CheckNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ncname)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ncname);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.InvalidCharsException
System::Exception* System::Xml::XmlWellFormedWriter::InvalidCharsException(::Il2CppString* name, int badCharIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::InvalidCharsException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWellFormedWriter", "InvalidCharsException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(badCharIndex)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, badCharIndex);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.ThrowInvalidStateTransition
void System::Xml::XmlWellFormedWriter::ThrowInvalidStateTransition(System::Xml::XmlWellFormedWriter::Token token, System::Xml::XmlWellFormedWriter::State currentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::ThrowInvalidStateTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowInvalidStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(currentState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, token, currentState);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_IsClosedOrErrorState
bool System::Xml::XmlWellFormedWriter::get_IsClosedOrErrorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::get_IsClosedOrErrorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsClosedOrErrorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AddAttribute
void System::Xml::XmlWellFormedWriter::AddAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, namespaceName);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AddToAttrHashTable
void System::Xml::XmlWellFormedWriter::AddToAttrHashTable(int attributeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AddToAttrHashTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToAttrHashTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attributeIndex);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter..cctor
void System::Xml::XmlWellFormedWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWellFormedWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_WriteState
System::Xml::WriteState System::Xml::XmlWellFormedWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::get_WriteState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteStartDocument
void System::Xml::XmlWellFormedWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteDocType
void System::Xml::XmlWellFormedWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteStartElement
void System::Xml::XmlWellFormedWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteEndElement
void System::Xml::XmlWellFormedWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteFullEndElement
void System::Xml::XmlWellFormedWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteStartAttribute
void System::Xml::XmlWellFormedWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, namespaceName);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteEndAttribute
void System::Xml::XmlWellFormedWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteCData
void System::Xml::XmlWellFormedWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteComment
void System::Xml::XmlWellFormedWriter::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteProcessingInstruction
void System::Xml::XmlWellFormedWriter::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteEntityRef
void System::Xml::XmlWellFormedWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteCharEntity
void System::Xml::XmlWellFormedWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteSurrogateCharEntity
void System::Xml::XmlWellFormedWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteWhitespace
void System::Xml::XmlWellFormedWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteString
void System::Xml::XmlWellFormedWriter::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteChars
void System::Xml::XmlWellFormedWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteRaw
void System::Xml::XmlWellFormedWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteRaw
void System::Xml::XmlWellFormedWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteBase64
void System::Xml::XmlWellFormedWriter::WriteBase64(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.Close
void System::Xml::XmlWellFormedWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.Flush
void System::Xml::XmlWellFormedWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.LookupPrefix
::Il2CppString* System::Xml::XmlWellFormedWriter::LookupPrefix(::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteValue
void System::Xml::XmlWellFormedWriter::WriteValue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteBinHex
void System::Xml::XmlWellFormedWriter::WriteBinHex(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/State
#include "System/Xml/XmlWellFormedWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State Start
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State Start
void System::Xml::XmlWellFormedWriter::State::_set_Start(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State TopLevel
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_TopLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_TopLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "TopLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State TopLevel
void System::Xml::XmlWellFormedWriter::State::_set_TopLevel(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_TopLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "TopLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State Document
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State Document
void System::Xml::XmlWellFormedWriter::State::_set_Document(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Document", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State Element
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State Element
void System::Xml::XmlWellFormedWriter::State::_set_Element(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State Content
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State Content
void System::Xml::XmlWellFormedWriter::State::_set_Content(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State B64Content
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_B64Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_B64Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "B64Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State B64Content
void System::Xml::XmlWellFormedWriter::State::_set_B64Content(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_B64Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "B64Content", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State B64Attribute
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_B64Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_B64Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "B64Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State B64Attribute
void System::Xml::XmlWellFormedWriter::State::_set_B64Attribute(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_B64Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "B64Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State AfterRootEle
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_AfterRootEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_AfterRootEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "AfterRootEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State AfterRootEle
void System::Xml::XmlWellFormedWriter::State::_set_AfterRootEle(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_AfterRootEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "AfterRootEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State Attribute
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State Attribute
void System::Xml::XmlWellFormedWriter::State::_set_Attribute(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State SpecialAttr
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_SpecialAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_SpecialAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "SpecialAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State SpecialAttr
void System::Xml::XmlWellFormedWriter::State::_set_SpecialAttr(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_SpecialAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "SpecialAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State EndDocument
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_EndDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndDocument"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State EndDocument
void System::Xml::XmlWellFormedWriter::State::_set_EndDocument(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_EndDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndDocument", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State RootLevelAttr
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_RootLevelAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_RootLevelAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "RootLevelAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State RootLevelAttr
void System::Xml::XmlWellFormedWriter::State::_set_RootLevelAttr(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_RootLevelAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "RootLevelAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State RootLevelSpecAttr
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_RootLevelSpecAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_RootLevelSpecAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "RootLevelSpecAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State RootLevelSpecAttr
void System::Xml::XmlWellFormedWriter::State::_set_RootLevelSpecAttr(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_RootLevelSpecAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "RootLevelSpecAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State RootLevelB64Attr
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_RootLevelB64Attr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_RootLevelB64Attr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "RootLevelB64Attr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State RootLevelB64Attr
void System::Xml::XmlWellFormedWriter::State::_set_RootLevelB64Attr(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_RootLevelB64Attr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "RootLevelB64Attr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State AfterRootLevelAttr
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_AfterRootLevelAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_AfterRootLevelAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "AfterRootLevelAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State AfterRootLevelAttr
void System::Xml::XmlWellFormedWriter::State::_set_AfterRootLevelAttr(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_AfterRootLevelAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "AfterRootLevelAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State Closed
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State Closed
void System::Xml::XmlWellFormedWriter::State::_set_Closed(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Closed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State Error
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State Error
void System::Xml::XmlWellFormedWriter::State::_set_Error(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State StartContent
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_StartContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State StartContent
void System::Xml::XmlWellFormedWriter::State::_set_StartContent(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_StartContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State StartContentEle
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartContentEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_StartContentEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartContentEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State StartContentEle
void System::Xml::XmlWellFormedWriter::State::_set_StartContentEle(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_StartContentEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartContentEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State StartContentB64
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartContentB64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_StartContentB64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartContentB64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State StartContentB64
void System::Xml::XmlWellFormedWriter::State::_set_StartContentB64(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_StartContentB64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartContentB64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State StartDoc
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartDoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_StartDoc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartDoc"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State StartDoc
void System::Xml::XmlWellFormedWriter::State::_set_StartDoc(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_StartDoc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartDoc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State StartDocEle
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartDocEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_StartDocEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartDocEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State StartDocEle
void System::Xml::XmlWellFormedWriter::State::_set_StartDocEle(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_StartDocEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartDocEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State EndAttrSEle
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndAttrSEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_EndAttrSEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndAttrSEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State EndAttrSEle
void System::Xml::XmlWellFormedWriter::State::_set_EndAttrSEle(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_EndAttrSEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndAttrSEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State EndAttrEEle
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndAttrEEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_EndAttrEEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndAttrEEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State EndAttrEEle
void System::Xml::XmlWellFormedWriter::State::_set_EndAttrEEle(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_EndAttrEEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndAttrEEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State EndAttrSCont
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndAttrSCont() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_EndAttrSCont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndAttrSCont"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State EndAttrSCont
void System::Xml::XmlWellFormedWriter::State::_set_EndAttrSCont(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_EndAttrSCont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndAttrSCont", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State EndAttrSAttr
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndAttrSAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_EndAttrSAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndAttrSAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State EndAttrSAttr
void System::Xml::XmlWellFormedWriter::State::_set_EndAttrSAttr(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_EndAttrSAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndAttrSAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State PostB64Cont
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_PostB64Cont() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_PostB64Cont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "PostB64Cont"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State PostB64Cont
void System::Xml::XmlWellFormedWriter::State::_set_PostB64Cont(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_PostB64Cont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "PostB64Cont", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State PostB64Attr
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_PostB64Attr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_PostB64Attr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "PostB64Attr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State PostB64Attr
void System::Xml::XmlWellFormedWriter::State::_set_PostB64Attr(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_PostB64Attr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "PostB64Attr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State PostB64RootAttr
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_PostB64RootAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_PostB64RootAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "PostB64RootAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State PostB64RootAttr
void System::Xml::XmlWellFormedWriter::State::_set_PostB64RootAttr(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_PostB64RootAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "PostB64RootAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State StartFragEle
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartFragEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_StartFragEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartFragEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State StartFragEle
void System::Xml::XmlWellFormedWriter::State::_set_StartFragEle(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_StartFragEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartFragEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State StartFragCont
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartFragCont() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_StartFragCont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartFragCont"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State StartFragCont
void System::Xml::XmlWellFormedWriter::State::_set_StartFragCont(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_StartFragCont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartFragCont", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State StartFragB64
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartFragB64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_StartFragB64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartFragB64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State StartFragB64
void System::Xml::XmlWellFormedWriter::State::_set_StartFragB64(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_StartFragB64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartFragB64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/State StartRootLevelAttr
System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartRootLevelAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_get_StartRootLevelAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartRootLevelAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/State StartRootLevelAttr
void System::Xml::XmlWellFormedWriter::State::_set_StartRootLevelAttr(System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::State::_set_StartRootLevelAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartRootLevelAttr", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/Token
#include "System/Xml/XmlWellFormedWriter_Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token StartDocument
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_StartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_StartDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "StartDocument"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token StartDocument
void System::Xml::XmlWellFormedWriter::Token::_set_StartDocument(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_StartDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "StartDocument", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token EndDocument
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_EndDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_EndDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "EndDocument"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token EndDocument
void System::Xml::XmlWellFormedWriter::Token::_set_EndDocument(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_EndDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "EndDocument", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token PI
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token PI
void System::Xml::XmlWellFormedWriter::Token::_set_PI(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token Comment
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token Comment
void System::Xml::XmlWellFormedWriter::Token::_set_Comment(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token Dtd
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Dtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_Dtd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Dtd"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token Dtd
void System::Xml::XmlWellFormedWriter::Token::_set_Dtd(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_Dtd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Dtd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token StartElement
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_StartElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_StartElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "StartElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token StartElement
void System::Xml::XmlWellFormedWriter::Token::_set_StartElement(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_StartElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "StartElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token EndElement
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_EndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_EndElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "EndElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token EndElement
void System::Xml::XmlWellFormedWriter::Token::_set_EndElement(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_EndElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "EndElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token StartAttribute
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_StartAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_StartAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "StartAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token StartAttribute
void System::Xml::XmlWellFormedWriter::Token::_set_StartAttribute(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_StartAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "StartAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token EndAttribute
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_EndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_EndAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "EndAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token EndAttribute
void System::Xml::XmlWellFormedWriter::Token::_set_EndAttribute(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_EndAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "EndAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token Text
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token Text
void System::Xml::XmlWellFormedWriter::Token::_set_Text(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token CData
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_CData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_CData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "CData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token CData
void System::Xml::XmlWellFormedWriter::Token::_set_CData(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_CData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "CData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token AtomicValue
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_AtomicValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_AtomicValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "AtomicValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token AtomicValue
void System::Xml::XmlWellFormedWriter::Token::_set_AtomicValue(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_AtomicValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "AtomicValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token Base64
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Base64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_Base64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Base64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token Base64
void System::Xml::XmlWellFormedWriter::Token::_set_Base64(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_Base64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Base64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token RawData
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_RawData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "RawData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token RawData
void System::Xml::XmlWellFormedWriter::Token::_set_RawData(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_RawData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "RawData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/Token Whitespace
System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/Token Whitespace
void System::Xml::XmlWellFormedWriter::Token::_set_Whitespace(System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Token::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Whitespace", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/NamespaceResolverProxy
#include "System/Xml/XmlWellFormedWriter_NamespaceResolverProxy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWellFormedWriter/NamespaceResolverProxy.System.Xml.IXmlNamespaceResolver.LookupNamespace
::Il2CppString* System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System_Xml_IXmlNamespaceResolver_LookupNamespace(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System.Xml.IXmlNamespaceResolver.LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/NamespaceResolverProxy.System.Xml.IXmlNamespaceResolver.LookupPrefix
::Il2CppString* System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System_Xml_IXmlNamespaceResolver_LookupPrefix(::Il2CppString* namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System.Xml.IXmlNamespaceResolver.LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, namespaceName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/ElementScope
#include "System/Xml/XmlWellFormedWriter.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWellFormedWriter/ElementScope.Set
void System::Xml::XmlWellFormedWriter::ElementScope::Set(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* namespaceUri, int prevNSTop) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::ElementScope::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(prevNSTop)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, prefix, localName, namespaceUri, prevNSTop);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/ElementScope.WriteEndElement
void System::Xml::XmlWellFormedWriter::ElementScope::WriteEndElement(System::Xml::XmlRawWriter* rawWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::ElementScope::WriteEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawWriter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, rawWriter);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/ElementScope.WriteFullEndElement
void System::Xml::XmlWellFormedWriter::ElementScope::WriteFullEndElement(System::Xml::XmlRawWriter* rawWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::ElementScope::WriteFullEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawWriter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, rawWriter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/NamespaceKind
#include "System/Xml/XmlWellFormedWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/NamespaceKind Written
System::Xml::XmlWellFormedWriter::NamespaceKind System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Written() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Written");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::NamespaceKind>("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Written"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/NamespaceKind Written
void System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Written(System::Xml::XmlWellFormedWriter::NamespaceKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Written");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Written", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/NamespaceKind NeedToWrite
System::Xml::XmlWellFormedWriter::NamespaceKind System::Xml::XmlWellFormedWriter::NamespaceKind::_get_NeedToWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceKind::_get_NeedToWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::NamespaceKind>("System.Xml", "XmlWellFormedWriter/NamespaceKind", "NeedToWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/NamespaceKind NeedToWrite
void System::Xml::XmlWellFormedWriter::NamespaceKind::_set_NeedToWrite(System::Xml::XmlWellFormedWriter::NamespaceKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceKind::_set_NeedToWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/NamespaceKind", "NeedToWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/NamespaceKind Implied
System::Xml::XmlWellFormedWriter::NamespaceKind System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Implied() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Implied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::NamespaceKind>("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Implied"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/NamespaceKind Implied
void System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Implied(System::Xml::XmlWellFormedWriter::NamespaceKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Implied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Implied", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/NamespaceKind Special
System::Xml::XmlWellFormedWriter::NamespaceKind System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Special() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Special");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::NamespaceKind>("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Special"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/NamespaceKind Special
void System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Special(System::Xml::XmlWellFormedWriter::NamespaceKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Special");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Special", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/Namespace
#include "System/Xml/XmlWellFormedWriter.hpp"
// Including type: System.Xml.XmlWellFormedWriter/NamespaceKind
// Already included the same include: System/Xml/XmlWellFormedWriter.hpp
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWellFormedWriter/Namespace.Set
void System::Xml::XmlWellFormedWriter::Namespace::Set(::Il2CppString* prefix, ::Il2CppString* namespaceUri, System::Xml::XmlWellFormedWriter::NamespaceKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Namespace::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(kind)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, prefix, namespaceUri, kind);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/Namespace.WriteDecl
void System::Xml::XmlWellFormedWriter::Namespace::WriteDecl(System::Xml::XmlWriter* writer, System::Xml::XmlRawWriter* rawWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::Namespace::WriteDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(rawWriter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer, rawWriter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/AttrName
#include "System/Xml/XmlWellFormedWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttrName.Set
void System::Xml::XmlWellFormedWriter::AttrName::Set(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttrName::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, prefix, localName, namespaceUri);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttrName.IsDuplicate
bool System::Xml::XmlWellFormedWriter::AttrName::IsDuplicate(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttrName::IsDuplicate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsDuplicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, prefix, localName, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/SpecialAttribute
#include "System/Xml/XmlWellFormedWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute No
System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute No
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_No(System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute DefaultXmlns
System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_DefaultXmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_DefaultXmlns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "DefaultXmlns"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute DefaultXmlns
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_DefaultXmlns(System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_DefaultXmlns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "DefaultXmlns", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute PrefixedXmlns
System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_PrefixedXmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_PrefixedXmlns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "PrefixedXmlns"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute PrefixedXmlns
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_PrefixedXmlns(System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_PrefixedXmlns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "PrefixedXmlns", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute XmlSpace
System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_XmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_XmlSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "XmlSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute XmlSpace
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_XmlSpace(System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_XmlSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "XmlSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute XmlLang
System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_XmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_XmlLang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "XmlLang"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/SpecialAttribute XmlLang
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_XmlLang(System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_XmlLang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "XmlLang", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/AttributeValueCache
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache.hpp"
// Including type: System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_ItemType.hpp"
// Including type: System.Xml.XmlWellFormedWriter/AttributeValueCache/Item
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_Item.hpp"
// Including type: System.Xml.XmlWellFormedWriter/AttributeValueCache/BufferChunk
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_BufferChunk.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.get_StringValue
::Il2CppString* System::Xml::XmlWellFormedWriter::AttributeValueCache::get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::get_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.WriteEntityRef
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteEntityRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.WriteCharEntity
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteCharEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.WriteSurrogateCharEntity
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteSurrogateCharEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.WriteWhitespace
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.WriteString
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.WriteChars
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.WriteRaw
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.WriteRaw
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.WriteValue
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteValue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.Replay
void System::Xml::XmlWellFormedWriter::AttributeValueCache::Replay(System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::Replay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.Trim
void System::Xml::XmlWellFormedWriter::AttributeValueCache::Trim() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.Clear
void System::Xml::XmlWellFormedWriter::AttributeValueCache::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.StartComplexValue
void System::Xml::XmlWellFormedWriter::AttributeValueCache::StartComplexValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::StartComplexValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartComplexValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache.AddItem
void System::Xml::XmlWellFormedWriter::AttributeValueCache::AddItem(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType type, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::AddItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_ItemType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType EntityRef
System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_EntityRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_EntityRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "EntityRef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType EntityRef
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_EntityRef(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_EntityRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "EntityRef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType CharEntity
System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_CharEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_CharEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "CharEntity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType CharEntity
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_CharEntity(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_CharEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "CharEntity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType SurrogateCharEntity
System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_SurrogateCharEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_SurrogateCharEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "SurrogateCharEntity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType SurrogateCharEntity
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_SurrogateCharEntity(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_SurrogateCharEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "SurrogateCharEntity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType Whitespace
System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType Whitespace
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_Whitespace(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "Whitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType String
System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType String
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_String(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType StringChars
System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_StringChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_StringChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "StringChars"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType StringChars
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_StringChars(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_StringChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "StringChars", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType Raw
System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType Raw
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_Raw(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType RawChars
System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_RawChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_RawChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "RawChars"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType RawChars
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_RawChars(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_RawChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "RawChars", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType ValueString
System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_ValueString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_ValueString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "ValueString"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/AttributeValueCache/ItemType ValueString
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_ValueString(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_ValueString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "ValueString", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/AttributeValueCache/Item
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_Item.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWellFormedWriter/AttributeValueCache/Item.Set
void System::Xml::XmlWellFormedWriter::AttributeValueCache::Item::Set(System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType type, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWellFormedWriter::AttributeValueCache::Item::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/AttributeValueCache/BufferChunk
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_BufferChunk.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.WriteState
#include "System/Xml/WriteState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Start
System::Xml::WriteState System::Xml::WriteState::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::WriteState>("System.Xml", "WriteState", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Start
void System::Xml::WriteState::_set_Start(System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Prolog
System::Xml::WriteState System::Xml::WriteState::_get_Prolog() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_get_Prolog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::WriteState>("System.Xml", "WriteState", "Prolog"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Prolog
void System::Xml::WriteState::_set_Prolog(System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_set_Prolog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Prolog", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Element
System::Xml::WriteState System::Xml::WriteState::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::WriteState>("System.Xml", "WriteState", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Element
void System::Xml::WriteState::_set_Element(System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Attribute
System::Xml::WriteState System::Xml::WriteState::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::WriteState>("System.Xml", "WriteState", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Attribute
void System::Xml::WriteState::_set_Attribute(System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Content
System::Xml::WriteState System::Xml::WriteState::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::WriteState>("System.Xml", "WriteState", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Content
void System::Xml::WriteState::_set_Content(System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Closed
System::Xml::WriteState System::Xml::WriteState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::WriteState>("System.Xml", "WriteState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Closed
void System::Xml::WriteState::_set_Closed(System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Closed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Error
System::Xml::WriteState System::Xml::WriteState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::WriteState>("System.Xml", "WriteState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Error
void System::Xml::WriteState::_set_Error(System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::WriteState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Error", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.WriteState
#include "System/Xml/WriteState.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWriter.WriteStartDocument
void System::Xml::XmlWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteDocType
void System::Xml::XmlWriter::WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlWriter.WriteStartElement
void System::Xml::XmlWriter::WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlWriter.WriteStartElement
void System::Xml::XmlWriter::WriteStartElement(::Il2CppString* localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localName);
}
// Autogenerated method: System.Xml.XmlWriter.WriteEndElement
void System::Xml::XmlWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteFullEndElement
void System::Xml::XmlWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteAttributeString
void System::Xml::XmlWriter::WriteAttributeString(::Il2CppString* localName, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteAttributeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttributeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localName, value);
}
// Autogenerated method: System.Xml.XmlWriter.WriteAttributeString
void System::Xml::XmlWriter::WriteAttributeString(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteAttributeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttributeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns, value);
}
// Autogenerated method: System.Xml.XmlWriter.WriteStartAttribute
void System::Xml::XmlWriter::WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlWriter.WriteEndAttribute
void System::Xml::XmlWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteCData
void System::Xml::XmlWriter::WriteCData(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWriter.WriteComment
void System::Xml::XmlWriter::WriteComment(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWriter.WriteProcessingInstruction
void System::Xml::XmlWriter::WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlWriter.WriteEntityRef
void System::Xml::XmlWriter::WriteEntityRef(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlWriter.WriteCharEntity
void System::Xml::XmlWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlWriter.WriteWhitespace
void System::Xml::XmlWriter::WriteWhitespace(::Il2CppString* ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlWriter.WriteString
void System::Xml::XmlWriter::WriteString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWriter.WriteSurrogateCharEntity
void System::Xml::XmlWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlWriter.WriteChars
void System::Xml::XmlWriter::WriteChars(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWriter.WriteRaw
void System::Xml::XmlWriter::WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWriter.WriteRaw
void System::Xml::XmlWriter::WriteRaw(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlWriter.WriteBase64
void System::Xml::XmlWriter::WriteBase64(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWriter.WriteBinHex
void System::Xml::XmlWriter::WriteBinHex(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWriter.get_WriteState
System::Xml::WriteState System::Xml::XmlWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::get_WriteState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.Close
void System::Xml::XmlWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.Flush
void System::Xml::XmlWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.LookupPrefix
::Il2CppString* System::Xml::XmlWriter::LookupPrefix(::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.XmlWriter.WriteValue
void System::Xml::XmlWriter::WriteValue(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriter.Dispose
void System::Xml::XmlWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.Dispose
void System::Xml::XmlWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Xml.XmlWriter.Create
System::Xml::XmlWriter* System::Xml::XmlWriter::Create(System::IO::Stream* output, System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWriter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, output, settings);
}
// Autogenerated method: System.Xml.XmlWriter.Create
System::Xml::XmlWriter* System::Xml::XmlWriter::Create(System::IO::TextWriter* output, System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWriter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, output, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlOutputMethod
#include "System/Xml/XmlOutputMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlOutputMethod Xml
System::Xml::XmlOutputMethod System::Xml::XmlOutputMethod::_get_Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlOutputMethod::_get_Xml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlOutputMethod>("System.Xml", "XmlOutputMethod", "Xml"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlOutputMethod Xml
void System::Xml::XmlOutputMethod::_set_Xml(System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlOutputMethod::_set_Xml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlOutputMethod", "Xml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlOutputMethod Html
System::Xml::XmlOutputMethod System::Xml::XmlOutputMethod::_get_Html() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlOutputMethod::_get_Html");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlOutputMethod>("System.Xml", "XmlOutputMethod", "Html"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlOutputMethod Html
void System::Xml::XmlOutputMethod::_set_Html(System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlOutputMethod::_set_Html");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlOutputMethod", "Html", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlOutputMethod Text
System::Xml::XmlOutputMethod System::Xml::XmlOutputMethod::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlOutputMethod::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlOutputMethod>("System.Xml", "XmlOutputMethod", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlOutputMethod Text
void System::Xml::XmlOutputMethod::_set_Text(System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlOutputMethod::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlOutputMethod", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlOutputMethod AutoDetect
System::Xml::XmlOutputMethod System::Xml::XmlOutputMethod::_get_AutoDetect() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlOutputMethod::_get_AutoDetect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlOutputMethod>("System.Xml", "XmlOutputMethod", "AutoDetect"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlOutputMethod AutoDetect
void System::Xml::XmlOutputMethod::_set_AutoDetect(System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlOutputMethod::_set_AutoDetect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlOutputMethod", "AutoDetect", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.TriState
#include "System/Xml/TriState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.TriState Unknown
System::Xml::TriState System::Xml::TriState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TriState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::TriState>("System.Xml", "TriState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.TriState Unknown
void System::Xml::TriState::_set_Unknown(System::Xml::TriState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TriState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "TriState", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.TriState False
System::Xml::TriState System::Xml::TriState::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TriState::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::TriState>("System.Xml", "TriState", "False"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.TriState False
void System::Xml::TriState::_set_False(System::Xml::TriState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TriState::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "TriState", "False", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.TriState True
System::Xml::TriState System::Xml::TriState::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TriState::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::TriState>("System.Xml", "TriState", "True"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.TriState True
void System::Xml::TriState::_set_True(System::Xml::TriState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TriState::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "TriState", "True", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlStandalone Omit
System::Xml::XmlStandalone System::Xml::XmlStandalone::_get_Omit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlStandalone::_get_Omit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlStandalone>("System.Xml", "XmlStandalone", "Omit"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlStandalone Omit
void System::Xml::XmlStandalone::_set_Omit(System::Xml::XmlStandalone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlStandalone::_set_Omit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlStandalone", "Omit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlStandalone Yes
System::Xml::XmlStandalone System::Xml::XmlStandalone::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlStandalone::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlStandalone>("System.Xml", "XmlStandalone", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlStandalone Yes
void System::Xml::XmlStandalone::_set_Yes(System::Xml::XmlStandalone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlStandalone::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlStandalone", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlStandalone No
System::Xml::XmlStandalone System::Xml::XmlStandalone::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlStandalone::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlStandalone>("System.Xml", "XmlStandalone", "No"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlStandalone No
void System::Xml::XmlStandalone::_set_No(System::Xml::XmlStandalone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlStandalone::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlStandalone", "No", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWriterSettings.get_Async
bool System::Xml::XmlWriterSettings::get_Async() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_Encoding
System::Text::Encoding* System::Xml::XmlWriterSettings::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_OmitXmlDeclaration
bool System::Xml::XmlWriterSettings::get_OmitXmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_OmitXmlDeclaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OmitXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_NewLineHandling
System::Xml::NewLineHandling System::Xml::XmlWriterSettings::get_NewLineHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_NewLineHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewLineHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::NewLineHandling, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_NewLineChars
::Il2CppString* System::Xml::XmlWriterSettings::get_NewLineChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_NewLineChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewLineChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_Indent
bool System::Xml::XmlWriterSettings::get_Indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_Indent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Indent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_Indent
void System::Xml::XmlWriterSettings::set_Indent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::set_Indent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Indent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_IndentChars
::Il2CppString* System::Xml::XmlWriterSettings::get_IndentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_IndentChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndentChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_NewLineOnAttributes
bool System::Xml::XmlWriterSettings::get_NewLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_NewLineOnAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewLineOnAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_CloseOutput
bool System::Xml::XmlWriterSettings::get_CloseOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_CloseOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CloseOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_ConformanceLevel
System::Xml::ConformanceLevel System::Xml::XmlWriterSettings::get_ConformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_ConformanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConformanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::ConformanceLevel, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_ConformanceLevel
void System::Xml::XmlWriterSettings::set_ConformanceLevel(System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::set_ConformanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConformanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_CheckCharacters
bool System::Xml::XmlWriterSettings::get_CheckCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_CheckCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_NamespaceHandling
System::Xml::NamespaceHandling System::Xml::XmlWriterSettings::get_NamespaceHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_NamespaceHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::NamespaceHandling, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_WriteEndDocumentOnClose
bool System::Xml::XmlWriterSettings::get_WriteEndDocumentOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_WriteEndDocumentOnClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteEndDocumentOnClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_OutputMethod
System::Xml::XmlOutputMethod System::Xml::XmlWriterSettings::get_OutputMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_OutputMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutputMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlOutputMethod, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_OutputMethod
void System::Xml::XmlWriterSettings::set_OutputMethod(System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::set_OutputMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OutputMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.Clone
System::Xml::XmlWriterSettings* System::Xml::XmlWriterSettings::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlWriterSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_CDataSectionElements
System::Collections::Generic::List_1<System::Xml::XmlQualifiedName*>* System::Xml::XmlWriterSettings::get_CDataSectionElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_CDataSectionElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CDataSectionElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Xml::XmlQualifiedName*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_DoNotEscapeUriAttributes
bool System::Xml::XmlWriterSettings::get_DoNotEscapeUriAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_DoNotEscapeUriAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DoNotEscapeUriAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_MergeCDataSections
bool System::Xml::XmlWriterSettings::get_MergeCDataSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_MergeCDataSections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MergeCDataSections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_MediaType
::Il2CppString* System::Xml::XmlWriterSettings::get_MediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_MediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_DocTypeSystem
::Il2CppString* System::Xml::XmlWriterSettings::get_DocTypeSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_DocTypeSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocTypeSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_DocTypePublic
::Il2CppString* System::Xml::XmlWriterSettings::get_DocTypePublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_DocTypePublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocTypePublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_Standalone
System::Xml::XmlStandalone System::Xml::XmlWriterSettings::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_Standalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlStandalone, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_AutoXmlDeclaration
bool System::Xml::XmlWriterSettings::get_AutoXmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_AutoXmlDeclaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_IndentInternal
System::Xml::TriState System::Xml::XmlWriterSettings::get_IndentInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_IndentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::TriState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_IsQuerySpecific
bool System::Xml::XmlWriterSettings::get_IsQuerySpecific() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::get_IsQuerySpecific");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsQuerySpecific", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.CreateWriter
System::Xml::XmlWriter* System::Xml::XmlWriterSettings::CreateWriter(System::IO::Stream* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::CreateWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlWriter*, false>(this, ___internal__method, output);
}
// Autogenerated method: System.Xml.XmlWriterSettings.CreateWriter
System::Xml::XmlWriter* System::Xml::XmlWriterSettings::CreateWriter(System::IO::TextWriter* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::CreateWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlWriter*, false>(this, ___internal__method, output);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_ReadOnly
void System::Xml::XmlWriterSettings::set_ReadOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::set_ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.CheckReadOnly
void System::Xml::XmlWriterSettings::CheckReadOnly(::Il2CppString* propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::CheckReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: System.Xml.XmlWriterSettings.Initialize
void System::Xml::XmlWriterSettings::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriterSettings::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IXmlNamespaceResolver.LookupNamespace
::Il2CppString* System::Xml::IXmlNamespaceResolver::LookupNamespace(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::IXmlNamespaceResolver::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.IXmlNamespaceResolver.LookupPrefix
::Il2CppString* System::Xml::IXmlNamespaceResolver::LookupPrefix(::Il2CppString* namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::IXmlNamespaceResolver::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, namespaceName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.ValidateNames
#include "System/Xml/ValidateNames.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlCharType xmlCharType
System::Xml::XmlCharType System::Xml::ValidateNames::_get_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ValidateNames::_get_xmlCharType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlCharType>("System.Xml", "ValidateNames", "xmlCharType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlCharType xmlCharType
void System::Xml::ValidateNames::_set_xmlCharType(System::Xml::XmlCharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ValidateNames::_set_xmlCharType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ValidateNames", "xmlCharType", value));
}
// Autogenerated method: System.Xml.ValidateNames.ParseNCName
int System::Xml::ValidateNames::ParseNCName(::Il2CppString* s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ValidateNames::ParseNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, offset);
}
// Autogenerated method: System.Xml.ValidateNames.ParseQName
int System::Xml::ValidateNames::ParseQName(::Il2CppString* s, int offset, int& colonOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ValidateNames::ParseQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, offset, colonOffset);
}
// Autogenerated method: System.Xml.ValidateNames..cctor
void System::Xml::ValidateNames::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ValidateNames::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlCharType
#include "System/Xml/XmlCharType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_Lock
::Il2CppObject* System::Xml::XmlCharType::_get_s_Lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::_get_s_Lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Xml", "XmlCharType", "s_Lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_Lock
void System::Xml::XmlCharType::_set_s_Lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::_set_s_Lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlCharType", "s_Lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] s_CharProperties
::Array<uint8_t>* System::Xml::XmlCharType::_get_s_CharProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::_get_s_CharProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Xml", "XmlCharType", "s_CharProperties"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] s_CharProperties
void System::Xml::XmlCharType::_set_s_CharProperties(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::_set_s_CharProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlCharType", "s_CharProperties", value));
}
// Autogenerated method: System.Xml.XmlCharType.get_StaticLock
::Il2CppObject* System::Xml::XmlCharType::get_StaticLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::get_StaticLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "get_StaticLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharType.InitInstance
void System::Xml::XmlCharType::InitInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::InitInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "InitInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharType.SetProperties
void System::Xml::XmlCharType::SetProperties(::Il2CppString* ranges, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::SetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "SetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ranges), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ranges, value);
}
// Autogenerated method: System.Xml.XmlCharType.get_Instance
System::Xml::XmlCharType System::Xml::XmlCharType::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlCharType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharType.IsWhiteSpace
bool System::Xml::XmlCharType::IsWhiteSpace(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsCharData
bool System::Xml::XmlCharType::IsCharData(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsCharData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsCharData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsPubidChar
bool System::Xml::XmlCharType::IsPubidChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsPubidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsPubidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsTextChar
bool System::Xml::XmlCharType::IsTextChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsTextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsTextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsHighSurrogate
bool System::Xml::XmlCharType::IsHighSurrogate(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsLowSurrogate
bool System::Xml::XmlCharType::IsLowSurrogate(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsSurrogate
bool System::Xml::XmlCharType::IsSurrogate(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.CombineSurrogateChar
int System::Xml::XmlCharType::CombineSurrogateChar(int lowChar, int highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::CombineSurrogateChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "CombineSurrogateChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlCharType.IsOnlyWhitespace
bool System::Xml::XmlCharType::IsOnlyWhitespace(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsOnlyWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsOnlyWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.IsOnlyWhitespaceWithPos
int System::Xml::XmlCharType::IsOnlyWhitespaceWithPos(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsOnlyWhitespaceWithPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsOnlyWhitespaceWithPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.IsOnlyCharData
int System::Xml::XmlCharType::IsOnlyCharData(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsOnlyCharData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsOnlyCharData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.IsPublicId
int System::Xml::XmlCharType::IsPublicId(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::IsPublicId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsPublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.InRange
bool System::Xml::XmlCharType::InRange(int value, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlCharType::InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, start, end);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ExceptionType
#include "System/Xml/ExceptionType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ExceptionType ArgumentException
System::Xml::ExceptionType System::Xml::ExceptionType::_get_ArgumentException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ExceptionType::_get_ArgumentException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ExceptionType>("System.Xml", "ExceptionType", "ArgumentException"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ExceptionType ArgumentException
void System::Xml::ExceptionType::_set_ArgumentException(System::Xml::ExceptionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ExceptionType::_set_ArgumentException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ExceptionType", "ArgumentException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ExceptionType XmlException
System::Xml::ExceptionType System::Xml::ExceptionType::_get_XmlException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ExceptionType::_get_XmlException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::ExceptionType>("System.Xml", "ExceptionType", "XmlException"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ExceptionType XmlException
void System::Xml::ExceptionType::_set_XmlException(System::Xml::ExceptionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::ExceptionType::_set_XmlException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ExceptionType", "XmlException", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlConvert
#include "System/Xml/XmlConvert.hpp"
// Including type: System.Xml.ExceptionType
#include "System/Xml/ExceptionType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlCharType xmlCharType
System::Xml::XmlCharType System::Xml::XmlConvert::_get_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::_get_xmlCharType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlCharType>("System.Xml", "XmlConvert", "xmlCharType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlCharType xmlCharType
void System::Xml::XmlConvert::_set_xmlCharType(System::Xml::XmlCharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::_set_xmlCharType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "xmlCharType", value));
}
// Autogenerated static field getter
// Get static field: static System.Char[] crt
::Array<::Il2CppChar>* System::Xml::XmlConvert::_get_crt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::_get_crt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Xml", "XmlConvert", "crt"));
}
// Autogenerated static field setter
// Set static field: static System.Char[] crt
void System::Xml::XmlConvert::_set_crt(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::_set_crt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "crt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 c_EncodedCharLength
int System::Xml::XmlConvert::_get_c_EncodedCharLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::_get_c_EncodedCharLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "XmlConvert", "c_EncodedCharLength"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 c_EncodedCharLength
void System::Xml::XmlConvert::_set_c_EncodedCharLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::_set_c_EncodedCharLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "c_EncodedCharLength", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] WhitespaceChars
::Array<::Il2CppChar>* System::Xml::XmlConvert::_get_WhitespaceChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::_get_WhitespaceChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Xml", "XmlConvert", "WhitespaceChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] WhitespaceChars
void System::Xml::XmlConvert::_set_WhitespaceChars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::_set_WhitespaceChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "WhitespaceChars", value));
}
// Autogenerated method: System.Xml.XmlConvert.VerifyQName
::Il2CppString* System::Xml::XmlConvert::VerifyQName(::Il2CppString* name, System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::VerifyQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "VerifyQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.TrimString
::Il2CppString* System::Xml::XmlConvert::TrimString(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::TrimString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TrimString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.TrimStringStart
::Il2CppString* System::Xml::XmlConvert::TrimStringStart(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::TrimStringStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TrimStringStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.TrimStringEnd
::Il2CppString* System::Xml::XmlConvert::TrimStringEnd(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::TrimStringEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TrimStringEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.CreateException
System::Exception* System::Xml::XmlConvert::CreateException(::Il2CppString* res, ::Il2CppString* arg, System::Xml::ExceptionType exceptionType, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(exceptionType), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, res, arg, exceptionType, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlConvert.CreateException
System::Exception* System::Xml::XmlConvert::CreateException(::Il2CppString* res, ::Array<::Il2CppString*>* args, System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, res, args, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.CreateException
System::Exception* System::Xml::XmlConvert::CreateException(::Il2CppString* res, ::Array<::Il2CppString*>* args, System::Xml::ExceptionType exceptionType, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(exceptionType), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, res, args, exceptionType, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidSurrogatePairException
System::Exception* System::Xml::XmlConvert::CreateInvalidSurrogatePairException(::Il2CppChar low, ::Il2CppChar hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateInvalidSurrogatePairException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidSurrogatePairException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, low, hi);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidSurrogatePairException
System::Exception* System::Xml::XmlConvert::CreateInvalidSurrogatePairException(::Il2CppChar low, ::Il2CppChar hi, System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateInvalidSurrogatePairException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidSurrogatePairException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, low, hi, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidSurrogatePairException
System::Exception* System::Xml::XmlConvert::CreateInvalidSurrogatePairException(::Il2CppChar low, ::Il2CppChar hi, System::Xml::ExceptionType exceptionType, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateInvalidSurrogatePairException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidSurrogatePairException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(exceptionType), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, low, hi, exceptionType, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidHighSurrogateCharException
System::Exception* System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException(::Il2CppChar hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidHighSurrogateCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hi);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidHighSurrogateCharException
System::Exception* System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException(::Il2CppChar hi, System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidHighSurrogateCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hi, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidHighSurrogateCharException
System::Exception* System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException(::Il2CppChar hi, System::Xml::ExceptionType exceptionType, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidHighSurrogateCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(exceptionType), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hi, exceptionType, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidCharException
System::Exception* System::Xml::XmlConvert::CreateInvalidCharException(::Il2CppChar invChar, ::Il2CppChar nextChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateInvalidCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invChar), ::il2cpp_utils::ExtractType(nextChar)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, invChar, nextChar);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidCharException
System::Exception* System::Xml::XmlConvert::CreateInvalidCharException(::Il2CppChar invChar, ::Il2CppChar nextChar, System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::CreateInvalidCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invChar), ::il2cpp_utils::ExtractType(nextChar), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, invChar, nextChar, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert..cctor
void System::Xml::XmlConvert::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlConvert::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlException
#include "System/Xml/XmlException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlException.FormatUserMessage
::Il2CppString* System::Xml::XmlException::FormatUserMessage(::Il2CppString* message, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlException::FormatUserMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "FormatUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.XmlException.CreateMessage
::Il2CppString* System::Xml::XmlException::CreateMessage(::Il2CppString* res, ::Array<::Il2CppString*>* args, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlException::CreateMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "CreateMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, res, args, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.XmlException.BuildCharExceptionArgs
::Array<::Il2CppString*>* System::Xml::XmlException::BuildCharExceptionArgs(::Il2CppString* data, int invCharIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlException::BuildCharExceptionArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "BuildCharExceptionArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(invCharIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, invCharIndex);
}
// Autogenerated method: System.Xml.XmlException.BuildCharExceptionArgs
::Array<::Il2CppString*>* System::Xml::XmlException::BuildCharExceptionArgs(::Il2CppChar invChar, ::Il2CppChar nextChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlException::BuildCharExceptionArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "BuildCharExceptionArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invChar), ::il2cpp_utils::ExtractType(nextChar)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, invChar, nextChar);
}
// Autogenerated method: System.Xml.XmlException.GetObjectData
void System::Xml::XmlException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Xml.XmlException.get_Message
::Il2CppString* System::Xml::XmlException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate
#include "System/Xml/XmlQualifiedName_HashCodeOfStringDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlQualifiedName/HashCodeOfStringDelegate hashCodeDelegate
System::Xml::XmlQualifiedName::HashCodeOfStringDelegate* System::Xml::XmlQualifiedName::_get_hashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::_get_hashCodeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlQualifiedName::HashCodeOfStringDelegate*>("System.Xml", "XmlQualifiedName", "hashCodeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlQualifiedName/HashCodeOfStringDelegate hashCodeDelegate
void System::Xml::XmlQualifiedName::_set_hashCodeDelegate(System::Xml::XmlQualifiedName::HashCodeOfStringDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::_set_hashCodeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlQualifiedName", "hashCodeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.XmlQualifiedName Empty
System::Xml::XmlQualifiedName* System::Xml::XmlQualifiedName::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlQualifiedName*>("System.Xml", "XmlQualifiedName", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.XmlQualifiedName Empty
void System::Xml::XmlQualifiedName::_set_Empty(System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlQualifiedName", "Empty", value));
}
// Autogenerated method: System.Xml.XmlQualifiedName.get_Namespace
::Il2CppString* System::Xml::XmlQualifiedName::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.get_Name
::Il2CppString* System::Xml::XmlQualifiedName::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.GetHashCodeDelegate
System::Xml::XmlQualifiedName::HashCodeOfStringDelegate* System::Xml::XmlQualifiedName::GetHashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::GetHashCodeDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "GetHashCodeDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Xml::XmlQualifiedName::HashCodeOfStringDelegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.IsRandomizedHashingDisabled
bool System::Xml::XmlQualifiedName::IsRandomizedHashingDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::IsRandomizedHashingDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "IsRandomizedHashingDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.GetHashCodeOfString
int System::Xml::XmlQualifiedName::GetHashCodeOfString(::Il2CppString* s, int length, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, length, additionalEntropy);
}
// Autogenerated method: System.Xml.XmlQualifiedName.Init
void System::Xml::XmlQualifiedName::Init(::Il2CppString* name, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.XmlQualifiedName..cctor
void System::Xml::XmlQualifiedName::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.GetHashCode
int System::Xml::XmlQualifiedName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.ToString
::Il2CppString* System::Xml::XmlQualifiedName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.Equals
bool System::Xml::XmlQualifiedName::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.XmlQualifiedName.op_Equality
bool System::Xml::operator ==(System::Xml::XmlQualifiedName* a, System::Xml::XmlQualifiedName& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: System.Xml.XmlQualifiedName.op_Inequality
bool System::Xml::operator !=(System::Xml::XmlQualifiedName* a, System::Xml::XmlQualifiedName& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate
#include "System/Xml/XmlQualifiedName_HashCodeOfStringDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate.Invoke
int System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::Invoke(::Il2CppString* s, int sLen, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, s, sLen, additionalEntropy);
}
// Autogenerated method: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate.BeginInvoke
System::IAsyncResult* System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::BeginInvoke(::Il2CppString* s, int sLen, int64_t additionalEntropy, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, s, sLen, additionalEntropy, callback, object);
}
// Autogenerated method: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate.EndInvoke
int System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Res
#include "System/Xml/Res.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Res.GetString
::Il2CppString* System::Xml::Res::GetString(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Res::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Res", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Res.GetString
::Il2CppString* System::Xml::Res::GetString(::Il2CppString* name, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Res::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Res", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, args);
}
// Creating initializer_list -> params proxy for: System.String GetString(System.String name, params System.Object[] args)
::Il2CppString* System::Xml::Res::GetString(::Il2CppString* name, std::initializer_list<::Il2CppObject*> args) {
  return System::Xml::Res::GetString(name, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Xsl.Runtime.StringConcat
#include "System/Xml/Xsl/Runtime/StringConcat.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.Clear
void System::Xml::Xsl::Runtime::StringConcat::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Xsl::Runtime::StringConcat::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.get_Count
int System::Xml::Xsl::Runtime::StringConcat::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Xsl::Runtime::StringConcat::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.GetResult
::Il2CppString* System::Xml::Xsl::Runtime::StringConcat::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Xsl::Runtime::StringConcat::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.ConcatNoDelimiter
void System::Xml::Xsl::Runtime::StringConcat::ConcatNoDelimiter(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Xsl::Runtime::StringConcat::ConcatNoDelimiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConcatNoDelimiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PackedPlayModeBuildLogs
#include "GlobalNamespace/PackedPlayModeBuildLogs.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PackedPlayModeBuildLogs.get_RuntimeBuildLogs
System::Collections::Generic::List_1<GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog>* GlobalNamespace::PackedPlayModeBuildLogs::get_RuntimeBuildLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackedPlayModeBuildLogs::get_RuntimeBuildLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RuntimeBuildLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog>*, false>(this, ___internal__method);
}
// Autogenerated method: PackedPlayModeBuildLogs.set_RuntimeBuildLogs
void GlobalNamespace::PackedPlayModeBuildLogs::set_RuntimeBuildLogs(System::Collections::Generic::List_1<GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackedPlayModeBuildLogs::set_RuntimeBuildLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RuntimeBuildLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PackedPlayModeBuildLogs/RuntimeBuildLog
#include "GlobalNamespace/PackedPlayModeBuildLogs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
