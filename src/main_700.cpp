// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.SM3Digest
#include "Org/BouncyCastle/Crypto/Digests/SM3Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T
::Array<uint>* Org::BouncyCastle::Crypto::Digests::SM3Digest::_get_T() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::_get_T");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Digests", "SM3Digest", "T"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T
void Org::BouncyCastle::Crypto::Digests::SM3Digest::_set_T(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::_set_T");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "SM3Digest", "T", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest..cctor
void Org::BouncyCastle::Crypto::Digests::SM3Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "SM3Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::SM3Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::SM3Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.P0
uint Org::BouncyCastle::Crypto::Digests::SM3Digest::P0(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::P0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "P0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.P1
uint Org::BouncyCastle::Crypto::Digests::SM3Digest::P1(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::P1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "P1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.FF0
uint Org::BouncyCastle::Crypto::Digests::SM3Digest::FF0(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::FF0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.FF1
uint Org::BouncyCastle::Crypto::Digests::SM3Digest::FF1(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::FF1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.GG0
uint Org::BouncyCastle::Crypto::Digests::SM3Digest::GG0(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::GG0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GG0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.GG1
uint Org::BouncyCastle::Crypto::Digests::SM3Digest::GG1(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::GG1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GG1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::SM3Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::SM3Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::SM3Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.Reset
void Org::BouncyCastle::Crypto::Digests::SM3Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.Reset
void Org::BouncyCastle::Crypto::Digests::SM3Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::SM3Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::SM3Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::SM3Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.SM3Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::SM3Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::SM3Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SM3Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SM3Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM3Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)(Org::BouncyCastle::Crypto::Digests::SM3Digest*)>(&SM3Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::SM3Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)(Org::BouncyCastle::Crypto::Digests::SM3Digest*)>(&SM3Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::SM3Digest*>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)(Org::BouncyCastle::Crypto::Digests::SM3Digest*)>(&SM3Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::SM3Digest*>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::P0
// Il2CppName: P0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (SM3Digest::*)(uint)>(&SM3Digest::P0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "P0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::P1
// Il2CppName: P1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (SM3Digest::*)(uint)>(&SM3Digest::P1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "P1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::FF0
// Il2CppName: FF0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (SM3Digest::*)(uint, uint, uint)>(&SM3Digest::FF0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "FF0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::FF1
// Il2CppName: FF1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (SM3Digest::*)(uint, uint, uint)>(&SM3Digest::FF1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "FF1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::GG0
// Il2CppName: GG0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (SM3Digest::*)(uint, uint, uint)>(&SM3Digest::GG0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "GG0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::GG1
// Il2CppName: GG1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (SM3Digest::*)(uint, uint, uint)>(&SM3Digest::GG1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "GG1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)()>(&SM3Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)()>(&SM3Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM3Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SM3Digest::*)()>(&SM3Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM3Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SM3Digest::*)()>(&SM3Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM3Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (SM3Digest::*)()>(&SM3Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM3Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&SM3Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)()>(&SM3Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM3Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SM3Digest::*)(::Array<uint8_t>*, int)>(&SM3Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)(::Array<uint8_t>*, int)>(&SM3Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)(int64_t)>(&SM3Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SM3Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM3Digest::*)()>(&SM3Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM3Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.TigerDigest
#include "Org/BouncyCastle/Crypto/Digests/TigerDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] t1
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::TigerDigest::_get_t1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::_get_t1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "TigerDigest", "t1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] t1
void Org::BouncyCastle::Crypto::Digests::TigerDigest::_set_t1(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::_set_t1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "TigerDigest", "t1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] t2
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::TigerDigest::_get_t2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::_get_t2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "TigerDigest", "t2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] t2
void Org::BouncyCastle::Crypto::Digests::TigerDigest::_set_t2(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::_set_t2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "TigerDigest", "t2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] t3
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::TigerDigest::_get_t3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::_get_t3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "TigerDigest", "t3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] t3
void Org::BouncyCastle::Crypto::Digests::TigerDigest::_set_t3(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::_set_t3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "TigerDigest", "t3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] t4
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::TigerDigest::_get_t4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::_get_t4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "TigerDigest", "t4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] t4
void Org::BouncyCastle::Crypto::Digests::TigerDigest::_set_t4(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::_set_t4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "TigerDigest", "t4", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::TigerDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::TigerDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::TigerDigest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::TigerDigest::ProcessWord(::Array<uint8_t>* b, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::ProcessWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(off)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, b, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.Update
void Org::BouncyCastle::Crypto::Digests::TigerDigest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::TigerDigest::BlockUpdate(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.RoundABC
void Org::BouncyCastle::Crypto::Digests::TigerDigest::RoundABC(int64_t x, int64_t mul) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::RoundABC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoundABC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(mul)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, mul);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.RoundBCA
void Org::BouncyCastle::Crypto::Digests::TigerDigest::RoundBCA(int64_t x, int64_t mul) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::RoundBCA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoundBCA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(mul)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, mul);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.RoundCAB
void Org::BouncyCastle::Crypto::Digests::TigerDigest::RoundCAB(int64_t x, int64_t mul) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::RoundCAB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoundCAB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(mul)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, mul);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.KeySchedule
void Org::BouncyCastle::Crypto::Digests::TigerDigest::KeySchedule() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::KeySchedule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeySchedule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::TigerDigest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.UnpackWord
void Org::BouncyCastle::Crypto::Digests::TigerDigest::UnpackWord(int64_t r, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::UnpackWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::TigerDigest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::ProcessLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.Finish
void Org::BouncyCastle::Crypto::Digests::TigerDigest::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::TigerDigest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.Reset
void Org::BouncyCastle::Crypto::Digests::TigerDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::TigerDigest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest.Reset
void Org::BouncyCastle::Crypto::Digests::TigerDigest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.TigerDigest..cctor
void Org::BouncyCastle::Crypto::Digests::TigerDigest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::TigerDigest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "TigerDigest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: TigerDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(Org::BouncyCastle::Crypto::Digests::TigerDigest*)>(&TigerDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::TigerDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(Org::BouncyCastle::Crypto::Digests::TigerDigest*)>(&TigerDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::TigerDigest*>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TigerDigest::*)()>(&TigerDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TigerDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TigerDigest::*)()>(&TigerDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TigerDigest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TigerDigest::*)()>(&TigerDigest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TigerDigest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(::Array<uint8_t>*, int)>(&TigerDigest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(uint8_t)>(&TigerDigest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(::Array<uint8_t>*, int, int)>(&TigerDigest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::RoundABC
// Il2CppName: RoundABC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(int64_t, int64_t)>(&TigerDigest::RoundABC)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "RoundABC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::RoundBCA
// Il2CppName: RoundBCA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(int64_t, int64_t)>(&TigerDigest::RoundBCA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "RoundBCA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::RoundCAB
// Il2CppName: RoundCAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(int64_t, int64_t)>(&TigerDigest::RoundCAB)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "RoundCAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::KeySchedule
// Il2CppName: KeySchedule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)()>(&TigerDigest::KeySchedule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "KeySchedule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TigerDigest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)()>(&TigerDigest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TigerDigest::UnpackWord
// Il2CppName: UnpackWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(int64_t, ::Array<uint8_t>*, int)>(&TigerDigest::UnpackWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "UnpackWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(int64_t)>(&TigerDigest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)()>(&TigerDigest::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TigerDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TigerDigest::*)(::Array<uint8_t>*, int)>(&TigerDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)()>(&TigerDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TigerDigest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (TigerDigest::*)()>(&TigerDigest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TigerDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&TigerDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: TigerDigest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&TigerDigest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TigerDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)()>(&TigerDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TigerDigest::*)()>(&TigerDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TigerDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest
#include "Org/BouncyCastle/Crypto/Digests/WhirlpoolDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] SBOX
::Array<int>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_SBOX() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_SBOX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "SBOX"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] SBOX
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_SBOX(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_SBOX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "SBOX", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] C0
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] C0
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C0(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] C1
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] C1
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C1(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] C2
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] C2
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C2(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] C3
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] C3
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C3(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] C4
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] C4
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C4(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] C5
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] C5
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C5(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] C6
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C6() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] C6
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C6(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64[] C7
::Array<int64_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C7() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_C7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64[] C7
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C7(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_C7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "C7", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int16[] EIGHT
::Array<int16_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_EIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_get_EIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int16_t>*>("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "EIGHT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int16[] EIGHT
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_EIGHT(::Array<int16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_set_EIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "EIGHT", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest..cctor
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.packIntoLong
int64_t Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::packIntoLong(int b7, int b6, int b5, int b4, int b3, int b2, int b1, int b0) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::packIntoLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "packIntoLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b7), ::il2cpp_utils::ExtractType(b6), ::il2cpp_utils::ExtractType(b5), ::il2cpp_utils::ExtractType(b4), ::il2cpp_utils::ExtractType(b3), ::il2cpp_utils::ExtractType(b2), ::il2cpp_utils::ExtractType(b1), ::il2cpp_utils::ExtractType(b0)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, b7, b6, b5, b4, b3, b2, b1, b0);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.maskWithReductionPolynomial
int Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::maskWithReductionPolynomial(int input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::maskWithReductionPolynomial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "maskWithReductionPolynomial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.Reset
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.processFilledBuffer
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::processFilledBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::processFilledBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processFilledBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.bytesToLongFromBuffer
int64_t Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::bytesToLongFromBuffer(::Array<uint8_t>* buffer, int startPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::bytesToLongFromBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "bytesToLongFromBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(startPos)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, startPos);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.convertLongToByteArray
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::convertLongToByteArray(int64_t inputLong, ::Array<uint8_t>* outputArray, int offSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::convertLongToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "WhirlpoolDigest", "convertLongToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputLong), ::il2cpp_utils::ExtractType(outputArray), ::il2cpp_utils::ExtractType(offSet)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputLong, outputArray, offSet);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.processBlock
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::processBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::processBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.Update
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.increment
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::increment() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::BlockUpdate(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.finish
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.copyBitLength
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::copyBitLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::copyBitLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "copyBitLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.Reset
void Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: WhirlpoolDigest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&WhirlpoolDigest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::packIntoLong
// Il2CppName: packIntoLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(int, int, int, int, int, int, int, int)>(&WhirlpoolDigest::packIntoLong)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "packIntoLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::maskWithReductionPolynomial
// Il2CppName: maskWithReductionPolynomial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&WhirlpoolDigest::maskWithReductionPolynomial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "maskWithReductionPolynomial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)(Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest*)>(&WhirlpoolDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)(Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest*)>(&WhirlpoolDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::WhirlpoolDigest*>()});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (WhirlpoolDigest::*)()>(&WhirlpoolDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (WhirlpoolDigest::*)()>(&WhirlpoolDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (WhirlpoolDigest::*)(::Array<uint8_t>*, int)>(&WhirlpoolDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)()>(&WhirlpoolDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::processFilledBuffer
// Il2CppName: processFilledBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)()>(&WhirlpoolDigest::processFilledBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "processFilledBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::bytesToLongFromBuffer
// Il2CppName: bytesToLongFromBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::Array<uint8_t>*, int)>(&WhirlpoolDigest::bytesToLongFromBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "bytesToLongFromBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::convertLongToByteArray
// Il2CppName: convertLongToByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int64_t, ::Array<uint8_t>*, int)>(&WhirlpoolDigest::convertLongToByteArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "convertLongToByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::processBlock
// Il2CppName: processBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)()>(&WhirlpoolDigest::processBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "processBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)(uint8_t)>(&WhirlpoolDigest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::increment
// Il2CppName: increment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)()>(&WhirlpoolDigest::increment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "increment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)(::Array<uint8_t>*, int, int)>(&WhirlpoolDigest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::finish
// Il2CppName: finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)()>(&WhirlpoolDigest::finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::copyBitLength
// Il2CppName: copyBitLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (WhirlpoolDigest::*)()>(&WhirlpoolDigest::copyBitLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "copyBitLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (WhirlpoolDigest::*)()>(&WhirlpoolDigest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (WhirlpoolDigest::*)()>(&WhirlpoolDigest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&WhirlpoolDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: WhirlpoolDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)()>(&WhirlpoolDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WhirlpoolDigest::*)()>(&WhirlpoolDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WhirlpoolDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/Curve25519Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_Curve25519Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP128R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP128R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP160K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP160R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP160R2Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP192K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP192K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP192R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP192R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP224K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP224K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP224R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP224R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP256K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP256K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP256R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP256R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP384R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP384R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP521R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP521R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT113R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT113R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT113R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT113R2Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT131R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT131R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT131R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT131R2Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT163K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT163R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT163R2Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT193R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT193R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT193R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT193R2Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT233K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT233K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT233R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT233R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT239K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT239K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT283K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT283K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT283R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT283R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT409K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT409K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT409R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT409R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT571K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT571K1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT571R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT571R1Holder.hpp"
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SM2P256V1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SM2P256V1Holder.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECPoint
#include "Org/BouncyCastle/Asn1/X9/X9ECPoint.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECCurve
#include "Org/BouncyCastle/Math/EC/ECCurve.hpp"
// Including type: Org.BouncyCastle.Math.EC.Endo.GlvTypeBParameters
#include "Org/BouncyCastle/Math/EC/Endo/GlvTypeBParameters.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParametersHolder
#include "Org/BouncyCastle/Asn1/X9/X9ECParametersHolder.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary nameToCurve
System::Collections::IDictionary* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_nameToCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_nameToCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "nameToCurve"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary nameToCurve
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_nameToCurve(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_nameToCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "nameToCurve", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary nameToOid
System::Collections::IDictionary* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_nameToOid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_nameToOid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "nameToOid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary nameToOid
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_nameToOid(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_nameToOid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "nameToOid", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary oidToCurve
System::Collections::IDictionary* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_oidToCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_oidToCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "oidToCurve"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary oidToCurve
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_oidToCurve(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_oidToCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "oidToCurve", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary oidToName
System::Collections::IDictionary* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_oidToName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_oidToName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "oidToName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary oidToName
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_oidToName(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_oidToName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "oidToName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IList names
System::Collections::IList* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_get_names");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IList*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "names"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IList names
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_names(System::Collections::IList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_set_names");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "names", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves.ConfigureBasepoint
Org::BouncyCastle::Asn1::X9::X9ECPoint* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::ConfigureBasepoint(Org::BouncyCastle::Math::EC::ECCurve* curve, ::Il2CppString* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::ConfigureBasepoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "ConfigureBasepoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curve), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECPoint*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, curve, encoding);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves.ConfigureCurve
Org::BouncyCastle::Math::EC::ECCurve* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::ConfigureCurve(Org::BouncyCastle::Math::EC::ECCurve* curve) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::ConfigureCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "ConfigureCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curve)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECCurve*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, curve);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves.ConfigureCurveGlv
Org::BouncyCastle::Math::EC::ECCurve* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::ConfigureCurveGlv(Org::BouncyCastle::Math::EC::ECCurve* c, Org::BouncyCastle::Math::EC::Endo::GlvTypeBParameters* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::ConfigureCurveGlv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "ConfigureCurveGlv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECCurve*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c, p);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves.DefineCurve
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::DefineCurve(::Il2CppString* name, Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* holder) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::DefineCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "DefineCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(holder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, holder);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves.DefineCurveWithOid
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::DefineCurveWithOid(::Il2CppString* name, Org::BouncyCastle::Asn1::DerObjectIdentifier* oid, Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* holder) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::DefineCurveWithOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "DefineCurveWithOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(holder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, oid, holder);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves.DefineCurveAlias
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::DefineCurveAlias(::Il2CppString* name, Org::BouncyCastle::Asn1::DerObjectIdentifier* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::DefineCurveAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "DefineCurveAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(oid)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, oid);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves.GetByName
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::GetByName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::GetByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "GetByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves.GetByOid
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::GetByOid(Org::BouncyCastle::Asn1::DerObjectIdentifier* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::GetByOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves", "GetByOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, oid);
}
// Writing MetadataGetter for method: CustomNamedCurves::ConfigureBasepoint
// Il2CppName: ConfigureBasepoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECPoint* (*)(Org::BouncyCastle::Math::EC::ECCurve*, ::Il2CppString*)>(&CustomNamedCurves::ConfigureBasepoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves*), "ConfigureBasepoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Math::EC::ECCurve*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::ConfigureCurve
// Il2CppName: ConfigureCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::EC::ECCurve* (*)(Org::BouncyCastle::Math::EC::ECCurve*)>(&CustomNamedCurves::ConfigureCurve)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves*), "ConfigureCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Math::EC::ECCurve*>()});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::ConfigureCurveGlv
// Il2CppName: ConfigureCurveGlv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::EC::ECCurve* (*)(Org::BouncyCastle::Math::EC::ECCurve*, Org::BouncyCastle::Math::EC::Endo::GlvTypeBParameters*)>(&CustomNamedCurves::ConfigureCurveGlv)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves*), "ConfigureCurveGlv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Math::EC::ECCurve*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Math::EC::Endo::GlvTypeBParameters*>()});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::DefineCurve
// Il2CppName: DefineCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*)>(&CustomNamedCurves::DefineCurve)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves*), "DefineCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>()});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::DefineCurveWithOid
// Il2CppName: DefineCurveWithOid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, Org::BouncyCastle::Asn1::DerObjectIdentifier*, Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*)>(&CustomNamedCurves::DefineCurveWithOid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves*), "DefineCurveWithOid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerObjectIdentifier*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>()});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::DefineCurveAlias
// Il2CppName: DefineCurveAlias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, Org::BouncyCastle::Asn1::DerObjectIdentifier*)>(&CustomNamedCurves::DefineCurveAlias)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves*), "DefineCurveAlias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerObjectIdentifier*>()});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::GetByName
// Il2CppName: GetByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (*)(::Il2CppString*)>(&CustomNamedCurves::GetByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves*), "GetByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::GetByOid
// Il2CppName: GetByOid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (*)(Org::BouncyCastle::Asn1::DerObjectIdentifier*)>(&CustomNamedCurves::GetByOid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves*), "GetByOid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerObjectIdentifier*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/Curve25519Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_Curve25519Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::Curve25519Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::Curve25519Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/Curve25519Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::Curve25519Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::Curve25519Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/Curve25519Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/Curve25519Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::Curve25519Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::Curve25519Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/Curve25519Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/Curve25519Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::Curve25519Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::Curve25519Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::Curve25519Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::Curve25519Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::Curve25519Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::Curve25519Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::Curve25519Holder::*)()>(&CustomNamedCurves::Curve25519Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::Curve25519Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::Curve25519Holder::*)()>(&CustomNamedCurves::Curve25519Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::Curve25519Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::Curve25519Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::Curve25519Holder::*)()>(&CustomNamedCurves::Curve25519Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::Curve25519Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP128R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP128R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP128R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP128R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP128R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP128R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP128R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP128R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP128R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP128R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP128R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP128R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP128R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP128R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP128R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP128R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP128R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP128R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP128R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP128R1Holder::*)()>(&CustomNamedCurves::SecP128R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP128R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP128R1Holder::*)()>(&CustomNamedCurves::SecP128R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP128R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP128R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP128R1Holder::*)()>(&CustomNamedCurves::SecP128R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP128R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP160K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP160K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP160K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP160K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP160K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP160K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP160K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP160K1Holder::*)()>(&CustomNamedCurves::SecP160K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP160K1Holder::*)()>(&CustomNamedCurves::SecP160K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP160K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP160K1Holder::*)()>(&CustomNamedCurves::SecP160K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP160R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP160R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP160R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP160R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP160R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP160R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP160R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP160R1Holder::*)()>(&CustomNamedCurves::SecP160R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP160R1Holder::*)()>(&CustomNamedCurves::SecP160R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP160R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP160R1Holder::*)()>(&CustomNamedCurves::SecP160R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP160R2Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R2Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R2Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP160R2Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R2Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R2Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP160R2Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160R2Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R2Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R2Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP160R2Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP160R2Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R2Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP160R2Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP160R2Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP160R2Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160R2Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP160R2Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP160R2Holder::*)()>(&CustomNamedCurves::SecP160R2Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP160R2Holder::*)()>(&CustomNamedCurves::SecP160R2Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP160R2Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP160R2Holder::*)()>(&CustomNamedCurves::SecP160R2Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP160R2Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP192K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP192K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP192K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP192K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP192K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP192K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP192K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP192K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP192K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP192K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP192K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP192K1Holder::*)()>(&CustomNamedCurves::SecP192K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP192K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP192K1Holder::*)()>(&CustomNamedCurves::SecP192K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP192K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP192K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP192K1Holder::*)()>(&CustomNamedCurves::SecP192K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP192K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP192R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP192R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP192R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP192R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP192R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP192R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP192R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP192R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP192R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP192R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP192R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP192R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP192R1Holder::*)()>(&CustomNamedCurves::SecP192R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP192R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP192R1Holder::*)()>(&CustomNamedCurves::SecP192R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP192R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP192R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP192R1Holder::*)()>(&CustomNamedCurves::SecP192R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP192R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP224K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP224K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP224K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP224K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP224K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP224K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP224K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP224K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP224K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP224K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP224K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP224K1Holder::*)()>(&CustomNamedCurves::SecP224K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP224K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP224K1Holder::*)()>(&CustomNamedCurves::SecP224K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP224K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP224K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP224K1Holder::*)()>(&CustomNamedCurves::SecP224K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP224K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP224R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP224R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP224R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP224R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP224R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP224R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP224R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP224R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP224R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP224R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP224R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP224R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP224R1Holder::*)()>(&CustomNamedCurves::SecP224R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP224R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP224R1Holder::*)()>(&CustomNamedCurves::SecP224R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP224R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP224R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP224R1Holder::*)()>(&CustomNamedCurves::SecP224R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP224R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP256K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP256K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP256K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP256K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP256K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP256K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP256K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP256K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP256K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP256K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP256K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP256K1Holder::*)()>(&CustomNamedCurves::SecP256K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP256K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP256K1Holder::*)()>(&CustomNamedCurves::SecP256K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP256K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP256K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP256K1Holder::*)()>(&CustomNamedCurves::SecP256K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP256K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP256R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP256R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP256R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP256R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP256R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP256R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP256R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP256R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP256R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP256R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP256R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP256R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP256R1Holder::*)()>(&CustomNamedCurves::SecP256R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP256R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP256R1Holder::*)()>(&CustomNamedCurves::SecP256R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP256R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP256R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP256R1Holder::*)()>(&CustomNamedCurves::SecP256R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP256R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP384R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP384R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP384R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP384R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP384R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP384R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP384R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP384R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP384R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP384R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP384R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP384R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP384R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP384R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP384R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP384R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP384R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP384R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP384R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP384R1Holder::*)()>(&CustomNamedCurves::SecP384R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP384R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP384R1Holder::*)()>(&CustomNamedCurves::SecP384R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP384R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP384R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP384R1Holder::*)()>(&CustomNamedCurves::SecP384R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP384R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP521R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecP521R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP521R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP521R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP521R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP521R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP521R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP521R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP521R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP521R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP521R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecP521R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecP521R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP521R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecP521R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecP521R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecP521R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP521R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP521R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP521R1Holder::*)()>(&CustomNamedCurves::SecP521R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP521R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecP521R1Holder::*)()>(&CustomNamedCurves::SecP521R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP521R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecP521R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecP521R1Holder::*)()>(&CustomNamedCurves::SecP521R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecP521R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT113R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT113R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT113R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT113R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT113R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT113R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT113R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT113R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT113R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT113R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT113R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT113R1Holder::*)()>(&CustomNamedCurves::SecT113R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT113R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT113R1Holder::*)()>(&CustomNamedCurves::SecT113R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT113R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT113R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT113R1Holder::*)()>(&CustomNamedCurves::SecT113R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT113R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT113R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT113R2Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R2Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R2Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT113R2Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R2Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R2Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT113R2Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT113R2Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R2Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R2Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT113R2Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT113R2Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R2Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT113R2Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT113R2Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT113R2Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT113R2Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT113R2Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT113R2Holder::*)()>(&CustomNamedCurves::SecT113R2Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT113R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT113R2Holder::*)()>(&CustomNamedCurves::SecT113R2Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT113R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT113R2Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT113R2Holder::*)()>(&CustomNamedCurves::SecT113R2Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT113R2Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT131R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT131R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT131R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT131R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT131R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT131R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT131R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT131R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT131R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT131R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT131R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT131R1Holder::*)()>(&CustomNamedCurves::SecT131R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT131R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT131R1Holder::*)()>(&CustomNamedCurves::SecT131R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT131R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT131R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT131R1Holder::*)()>(&CustomNamedCurves::SecT131R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT131R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT131R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT131R2Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R2Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R2Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT131R2Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R2Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R2Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT131R2Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT131R2Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R2Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R2Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT131R2Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT131R2Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R2Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT131R2Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT131R2Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT131R2Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT131R2Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT131R2Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT131R2Holder::*)()>(&CustomNamedCurves::SecT131R2Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT131R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT131R2Holder::*)()>(&CustomNamedCurves::SecT131R2Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT131R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT131R2Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT131R2Holder::*)()>(&CustomNamedCurves::SecT131R2Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT131R2Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT163K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT163K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT163K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT163K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT163K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT163K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT163K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT163K1Holder::*)()>(&CustomNamedCurves::SecT163K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT163K1Holder::*)()>(&CustomNamedCurves::SecT163K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT163K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT163K1Holder::*)()>(&CustomNamedCurves::SecT163K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT163R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT163R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT163R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT163R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT163R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT163R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT163R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT163R1Holder::*)()>(&CustomNamedCurves::SecT163R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT163R1Holder::*)()>(&CustomNamedCurves::SecT163R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT163R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT163R1Holder::*)()>(&CustomNamedCurves::SecT163R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT163R2Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R2Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R2Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT163R2Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R2Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R2Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT163R2Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163R2Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R2Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R2Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT163R2Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT163R2Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R2Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT163R2Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT163R2Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT163R2Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163R2Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT163R2Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT163R2Holder::*)()>(&CustomNamedCurves::SecT163R2Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT163R2Holder::*)()>(&CustomNamedCurves::SecT163R2Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT163R2Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT163R2Holder::*)()>(&CustomNamedCurves::SecT163R2Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT163R2Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT193R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT193R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT193R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT193R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT193R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT193R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT193R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT193R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT193R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT193R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT193R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT193R1Holder::*)()>(&CustomNamedCurves::SecT193R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT193R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT193R1Holder::*)()>(&CustomNamedCurves::SecT193R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT193R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT193R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT193R1Holder::*)()>(&CustomNamedCurves::SecT193R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT193R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT193R2Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT193R2Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R2Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R2Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT193R2Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R2Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R2Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT193R2Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT193R2Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R2Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R2Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT193R2Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT193R2Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R2Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT193R2Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT193R2Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT193R2Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT193R2Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT193R2Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT193R2Holder::*)()>(&CustomNamedCurves::SecT193R2Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT193R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT193R2Holder::*)()>(&CustomNamedCurves::SecT193R2Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT193R2Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT193R2Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT193R2Holder::*)()>(&CustomNamedCurves::SecT193R2Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT193R2Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT233K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT233K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT233K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT233K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT233K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT233K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT233K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT233K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT233K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT233K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT233K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT233K1Holder::*)()>(&CustomNamedCurves::SecT233K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT233K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT233K1Holder::*)()>(&CustomNamedCurves::SecT233K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT233K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT233K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT233K1Holder::*)()>(&CustomNamedCurves::SecT233K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT233K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT233R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT233R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT233R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT233R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT233R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT233R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT233R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT233R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT233R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT233R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT233R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT233R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT233R1Holder::*)()>(&CustomNamedCurves::SecT233R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT233R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT233R1Holder::*)()>(&CustomNamedCurves::SecT233R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT233R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT233R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT233R1Holder::*)()>(&CustomNamedCurves::SecT233R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT233R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT239K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT239K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT239K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT239K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT239K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT239K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT239K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT239K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT239K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT239K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT239K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT239K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT239K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT239K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT239K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT239K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT239K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT239K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT239K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT239K1Holder::*)()>(&CustomNamedCurves::SecT239K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT239K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT239K1Holder::*)()>(&CustomNamedCurves::SecT239K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT239K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT239K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT239K1Holder::*)()>(&CustomNamedCurves::SecT239K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT239K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT283K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT283K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT283K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT283K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT283K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT283K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT283K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT283K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT283K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT283K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT283K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT283K1Holder::*)()>(&CustomNamedCurves::SecT283K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT283K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT283K1Holder::*)()>(&CustomNamedCurves::SecT283K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT283K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT283K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT283K1Holder::*)()>(&CustomNamedCurves::SecT283K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT283K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT283R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT283R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT283R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT283R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT283R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT283R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT283R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT283R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT283R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT283R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT283R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT283R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT283R1Holder::*)()>(&CustomNamedCurves::SecT283R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT283R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT283R1Holder::*)()>(&CustomNamedCurves::SecT283R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT283R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT283R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT283R1Holder::*)()>(&CustomNamedCurves::SecT283R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT283R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT409K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT409K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT409K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT409K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT409K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT409K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT409K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT409K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT409K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT409K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT409K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT409K1Holder::*)()>(&CustomNamedCurves::SecT409K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT409K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT409K1Holder::*)()>(&CustomNamedCurves::SecT409K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT409K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT409K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT409K1Holder::*)()>(&CustomNamedCurves::SecT409K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT409K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT409R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT409R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT409R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT409R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT409R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT409R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT409R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT409R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT409R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT409R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT409R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT409R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT409R1Holder::*)()>(&CustomNamedCurves::SecT409R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT409R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT409R1Holder::*)()>(&CustomNamedCurves::SecT409R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT409R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT409R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT409R1Holder::*)()>(&CustomNamedCurves::SecT409R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT409R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT571K1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT571K1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571K1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571K1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT571K1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571K1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571K1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT571K1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT571K1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571K1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571K1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT571K1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT571K1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571K1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571K1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT571K1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT571K1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT571K1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT571K1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT571K1Holder::*)()>(&CustomNamedCurves::SecT571K1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT571K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT571K1Holder::*)()>(&CustomNamedCurves::SecT571K1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT571K1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT571K1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT571K1Holder::*)()>(&CustomNamedCurves::SecT571K1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT571K1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT571R1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SecT571R1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571R1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571R1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT571R1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571R1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571R1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT571R1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT571R1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571R1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571R1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SecT571R1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SecT571R1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571R1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SecT571R1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SecT571R1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SecT571R1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT571R1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT571R1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT571R1Holder::*)()>(&CustomNamedCurves::SecT571R1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT571R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SecT571R1Holder::*)()>(&CustomNamedCurves::SecT571R1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT571R1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SecT571R1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SecT571R1Holder::*)()>(&CustomNamedCurves::SecT571R1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SecT571R1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SM2P256V1Holder
#include "Org/BouncyCastle/Crypto/EC/CustomNamedCurves_SM2P256V1Holder.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SM2P256V1Holder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SM2P256V1Holder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*>("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SM2P256V1Holder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.X9.X9ECParametersHolder Instance
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SM2P256V1Holder::_set_Instance(Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SM2P256V1Holder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SM2P256V1Holder", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SM2P256V1Holder..cctor
void Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SM2P256V1Holder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SM2P256V1Holder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.EC", "CustomNamedCurves/SM2P256V1Holder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.EC.CustomNamedCurves/SM2P256V1Holder.CreateParameters
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SM2P256V1Holder::CreateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::EC::CustomNamedCurves::SM2P256V1Holder::CreateParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomNamedCurves::SM2P256V1Holder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomNamedCurves::SM2P256V1Holder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SM2P256V1Holder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SM2P256V1Holder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SM2P256V1Holder::*)()>(&CustomNamedCurves::SM2P256V1Holder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SM2P256V1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomNamedCurves::SM2P256V1Holder::*)()>(&CustomNamedCurves::SM2P256V1Holder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SM2P256V1Holder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomNamedCurves::SM2P256V1Holder::CreateParameters
// Il2CppName: CreateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (CustomNamedCurves::SM2P256V1Holder::*)()>(&CustomNamedCurves::SM2P256V1Holder::CreateParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomNamedCurves::SM2P256V1Holder*), "CreateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
#include "Org/BouncyCastle/Crypto/IAsymmetricBlockCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher.Init
void Org::BouncyCastle::Crypto::IAsymmetricBlockCipher::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IAsymmetricBlockCipher::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher.GetInputBlockSize
int Org::BouncyCastle::Crypto::IAsymmetricBlockCipher::GetInputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IAsymmetricBlockCipher::GetInputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher.GetOutputBlockSize
int Org::BouncyCastle::Crypto::IAsymmetricBlockCipher::GetOutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IAsymmetricBlockCipher::GetOutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher.ProcessBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::IAsymmetricBlockCipher::ProcessBlock(::Array<uint8_t>* inBuf, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IAsymmetricBlockCipher::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBuf), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, inBuf, inOff, inLen);
}
// Writing MetadataGetter for method: IAsymmetricBlockCipher::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IAsymmetricBlockCipher::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&IAsymmetricBlockCipher::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAsymmetricBlockCipher*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: IAsymmetricBlockCipher::GetInputBlockSize
// Il2CppName: GetInputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IAsymmetricBlockCipher::*)()>(&IAsymmetricBlockCipher::GetInputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAsymmetricBlockCipher*), "GetInputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IAsymmetricBlockCipher::GetOutputBlockSize
// Il2CppName: GetOutputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IAsymmetricBlockCipher::*)()>(&IAsymmetricBlockCipher::GetOutputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAsymmetricBlockCipher*), "GetOutputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IAsymmetricBlockCipher::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (IAsymmetricBlockCipher::*)(::Array<uint8_t>*, int, int)>(&IAsymmetricBlockCipher::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAsymmetricBlockCipher*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding
#include "Org/BouncyCastle/Crypto/Encodings/ISO9796d1Encoding.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Org.BouncyCastle.Math.BigInteger Sixteen
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_get_Sixteen() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_get_Sixteen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Math::BigInteger*>("Org.BouncyCastle.Crypto.Encodings", "ISO9796d1Encoding", "Sixteen"));
}
// Autogenerated static field setter
// Set static field: static private readonly Org.BouncyCastle.Math.BigInteger Sixteen
void Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_set_Sixteen(Org::BouncyCastle::Math::BigInteger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_set_Sixteen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Encodings", "ISO9796d1Encoding", "Sixteen", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Org.BouncyCastle.Math.BigInteger Six
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_get_Six() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_get_Six");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Math::BigInteger*>("Org.BouncyCastle.Crypto.Encodings", "ISO9796d1Encoding", "Six"));
}
// Autogenerated static field setter
// Set static field: static private readonly Org.BouncyCastle.Math.BigInteger Six
void Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_set_Six(Org::BouncyCastle::Math::BigInteger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_set_Six");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Encodings", "ISO9796d1Encoding", "Six", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] shadows
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_get_shadows() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_get_shadows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Encodings", "ISO9796d1Encoding", "shadows"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] shadows
void Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_set_shadows(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_set_shadows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Encodings", "ISO9796d1Encoding", "shadows", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] inverse
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_get_inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_get_inverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Encodings", "ISO9796d1Encoding", "inverse"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] inverse
void Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_set_inverse(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_set_inverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Encodings", "ISO9796d1Encoding", "inverse", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.Init
void Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.GetInputBlockSize
int Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::GetInputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::GetInputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.GetOutputBlockSize
int Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::GetOutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::GetOutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.ProcessBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::ProcessBlock(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.EncodeBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::EncodeBlock(::Array<uint8_t>* input, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::EncodeBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, inLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.DecodeBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::DecodeBlock(::Array<uint8_t>* input, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::DecodeBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, inLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding..cctor
void Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::ISO9796d1Encoding::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Encodings", "ISO9796d1Encoding", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: ISO9796d1Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISO9796d1Encoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*)>(&ISO9796d1Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISO9796d1Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISO9796d1Encoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*)>(&ISO9796d1Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISO9796d1Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>()});
  }
};
// Writing MetadataGetter for method: ISO9796d1Encoding::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISO9796d1Encoding::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&ISO9796d1Encoding::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISO9796d1Encoding*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: ISO9796d1Encoding::GetInputBlockSize
// Il2CppName: GetInputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ISO9796d1Encoding::*)()>(&ISO9796d1Encoding::GetInputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISO9796d1Encoding*), "GetInputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ISO9796d1Encoding::GetOutputBlockSize
// Il2CppName: GetOutputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ISO9796d1Encoding::*)()>(&ISO9796d1Encoding::GetOutputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISO9796d1Encoding*), "GetOutputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ISO9796d1Encoding::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ISO9796d1Encoding::*)(::Array<uint8_t>*, int, int)>(&ISO9796d1Encoding::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISO9796d1Encoding*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ISO9796d1Encoding::EncodeBlock
// Il2CppName: EncodeBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ISO9796d1Encoding::*)(::Array<uint8_t>*, int, int)>(&ISO9796d1Encoding::EncodeBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISO9796d1Encoding*), "EncodeBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ISO9796d1Encoding::DecodeBlock
// Il2CppName: DecodeBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ISO9796d1Encoding::*)(::Array<uint8_t>*, int, int)>(&ISO9796d1Encoding::DecodeBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISO9796d1Encoding*), "DecodeBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ISO9796d1Encoding::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ISO9796d1Encoding::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISO9796d1Encoding*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Encodings.OaepEncoding
#include "Org/BouncyCastle/Crypto/Encodings/OaepEncoding.hpp"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.OaepEncoding.Init
void Org::BouncyCastle::Crypto::Encodings::OaepEncoding::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* param) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::OaepEncoding::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(param)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, param);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.OaepEncoding.GetInputBlockSize
int Org::BouncyCastle::Crypto::Encodings::OaepEncoding::GetInputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::OaepEncoding::GetInputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.OaepEncoding.GetOutputBlockSize
int Org::BouncyCastle::Crypto::Encodings::OaepEncoding::GetOutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::OaepEncoding::GetOutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.OaepEncoding.ProcessBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::OaepEncoding::ProcessBlock(::Array<uint8_t>* inBytes, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::OaepEncoding::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, inBytes, inOff, inLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.OaepEncoding.EncodeBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::OaepEncoding::EncodeBlock(::Array<uint8_t>* inBytes, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::OaepEncoding::EncodeBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, inBytes, inOff, inLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.OaepEncoding.DecodeBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::OaepEncoding::DecodeBlock(::Array<uint8_t>* inBytes, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::OaepEncoding::DecodeBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, inBytes, inOff, inLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.OaepEncoding.ItoOSP
void Org::BouncyCastle::Crypto::Encodings::OaepEncoding::ItoOSP(int i, ::Array<uint8_t>* sp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::OaepEncoding::ItoOSP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ItoOSP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(sp)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, sp);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.OaepEncoding.maskGeneratorFunction1
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::OaepEncoding::maskGeneratorFunction1(::Array<uint8_t>* Z, int zOff, int zLen, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::OaepEncoding::maskGeneratorFunction1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "maskGeneratorFunction1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Z), ::il2cpp_utils::ExtractType(zOff), ::il2cpp_utils::ExtractType(zLen), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, Z, zOff, zLen, length);
}
// Writing MetadataGetter for method: OaepEncoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*)>(&OaepEncoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*)>(&OaepEncoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>()});
  }
};
// Writing MetadataGetter for method: OaepEncoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*, Org::BouncyCastle::Crypto::IDigest*)>(&OaepEncoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*, Org::BouncyCastle::Crypto::IDigest*)>(&OaepEncoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
// Writing MetadataGetter for method: OaepEncoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*, Org::BouncyCastle::Crypto::IDigest*, ::Array<uint8_t>*)>(&OaepEncoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*, Org::BouncyCastle::Crypto::IDigest*, ::Array<uint8_t>*)>(&OaepEncoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: OaepEncoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*, Org::BouncyCastle::Crypto::IDigest*, Org::BouncyCastle::Crypto::IDigest*, ::Array<uint8_t>*)>(&OaepEncoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*, Org::BouncyCastle::Crypto::IDigest*, Org::BouncyCastle::Crypto::IDigest*, ::Array<uint8_t>*)>(&OaepEncoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: OaepEncoding::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&OaepEncoding::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: OaepEncoding::GetInputBlockSize
// Il2CppName: GetInputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OaepEncoding::*)()>(&OaepEncoding::GetInputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), "GetInputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OaepEncoding::GetOutputBlockSize
// Il2CppName: GetOutputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OaepEncoding::*)()>(&OaepEncoding::GetOutputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), "GetOutputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OaepEncoding::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (OaepEncoding::*)(::Array<uint8_t>*, int, int)>(&OaepEncoding::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: OaepEncoding::EncodeBlock
// Il2CppName: EncodeBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (OaepEncoding::*)(::Array<uint8_t>*, int, int)>(&OaepEncoding::EncodeBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), "EncodeBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: OaepEncoding::DecodeBlock
// Il2CppName: DecodeBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (OaepEncoding::*)(::Array<uint8_t>*, int, int)>(&OaepEncoding::DecodeBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), "DecodeBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: OaepEncoding::ItoOSP
// Il2CppName: ItoOSP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OaepEncoding::*)(int, ::Array<uint8_t>*)>(&OaepEncoding::ItoOSP)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), "ItoOSP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: OaepEncoding::maskGeneratorFunction1
// Il2CppName: maskGeneratorFunction1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (OaepEncoding::*)(::Array<uint8_t>*, int, int, int)>(&OaepEncoding::maskGeneratorFunction1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OaepEncoding*), "maskGeneratorFunction1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding
#include "Org/BouncyCastle/Crypto/Encodings/Pkcs1Encoding.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean[] strictLengthEnabled
::Array<bool>* Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::_get_strictLengthEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::_get_strictLengthEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<bool>*>("Org.BouncyCastle.Crypto.Encodings", "Pkcs1Encoding", "strictLengthEnabled"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean[] strictLengthEnabled
void Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::_set_strictLengthEnabled(::Array<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::_set_strictLengthEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Encodings", "Pkcs1Encoding", "strictLengthEnabled", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.get_StrictLengthEnabled
bool Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::get_StrictLengthEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::get_StrictLengthEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Encodings", "Pkcs1Encoding", "get_StrictLengthEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding..cctor
void Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Encodings", "Pkcs1Encoding", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.Init
void Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.GetInputBlockSize
int Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::GetInputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::GetInputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.GetOutputBlockSize
int Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::GetOutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::GetOutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.ProcessBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::ProcessBlock(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.EncodeBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::EncodeBlock(::Array<uint8_t>* input, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::EncodeBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, inLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.CheckPkcs1Encoding
int Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::CheckPkcs1Encoding(::Array<uint8_t>* encoded, int pLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::CheckPkcs1Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Encodings", "Pkcs1Encoding", "CheckPkcs1Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoded), ::il2cpp_utils::ExtractType(pLen)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, encoded, pLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.DecodeBlockOrRandom
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::DecodeBlockOrRandom(::Array<uint8_t>* input, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::DecodeBlockOrRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeBlockOrRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, inLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.DecodeBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::DecodeBlock(::Array<uint8_t>* input, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::DecodeBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, inLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.FindStart
int Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::FindStart(uint8_t type, ::Array<uint8_t>* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Encodings::Pkcs1Encoding::FindStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(block)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, type, block);
}
// Writing MetadataGetter for method: Pkcs1Encoding::get_StrictLengthEnabled
// Il2CppName: get_StrictLengthEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Pkcs1Encoding::get_StrictLengthEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "get_StrictLengthEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Pkcs1Encoding::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs1Encoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*)>(&Pkcs1Encoding::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs1Encoding::*)(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*)>(&Pkcs1Encoding::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IAsymmetricBlockCipher*>()});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs1Encoding::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&Pkcs1Encoding::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::GetInputBlockSize
// Il2CppName: GetInputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pkcs1Encoding::*)()>(&Pkcs1Encoding::GetInputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "GetInputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::GetOutputBlockSize
// Il2CppName: GetOutputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pkcs1Encoding::*)()>(&Pkcs1Encoding::GetOutputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "GetOutputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Pkcs1Encoding::*)(::Array<uint8_t>*, int, int)>(&Pkcs1Encoding::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::EncodeBlock
// Il2CppName: EncodeBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Pkcs1Encoding::*)(::Array<uint8_t>*, int, int)>(&Pkcs1Encoding::EncodeBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "EncodeBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::CheckPkcs1Encoding
// Il2CppName: CheckPkcs1Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int)>(&Pkcs1Encoding::CheckPkcs1Encoding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "CheckPkcs1Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::DecodeBlockOrRandom
// Il2CppName: DecodeBlockOrRandom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Pkcs1Encoding::*)(::Array<uint8_t>*, int, int)>(&Pkcs1Encoding::DecodeBlockOrRandom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "DecodeBlockOrRandom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::DecodeBlock
// Il2CppName: DecodeBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Pkcs1Encoding::*)(::Array<uint8_t>*, int, int)>(&Pkcs1Encoding::DecodeBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "DecodeBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs1Encoding::FindStart
// Il2CppName: FindStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pkcs1Encoding::*)(uint8_t, ::Array<uint8_t>*)>(&Pkcs1Encoding::FindStart)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs1Encoding*), "FindStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IBlockCipher
#include "Org/BouncyCastle/Crypto/IBlockCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.IBlockCipher.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::IBlockCipher::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IBlockCipher::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IBlockCipher.Init
void Org::BouncyCastle::Crypto::IBlockCipher::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IBlockCipher::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize
int Org::BouncyCastle::Crypto::IBlockCipher::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IBlockCipher::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IBlockCipher.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::IBlockCipher::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IBlockCipher::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock
int Org::BouncyCastle::Crypto::IBlockCipher::ProcessBlock(::Array<uint8_t>* inBuf, int inOff, ::Array<uint8_t>* outBuf, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IBlockCipher::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBuf), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBuf), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inBuf, inOff, outBuf, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IBlockCipher.Reset
void Org::BouncyCastle::Crypto::IBlockCipher::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IBlockCipher::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IBlockCipher::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (IBlockCipher::*)()>(&IBlockCipher::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBlockCipher*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IBlockCipher::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IBlockCipher::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&IBlockCipher::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBlockCipher*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: IBlockCipher::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IBlockCipher::*)()>(&IBlockCipher::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBlockCipher*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IBlockCipher::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IBlockCipher::*)()>(&IBlockCipher::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBlockCipher*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IBlockCipher::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IBlockCipher::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&IBlockCipher::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBlockCipher*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IBlockCipher::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IBlockCipher::*)()>(&IBlockCipher::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBlockCipher*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.AesEngine
#include "Org/BouncyCastle/Crypto/Engines/AesEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] S
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::AesEngine::_get_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_get_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "AesEngine", "S"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] S
void Org::BouncyCastle::Crypto::Engines::AesEngine::_set_S(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_set_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "AesEngine", "S", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] Si
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::AesEngine::_get_Si() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_get_Si");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "AesEngine", "Si"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] Si
void Org::BouncyCastle::Crypto::Engines::AesEngine::_set_Si(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_set_Si");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "AesEngine", "Si", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] rcon
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::AesEngine::_get_rcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_get_rcon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "AesEngine", "rcon"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] rcon
void Org::BouncyCastle::Crypto::Engines::AesEngine::_set_rcon(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_set_rcon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "AesEngine", "rcon", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T0
::Array<uint>* Org::BouncyCastle::Crypto::Engines::AesEngine::_get_T0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_get_T0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "AesEngine", "T0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T0
void Org::BouncyCastle::Crypto::Engines::AesEngine::_set_T0(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_set_T0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "AesEngine", "T0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] Tinv0
::Array<uint>* Org::BouncyCastle::Crypto::Engines::AesEngine::_get_Tinv0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_get_Tinv0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "AesEngine", "Tinv0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] Tinv0
void Org::BouncyCastle::Crypto::Engines::AesEngine::_set_Tinv0(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::_set_Tinv0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "AesEngine", "Tinv0", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.Shift
uint Org::BouncyCastle::Crypto::Engines::AesEngine::Shift(uint r, int shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::Shift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "AesEngine", "Shift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(shift)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, r, shift);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.FFmulX
uint Org::BouncyCastle::Crypto::Engines::AesEngine::FFmulX(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::FFmulX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "AesEngine", "FFmulX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.FFmulX2
uint Org::BouncyCastle::Crypto::Engines::AesEngine::FFmulX2(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::FFmulX2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "AesEngine", "FFmulX2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.Inv_Mcol
uint Org::BouncyCastle::Crypto::Engines::AesEngine::Inv_Mcol(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::Inv_Mcol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "AesEngine", "Inv_Mcol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.SubWord
uint Org::BouncyCastle::Crypto::Engines::AesEngine::SubWord(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::SubWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "AesEngine", "SubWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.GenerateWorkingKey
::Array<::Array<uint>*>* Org::BouncyCastle::Crypto::Engines::AesEngine::GenerateWorkingKey(::Array<uint8_t>* key, bool forEncryption) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::GenerateWorkingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(forEncryption)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Array<uint>*>*, false>(this, ___internal__method, key, forEncryption);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.Init
void Org::BouncyCastle::Crypto::Engines::AesEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::AesEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::AesEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::AesEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::AesEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.Reset
void Org::BouncyCastle::Crypto::Engines::AesEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.UnPackBlock
void Org::BouncyCastle::Crypto::Engines::AesEngine::UnPackBlock(::Array<uint8_t>* bytes, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::UnPackBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnPackBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(off)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bytes, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.PackBlock
void Org::BouncyCastle::Crypto::Engines::AesEngine::PackBlock(::Array<uint8_t>* bytes, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::PackBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(off)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bytes, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::AesEngine::EncryptBlock(::Array<::Array<uint>*>* KW) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(KW)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, KW);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::AesEngine::DecryptBlock(::Array<::Array<uint>*>* KW) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(KW)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, KW);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.AesEngine..cctor
void Org::BouncyCastle::Crypto::Engines::AesEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::AesEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "AesEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: AesEngine::Shift
// Il2CppName: Shift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, int)>(&AesEngine::Shift)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "Shift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: AesEngine::FFmulX
// Il2CppName: FFmulX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&AesEngine::FFmulX)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "FFmulX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: AesEngine::FFmulX2
// Il2CppName: FFmulX2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&AesEngine::FFmulX2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "FFmulX2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: AesEngine::Inv_Mcol
// Il2CppName: Inv_Mcol
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&AesEngine::Inv_Mcol)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "Inv_Mcol", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: AesEngine::SubWord
// Il2CppName: SubWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&AesEngine::SubWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "SubWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: AesEngine::GenerateWorkingKey
// Il2CppName: GenerateWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Array<uint>*>* (AesEngine::*)(::Array<uint8_t>*, bool)>(&AesEngine::GenerateWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "GenerateWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AesEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AesEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&AesEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: AesEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AesEngine::*)()>(&AesEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AesEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AesEngine::*)()>(&AesEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AesEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (AesEngine::*)()>(&AesEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AesEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (AesEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&AesEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: AesEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AesEngine::*)()>(&AesEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AesEngine::UnPackBlock
// Il2CppName: UnPackBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AesEngine::*)(::Array<uint8_t>*, int)>(&AesEngine::UnPackBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "UnPackBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: AesEngine::PackBlock
// Il2CppName: PackBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AesEngine::*)(::Array<uint8_t>*, int)>(&AesEngine::PackBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "PackBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: AesEngine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AesEngine::*)(::Array<::Array<uint>*>*)>(&AesEngine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Array<uint>*>*>()});
  }
};
// Writing MetadataGetter for method: AesEngine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AesEngine::*)(::Array<::Array<uint>*>*)>(&AesEngine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Array<uint>*>*>()});
  }
};
// Writing MetadataGetter for method: AesEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&AesEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AesEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AesEngine::*)()>(&AesEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AesEngine::*)()>(&AesEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AesEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.BlowfishEngine
#include "Org/BouncyCastle/Crypto/Engines/BlowfishEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] KP
::Array<uint>* Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KP() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KP"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] KP
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KP(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KP", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] KS0
::Array<uint>* Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KS0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KS0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KS0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] KS0
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KS0(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KS0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KS0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] KS1
::Array<uint>* Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KS1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KS1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KS1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] KS1
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KS1(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KS1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KS1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] KS2
::Array<uint>* Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KS2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KS2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KS2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] KS2
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KS2(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KS2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KS2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] KS3
::Array<uint>* Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KS3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_KS3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KS3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] KS3
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KS3(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_KS3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "KS3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 ROUNDS
int Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_ROUNDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_ROUNDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "ROUNDS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 ROUNDS
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_ROUNDS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_ROUNDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "ROUNDS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 SBOX_SK
int Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_SBOX_SK() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_SBOX_SK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "SBOX_SK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 SBOX_SK
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_SBOX_SK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_SBOX_SK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "SBOX_SK", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 P_SZ
int Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_P_SZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_get_P_SZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "P_SZ"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 P_SZ
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_P_SZ(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_set_P_SZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", "P_SZ", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.Init
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::BlowfishEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::BlowfishEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::BlowfishEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.Reset
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::BlowfishEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.F
uint Org::BouncyCastle::Crypto::Engines::BlowfishEngine::F(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.ProcessTable
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::ProcessTable(uint xl, uint xr, ::Array<uint>* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::ProcessTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xl), ::il2cpp_utils::ExtractType(xr), ::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xl, xr, table);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.SetKey
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::SetKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::EncryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, srcIndex, dst, dstIndex);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::DecryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, srcIndex, dst, dstIndex);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.BlowfishEngine..cctor
void Org::BouncyCastle::Crypto::Engines::BlowfishEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::BlowfishEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "BlowfishEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: BlowfishEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlowfishEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&BlowfishEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (BlowfishEngine::*)()>(&BlowfishEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BlowfishEngine::*)()>(&BlowfishEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BlowfishEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&BlowfishEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlowfishEngine::*)()>(&BlowfishEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BlowfishEngine::*)()>(&BlowfishEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::F
// Il2CppName: F
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (BlowfishEngine::*)(uint)>(&BlowfishEngine::F)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "F", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::ProcessTable
// Il2CppName: ProcessTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlowfishEngine::*)(uint, uint, ::Array<uint>*)>(&BlowfishEngine::ProcessTable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "ProcessTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlowfishEngine::*)(::Array<uint8_t>*)>(&BlowfishEngine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlowfishEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&BlowfishEngine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlowfishEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&BlowfishEngine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BlowfishEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BlowfishEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlowfishEngine::*)()>(&BlowfishEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlowfishEngine::*)()>(&BlowfishEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlowfishEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.CamelliaEngine
#include "Org/BouncyCastle/Crypto/Engines/CamelliaEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SIGMA
::Array<uint>* Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SIGMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SIGMA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SIGMA"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SIGMA
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SIGMA(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SIGMA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SIGMA", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SBOX1_1110
::Array<uint>* Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SBOX1_1110() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SBOX1_1110");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SBOX1_1110"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SBOX1_1110
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SBOX1_1110(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SBOX1_1110");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SBOX1_1110", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SBOX4_4404
::Array<uint>* Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SBOX4_4404() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SBOX4_4404");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SBOX4_4404"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SBOX4_4404
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SBOX4_4404(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SBOX4_4404");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SBOX4_4404", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SBOX2_0222
::Array<uint>* Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SBOX2_0222() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SBOX2_0222");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SBOX2_0222"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SBOX2_0222
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SBOX2_0222(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SBOX2_0222");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SBOX2_0222", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SBOX3_3033
::Array<uint>* Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SBOX3_3033() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_get_SBOX3_3033");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SBOX3_3033"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SBOX3_3033
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SBOX3_3033(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_set_SBOX3_3033");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "SBOX3_3033", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.rightRotate
uint Org::BouncyCastle::Crypto::Engines::CamelliaEngine::rightRotate(uint x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::rightRotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "rightRotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.leftRotate
uint Org::BouncyCastle::Crypto::Engines::CamelliaEngine::leftRotate(uint x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::leftRotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "leftRotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.roldq
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::roldq(int rot, ::Array<uint>* ki, int ioff, ::Array<uint>* ko, int ooff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::roldq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "roldq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(ki), ::il2cpp_utils::ExtractType(ioff), ::il2cpp_utils::ExtractType(ko), ::il2cpp_utils::ExtractType(ooff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rot, ki, ioff, ko, ooff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.decroldq
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::decroldq(int rot, ::Array<uint>* ki, int ioff, ::Array<uint>* ko, int ooff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::decroldq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "decroldq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(ki), ::il2cpp_utils::ExtractType(ioff), ::il2cpp_utils::ExtractType(ko), ::il2cpp_utils::ExtractType(ooff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rot, ki, ioff, ko, ooff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.roldqo32
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::roldqo32(int rot, ::Array<uint>* ki, int ioff, ::Array<uint>* ko, int ooff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::roldqo32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "roldqo32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(ki), ::il2cpp_utils::ExtractType(ioff), ::il2cpp_utils::ExtractType(ko), ::il2cpp_utils::ExtractType(ooff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rot, ki, ioff, ko, ooff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.decroldqo32
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::decroldqo32(int rot, ::Array<uint>* ki, int ioff, ::Array<uint>* ko, int ooff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::decroldqo32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "decroldqo32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(ki), ::il2cpp_utils::ExtractType(ioff), ::il2cpp_utils::ExtractType(ko), ::il2cpp_utils::ExtractType(ooff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rot, ki, ioff, ko, ooff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.bytes2uint
uint Org::BouncyCastle::Crypto::Engines::CamelliaEngine::bytes2uint(::Array<uint8_t>* src, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::bytes2uint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "bytes2uint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, offset);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.uint2bytes
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::uint2bytes(uint word, ::Array<uint8_t>* dst, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::uint2bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "uint2bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, word, dst, offset);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.camelliaF2
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::camelliaF2(::Array<uint>* s, ::Array<uint>* skey, int keyoff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::camelliaF2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "camelliaF2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(skey), ::il2cpp_utils::ExtractType(keyoff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, skey, keyoff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.camelliaFLs
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::camelliaFLs(::Array<uint>* s, ::Array<uint>* fkey, int keyoff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::camelliaFLs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", "camelliaFLs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(fkey), ::il2cpp_utils::ExtractType(keyoff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, fkey, keyoff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.setKey
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::setKey(bool forEncryption, ::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::setKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.processBlock128
int Org::BouncyCastle::Crypto::Engines::CamelliaEngine::processBlock128(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::processBlock128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processBlock128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.processBlock192or256
int Org::BouncyCastle::Crypto::Engines::CamelliaEngine::processBlock192or256(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::processBlock192or256");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processBlock192or256", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.Init
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::CamelliaEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::CamelliaEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::CamelliaEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::CamelliaEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine.Reset
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.CamelliaEngine..cctor
void Org::BouncyCastle::Crypto::Engines::CamelliaEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::CamelliaEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "CamelliaEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: CamelliaEngine::rightRotate
// Il2CppName: rightRotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, int)>(&CamelliaEngine::rightRotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "rightRotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::leftRotate
// Il2CppName: leftRotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, int)>(&CamelliaEngine::leftRotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "leftRotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::roldq
// Il2CppName: roldq
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<uint>*, int, ::Array<uint>*, int)>(&CamelliaEngine::roldq)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "roldq", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::decroldq
// Il2CppName: decroldq
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<uint>*, int, ::Array<uint>*, int)>(&CamelliaEngine::decroldq)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "decroldq", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::roldqo32
// Il2CppName: roldqo32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<uint>*, int, ::Array<uint>*, int)>(&CamelliaEngine::roldqo32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "roldqo32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::decroldqo32
// Il2CppName: decroldqo32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<uint>*, int, ::Array<uint>*, int)>(&CamelliaEngine::decroldqo32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "decroldqo32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::bytes2uint
// Il2CppName: bytes2uint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::Array<uint8_t>*, int)>(&CamelliaEngine::bytes2uint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "bytes2uint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::uint2bytes
// Il2CppName: uint2bytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint, ::Array<uint8_t>*, int)>(&CamelliaEngine::uint2bytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "uint2bytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::camelliaF2
// Il2CppName: camelliaF2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint>*, ::Array<uint>*, int)>(&CamelliaEngine::camelliaF2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "camelliaF2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::camelliaFLs
// Il2CppName: camelliaFLs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint>*, ::Array<uint>*, int)>(&CamelliaEngine::camelliaFLs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "camelliaFLs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::setKey
// Il2CppName: setKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CamelliaEngine::*)(bool, ::Array<uint8_t>*)>(&CamelliaEngine::setKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "setKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::processBlock128
// Il2CppName: processBlock128
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CamelliaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&CamelliaEngine::processBlock128)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "processBlock128", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::processBlock192or256
// Il2CppName: processBlock192or256
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CamelliaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&CamelliaEngine::processBlock192or256)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "processBlock192or256", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CamelliaEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&CamelliaEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CamelliaEngine::*)()>(&CamelliaEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CamelliaEngine::*)()>(&CamelliaEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CamelliaEngine::*)()>(&CamelliaEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CamelliaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&CamelliaEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CamelliaEngine::*)()>(&CamelliaEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CamelliaEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CamelliaEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CamelliaEngine::*)()>(&CamelliaEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CamelliaEngine::*)()>(&CamelliaEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CamelliaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.Cast5Engine
#include "Org/BouncyCastle/Crypto/Engines/Cast5Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] S1
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] S1
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S1(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] S2
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] S2
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S2(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] S3
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] S3
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S3(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] S4
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] S4
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S4(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] S5
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] S5
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S5(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] S6
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S6() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] S6
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S6(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] S7
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S7() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] S7
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S7(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S7", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] S8
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_S8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S8"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] S8
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S8(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_S8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "S8", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 MAX_ROUNDS
int Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_MAX_ROUNDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_MAX_ROUNDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "MAX_ROUNDS"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 MAX_ROUNDS
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_MAX_ROUNDS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_MAX_ROUNDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "MAX_ROUNDS", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 RED_ROUNDS
int Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_RED_ROUNDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_get_RED_ROUNDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "RED_ROUNDS"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 RED_ROUNDS
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_RED_ROUNDS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::_set_RED_ROUNDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "RED_ROUNDS", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.Init
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::Cast5Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::Cast5Engine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::Cast5Engine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.Reset
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::Cast5Engine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.SetKey
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::SetKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::SetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.EncryptBlock
int Org::BouncyCastle::Crypto::Engines::Cast5Engine::EncryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, src, srcIndex, dst, dstIndex);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.DecryptBlock
int Org::BouncyCastle::Crypto::Engines::Cast5Engine::DecryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, src, srcIndex, dst, dstIndex);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.F1
uint Org::BouncyCastle::Crypto::Engines::Cast5Engine::F1(uint D, uint Kmi, int Kri) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::F1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "F1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(D), ::il2cpp_utils::ExtractType(Kmi), ::il2cpp_utils::ExtractType(Kri)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, D, Kmi, Kri);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.F2
uint Org::BouncyCastle::Crypto::Engines::Cast5Engine::F2(uint D, uint Kmi, int Kri) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::F2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "F2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(D), ::il2cpp_utils::ExtractType(Kmi), ::il2cpp_utils::ExtractType(Kri)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, D, Kmi, Kri);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.F3
uint Org::BouncyCastle::Crypto::Engines::Cast5Engine::F3(uint D, uint Kmi, int Kri) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::F3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "F3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(D), ::il2cpp_utils::ExtractType(Kmi), ::il2cpp_utils::ExtractType(Kri)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, D, Kmi, Kri);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.CAST_Encipher
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::CAST_Encipher(uint L0, uint R0, ::Array<uint>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::CAST_Encipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CAST_Encipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(L0), ::il2cpp_utils::ExtractType(R0), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, L0, R0, result);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.CAST_Decipher
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::CAST_Decipher(uint L16, uint R16, ::Array<uint>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::CAST_Decipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CAST_Decipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(L16), ::il2cpp_utils::ExtractType(R16), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, L16, R16, result);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.Bits32ToInts
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::Bits32ToInts(uint inData, ::Array<int>* b, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::Bits32ToInts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "Bits32ToInts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inData), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inData, b, offset);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine.IntsTo32bits
uint Org::BouncyCastle::Crypto::Engines::Cast5Engine::IntsTo32bits(::Array<int>* b, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::IntsTo32bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", "IntsTo32bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, b, i);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast5Engine..cctor
void Org::BouncyCastle::Crypto::Engines::Cast5Engine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast5Engine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Cast5Engine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Cast5Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast5Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&Cast5Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Cast5Engine::*)()>(&Cast5Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cast5Engine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Cast5Engine::*)()>(&Cast5Engine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cast5Engine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cast5Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&Cast5Engine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast5Engine::*)()>(&Cast5Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cast5Engine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cast5Engine::*)()>(&Cast5Engine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cast5Engine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast5Engine::*)(::Array<uint8_t>*)>(&Cast5Engine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cast5Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&Cast5Engine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cast5Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&Cast5Engine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::F1
// Il2CppName: F1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, int)>(&Cast5Engine::F1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "F1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::F2
// Il2CppName: F2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, int)>(&Cast5Engine::F2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "F2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::F3
// Il2CppName: F3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, int)>(&Cast5Engine::F3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "F3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::CAST_Encipher
// Il2CppName: CAST_Encipher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast5Engine::*)(uint, uint, ::Array<uint>*)>(&Cast5Engine::CAST_Encipher)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "CAST_Encipher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::CAST_Decipher
// Il2CppName: CAST_Decipher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast5Engine::*)(uint, uint, ::Array<uint>*)>(&Cast5Engine::CAST_Decipher)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "CAST_Decipher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::Bits32ToInts
// Il2CppName: Bits32ToInts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint, ::Array<int>*, int)>(&Cast5Engine::Bits32ToInts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "Bits32ToInts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::IntsTo32bits
// Il2CppName: IntsTo32bits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::Array<int>*, int)>(&Cast5Engine::IntsTo32bits)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), "IntsTo32bits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cast5Engine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Cast5Engine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cast5Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast5Engine::*)()>(&Cast5Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast5Engine::*)()>(&Cast5Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast5Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.Cast6Engine
#include "Org/BouncyCastle/Crypto/Engines/Cast6Engine.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast6Engine.CAST_Encipher
void Org::BouncyCastle::Crypto::Engines::Cast6Engine::CAST_Encipher(uint A, uint B, uint C, uint D, ::Array<uint>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast6Engine::CAST_Encipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CAST_Encipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(A), ::il2cpp_utils::ExtractType(B), ::il2cpp_utils::ExtractType(C), ::il2cpp_utils::ExtractType(D), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, A, B, C, D, result);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast6Engine.CAST_Decipher
void Org::BouncyCastle::Crypto::Engines::Cast6Engine::CAST_Decipher(uint A, uint B, uint C, uint D, ::Array<uint>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast6Engine::CAST_Decipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CAST_Decipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(A), ::il2cpp_utils::ExtractType(B), ::il2cpp_utils::ExtractType(C), ::il2cpp_utils::ExtractType(D), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, A, B, C, D, result);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast6Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::Cast6Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast6Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast6Engine.Reset
void Org::BouncyCastle::Crypto::Engines::Cast6Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast6Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast6Engine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::Cast6Engine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast6Engine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast6Engine.SetKey
void Org::BouncyCastle::Crypto::Engines::Cast6Engine::SetKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast6Engine::SetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast6Engine.EncryptBlock
int Org::BouncyCastle::Crypto::Engines::Cast6Engine::EncryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast6Engine::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, src, srcIndex, dst, dstIndex);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Cast6Engine.DecryptBlock
int Org::BouncyCastle::Crypto::Engines::Cast6Engine::DecryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Cast6Engine::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, src, srcIndex, dst, dstIndex);
}
// Writing MetadataGetter for method: Cast6Engine::CAST_Encipher
// Il2CppName: CAST_Encipher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast6Engine::*)(uint, uint, uint, uint, ::Array<uint>*)>(&Cast6Engine::CAST_Encipher)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), "CAST_Encipher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: Cast6Engine::CAST_Decipher
// Il2CppName: CAST_Decipher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast6Engine::*)(uint, uint, uint, uint, ::Array<uint>*)>(&Cast6Engine::CAST_Decipher)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), "CAST_Decipher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: Cast6Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast6Engine::*)()>(&Cast6Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast6Engine::*)()>(&Cast6Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cast6Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Cast6Engine::*)()>(&Cast6Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cast6Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast6Engine::*)()>(&Cast6Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cast6Engine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cast6Engine::*)()>(&Cast6Engine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cast6Engine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cast6Engine::*)(::Array<uint8_t>*)>(&Cast6Engine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Cast6Engine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cast6Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&Cast6Engine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cast6Engine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cast6Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&Cast6Engine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cast6Engine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IStreamCipher
#include "Org/BouncyCastle/Crypto/IStreamCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.IStreamCipher.Init
void Org::BouncyCastle::Crypto::IStreamCipher::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IStreamCipher::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IStreamCipher.ProcessBytes
void Org::BouncyCastle::Crypto::IStreamCipher::ProcessBytes(::Array<uint8_t>* input, int inOff, int length, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IStreamCipher::ProcessBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IStreamCipher.Reset
void Org::BouncyCastle::Crypto::IStreamCipher::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IStreamCipher::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IStreamCipher::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IStreamCipher::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&IStreamCipher::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IStreamCipher*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: IStreamCipher::ProcessBytes
// Il2CppName: ProcessBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IStreamCipher::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*, int)>(&IStreamCipher::ProcessBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IStreamCipher*), "ProcessBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IStreamCipher::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IStreamCipher::*)()>(&IStreamCipher::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IStreamCipher*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.Salsa20Engine
#include "Org/BouncyCastle/Crypto/Engines/Salsa20Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 DEFAULT_ROUNDS
int Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_DEFAULT_ROUNDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_DEFAULT_ROUNDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "DEFAULT_ROUNDS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 DEFAULT_ROUNDS
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_DEFAULT_ROUNDS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_DEFAULT_ROUNDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "DEFAULT_ROUNDS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] TAU_SIGMA
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_TAU_SIGMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_TAU_SIGMA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "TAU_SIGMA"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] TAU_SIGMA
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_TAU_SIGMA(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_TAU_SIGMA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "TAU_SIGMA", value));
}
// [ObsoleteAttribute] Offset: 0xDE20CC
// Autogenerated static field getter
// Get static field: static protected readonly System.Byte[] sigma
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_sigma() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_sigma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "sigma"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Byte[] sigma
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_sigma(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_sigma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "sigma", value));
}
// [ObsoleteAttribute] Offset: 0xDE20DC
// Autogenerated static field getter
// Get static field: static protected readonly System.Byte[] tau
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_tau() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_tau");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "tau"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Byte[] tau
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_tau(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_tau");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "tau", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.PackTauOrSigma
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::PackTauOrSigma(int keyLength, ::Array<uint>* state, int stateOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::PackTauOrSigma");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackTauOrSigma", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyLength), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(stateOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyLength, state, stateOffset);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.Init
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.get_NonceSize
int Org::BouncyCastle::Crypto::Engines::Salsa20Engine::get_NonceSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::get_NonceSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NonceSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.AdvanceCounter
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::AdvanceCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::AdvanceCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdvanceCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.ProcessBytes
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::ProcessBytes(::Array<uint8_t>* inBytes, int inOff, int len, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::ProcessBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inBytes, inOff, len, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.Reset
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.ResetCounter
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::ResetCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::ResetCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.SetKey
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::SetKey(::Array<uint8_t>* keyBytes, ::Array<uint8_t>* ivBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::SetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBytes), ::il2cpp_utils::ExtractType(ivBytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyBytes, ivBytes);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.GenerateKeyStream
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::GenerateKeyStream(::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::GenerateKeyStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.SalsaCore
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::SalsaCore(int rounds, ::Array<uint>* input, ::Array<uint>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::SalsaCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "SalsaCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rounds), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rounds, input, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.ResetLimitCounter
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::ResetLimitCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::ResetLimitCounter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetLimitCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.LimitExceeded
bool Org::BouncyCastle::Crypto::Engines::Salsa20Engine::LimitExceeded(uint len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::LimitExceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LimitExceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine..cctor
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Salsa20Engine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Salsa20Engine::PackTauOrSigma
// Il2CppName: PackTauOrSigma
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)(int, ::Array<uint>*, int)>(&Salsa20Engine::PackTauOrSigma)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "PackTauOrSigma", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)(int)>(&Salsa20Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)(int)>(&Salsa20Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&Salsa20Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::get_NonceSize
// Il2CppName: get_NonceSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Salsa20Engine::*)()>(&Salsa20Engine::get_NonceSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "get_NonceSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Salsa20Engine::*)()>(&Salsa20Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::AdvanceCounter
// Il2CppName: AdvanceCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)()>(&Salsa20Engine::AdvanceCounter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "AdvanceCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::ProcessBytes
// Il2CppName: ProcessBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*, int)>(&Salsa20Engine::ProcessBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "ProcessBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)()>(&Salsa20Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::ResetCounter
// Il2CppName: ResetCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)()>(&Salsa20Engine::ResetCounter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "ResetCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&Salsa20Engine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::GenerateKeyStream
// Il2CppName: GenerateKeyStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)(::Array<uint8_t>*)>(&Salsa20Engine::GenerateKeyStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "GenerateKeyStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::SalsaCore
// Il2CppName: SalsaCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<uint>*, ::Array<uint>*)>(&Salsa20Engine::SalsaCore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "SalsaCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::ResetLimitCounter
// Il2CppName: ResetLimitCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)()>(&Salsa20Engine::ResetLimitCounter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "ResetLimitCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::LimitExceeded
// Il2CppName: LimitExceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Salsa20Engine::*)(uint)>(&Salsa20Engine::LimitExceeded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), "LimitExceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Salsa20Engine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Salsa20Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)()>(&Salsa20Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Salsa20Engine::*)()>(&Salsa20Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Salsa20Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine
#include "Org/BouncyCastle/Crypto/Engines/ChaCha7539Engine.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine.get_NonceSize
int Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::get_NonceSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::get_NonceSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NonceSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine.AdvanceCounter
void Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::AdvanceCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::AdvanceCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdvanceCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine.ResetCounter
void Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::ResetCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::ResetCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine.SetKey
void Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::SetKey(::Array<uint8_t>* keyBytes, ::Array<uint8_t>* ivBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::SetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBytes), ::il2cpp_utils::ExtractType(ivBytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyBytes, ivBytes);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine.GenerateKeyStream
void Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::GenerateKeyStream(::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaCha7539Engine::GenerateKeyStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, output);
}
// Writing MetadataGetter for method: ChaCha7539Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaCha7539Engine::*)()>(&ChaCha7539Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaCha7539Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaCha7539Engine::*)()>(&ChaCha7539Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaCha7539Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChaCha7539Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ChaCha7539Engine::*)()>(&ChaCha7539Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaCha7539Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChaCha7539Engine::get_NonceSize
// Il2CppName: get_NonceSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ChaCha7539Engine::*)()>(&ChaCha7539Engine::get_NonceSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaCha7539Engine*), "get_NonceSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChaCha7539Engine::AdvanceCounter
// Il2CppName: AdvanceCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaCha7539Engine::*)()>(&ChaCha7539Engine::AdvanceCounter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaCha7539Engine*), "AdvanceCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChaCha7539Engine::ResetCounter
// Il2CppName: ResetCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaCha7539Engine::*)()>(&ChaCha7539Engine::ResetCounter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaCha7539Engine*), "ResetCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChaCha7539Engine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaCha7539Engine::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&ChaCha7539Engine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaCha7539Engine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ChaCha7539Engine::GenerateKeyStream
// Il2CppName: GenerateKeyStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaCha7539Engine::*)(::Array<uint8_t>*)>(&ChaCha7539Engine::GenerateKeyStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaCha7539Engine*), "GenerateKeyStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.ChaChaEngine
#include "Org/BouncyCastle/Crypto/Engines/ChaChaEngine.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.ChachaCore
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::ChachaCore(int rounds, ::Array<uint>* input, ::Array<uint>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaChaEngine::ChachaCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "ChaChaEngine", "ChachaCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rounds), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rounds, input, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::ChaChaEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaChaEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.AdvanceCounter
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::AdvanceCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaChaEngine::AdvanceCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdvanceCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.ResetCounter
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::ResetCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaChaEngine::ResetCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.SetKey
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::SetKey(::Array<uint8_t>* keyBytes, ::Array<uint8_t>* ivBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaChaEngine::SetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBytes), ::il2cpp_utils::ExtractType(ivBytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyBytes, ivBytes);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.GenerateKeyStream
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::GenerateKeyStream(::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ChaChaEngine::GenerateKeyStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, output);
}
// Writing MetadataGetter for method: ChaChaEngine::ChachaCore
// Il2CppName: ChachaCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<uint>*, ::Array<uint>*)>(&ChaChaEngine::ChachaCore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaChaEngine*), "ChachaCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: ChaChaEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaChaEngine::*)()>(&ChaChaEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaChaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaChaEngine::*)()>(&ChaChaEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaChaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChaChaEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ChaChaEngine::*)()>(&ChaChaEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaChaEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChaChaEngine::AdvanceCounter
// Il2CppName: AdvanceCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaChaEngine::*)()>(&ChaChaEngine::AdvanceCounter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaChaEngine*), "AdvanceCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChaChaEngine::ResetCounter
// Il2CppName: ResetCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaChaEngine::*)()>(&ChaChaEngine::ResetCounter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaChaEngine*), "ResetCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChaChaEngine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaChaEngine::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&ChaChaEngine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaChaEngine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ChaChaEngine::GenerateKeyStream
// Il2CppName: GenerateKeyStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChaChaEngine::*)(::Array<uint8_t>*)>(&ChaChaEngine::GenerateKeyStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChaChaEngine*), "GenerateKeyStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.DesEngine
#include "Org/BouncyCastle/Crypto/Engines/DesEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int16[] bytebit
::Array<int16_t>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_bytebit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_bytebit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int16_t>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "bytebit"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int16[] bytebit
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_bytebit(::Array<int16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_bytebit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "bytebit", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] bigbyte
::Array<int>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_bigbyte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_bigbyte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "bigbyte"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] bigbyte
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_bigbyte(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_bigbyte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "bigbyte", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] pc1
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_pc1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_pc1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "pc1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] pc1
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_pc1(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_pc1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "pc1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] totrot
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_totrot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_totrot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "totrot"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] totrot
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_totrot(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_totrot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "totrot", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] pc2
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_pc2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_pc2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "pc2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] pc2
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_pc2(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_pc2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "pc2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SP1
::Array<uint>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SP1
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP1(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SP2
::Array<uint>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SP2
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP2(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SP3
::Array<uint>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SP3
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP3(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SP4
::Array<uint>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SP4
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP4(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SP5
::Array<uint>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SP5
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP5(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SP6
::Array<uint>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP6() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SP6
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP6(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SP7
::Array<uint>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP7() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SP7
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP7(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP7", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SP8
::Array<uint>* Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_get_SP8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP8"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SP8
void Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP8(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::_set_SP8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "DesEngine", "SP8", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEngine.Init
void Org::BouncyCastle::Crypto::Engines::DesEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::DesEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::DesEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::DesEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::DesEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEngine.Reset
void Org::BouncyCastle::Crypto::Engines::DesEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::DesEngine::GenerateWorkingKey(bool encrypting, ::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::GenerateWorkingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "DesEngine", "GenerateWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypting), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, encrypting, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEngine.DesFunc
void Org::BouncyCastle::Crypto::Engines::DesEngine::DesFunc(::Array<int>* wKey, ::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::DesFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "DesEngine", "DesFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wKey), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, wKey, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEngine..cctor
void Org::BouncyCastle::Crypto::Engines::DesEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "DesEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: DesEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DesEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&DesEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: DesEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DesEngine::*)()>(&DesEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DesEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DesEngine::*)()>(&DesEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DesEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DesEngine::*)()>(&DesEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DesEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DesEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&DesEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DesEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DesEngine::*)()>(&DesEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DesEngine::GenerateWorkingKey
// Il2CppName: GenerateWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (*)(bool, ::Array<uint8_t>*)>(&DesEngine::GenerateWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), "GenerateWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DesEngine::DesFunc
// Il2CppName: DesFunc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<int>*, ::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&DesEngine::DesFunc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), "DesFunc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DesEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DesEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DesEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DesEngine::*)()>(&DesEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DesEngine::*)()>(&DesEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.DesEdeEngine
#include "Org/BouncyCastle/Crypto/Engines/DesEdeEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init
void Org::BouncyCastle::Crypto::Engines::DesEdeEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEdeEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::DesEdeEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEdeEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::DesEdeEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEdeEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::DesEdeEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEdeEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset
void Org::BouncyCastle::Crypto::Engines::DesEdeEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::DesEdeEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DesEdeEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DesEdeEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&DesEdeEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEdeEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: DesEdeEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DesEdeEngine::*)()>(&DesEdeEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEdeEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DesEdeEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DesEdeEngine::*)()>(&DesEdeEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEdeEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DesEdeEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DesEdeEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&DesEdeEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEdeEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DesEdeEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DesEdeEngine::*)()>(&DesEdeEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEdeEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DesEdeEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DesEdeEngine::*)()>(&DesEdeEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEdeEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DesEdeEngine::*)()>(&DesEdeEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DesEdeEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.ElGamalEngine
#include "Org/BouncyCastle/Crypto/Engines/ElGamalEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ElGamalKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/ElGamalKeyParameters.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ElGamalEngine.Init
void Org::BouncyCastle::Crypto::Engines::ElGamalEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ElGamalEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ElGamalEngine.GetInputBlockSize
int Org::BouncyCastle::Crypto::Engines::ElGamalEngine::GetInputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ElGamalEngine::GetInputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ElGamalEngine.GetOutputBlockSize
int Org::BouncyCastle::Crypto::Engines::ElGamalEngine::GetOutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ElGamalEngine::GetOutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ElGamalEngine.ProcessBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::ElGamalEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ElGamalEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, length);
}
// Writing MetadataGetter for method: ElGamalEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ElGamalEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&ElGamalEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ElGamalEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: ElGamalEngine::GetInputBlockSize
// Il2CppName: GetInputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ElGamalEngine::*)()>(&ElGamalEngine::GetInputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ElGamalEngine*), "GetInputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ElGamalEngine::GetOutputBlockSize
// Il2CppName: GetOutputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ElGamalEngine::*)()>(&ElGamalEngine::GetOutputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ElGamalEngine*), "GetOutputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ElGamalEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ElGamalEngine::*)(::Array<uint8_t>*, int, int)>(&ElGamalEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ElGamalEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ElGamalEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ElGamalEngine::*)()>(&ElGamalEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ElGamalEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ElGamalEngine::*)()>(&ElGamalEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ElGamalEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.Gost28147Engine
#include "Org/BouncyCastle/Crypto/Engines/Gost28147Engine.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] Sbox_Default
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_Sbox_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_Sbox_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "Sbox_Default"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] Sbox_Default
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_Sbox_Default(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_Sbox_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "Sbox_Default", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] ESbox_Test
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_Test");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_Test"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] ESbox_Test
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_Test(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_Test");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_Test", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] ESbox_A
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_A"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] ESbox_A
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_A(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_A", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] ESbox_B
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_B"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] ESbox_B
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_B(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_B", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] ESbox_C
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_C() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_C");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_C"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] ESbox_C
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_C(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_C");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_C", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] ESbox_D
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_D() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_ESbox_D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_D"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] ESbox_D
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_D(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_ESbox_D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "ESbox_D", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] DSbox_Test
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_DSbox_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_DSbox_Test");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "DSbox_Test"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] DSbox_Test
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_DSbox_Test(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_DSbox_Test");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "DSbox_Test", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] DSbox_A
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_DSbox_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_DSbox_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "DSbox_A"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] DSbox_A
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_DSbox_A(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_DSbox_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "DSbox_A", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary sBoxes
System::Collections::IDictionary* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_sBoxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_get_sBoxes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "sBoxes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary sBoxes
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_sBoxes(System::Collections::IDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_set_sBoxes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "sBoxes", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine..cctor
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.AddSBox
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::AddSBox(::Il2CppString* sBoxName, ::Array<uint8_t>* sBox) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::AddSBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "AddSBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sBoxName), ::il2cpp_utils::ExtractType(sBox)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sBoxName, sBox);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.Init
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::Gost28147Engine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::Gost28147Engine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::Gost28147Engine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.Reset
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.generateWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::generateWorkingKey(bool forEncryption, ::Array<uint8_t>* userKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::generateWorkingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "generateWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(userKey)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, forEncryption, userKey);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.Gost28147_mainStep
int Org::BouncyCastle::Crypto::Engines::Gost28147Engine::Gost28147_mainStep(int n1, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::Gost28147_mainStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Gost28147_mainStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n1), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, n1, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.Gost28147Func
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::Gost28147Func(::Array<int>* workingKey, ::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::Gost28147Func");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Gost28147Func", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(workingKey), ::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, workingKey, inBytes, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.bytesToint
int Org::BouncyCastle::Crypto::Engines::Gost28147Engine::bytesToint(::Array<uint8_t>* inBytes, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::bytesToint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "bytesToint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inBytes, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.intTobytes
void Org::BouncyCastle::Crypto::Engines::Gost28147Engine::intTobytes(int num, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::intTobytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "intTobytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, num, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Gost28147Engine.GetSBox
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Gost28147Engine::GetSBox(::Il2CppString* sBoxName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::Gost28147Engine::GetSBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "Gost28147Engine", "GetSBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sBoxName)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sBoxName);
}
// Writing MetadataGetter for method: Gost28147Engine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Gost28147Engine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::AddSBox
// Il2CppName: AddSBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Array<uint8_t>*)>(&Gost28147Engine::AddSBox)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "AddSBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&Gost28147Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Gost28147Engine::*)()>(&Gost28147Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Gost28147Engine::*)()>(&Gost28147Engine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost28147Engine::*)()>(&Gost28147Engine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost28147Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&Gost28147Engine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Engine::*)()>(&Gost28147Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::generateWorkingKey
// Il2CppName: generateWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Gost28147Engine::*)(bool, ::Array<uint8_t>*)>(&Gost28147Engine::generateWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "generateWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::Gost28147_mainStep
// Il2CppName: Gost28147_mainStep
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost28147Engine::*)(int, int)>(&Gost28147Engine::Gost28147_mainStep)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "Gost28147_mainStep", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::Gost28147Func
// Il2CppName: Gost28147Func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Engine::*)(::Array<int>*, ::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&Gost28147Engine::Gost28147Func)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "Gost28147Func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::bytesToint
// Il2CppName: bytesToint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int)>(&Gost28147Engine::bytesToint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "bytesToint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::intTobytes
// Il2CppName: intTobytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<uint8_t>*, int)>(&Gost28147Engine::intTobytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "intTobytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::GetSBox
// Il2CppName: GetSBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Il2CppString*)>(&Gost28147Engine::GetSBox)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), "GetSBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Gost28147Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Engine::*)()>(&Gost28147Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Engine::*)()>(&Gost28147Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.HC128Engine
#include "Org/BouncyCastle/Crypto/Engines/HC128Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.F1
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::F1(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::F1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "HC128Engine", "F1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.F2
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::F2(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::F2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "HC128Engine", "F2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.G1
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::G1(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::G1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.G2
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::G2(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::G2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.RotateLeft
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::RotateLeft(uint x, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "HC128Engine", "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, bits);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.RotateRight
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::RotateRight(uint x, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "HC128Engine", "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, bits);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.H1
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::H1(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::H1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "H1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.H2
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::H2(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::H2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "H2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.Mod1024
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::Mod1024(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::Mod1024");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "HC128Engine", "Mod1024", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.Mod512
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::Mod512(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::Mod512");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "HC128Engine", "Mod512", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.Dim
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::Dim(uint x, uint y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::Dim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "HC128Engine", "Dim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.Step
uint Org::BouncyCastle::Crypto::Engines::HC128Engine::Step() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::Step");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Step", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.Init
void Org::BouncyCastle::Crypto::Engines::HC128Engine::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::HC128Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.Init
void Org::BouncyCastle::Crypto::Engines::HC128Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.GetByte
uint8_t Org::BouncyCastle::Crypto::Engines::HC128Engine::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.ProcessBytes
void Org::BouncyCastle::Crypto::Engines::HC128Engine::ProcessBytes(::Array<uint8_t>* input, int inOff, int len, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::ProcessBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, len, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC128Engine.Reset
void Org::BouncyCastle::Crypto::Engines::HC128Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC128Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HC128Engine::F1
// Il2CppName: F1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&HC128Engine::F1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "F1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::F2
// Il2CppName: F2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&HC128Engine::F2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "F2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::G1
// Il2CppName: G1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (HC128Engine::*)(uint, uint, uint)>(&HC128Engine::G1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "G1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::G2
// Il2CppName: G2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (HC128Engine::*)(uint, uint, uint)>(&HC128Engine::G2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "G2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::RotateLeft
// Il2CppName: RotateLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, int)>(&HC128Engine::RotateLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "RotateLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::RotateRight
// Il2CppName: RotateRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, int)>(&HC128Engine::RotateRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "RotateRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::H1
// Il2CppName: H1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (HC128Engine::*)(uint)>(&HC128Engine::H1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "H1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::H2
// Il2CppName: H2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (HC128Engine::*)(uint)>(&HC128Engine::H2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "H2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::Mod1024
// Il2CppName: Mod1024
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&HC128Engine::Mod1024)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "Mod1024", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::Mod512
// Il2CppName: Mod512
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&HC128Engine::Mod512)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "Mod512", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::Dim
// Il2CppName: Dim
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint)>(&HC128Engine::Dim)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "Dim", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::Step
// Il2CppName: Step
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (HC128Engine::*)()>(&HC128Engine::Step)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "Step", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC128Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC128Engine::*)()>(&HC128Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC128Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HC128Engine::*)()>(&HC128Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC128Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC128Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&HC128Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::GetByte
// Il2CppName: GetByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (HC128Engine::*)()>(&HC128Engine::GetByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "GetByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC128Engine::ProcessBytes
// Il2CppName: ProcessBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC128Engine::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*, int)>(&HC128Engine::ProcessBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "ProcessBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: HC128Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC128Engine::*)()>(&HC128Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC128Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC128Engine::*)()>(&HC128Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC128Engine::*)()>(&HC128Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC128Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.HC256Engine
#include "Org/BouncyCastle/Crypto/Engines/HC256Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC256Engine.Step
uint Org::BouncyCastle::Crypto::Engines::HC256Engine::Step() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC256Engine::Step");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Step", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC256Engine.Init
void Org::BouncyCastle::Crypto::Engines::HC256Engine::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC256Engine::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC256Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::HC256Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC256Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC256Engine.Init
void Org::BouncyCastle::Crypto::Engines::HC256Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC256Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC256Engine.GetByte
uint8_t Org::BouncyCastle::Crypto::Engines::HC256Engine::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC256Engine::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC256Engine.ProcessBytes
void Org::BouncyCastle::Crypto::Engines::HC256Engine::ProcessBytes(::Array<uint8_t>* input, int inOff, int len, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC256Engine::ProcessBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, len, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC256Engine.Reset
void Org::BouncyCastle::Crypto::Engines::HC256Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC256Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.HC256Engine.RotateRight
uint Org::BouncyCastle::Crypto::Engines::HC256Engine::RotateRight(uint x, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::HC256Engine::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "HC256Engine", "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, bits);
}
// Writing MetadataGetter for method: HC256Engine::Step
// Il2CppName: Step
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (HC256Engine::*)()>(&HC256Engine::Step)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), "Step", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC256Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC256Engine::*)()>(&HC256Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC256Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HC256Engine::*)()>(&HC256Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC256Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC256Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&HC256Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: HC256Engine::GetByte
// Il2CppName: GetByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (HC256Engine::*)()>(&HC256Engine::GetByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), "GetByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC256Engine::ProcessBytes
// Il2CppName: ProcessBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC256Engine::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*, int)>(&HC256Engine::ProcessBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), "ProcessBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: HC256Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC256Engine::*)()>(&HC256Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HC256Engine::RotateRight
// Il2CppName: RotateRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, int)>(&HC256Engine::RotateRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), "RotateRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: HC256Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC256Engine::*)()>(&HC256Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HC256Engine::*)()>(&HC256Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HC256Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.IdeaEngine
#include "Org/BouncyCastle/Crypto/Engines/IdeaEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MASK
int Org::BouncyCastle::Crypto::Engines::IdeaEngine::_get_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::_get_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "IdeaEngine", "MASK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MASK
void Org::BouncyCastle::Crypto::Engines::IdeaEngine::_set_MASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::_set_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "IdeaEngine", "MASK", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 BASE
int Org::BouncyCastle::Crypto::Engines::IdeaEngine::_get_BASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::_get_BASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "IdeaEngine", "BASE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 BASE
void Org::BouncyCastle::Crypto::Engines::IdeaEngine::_set_BASE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::_set_BASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "IdeaEngine", "BASE", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.Init
void Org::BouncyCastle::Crypto::Engines::IdeaEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::IdeaEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::IdeaEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::IdeaEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::IdeaEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.Reset
void Org::BouncyCastle::Crypto::Engines::IdeaEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.BytesToWord
int Org::BouncyCastle::Crypto::Engines::IdeaEngine::BytesToWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::BytesToWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BytesToWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.WordToBytes
void Org::BouncyCastle::Crypto::Engines::IdeaEngine::WordToBytes(int word, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::WordToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WordToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.Mul
int Org::BouncyCastle::Crypto::Engines::IdeaEngine::Mul(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::Mul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.IdeaFunc
void Org::BouncyCastle::Crypto::Engines::IdeaEngine::IdeaFunc(::Array<int>* workingKey, ::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::IdeaFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IdeaFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(workingKey), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, workingKey, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.ExpandKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::IdeaEngine::ExpandKey(::Array<uint8_t>* uKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::ExpandKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uKey)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, uKey);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.MulInv
int Org::BouncyCastle::Crypto::Engines::IdeaEngine::MulInv(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::MulInv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MulInv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.AddInv
int Org::BouncyCastle::Crypto::Engines::IdeaEngine::AddInv(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::AddInv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.InvertKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::IdeaEngine::InvertKey(::Array<int>* inKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::InvertKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvertKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inKey)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, inKey);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine.GenerateWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::IdeaEngine::GenerateWorkingKey(bool forEncryption, ::Array<uint8_t>* userKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::GenerateWorkingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(userKey)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, forEncryption, userKey);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IdeaEngine..cctor
void Org::BouncyCastle::Crypto::Engines::IdeaEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IdeaEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "IdeaEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: IdeaEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IdeaEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&IdeaEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (IdeaEngine::*)()>(&IdeaEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IdeaEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IdeaEngine::*)()>(&IdeaEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IdeaEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IdeaEngine::*)()>(&IdeaEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IdeaEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IdeaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&IdeaEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IdeaEngine::*)()>(&IdeaEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IdeaEngine::BytesToWord
// Il2CppName: BytesToWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IdeaEngine::*)(::Array<uint8_t>*, int)>(&IdeaEngine::BytesToWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "BytesToWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::WordToBytes
// Il2CppName: WordToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IdeaEngine::*)(int, ::Array<uint8_t>*, int)>(&IdeaEngine::WordToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "WordToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::Mul
// Il2CppName: Mul
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IdeaEngine::*)(int, int)>(&IdeaEngine::Mul)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "Mul", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::IdeaFunc
// Il2CppName: IdeaFunc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IdeaEngine::*)(::Array<int>*, ::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&IdeaEngine::IdeaFunc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "IdeaFunc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::ExpandKey
// Il2CppName: ExpandKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (IdeaEngine::*)(::Array<uint8_t>*)>(&IdeaEngine::ExpandKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "ExpandKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::MulInv
// Il2CppName: MulInv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IdeaEngine::*)(int)>(&IdeaEngine::MulInv)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "MulInv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::AddInv
// Il2CppName: AddInv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IdeaEngine::*)(int)>(&IdeaEngine::AddInv)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "AddInv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::InvertKey
// Il2CppName: InvertKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (IdeaEngine::*)(::Array<int>*)>(&IdeaEngine::InvertKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "InvertKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::GenerateWorkingKey
// Il2CppName: GenerateWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (IdeaEngine::*)(bool, ::Array<uint8_t>*)>(&IdeaEngine::GenerateWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), "GenerateWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: IdeaEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&IdeaEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IdeaEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IdeaEngine::*)()>(&IdeaEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IdeaEngine::*)()>(&IdeaEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IdeaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.IesEngine
#include "Org/BouncyCastle/Crypto/Engines/IesEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.IBasicAgreement
#include "Org/BouncyCastle/Crypto/IBasicAgreement.hpp"
// Including type: Org.BouncyCastle.Crypto.IDerivationFunction
#include "Org/BouncyCastle/Crypto/IDerivationFunction.hpp"
// Including type: Org.BouncyCastle.Crypto.IMac
#include "Org/BouncyCastle/Crypto/IMac.hpp"
// Including type: Org.BouncyCastle.Crypto.BufferedBlockCipher
#include "Org/BouncyCastle/Crypto/BufferedBlockCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.IesParameters
#include "Org/BouncyCastle/Crypto/Parameters/IesParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.KdfParameters
#include "Org/BouncyCastle/Crypto/Parameters/KdfParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IesEngine.DecryptBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::IesEngine::DecryptBlock(::Array<uint8_t>* in_enc, int inOff, int inLen, ::Array<uint8_t>* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IesEngine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(in_enc), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, in_enc, inOff, inLen, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IesEngine.EncryptBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::IesEngine::EncryptBlock(::Array<uint8_t>* input, int inOff, int inLen, ::Array<uint8_t>* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IesEngine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, inLen, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IesEngine.GenerateKdfBytes
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::IesEngine::GenerateKdfBytes(Org::BouncyCastle::Crypto::Parameters::KdfParameters* kParam, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IesEngine::GenerateKdfBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKdfBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kParam), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, kParam, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::IesEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::IesEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input, inOff, inLen);
}
// Writing MetadataGetter for method: IesEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IesEngine::*)(Org::BouncyCastle::Crypto::IBasicAgreement*, Org::BouncyCastle::Crypto::IDerivationFunction*, Org::BouncyCastle::Crypto::IMac*)>(&IesEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IesEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBasicAgreement*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDerivationFunction*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IMac*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IesEngine::*)(Org::BouncyCastle::Crypto::IBasicAgreement*, Org::BouncyCastle::Crypto::IDerivationFunction*, Org::BouncyCastle::Crypto::IMac*)>(&IesEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IesEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBasicAgreement*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDerivationFunction*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IMac*>()});
  }
};
// Writing MetadataGetter for method: IesEngine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (IesEngine::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*)>(&IesEngine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IesEngine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: IesEngine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (IesEngine::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*)>(&IesEngine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IesEngine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: IesEngine::GenerateKdfBytes
// Il2CppName: GenerateKdfBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (IesEngine::*)(Org::BouncyCastle::Crypto::Parameters::KdfParameters*, int)>(&IesEngine::GenerateKdfBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IesEngine*), "GenerateKdfBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Parameters::KdfParameters*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IesEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (IesEngine::*)(::Array<uint8_t>*, int, int)>(&IesEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IesEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.NoekeonEngine
#include "Org/BouncyCastle/Crypto/Engines/NoekeonEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] RoundConstants
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::NoekeonEngine::_get_RoundConstants() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::_get_RoundConstants");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "NoekeonEngine", "RoundConstants"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] RoundConstants
void Org::BouncyCastle::Crypto::Engines::NoekeonEngine::_set_RoundConstants(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::_set_RoundConstants");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "NoekeonEngine", "RoundConstants", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.NoekeonEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::NoekeonEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.NoekeonEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::NoekeonEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.NoekeonEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::NoekeonEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.NoekeonEngine.Init
void Org::BouncyCastle::Crypto::Engines::NoekeonEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.NoekeonEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::NoekeonEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.NoekeonEngine.Reset
void Org::BouncyCastle::Crypto::Engines::NoekeonEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.NoekeonEngine.EncryptBlock
int Org::BouncyCastle::Crypto::Engines::NoekeonEngine::EncryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.NoekeonEngine.DecryptBlock
int Org::BouncyCastle::Crypto::Engines::NoekeonEngine::DecryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.NoekeonEngine..cctor
void Org::BouncyCastle::Crypto::Engines::NoekeonEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::NoekeonEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "NoekeonEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: NoekeonEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NoekeonEngine::*)()>(&NoekeonEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoekeonEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NoekeonEngine::*)()>(&NoekeonEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoekeonEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NoekeonEngine::*)()>(&NoekeonEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoekeonEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoekeonEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&NoekeonEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: NoekeonEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NoekeonEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&NoekeonEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NoekeonEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoekeonEngine::*)()>(&NoekeonEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoekeonEngine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NoekeonEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&NoekeonEngine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NoekeonEngine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NoekeonEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&NoekeonEngine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NoekeonEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&NoekeonEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoekeonEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoekeonEngine::*)()>(&NoekeonEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoekeonEngine::*)()>(&NoekeonEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoekeonEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.RC2Engine
#include "Org/BouncyCastle/Crypto/Engines/RC2Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] piTable
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::RC2Engine::_get_piTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::_get_piTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "RC2Engine", "piTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] piTable
void Org::BouncyCastle::Crypto::Engines::RC2Engine::_set_piTable(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::_set_piTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC2Engine", "piTable", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.GenerateWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::RC2Engine::GenerateWorkingKey(::Array<uint8_t>* key, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::GenerateWorkingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, key, bits);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.Init
void Org::BouncyCastle::Crypto::Engines::RC2Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.Reset
void Org::BouncyCastle::Crypto::Engines::RC2Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::RC2Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::RC2Engine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::RC2Engine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::RC2Engine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.RotateWordLeft
int Org::BouncyCastle::Crypto::Engines::RC2Engine::RotateWordLeft(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::RotateWordLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateWordLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::RC2Engine::EncryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::RC2Engine::DecryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC2Engine..cctor
void Org::BouncyCastle::Crypto::Engines::RC2Engine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC2Engine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "RC2Engine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: RC2Engine::GenerateWorkingKey
// Il2CppName: GenerateWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (RC2Engine::*)(::Array<uint8_t>*, int)>(&RC2Engine::GenerateWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "GenerateWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC2Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC2Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&RC2Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: RC2Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC2Engine::*)()>(&RC2Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC2Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RC2Engine::*)()>(&RC2Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC2Engine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RC2Engine::*)()>(&RC2Engine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC2Engine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC2Engine::*)()>(&RC2Engine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC2Engine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC2Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC2Engine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC2Engine::RotateWordLeft
// Il2CppName: RotateWordLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC2Engine::*)(int, int)>(&RC2Engine::RotateWordLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "RotateWordLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC2Engine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC2Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC2Engine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC2Engine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC2Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC2Engine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC2Engine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RC2Engine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC2Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC2Engine::*)()>(&RC2Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC2Engine::*)()>(&RC2Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.RC4Engine
#include "Org/BouncyCastle/Crypto/Engines/RC4Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 STATE_LENGTH
int Org::BouncyCastle::Crypto::Engines::RC4Engine::_get_STATE_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC4Engine::_get_STATE_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC4Engine", "STATE_LENGTH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 STATE_LENGTH
void Org::BouncyCastle::Crypto::Engines::RC4Engine::_set_STATE_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC4Engine::_set_STATE_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC4Engine", "STATE_LENGTH", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC4Engine.Init
void Org::BouncyCastle::Crypto::Engines::RC4Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC4Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC4Engine.ProcessBytes
void Org::BouncyCastle::Crypto::Engines::RC4Engine::ProcessBytes(::Array<uint8_t>* input, int inOff, int length, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC4Engine::ProcessBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC4Engine.Reset
void Org::BouncyCastle::Crypto::Engines::RC4Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC4Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC4Engine.SetKey
void Org::BouncyCastle::Crypto::Engines::RC4Engine::SetKey(::Array<uint8_t>* keyBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC4Engine::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyBytes);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC4Engine..cctor
void Org::BouncyCastle::Crypto::Engines::RC4Engine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC4Engine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "RC4Engine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: RC4Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC4Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&RC4Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: RC4Engine::ProcessBytes
// Il2CppName: ProcessBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC4Engine::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*, int)>(&RC4Engine::ProcessBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4Engine*), "ProcessBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC4Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC4Engine::*)()>(&RC4Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC4Engine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC4Engine::*)(::Array<uint8_t>*)>(&RC4Engine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4Engine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RC4Engine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RC4Engine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4Engine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC4Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC4Engine::*)()>(&RC4Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC4Engine::*)()>(&RC4Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.RC532Engine
#include "Org/BouncyCastle/Crypto/Engines/RC532Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 P32
int Org::BouncyCastle::Crypto::Engines::RC532Engine::_get_P32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::_get_P32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC532Engine", "P32"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 P32
void Org::BouncyCastle::Crypto::Engines::RC532Engine::_set_P32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::_set_P32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC532Engine", "P32", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Q32
int Org::BouncyCastle::Crypto::Engines::RC532Engine::_get_Q32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::_get_Q32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC532Engine", "Q32"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Q32
void Org::BouncyCastle::Crypto::Engines::RC532Engine::_set_Q32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::_set_Q32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC532Engine", "Q32", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::RC532Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::RC532Engine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::RC532Engine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.Init
void Org::BouncyCastle::Crypto::Engines::RC532Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::RC532Engine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.Reset
void Org::BouncyCastle::Crypto::Engines::RC532Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.SetKey
void Org::BouncyCastle::Crypto::Engines::RC532Engine::SetKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.EncryptBlock
int Org::BouncyCastle::Crypto::Engines::RC532Engine::EncryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.DecryptBlock
int Org::BouncyCastle::Crypto::Engines::RC532Engine::DecryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.RotateLeft
int Org::BouncyCastle::Crypto::Engines::RC532Engine::RotateLeft(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.RotateRight
int Org::BouncyCastle::Crypto::Engines::RC532Engine::RotateRight(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.BytesToWord
int Org::BouncyCastle::Crypto::Engines::RC532Engine::BytesToWord(::Array<uint8_t>* src, int srcOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::BytesToWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BytesToWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, src, srcOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine.WordToBytes
void Org::BouncyCastle::Crypto::Engines::RC532Engine::WordToBytes(int word, ::Array<uint8_t>* dst, int dstOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::WordToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WordToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, dst, dstOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC532Engine..cctor
void Org::BouncyCastle::Crypto::Engines::RC532Engine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC532Engine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "RC532Engine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: RC532Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RC532Engine::*)()>(&RC532Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC532Engine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RC532Engine::*)()>(&RC532Engine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC532Engine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC532Engine::*)()>(&RC532Engine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC532Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC532Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&RC532Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: RC532Engine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC532Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC532Engine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC532Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC532Engine::*)()>(&RC532Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC532Engine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC532Engine::*)(::Array<uint8_t>*)>(&RC532Engine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RC532Engine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC532Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC532Engine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC532Engine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC532Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC532Engine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC532Engine::RotateLeft
// Il2CppName: RotateLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC532Engine::*)(int, int)>(&RC532Engine::RotateLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "RotateLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC532Engine::RotateRight
// Il2CppName: RotateRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC532Engine::*)(int, int)>(&RC532Engine::RotateRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "RotateRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC532Engine::BytesToWord
// Il2CppName: BytesToWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC532Engine::*)(::Array<uint8_t>*, int)>(&RC532Engine::BytesToWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "BytesToWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC532Engine::WordToBytes
// Il2CppName: WordToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC532Engine::*)(int, ::Array<uint8_t>*, int)>(&RC532Engine::WordToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), "WordToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC532Engine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RC532Engine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC532Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC532Engine::*)()>(&RC532Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC532Engine::*)()>(&RC532Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC532Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.RC564Engine
#include "Org/BouncyCastle/Crypto/Engines/RC564Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 wordSize
int Org::BouncyCastle::Crypto::Engines::RC564Engine::_get_wordSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::_get_wordSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC564Engine", "wordSize"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 wordSize
void Org::BouncyCastle::Crypto::Engines::RC564Engine::_set_wordSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::_set_wordSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC564Engine", "wordSize", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 bytesPerWord
int Org::BouncyCastle::Crypto::Engines::RC564Engine::_get_bytesPerWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::_get_bytesPerWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC564Engine", "bytesPerWord"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 bytesPerWord
void Org::BouncyCastle::Crypto::Engines::RC564Engine::_set_bytesPerWord(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::_set_bytesPerWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC564Engine", "bytesPerWord", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 P64
int64_t Org::BouncyCastle::Crypto::Engines::RC564Engine::_get_P64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::_get_P64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Org.BouncyCastle.Crypto.Engines", "RC564Engine", "P64"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 P64
void Org::BouncyCastle::Crypto::Engines::RC564Engine::_set_P64(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::_set_P64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC564Engine", "P64", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 Q64
int64_t Org::BouncyCastle::Crypto::Engines::RC564Engine::_get_Q64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::_get_Q64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Org.BouncyCastle.Crypto.Engines", "RC564Engine", "Q64"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 Q64
void Org::BouncyCastle::Crypto::Engines::RC564Engine::_set_Q64(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::_set_Q64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC564Engine", "Q64", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::RC564Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::RC564Engine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::RC564Engine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.Init
void Org::BouncyCastle::Crypto::Engines::RC564Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::RC564Engine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.Reset
void Org::BouncyCastle::Crypto::Engines::RC564Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.SetKey
void Org::BouncyCastle::Crypto::Engines::RC564Engine::SetKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.EncryptBlock
int Org::BouncyCastle::Crypto::Engines::RC564Engine::EncryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.DecryptBlock
int Org::BouncyCastle::Crypto::Engines::RC564Engine::DecryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.RotateLeft
int64_t Org::BouncyCastle::Crypto::Engines::RC564Engine::RotateLeft(int64_t x, int64_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.RotateRight
int64_t Org::BouncyCastle::Crypto::Engines::RC564Engine::RotateRight(int64_t x, int64_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.BytesToWord
int64_t Org::BouncyCastle::Crypto::Engines::RC564Engine::BytesToWord(::Array<uint8_t>* src, int srcOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::BytesToWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BytesToWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOff)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, src, srcOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine.WordToBytes
void Org::BouncyCastle::Crypto::Engines::RC564Engine::WordToBytes(int64_t word, ::Array<uint8_t>* dst, int dstOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::WordToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WordToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, dst, dstOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC564Engine..cctor
void Org::BouncyCastle::Crypto::Engines::RC564Engine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC564Engine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "RC564Engine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: RC564Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RC564Engine::*)()>(&RC564Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC564Engine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RC564Engine::*)()>(&RC564Engine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC564Engine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC564Engine::*)()>(&RC564Engine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC564Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC564Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&RC564Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: RC564Engine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC564Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC564Engine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC564Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC564Engine::*)()>(&RC564Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC564Engine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC564Engine::*)(::Array<uint8_t>*)>(&RC564Engine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RC564Engine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC564Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC564Engine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC564Engine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC564Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC564Engine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC564Engine::RotateLeft
// Il2CppName: RotateLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (RC564Engine::*)(int64_t, int64_t)>(&RC564Engine::RotateLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "RotateLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: RC564Engine::RotateRight
// Il2CppName: RotateRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (RC564Engine::*)(int64_t, int64_t)>(&RC564Engine::RotateRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "RotateRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: RC564Engine::BytesToWord
// Il2CppName: BytesToWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (RC564Engine::*)(::Array<uint8_t>*, int)>(&RC564Engine::BytesToWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "BytesToWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC564Engine::WordToBytes
// Il2CppName: WordToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC564Engine::*)(int64_t, ::Array<uint8_t>*, int)>(&RC564Engine::WordToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), "WordToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC564Engine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RC564Engine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC564Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC564Engine::*)()>(&RC564Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC564Engine::*)()>(&RC564Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC564Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.RC6Engine
#include "Org/BouncyCastle/Crypto/Engines/RC6Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 wordSize
int Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_wordSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_wordSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "wordSize"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 wordSize
void Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_wordSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_wordSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "wordSize", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 bytesPerWord
int Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_bytesPerWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_bytesPerWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "bytesPerWord"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 bytesPerWord
void Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_bytesPerWord(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_bytesPerWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "bytesPerWord", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _noRounds
int Org::BouncyCastle::Crypto::Engines::RC6Engine::_get__noRounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_get__noRounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "_noRounds"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _noRounds
void Org::BouncyCastle::Crypto::Engines::RC6Engine::_set__noRounds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_set__noRounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "_noRounds", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 P32
int Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_P32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_P32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "P32"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 P32
void Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_P32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_P32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "P32", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Q32
int Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_Q32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_Q32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "Q32"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Q32
void Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_Q32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_Q32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "Q32", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LGW
int Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_LGW() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_get_LGW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "LGW"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LGW
void Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_LGW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::_set_LGW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RC6Engine", "LGW", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::RC6Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::RC6Engine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::RC6Engine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.Init
void Org::BouncyCastle::Crypto::Engines::RC6Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::RC6Engine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.Reset
void Org::BouncyCastle::Crypto::Engines::RC6Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.SetKey
void Org::BouncyCastle::Crypto::Engines::RC6Engine::SetKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.EncryptBlock
int Org::BouncyCastle::Crypto::Engines::RC6Engine::EncryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.DecryptBlock
int Org::BouncyCastle::Crypto::Engines::RC6Engine::DecryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.RotateLeft
int Org::BouncyCastle::Crypto::Engines::RC6Engine::RotateLeft(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.RotateRight
int Org::BouncyCastle::Crypto::Engines::RC6Engine::RotateRight(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.BytesToWord
int Org::BouncyCastle::Crypto::Engines::RC6Engine::BytesToWord(::Array<uint8_t>* src, int srcOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::BytesToWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BytesToWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, src, srcOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine.WordToBytes
void Org::BouncyCastle::Crypto::Engines::RC6Engine::WordToBytes(int word, ::Array<uint8_t>* dst, int dstOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::WordToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WordToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, dst, dstOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RC6Engine..cctor
void Org::BouncyCastle::Crypto::Engines::RC6Engine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RC6Engine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "RC6Engine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: RC6Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RC6Engine::*)()>(&RC6Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC6Engine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RC6Engine::*)()>(&RC6Engine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC6Engine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC6Engine::*)()>(&RC6Engine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC6Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC6Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&RC6Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: RC6Engine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC6Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC6Engine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC6Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC6Engine::*)()>(&RC6Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC6Engine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC6Engine::*)(::Array<uint8_t>*)>(&RC6Engine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RC6Engine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC6Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC6Engine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC6Engine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC6Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RC6Engine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC6Engine::RotateLeft
// Il2CppName: RotateLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC6Engine::*)(int, int)>(&RC6Engine::RotateLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "RotateLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC6Engine::RotateRight
// Il2CppName: RotateRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC6Engine::*)(int, int)>(&RC6Engine::RotateRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "RotateRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC6Engine::BytesToWord
// Il2CppName: BytesToWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RC6Engine::*)(::Array<uint8_t>*, int)>(&RC6Engine::BytesToWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "BytesToWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC6Engine::WordToBytes
// Il2CppName: WordToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC6Engine::*)(int, ::Array<uint8_t>*, int)>(&RC6Engine::WordToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), "WordToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RC6Engine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RC6Engine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC6Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC6Engine::*)()>(&RC6Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC6Engine::*)()>(&RC6Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC6Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.RijndaelEngine
#include "Org/BouncyCastle/Crypto/Engines/RijndaelEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MAXROUNDS
int Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_MAXROUNDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_MAXROUNDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "MAXROUNDS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MAXROUNDS
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_MAXROUNDS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_MAXROUNDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "MAXROUNDS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MAXKC
int Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_MAXKC() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_MAXKC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "MAXKC"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MAXKC
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_MAXKC(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_MAXKC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "MAXKC", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] Logtable
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_Logtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_Logtable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "Logtable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] Logtable
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_Logtable(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_Logtable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "Logtable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] Alogtable
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_Alogtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_Alogtable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "Alogtable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] Alogtable
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_Alogtable(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_Alogtable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "Alogtable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] S
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "S"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] S
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_S(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "S", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] Si
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_Si() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_Si");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "Si"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] Si
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_Si(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_Si");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "Si", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] rcon
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_rcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_rcon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "rcon"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] rcon
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_rcon(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_rcon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "rcon", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[][] shifts0
::Array<::Array<uint8_t>*>* Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_shifts0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_shifts0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Array<uint8_t>*>*>("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "shifts0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[][] shifts0
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_shifts0(::Array<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_shifts0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "shifts0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[][] shifts1
::Array<::Array<uint8_t>*>* Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_shifts1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_get_shifts1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Array<uint8_t>*>*>("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "shifts1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[][] shifts1
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_shifts1(::Array<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_set_shifts1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", "shifts1", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Mul0x2
uint8_t Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0x2(int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0x2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mul0x2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Mul0x3
uint8_t Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0x3(int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0x3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mul0x3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Mul0x9
uint8_t Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0x9(int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0x9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mul0x9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Mul0xb
uint8_t Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0xb(int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0xb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mul0xb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Mul0xd
uint8_t Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0xd(int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0xd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mul0xd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Mul0xe
uint8_t Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0xe(int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Mul0xe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mul0xe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.KeyAddition
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::KeyAddition(::Array<int64_t>* rk) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::KeyAddition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyAddition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rk)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rk);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Shift
int64_t Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Shift(int64_t r, int shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Shift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Shift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(shift)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, r, shift);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.ShiftRow
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::ShiftRow(::Array<uint8_t>* shiftsSC) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::ShiftRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShiftRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shiftsSC)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shiftsSC);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.ApplyS
int64_t Org::BouncyCastle::Crypto::Engines::RijndaelEngine::ApplyS(int64_t r, ::Array<uint8_t>* box) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::ApplyS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(box)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, r, box);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Substitution
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Substitution(::Array<uint8_t>* box) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Substitution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Substitution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, box);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.MixColumn
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::MixColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::MixColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MixColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.InvMixColumn
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::InvMixColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::InvMixColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvMixColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.GenerateWorkingKey
::Array<::Array<int64_t>*>* Org::BouncyCastle::Crypto::Engines::RijndaelEngine::GenerateWorkingKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::GenerateWorkingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Array<int64_t>*>*, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Init
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::RijndaelEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::RijndaelEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::RijndaelEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::RijndaelEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Reset
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.UnPackBlock
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::UnPackBlock(::Array<uint8_t>* bytes, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::UnPackBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnPackBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(off)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bytes, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.PackBlock
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::PackBlock(::Array<uint8_t>* bytes, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::PackBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(off)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bytes, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::EncryptBlock(::Array<::Array<int64_t>*>* rk) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rk)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rk);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::DecryptBlock(::Array<::Array<int64_t>*>* rk) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rk)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rk);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RijndaelEngine..cctor
void Org::BouncyCastle::Crypto::Engines::RijndaelEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RijndaelEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "RijndaelEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: RijndaelEngine::Mul0x2
// Il2CppName: Mul0x2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (RijndaelEngine::*)(int)>(&RijndaelEngine::Mul0x2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Mul0x2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::Mul0x3
// Il2CppName: Mul0x3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (RijndaelEngine::*)(int)>(&RijndaelEngine::Mul0x3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Mul0x3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::Mul0x9
// Il2CppName: Mul0x9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (RijndaelEngine::*)(int)>(&RijndaelEngine::Mul0x9)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Mul0x9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::Mul0xb
// Il2CppName: Mul0xb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (RijndaelEngine::*)(int)>(&RijndaelEngine::Mul0xb)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Mul0xb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::Mul0xd
// Il2CppName: Mul0xd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (RijndaelEngine::*)(int)>(&RijndaelEngine::Mul0xd)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Mul0xd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::Mul0xe
// Il2CppName: Mul0xe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (RijndaelEngine::*)(int)>(&RijndaelEngine::Mul0xe)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Mul0xe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::KeyAddition
// Il2CppName: KeyAddition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(::Array<int64_t>*)>(&RijndaelEngine::KeyAddition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "KeyAddition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int64_t>*>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::Shift
// Il2CppName: Shift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (RijndaelEngine::*)(int64_t, int)>(&RijndaelEngine::Shift)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Shift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::ShiftRow
// Il2CppName: ShiftRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(::Array<uint8_t>*)>(&RijndaelEngine::ShiftRow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "ShiftRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::ApplyS
// Il2CppName: ApplyS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (RijndaelEngine::*)(int64_t, ::Array<uint8_t>*)>(&RijndaelEngine::ApplyS)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "ApplyS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::Substitution
// Il2CppName: Substitution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(::Array<uint8_t>*)>(&RijndaelEngine::Substitution)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Substitution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::MixColumn
// Il2CppName: MixColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)()>(&RijndaelEngine::MixColumn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "MixColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::InvMixColumn
// Il2CppName: InvMixColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)()>(&RijndaelEngine::InvMixColumn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "InvMixColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::GenerateWorkingKey
// Il2CppName: GenerateWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Array<int64_t>*>* (RijndaelEngine::*)(::Array<uint8_t>*)>(&RijndaelEngine::GenerateWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "GenerateWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(int)>(&RijndaelEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(int)>(&RijndaelEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&RijndaelEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RijndaelEngine::*)()>(&RijndaelEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RijndaelEngine::*)()>(&RijndaelEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RijndaelEngine::*)()>(&RijndaelEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RijndaelEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&RijndaelEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)()>(&RijndaelEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::UnPackBlock
// Il2CppName: UnPackBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(::Array<uint8_t>*, int)>(&RijndaelEngine::UnPackBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "UnPackBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::PackBlock
// Il2CppName: PackBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(::Array<uint8_t>*, int)>(&RijndaelEngine::PackBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "PackBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(::Array<::Array<int64_t>*>*)>(&RijndaelEngine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Array<int64_t>*>*>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)(::Array<::Array<int64_t>*>*)>(&RijndaelEngine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Array<int64_t>*>*>()});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RijndaelEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RijndaelEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)()>(&RijndaelEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RijndaelEngine::*)()>(&RijndaelEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RijndaelEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine
#include "Org/BouncyCastle/Crypto/Engines/RsaBlindedEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.IRsa
#include "Org/BouncyCastle/Crypto/IRsa.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/RsaKeyParameters.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine.Init
void Org::BouncyCastle::Crypto::Engines::RsaBlindedEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* param) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaBlindedEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(param)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, param);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine.GetInputBlockSize
int Org::BouncyCastle::Crypto::Engines::RsaBlindedEngine::GetInputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaBlindedEngine::GetInputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine.GetOutputBlockSize
int Org::BouncyCastle::Crypto::Engines::RsaBlindedEngine::GetOutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaBlindedEngine::GetOutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine.ProcessBlock
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::RsaBlindedEngine::ProcessBlock(::Array<uint8_t>* inBuf, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaBlindedEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBuf), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, inBuf, inOff, inLen);
}
// Writing MetadataGetter for method: RsaBlindedEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RsaBlindedEngine::*)(Org::BouncyCastle::Crypto::IRsa*)>(&RsaBlindedEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaBlindedEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IRsa*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RsaBlindedEngine::*)(Org::BouncyCastle::Crypto::IRsa*)>(&RsaBlindedEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaBlindedEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IRsa*>()});
  }
};
// Writing MetadataGetter for method: RsaBlindedEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RsaBlindedEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&RsaBlindedEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaBlindedEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: RsaBlindedEngine::GetInputBlockSize
// Il2CppName: GetInputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RsaBlindedEngine::*)()>(&RsaBlindedEngine::GetInputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaBlindedEngine*), "GetInputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RsaBlindedEngine::GetOutputBlockSize
// Il2CppName: GetOutputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RsaBlindedEngine::*)()>(&RsaBlindedEngine::GetOutputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaBlindedEngine*), "GetOutputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RsaBlindedEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (RsaBlindedEngine::*)(::Array<uint8_t>*, int, int)>(&RsaBlindedEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaBlindedEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RsaBlindedEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RsaBlindedEngine::*)()>(&RsaBlindedEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaBlindedEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RsaBlindedEngine::*)()>(&RsaBlindedEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaBlindedEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IRsa
#include "Org/BouncyCastle/Crypto/IRsa.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.IRsa.Init
void Org::BouncyCastle::Crypto::IRsa::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IRsa::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IRsa.GetInputBlockSize
int Org::BouncyCastle::Crypto::IRsa::GetInputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IRsa::GetInputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IRsa.GetOutputBlockSize
int Org::BouncyCastle::Crypto::IRsa::GetOutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IRsa::GetOutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IRsa.ConvertInput
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::IRsa::ConvertInput(::Array<uint8_t>* buf, int off, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IRsa::ConvertInput");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method, buf, off, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IRsa.ProcessBlock
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::IRsa::ProcessBlock(Org::BouncyCastle::Math::BigInteger* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IRsa::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IRsa.ConvertOutput
::Array<uint8_t>* Org::BouncyCastle::Crypto::IRsa::ConvertOutput(Org::BouncyCastle::Math::BigInteger* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IRsa::ConvertOutput");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: IRsa::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IRsa::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&IRsa::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IRsa*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: IRsa::GetInputBlockSize
// Il2CppName: GetInputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IRsa::*)()>(&IRsa::GetInputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IRsa*), "GetInputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IRsa::GetOutputBlockSize
// Il2CppName: GetOutputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IRsa::*)()>(&IRsa::GetOutputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IRsa*), "GetOutputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IRsa::ConvertInput
// Il2CppName: ConvertInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (IRsa::*)(::Array<uint8_t>*, int, int)>(&IRsa::ConvertInput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IRsa*), "ConvertInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IRsa::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (IRsa::*)(Org::BouncyCastle::Math::BigInteger*)>(&IRsa::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IRsa*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: IRsa::ConvertOutput
// Il2CppName: ConvertOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (IRsa::*)(Org::BouncyCastle::Math::BigInteger*)>(&IRsa::ConvertOutput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IRsa*), "ConvertOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Math::BigInteger*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.RsaCoreEngine
#include "Org/BouncyCastle/Crypto/Engines/RsaCoreEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/RsaKeyParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.CheckInitialised
void Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::CheckInitialised() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::CheckInitialised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInitialised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.Init
void Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.GetInputBlockSize
int Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::GetInputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::GetInputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.GetOutputBlockSize
int Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::GetOutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::GetOutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.ConvertInput
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::ConvertInput(::Array<uint8_t>* inBuf, int inOff, int inLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::ConvertInput");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBuf), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(inLen)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method, inBuf, inOff, inLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.ConvertOutput
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::ConvertOutput(Org::BouncyCastle::Math::BigInteger* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::ConvertOutput");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, result);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.ProcessBlock
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::ProcessBlock(Org::BouncyCastle::Math::BigInteger* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::RsaCoreEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method, input);
}
// Writing MetadataGetter for method: RsaCoreEngine::CheckInitialised
// Il2CppName: CheckInitialised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RsaCoreEngine::*)()>(&RsaCoreEngine::CheckInitialised)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaCoreEngine*), "CheckInitialised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RsaCoreEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RsaCoreEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&RsaCoreEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaCoreEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: RsaCoreEngine::GetInputBlockSize
// Il2CppName: GetInputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RsaCoreEngine::*)()>(&RsaCoreEngine::GetInputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaCoreEngine*), "GetInputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RsaCoreEngine::GetOutputBlockSize
// Il2CppName: GetOutputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RsaCoreEngine::*)()>(&RsaCoreEngine::GetOutputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaCoreEngine*), "GetOutputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RsaCoreEngine::ConvertInput
// Il2CppName: ConvertInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (RsaCoreEngine::*)(::Array<uint8_t>*, int, int)>(&RsaCoreEngine::ConvertInput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaCoreEngine*), "ConvertInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RsaCoreEngine::ConvertOutput
// Il2CppName: ConvertOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (RsaCoreEngine::*)(Org::BouncyCastle::Math::BigInteger*)>(&RsaCoreEngine::ConvertOutput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaCoreEngine*), "ConvertOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: RsaCoreEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (RsaCoreEngine::*)(Org::BouncyCastle::Math::BigInteger*)>(&RsaCoreEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaCoreEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: RsaCoreEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RsaCoreEngine::*)()>(&RsaCoreEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaCoreEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RsaCoreEngine::*)()>(&RsaCoreEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RsaCoreEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.SeedEngine
#include "Org/BouncyCastle/Crypto/Engines/SeedEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SS0
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SS0
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS0(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SS1
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SS1
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS1(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SS2
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SS2
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS2(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SS3
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SS3
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS3(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] KC
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_KC() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_KC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "KC"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] KC
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_KC(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_KC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "KC", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.Init
void Org::BouncyCastle::Crypto::Engines::SeedEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::SeedEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::SeedEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::SeedEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::SeedEngine::ProcessBlock(::Array<uint8_t>* inBuf, int inOff, ::Array<uint8_t>* outBuf, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBuf), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBuf), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inBuf, inOff, outBuf, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.Reset
void Org::BouncyCastle::Crypto::Engines::SeedEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.createWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::SeedEngine::createWorkingKey(::Array<uint8_t>* inKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::createWorkingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inKey)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, inKey);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.extractW1
int Org::BouncyCastle::Crypto::Engines::SeedEngine::extractW1(int64_t lVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::extractW1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "extractW1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lVal)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, lVal);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.extractW0
int Org::BouncyCastle::Crypto::Engines::SeedEngine::extractW0(int64_t lVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::extractW0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "extractW0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lVal)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, lVal);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.rotateLeft8
int64_t Org::BouncyCastle::Crypto::Engines::SeedEngine::rotateLeft8(int64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::rotateLeft8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "rotateLeft8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.rotateRight8
int64_t Org::BouncyCastle::Crypto::Engines::SeedEngine::rotateRight8(int64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::rotateRight8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "rotateRight8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.bytesToLong
int64_t Org::BouncyCastle::Crypto::Engines::SeedEngine::bytesToLong(::Array<uint8_t>* src, int srcOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::bytesToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "bytesToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOff)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, src, srcOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.longToBytes
void Org::BouncyCastle::Crypto::Engines::SeedEngine::longToBytes(::Array<uint8_t>* dest, int destOff, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::longToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "longToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destOff), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dest, destOff, value);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.G
int Org::BouncyCastle::Crypto::Engines::SeedEngine::G(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.F
int64_t Org::BouncyCastle::Crypto::Engines::SeedEngine::F(int ki0, int ki1, int64_t r) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ki0), ::il2cpp_utils::ExtractType(ki1), ::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, ki0, ki1, r);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.phaseCalc1
int Org::BouncyCastle::Crypto::Engines::SeedEngine::phaseCalc1(int r0, int ki0, int r1, int ki1) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::phaseCalc1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "phaseCalc1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r0), ::il2cpp_utils::ExtractType(ki0), ::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(ki1)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, r0, ki0, r1, ki1);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.phaseCalc2
int Org::BouncyCastle::Crypto::Engines::SeedEngine::phaseCalc2(int r0, int ki0, int r1, int ki1) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::phaseCalc2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "phaseCalc2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r0), ::il2cpp_utils::ExtractType(ki0), ::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(ki1)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, r0, ki0, r1, ki1);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine..cctor
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SeedEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SeedEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SeedEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SeedEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&SeedEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SeedEngine::*)()>(&SeedEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SeedEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SeedEngine::*)()>(&SeedEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SeedEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SeedEngine::*)()>(&SeedEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SeedEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SeedEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SeedEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SeedEngine::*)()>(&SeedEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SeedEngine::createWorkingKey
// Il2CppName: createWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (SeedEngine::*)(::Array<uint8_t>*)>(&SeedEngine::createWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "createWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::extractW1
// Il2CppName: extractW1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SeedEngine::*)(int64_t)>(&SeedEngine::extractW1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "extractW1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::extractW0
// Il2CppName: extractW0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SeedEngine::*)(int64_t)>(&SeedEngine::extractW0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "extractW0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::rotateLeft8
// Il2CppName: rotateLeft8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (SeedEngine::*)(int64_t)>(&SeedEngine::rotateLeft8)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "rotateLeft8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::rotateRight8
// Il2CppName: rotateRight8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (SeedEngine::*)(int64_t)>(&SeedEngine::rotateRight8)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "rotateRight8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::bytesToLong
// Il2CppName: bytesToLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (SeedEngine::*)(::Array<uint8_t>*, int)>(&SeedEngine::bytesToLong)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "bytesToLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::longToBytes
// Il2CppName: longToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SeedEngine::*)(::Array<uint8_t>*, int, int64_t)>(&SeedEngine::longToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "longToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::G
// Il2CppName: G
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SeedEngine::*)(int)>(&SeedEngine::G)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "G", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::F
// Il2CppName: F
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (SeedEngine::*)(int, int, int64_t)>(&SeedEngine::F)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "F", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::phaseCalc1
// Il2CppName: phaseCalc1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SeedEngine::*)(int, int, int, int)>(&SeedEngine::phaseCalc1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "phaseCalc1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::phaseCalc2
// Il2CppName: phaseCalc2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SeedEngine::*)(int, int, int, int)>(&SeedEngine::phaseCalc2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), "phaseCalc2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SeedEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SeedEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SeedEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SeedEngine::*)()>(&SeedEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SeedEngine::*)()>(&SeedEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SeedEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
#include "Org/BouncyCastle/Crypto/Engines/SerpentEngineBase.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected readonly System.Int32 BlockSize
int Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::_get_BlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::_get_BlockSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "SerpentEngineBase", "BlockSize"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Int32 BlockSize
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::_set_BlockSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::_set_BlockSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SerpentEngineBase", "BlockSize", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Init(bool encrypting, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypting), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, encrypting, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Reset
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateLeft
int Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::RotateLeft(int x, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SerpentEngineBase", "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, bits);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateRight
int Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::RotateRight(int x, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SerpentEngineBase", "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, bits);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb0
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb0(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sb0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib0(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ib0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb1(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sb1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib1(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ib1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb2(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sb2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib2(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ib2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb3(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sb3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib3(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ib3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb4(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sb4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib4(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ib4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb5(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sb5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib5(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ib5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb6(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sb6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib6(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ib6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb7(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Sb7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sb7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib7(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::Ib7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ib7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::LT() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::LT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::InverseLT() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::InverseLT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseLT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::MakeWorkingKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::MakeWorkingKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::EncryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::DecryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase..cctor
void Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngineBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SerpentEngineBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SerpentEngineBase::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&SerpentEngineBase::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SerpentEngineBase::*)()>(&SerpentEngineBase::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SerpentEngineBase::*)()>(&SerpentEngineBase::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SerpentEngineBase::*)()>(&SerpentEngineBase::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SerpentEngineBase::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SerpentEngineBase::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)()>(&SerpentEngineBase::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::RotateLeft
// Il2CppName: RotateLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int)>(&SerpentEngineBase::RotateLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "RotateLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::RotateRight
// Il2CppName: RotateRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int)>(&SerpentEngineBase::RotateRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "RotateRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Sb0
// Il2CppName: Sb0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Sb0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Sb0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Ib0
// Il2CppName: Ib0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Ib0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Ib0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Sb1
// Il2CppName: Sb1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Sb1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Sb1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Ib1
// Il2CppName: Ib1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Ib1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Ib1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Sb2
// Il2CppName: Sb2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Sb2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Sb2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Ib2
// Il2CppName: Ib2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Ib2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Ib2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Sb3
// Il2CppName: Sb3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Sb3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Sb3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Ib3
// Il2CppName: Ib3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Ib3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Ib3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Sb4
// Il2CppName: Sb4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Sb4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Sb4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Ib4
// Il2CppName: Ib4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Ib4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Ib4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Sb5
// Il2CppName: Sb5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Sb5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Sb5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Ib5
// Il2CppName: Ib5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Ib5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Ib5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Sb6
// Il2CppName: Sb6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Sb6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Sb6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Ib6
// Il2CppName: Ib6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Ib6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Ib6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Sb7
// Il2CppName: Sb7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Sb7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Sb7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::Ib7
// Il2CppName: Ib7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(int, int, int, int)>(&SerpentEngineBase::Ib7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "Ib7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::LT
// Il2CppName: LT
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)()>(&SerpentEngineBase::LT)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "LT", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::InverseLT
// Il2CppName: InverseLT
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)()>(&SerpentEngineBase::InverseLT)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "InverseLT", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::MakeWorkingKey
// Il2CppName: MakeWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (SerpentEngineBase::*)(::Array<uint8_t>*)>(&SerpentEngineBase::MakeWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "MakeWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SerpentEngineBase::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SerpentEngineBase::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SerpentEngineBase::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerpentEngineBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)()>(&SerpentEngineBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngineBase::*)()>(&SerpentEngineBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngineBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.SerpentEngine
#include "Org/BouncyCastle/Crypto/Engines/SerpentEngine.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngine.MakeWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::SerpentEngine::MakeWorkingKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngine::MakeWorkingKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngine.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::SerpentEngine::EncryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngine::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SerpentEngine.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::SerpentEngine::DecryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SerpentEngine::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Writing MetadataGetter for method: SerpentEngine::MakeWorkingKey
// Il2CppName: MakeWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (SerpentEngine::*)(::Array<uint8_t>*)>(&SerpentEngine::MakeWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngine*), "MakeWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: SerpentEngine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SerpentEngine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SerpentEngine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerpentEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngine::*)()>(&SerpentEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerpentEngine::*)()>(&SerpentEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerpentEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.SkipjackEngine
#include "Org/BouncyCastle/Crypto/Engines/SkipjackEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int16[] ftable
::Array<int16_t>* Org::BouncyCastle::Crypto::Engines::SkipjackEngine::_get_ftable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::_get_ftable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int16_t>*>("Org.BouncyCastle.Crypto.Engines", "SkipjackEngine", "ftable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int16[] ftable
void Org::BouncyCastle::Crypto::Engines::SkipjackEngine::_set_ftable(::Array<int16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::_set_ftable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SkipjackEngine", "ftable", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.Init
void Org::BouncyCastle::Crypto::Engines::SkipjackEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::SkipjackEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::SkipjackEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::SkipjackEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::SkipjackEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.Reset
void Org::BouncyCastle::Crypto::Engines::SkipjackEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.G
int Org::BouncyCastle::Crypto::Engines::SkipjackEngine::G(int k, int w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, k, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.EncryptBlock
int Org::BouncyCastle::Crypto::Engines::SkipjackEngine::EncryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.H
int Org::BouncyCastle::Crypto::Engines::SkipjackEngine::H(int k, int w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, k, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine.DecryptBlock
int Org::BouncyCastle::Crypto::Engines::SkipjackEngine::DecryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SkipjackEngine..cctor
void Org::BouncyCastle::Crypto::Engines::SkipjackEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SkipjackEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SkipjackEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SkipjackEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkipjackEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&SkipjackEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SkipjackEngine::*)()>(&SkipjackEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SkipjackEngine::*)()>(&SkipjackEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SkipjackEngine::*)()>(&SkipjackEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SkipjackEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SkipjackEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkipjackEngine::*)()>(&SkipjackEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::G
// Il2CppName: G
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SkipjackEngine::*)(int, int)>(&SkipjackEngine::G)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "G", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SkipjackEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SkipjackEngine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::H
// Il2CppName: H
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SkipjackEngine::*)(int, int)>(&SkipjackEngine::H)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "H", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SkipjackEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SkipjackEngine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SkipjackEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkipjackEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkipjackEngine::*)()>(&SkipjackEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkipjackEngine::*)()>(&SkipjackEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkipjackEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.SM4Engine
#include "Org/BouncyCastle/Crypto/Engines/SM4Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] Sbox
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::SM4Engine::_get_Sbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::_get_Sbox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "Sbox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] Sbox
void Org::BouncyCastle::Crypto::Engines::SM4Engine::_set_Sbox(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::_set_Sbox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "Sbox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] CK
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SM4Engine::_get_CK() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::_get_CK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "CK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] CK
void Org::BouncyCastle::Crypto::Engines::SM4Engine::_set_CK(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::_set_CK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "CK", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] FK
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SM4Engine::_get_FK() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::_get_FK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "FK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] FK
void Org::BouncyCastle::Crypto::Engines::SM4Engine::_set_FK(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::_set_FK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "FK", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.tau
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::tau(uint A) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::tau");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "tau", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(A)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, A);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.L_ap
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::L_ap(uint B) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::L_ap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "L_ap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(B)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, B);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.T_ap
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::T_ap(uint Z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::T_ap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "T_ap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, Z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.ExpandKey
void Org::BouncyCastle::Crypto::Engines::SM4Engine::ExpandKey(bool forEncryption, ::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::ExpandKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.L
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::L(uint B) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::L");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "L", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(B)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, B);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.T
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::T(uint Z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::T");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "T", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, Z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.Init
void Org::BouncyCastle::Crypto::Engines::SM4Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::SM4Engine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::SM4Engine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::SM4Engine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::SM4Engine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.Reset
void Org::BouncyCastle::Crypto::Engines::SM4Engine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine..cctor
void Org::BouncyCastle::Crypto::Engines::SM4Engine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::SM4Engine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "SM4Engine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SM4Engine::tau
// Il2CppName: tau
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&SM4Engine::tau)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "tau", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM4Engine::L_ap
// Il2CppName: L_ap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&SM4Engine::L_ap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "L_ap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM4Engine::T_ap
// Il2CppName: T_ap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (SM4Engine::*)(uint)>(&SM4Engine::T_ap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "T_ap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM4Engine::ExpandKey
// Il2CppName: ExpandKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM4Engine::*)(bool, ::Array<uint8_t>*)>(&SM4Engine::ExpandKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "ExpandKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: SM4Engine::L
// Il2CppName: L
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&SM4Engine::L)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "L", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM4Engine::T
// Il2CppName: T
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&SM4Engine::T)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "T", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SM4Engine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM4Engine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&SM4Engine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: SM4Engine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SM4Engine::*)()>(&SM4Engine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM4Engine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SM4Engine::*)()>(&SM4Engine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM4Engine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SM4Engine::*)()>(&SM4Engine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM4Engine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SM4Engine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&SM4Engine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SM4Engine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM4Engine::*)()>(&SM4Engine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM4Engine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SM4Engine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SM4Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM4Engine::*)()>(&SM4Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SM4Engine::*)()>(&SM4Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SM4Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.TeaEngine
#include "Org/BouncyCastle/Crypto/Engines/TeaEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::TeaEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TeaEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::TeaEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TeaEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::TeaEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TeaEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.Init
void Org::BouncyCastle::Crypto::Engines::TeaEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TeaEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::TeaEngine::ProcessBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TeaEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inBytes, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.Reset
void Org::BouncyCastle::Crypto::Engines::TeaEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TeaEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.setKey
void Org::BouncyCastle::Crypto::Engines::TeaEngine::setKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TeaEngine::setKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.encryptBlock
int Org::BouncyCastle::Crypto::Engines::TeaEngine::encryptBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TeaEngine::encryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "encryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inBytes, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.decryptBlock
int Org::BouncyCastle::Crypto::Engines::TeaEngine::decryptBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TeaEngine::decryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "decryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inBytes, inOff, outBytes, outOff);
}
// Writing MetadataGetter for method: TeaEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TeaEngine::*)()>(&TeaEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TeaEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TeaEngine::*)()>(&TeaEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TeaEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TeaEngine::*)()>(&TeaEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TeaEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TeaEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&TeaEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: TeaEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TeaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&TeaEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TeaEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TeaEngine::*)()>(&TeaEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TeaEngine::setKey
// Il2CppName: setKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TeaEngine::*)(::Array<uint8_t>*)>(&TeaEngine::setKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), "setKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: TeaEngine::encryptBlock
// Il2CppName: encryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TeaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&TeaEngine::encryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), "encryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TeaEngine::decryptBlock
// Il2CppName: decryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TeaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&TeaEngine::decryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), "decryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TeaEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TeaEngine::*)()>(&TeaEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TeaEngine::*)()>(&TeaEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TeaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.ThreefishEngine
#include "Org/BouncyCastle/Crypto/Engines/ThreefishEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/ThreefishCipher
#include "Org/BouncyCastle/Crypto/Engines/ThreefishEngine_ThreefishCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish256Cipher
#include "Org/BouncyCastle/Crypto/Engines/ThreefishEngine_Threefish256Cipher.hpp"
// Including type: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish512Cipher
#include "Org/BouncyCastle/Crypto/Engines/ThreefishEngine_Threefish512Cipher.hpp"
// Including type: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish1024Cipher
#include "Org/BouncyCastle/Crypto/Engines/ThreefishEngine_Threefish1024Cipher.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] MOD9
::Array<int>* Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_get_MOD9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_get_MOD9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "MOD9"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] MOD9
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_set_MOD9(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_set_MOD9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "MOD9", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] MOD17
::Array<int>* Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_get_MOD17() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_get_MOD17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "MOD17"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] MOD17
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_set_MOD17(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_set_MOD17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "MOD17", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] MOD5
::Array<int>* Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_get_MOD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_get_MOD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "MOD5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] MOD5
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_set_MOD5(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_set_MOD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "MOD5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] MOD3
::Array<int>* Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_get_MOD3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_get_MOD3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "MOD3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] MOD3
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_set_MOD3(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_set_MOD3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "MOD3", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine..cctor
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Init
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Init
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Init(bool forEncryption, ::Array<uint64_t>* key, ::Array<uint64_t>* tweak) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(tweak)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, key, tweak);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.SetKey
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::SetKey(::Array<uint64_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.SetTweak
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::SetTweak(::Array<uint64_t>* tweak) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::SetTweak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTweak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tweak)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tweak);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::ThreefishEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::ThreefishEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::ThreefishEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Reset
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::ThreefishEngine::ProcessBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inBytes, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::ThreefishEngine::ProcessBlock(::Array<uint64_t>* inWords, ::Array<uint64_t>* outWords) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inWords), ::il2cpp_utils::ExtractType(outWords)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inWords, outWords);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.BytesToWord
uint64_t Org::BouncyCastle::Crypto::Engines::ThreefishEngine::BytesToWord(::Array<uint8_t>* bytes, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::BytesToWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "BytesToWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(off)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.WordToBytes
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::WordToBytes(uint64_t word, ::Array<uint8_t>* bytes, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::WordToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "WordToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(off)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, word, bytes, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.RotlXor
uint64_t Org::BouncyCastle::Crypto::Engines::ThreefishEngine::RotlXor(uint64_t x, int n, uint64_t _xor) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::RotlXor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "RotlXor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(_xor)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, n, _xor);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine.XorRotr
uint64_t Org::BouncyCastle::Crypto::Engines::ThreefishEngine::XorRotr(uint64_t x, int n, uint64_t _xor) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::XorRotr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "ThreefishEngine", "XorRotr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(_xor)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, n, _xor);
}
// Writing MetadataGetter for method: ThreefishEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ThreefishEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::*)(int)>(&ThreefishEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::*)(int)>(&ThreefishEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&ThreefishEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::*)(bool, ::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::*)(::Array<uint64_t>*)>(&ThreefishEngine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::SetTweak
// Il2CppName: SetTweak
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::*)(::Array<uint64_t>*)>(&ThreefishEngine::SetTweak)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "SetTweak", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ThreefishEngine::*)()>(&ThreefishEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ThreefishEngine::*)()>(&ThreefishEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ThreefishEngine::*)()>(&ThreefishEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::*)()>(&ThreefishEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ThreefishEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&ThreefishEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ThreefishEngine::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::BytesToWord
// Il2CppName: BytesToWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Array<uint8_t>*, int)>(&ThreefishEngine::BytesToWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "BytesToWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::WordToBytes
// Il2CppName: WordToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t, ::Array<uint8_t>*, int)>(&ThreefishEngine::WordToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "WordToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::RotlXor
// Il2CppName: RotlXor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, uint64_t)>(&ThreefishEngine::RotlXor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "RotlXor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::XorRotr
// Il2CppName: XorRotr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, uint64_t)>(&ThreefishEngine::XorRotr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine*), "XorRotr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/ThreefishCipher
#include "Org/BouncyCastle/Crypto/Engines/ThreefishEngine_ThreefishCipher.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/ThreefishCipher.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::ThreefishCipher::EncryptBlock(::Array<uint64_t>* block, ::Array<uint64_t>* outWords) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::ThreefishCipher::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(outWords)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, block, outWords);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/ThreefishCipher.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::ThreefishCipher::DecryptBlock(::Array<uint64_t>* block, ::Array<uint64_t>* outWords) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::ThreefishCipher::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(outWords)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, block, outWords);
}
// Writing MetadataGetter for method: ThreefishEngine::ThreefishCipher::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::ThreefishCipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::ThreefishCipher::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::ThreefishCipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::ThreefishCipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::ThreefishCipher::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::ThreefishCipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::ThreefishCipher::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::ThreefishCipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::ThreefishCipher::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::ThreefishCipher*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::ThreefishCipher::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::ThreefishCipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::ThreefishCipher::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::ThreefishCipher*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish256Cipher
#include "Org/BouncyCastle/Crypto/Engines/ThreefishEngine_Threefish256Cipher.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish256Cipher.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish256Cipher::EncryptBlock(::Array<uint64_t>* block, ::Array<uint64_t>* outWords) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish256Cipher::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(outWords)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, block, outWords);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish256Cipher.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish256Cipher::DecryptBlock(::Array<uint64_t>* block, ::Array<uint64_t>* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish256Cipher::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, block, state);
}
// Writing MetadataGetter for method: ThreefishEngine::Threefish256Cipher::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish256Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish256Cipher::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish256Cipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish256Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish256Cipher::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish256Cipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::Threefish256Cipher::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish256Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish256Cipher::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish256Cipher*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::Threefish256Cipher::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish256Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish256Cipher::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish256Cipher*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish512Cipher
#include "Org/BouncyCastle/Crypto/Engines/ThreefishEngine_Threefish512Cipher.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish512Cipher.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish512Cipher::EncryptBlock(::Array<uint64_t>* block, ::Array<uint64_t>* outWords) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish512Cipher::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(outWords)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, block, outWords);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish512Cipher.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish512Cipher::DecryptBlock(::Array<uint64_t>* block, ::Array<uint64_t>* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish512Cipher::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, block, state);
}
// Writing MetadataGetter for method: ThreefishEngine::Threefish512Cipher::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish512Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish512Cipher::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish512Cipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish512Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish512Cipher::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish512Cipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::Threefish512Cipher::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish512Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish512Cipher::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish512Cipher*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::Threefish512Cipher::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish512Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish512Cipher::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish512Cipher*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish1024Cipher
#include "Org/BouncyCastle/Crypto/Engines/ThreefishEngine_Threefish1024Cipher.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish1024Cipher.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish1024Cipher::EncryptBlock(::Array<uint64_t>* block, ::Array<uint64_t>* outWords) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish1024Cipher::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(outWords)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, block, outWords);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ThreefishEngine/Threefish1024Cipher.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish1024Cipher::DecryptBlock(::Array<uint64_t>* block, ::Array<uint64_t>* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::ThreefishEngine::Threefish1024Cipher::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, block, state);
}
// Writing MetadataGetter for method: ThreefishEngine::Threefish1024Cipher::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish1024Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish1024Cipher::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish1024Cipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish1024Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish1024Cipher::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish1024Cipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::Threefish1024Cipher::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish1024Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish1024Cipher::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish1024Cipher*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: ThreefishEngine::Threefish1024Cipher::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ThreefishEngine::Threefish1024Cipher::*)(::Array<uint64_t>*, ::Array<uint64_t>*)>(&ThreefishEngine::Threefish1024Cipher::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ThreefishEngine::Threefish1024Cipher*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.TnepresEngine
#include "Org/BouncyCastle/Crypto/Engines/TnepresEngine.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TnepresEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::TnepresEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TnepresEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TnepresEngine.MakeWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::TnepresEngine::MakeWorkingKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TnepresEngine::MakeWorkingKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TnepresEngine.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::TnepresEngine::EncryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TnepresEngine::EncryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TnepresEngine.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::TnepresEngine::DecryptBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TnepresEngine::DecryptBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Writing MetadataGetter for method: TnepresEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TnepresEngine::*)()>(&TnepresEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TnepresEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TnepresEngine::MakeWorkingKey
// Il2CppName: MakeWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (TnepresEngine::*)(::Array<uint8_t>*)>(&TnepresEngine::MakeWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TnepresEngine*), "MakeWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: TnepresEngine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TnepresEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&TnepresEngine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TnepresEngine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TnepresEngine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TnepresEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&TnepresEngine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TnepresEngine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TnepresEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TnepresEngine::*)()>(&TnepresEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TnepresEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TnepresEngine::*)()>(&TnepresEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TnepresEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.TwofishEngine
#include "Org/BouncyCastle/Crypto/Engines/TwofishEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[,] P
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::TwofishEngine::_get_P() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::_get_P");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "TwofishEngine", "P"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[,] P
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::_set_P(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::_set_P");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "TwofishEngine", "P", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Init
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::TwofishEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::TwofishEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Reset
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.SetKey
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::SetKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::EncryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::EncryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, srcIndex, dst, dstIndex);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::DecryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::DecryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, srcIndex, dst, dstIndex);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.F32
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::F32(int x, ::Array<int>* k32) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::F32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(k32)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, k32);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.RS_MDS_Encode
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::RS_MDS_Encode(int k0, int k1) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::RS_MDS_Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RS_MDS_Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k0), ::il2cpp_utils::ExtractType(k1)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, k0, k1);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.RS_rem
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::RS_rem(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::RS_rem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RS_rem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.LFSR1
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::LFSR1(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::LFSR1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LFSR1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.LFSR2
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::LFSR2(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::LFSR2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LFSR2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Mx_X
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::Mx_X(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::Mx_X");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mx_X", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Mx_Y
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::Mx_Y(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::Mx_Y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mx_Y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.M_b0
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b0(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "M_b0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.M_b1
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b1(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "M_b1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.M_b2
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b2(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "M_b2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.M_b3
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b3(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "M_b3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Fe32_0
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::Fe32_0(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::Fe32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fe32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Fe32_3
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::Fe32_3(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::Fe32_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fe32_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.BytesTo32Bits
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::BytesTo32Bits(::Array<uint8_t>* b, int p) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::BytesTo32Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BytesTo32Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, b, p);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Bits32ToBytes
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::Bits32ToBytes(int inData, ::Array<uint8_t>* b, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::Bits32ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bits32ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inData), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inData, b, offset);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine..cctor
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::TwofishEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "TwofishEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: TwofishEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwofishEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&TwofishEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TwofishEngine::*)()>(&TwofishEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TwofishEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TwofishEngine::*)()>(&TwofishEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TwofishEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&TwofishEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwofishEngine::*)()>(&TwofishEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TwofishEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)()>(&TwofishEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TwofishEngine::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwofishEngine::*)(::Array<uint8_t>*)>(&TwofishEngine::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::EncryptBlock
// Il2CppName: EncryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwofishEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&TwofishEngine::EncryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "EncryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::DecryptBlock
// Il2CppName: DecryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwofishEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&TwofishEngine::DecryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "DecryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::F32
// Il2CppName: F32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int, ::Array<int>*)>(&TwofishEngine::F32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "F32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::RS_MDS_Encode
// Il2CppName: RS_MDS_Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int, int)>(&TwofishEngine::RS_MDS_Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "RS_MDS_Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::RS_rem
// Il2CppName: RS_rem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::RS_rem)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "RS_rem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::LFSR1
// Il2CppName: LFSR1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::LFSR1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "LFSR1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::LFSR2
// Il2CppName: LFSR2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::LFSR2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "LFSR2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::Mx_X
// Il2CppName: Mx_X
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::Mx_X)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "Mx_X", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::Mx_Y
// Il2CppName: Mx_Y
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::Mx_Y)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "Mx_Y", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::M_b0
// Il2CppName: M_b0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::M_b0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "M_b0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::M_b1
// Il2CppName: M_b1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::M_b1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "M_b1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::M_b2
// Il2CppName: M_b2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::M_b2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "M_b2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::M_b3
// Il2CppName: M_b3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::M_b3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "M_b3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::Fe32_0
// Il2CppName: Fe32_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::Fe32_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "Fe32_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::Fe32_3
// Il2CppName: Fe32_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(int)>(&TwofishEngine::Fe32_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "Fe32_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::BytesTo32Bits
// Il2CppName: BytesTo32Bits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TwofishEngine::*)(::Array<uint8_t>*, int)>(&TwofishEngine::BytesTo32Bits)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "BytesTo32Bits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::Bits32ToBytes
// Il2CppName: Bits32ToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwofishEngine::*)(int, ::Array<uint8_t>*, int)>(&TwofishEngine::Bits32ToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), "Bits32ToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwofishEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&TwofishEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TwofishEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwofishEngine::*)()>(&TwofishEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwofishEngine::*)()>(&TwofishEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwofishEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.VmpcEngine
#include "Org/BouncyCastle/Crypto/Engines/VmpcEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.VmpcEngine.Init
void Org::BouncyCastle::Crypto::Engines::VmpcEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::VmpcEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.VmpcEngine.InitKey
void Org::BouncyCastle::Crypto::Engines::VmpcEngine::InitKey(::Array<uint8_t>* keyBytes, ::Array<uint8_t>* ivBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::VmpcEngine::InitKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBytes), ::il2cpp_utils::ExtractType(ivBytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyBytes, ivBytes);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.VmpcEngine.ProcessBytes
void Org::BouncyCastle::Crypto::Engines::VmpcEngine::ProcessBytes(::Array<uint8_t>* input, int inOff, int len, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::VmpcEngine::ProcessBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, len, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.VmpcEngine.Reset
void Org::BouncyCastle::Crypto::Engines::VmpcEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::VmpcEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: VmpcEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VmpcEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&VmpcEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VmpcEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: VmpcEngine::InitKey
// Il2CppName: InitKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VmpcEngine::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&VmpcEngine::InitKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VmpcEngine*), "InitKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: VmpcEngine::ProcessBytes
// Il2CppName: ProcessBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VmpcEngine::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*, int)>(&VmpcEngine::ProcessBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VmpcEngine*), "ProcessBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: VmpcEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VmpcEngine::*)()>(&VmpcEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VmpcEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VmpcEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VmpcEngine::*)()>(&VmpcEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VmpcEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VmpcEngine::*)()>(&VmpcEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VmpcEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.VmpcKsa3Engine
#include "Org/BouncyCastle/Crypto/Engines/VmpcKsa3Engine.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.VmpcKsa3Engine.InitKey
void Org::BouncyCastle::Crypto::Engines::VmpcKsa3Engine::InitKey(::Array<uint8_t>* keyBytes, ::Array<uint8_t>* ivBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::VmpcKsa3Engine::InitKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBytes), ::il2cpp_utils::ExtractType(ivBytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyBytes, ivBytes);
}
// Writing MetadataGetter for method: VmpcKsa3Engine::InitKey
// Il2CppName: InitKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VmpcKsa3Engine::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&VmpcKsa3Engine::InitKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VmpcKsa3Engine*), "InitKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: VmpcKsa3Engine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VmpcKsa3Engine::*)()>(&VmpcKsa3Engine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VmpcKsa3Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VmpcKsa3Engine::*)()>(&VmpcKsa3Engine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VmpcKsa3Engine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.XteaEngine
#include "Org/BouncyCastle/Crypto/Engines/XteaEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.XteaEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::XteaEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::XteaEngine::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.XteaEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::XteaEngine::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::XteaEngine::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.XteaEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::XteaEngine::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::XteaEngine::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.XteaEngine.Init
void Org::BouncyCastle::Crypto::Engines::XteaEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::XteaEngine::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.XteaEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::XteaEngine::ProcessBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::XteaEngine::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inBytes, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.XteaEngine.Reset
void Org::BouncyCastle::Crypto::Engines::XteaEngine::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::XteaEngine::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.XteaEngine.setKey
void Org::BouncyCastle::Crypto::Engines::XteaEngine::setKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::XteaEngine::setKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.XteaEngine.encryptBlock
int Org::BouncyCastle::Crypto::Engines::XteaEngine::encryptBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::XteaEngine::encryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "encryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inBytes, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.XteaEngine.decryptBlock
int Org::BouncyCastle::Crypto::Engines::XteaEngine::decryptBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Engines::XteaEngine::decryptBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "decryptBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inBytes, inOff, outBytes, outOff);
}
// Writing MetadataGetter for method: XteaEngine::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (XteaEngine::*)()>(&XteaEngine::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XteaEngine::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (XteaEngine::*)()>(&XteaEngine::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XteaEngine::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (XteaEngine::*)()>(&XteaEngine::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XteaEngine::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XteaEngine::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&XteaEngine::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: XteaEngine::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (XteaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&XteaEngine::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: XteaEngine::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XteaEngine::*)()>(&XteaEngine::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XteaEngine::setKey
// Il2CppName: setKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XteaEngine::*)(::Array<uint8_t>*)>(&XteaEngine::setKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), "setKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: XteaEngine::encryptBlock
// Il2CppName: encryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (XteaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&XteaEngine::encryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), "encryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: XteaEngine::decryptBlock
// Il2CppName: decryptBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (XteaEngine::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&XteaEngine::decryptBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), "decryptBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: XteaEngine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XteaEngine::*)()>(&XteaEngine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XteaEngine::*)()>(&XteaEngine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XteaEngine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator
#include "Org/BouncyCastle/Crypto/Generators/BaseKdfBytesGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
// Including type: Org.BouncyCastle.Crypto.IDerivationParameters
#include "Org/BouncyCastle/Crypto/IDerivationParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator.Init
void Org::BouncyCastle::Crypto::Generators::BaseKdfBytesGenerator::Init(Org::BouncyCastle::Crypto::IDerivationParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::BaseKdfBytesGenerator::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator.GenerateBytes
int Org::BouncyCastle::Crypto::Generators::BaseKdfBytesGenerator::GenerateBytes(::Array<uint8_t>* output, int outOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::BaseKdfBytesGenerator::GenerateBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff, length);
}
// Writing MetadataGetter for method: BaseKdfBytesGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseKdfBytesGenerator::*)(int, Org::BouncyCastle::Crypto::IDigest*)>(&BaseKdfBytesGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseKdfBytesGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseKdfBytesGenerator::*)(int, Org::BouncyCastle::Crypto::IDigest*)>(&BaseKdfBytesGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseKdfBytesGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
// Writing MetadataGetter for method: BaseKdfBytesGenerator::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseKdfBytesGenerator::*)(Org::BouncyCastle::Crypto::IDerivationParameters*)>(&BaseKdfBytesGenerator::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseKdfBytesGenerator*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDerivationParameters*>()});
  }
};
// Writing MetadataGetter for method: BaseKdfBytesGenerator::GenerateBytes
// Il2CppName: GenerateBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BaseKdfBytesGenerator::*)(::Array<uint8_t>*, int, int)>(&BaseKdfBytesGenerator::GenerateBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseKdfBytesGenerator*), "GenerateBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.Generators.DHBasicKeyPairGenerator
#include "Org/BouncyCastle/Crypto/Generators/DHBasicKeyPairGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.DHKeyGenerationParameters
#include "Org/BouncyCastle/Crypto/Parameters/DHKeyGenerationParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.KeyGenerationParameters
#include "Org/BouncyCastle/Crypto/KeyGenerationParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
#include "Org/BouncyCastle/Crypto/AsymmetricCipherKeyPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.DHBasicKeyPairGenerator.Init
void Org::BouncyCastle::Crypto::Generators::DHBasicKeyPairGenerator::Init(Org::BouncyCastle::Crypto::KeyGenerationParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::DHBasicKeyPairGenerator::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.DHBasicKeyPairGenerator.GenerateKeyPair
Org::BouncyCastle::Crypto::AsymmetricCipherKeyPair* Org::BouncyCastle::Crypto::Generators::DHBasicKeyPairGenerator::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::DHBasicKeyPairGenerator::GenerateKeyPair");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::AsymmetricCipherKeyPair*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DHBasicKeyPairGenerator::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DHBasicKeyPairGenerator::*)(Org::BouncyCastle::Crypto::KeyGenerationParameters*)>(&DHBasicKeyPairGenerator::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHBasicKeyPairGenerator*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::KeyGenerationParameters*>()});
  }
};
// Writing MetadataGetter for method: DHBasicKeyPairGenerator::GenerateKeyPair
// Il2CppName: GenerateKeyPair
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::AsymmetricCipherKeyPair* (DHBasicKeyPairGenerator::*)()>(&DHBasicKeyPairGenerator::GenerateKeyPair)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHBasicKeyPairGenerator*), "GenerateKeyPair", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DHBasicKeyPairGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DHBasicKeyPairGenerator::*)()>(&DHBasicKeyPairGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHBasicKeyPairGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DHBasicKeyPairGenerator::*)()>(&DHBasicKeyPairGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHBasicKeyPairGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper
#include "Org/BouncyCastle/Crypto/Generators/DHKeyGeneratorHelper.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.DHParameters
#include "Org/BouncyCastle/Crypto/Parameters/DHParameters.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper Instance
Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper* Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper*>("Org.BouncyCastle.Crypto.Generators", "DHKeyGeneratorHelper", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper Instance
void Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::_set_Instance(Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Generators", "DHKeyGeneratorHelper", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper.CalculatePrivate
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::CalculatePrivate(Org::BouncyCastle::Crypto::Parameters::DHParameters* dhParams, Org::BouncyCastle::Security::SecureRandom* random) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::CalculatePrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dhParams), ::il2cpp_utils::ExtractType(random)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method, dhParams, random);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper.CalculatePublic
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::CalculatePublic(Org::BouncyCastle::Crypto::Parameters::DHParameters* dhParams, Org::BouncyCastle::Math::BigInteger* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::CalculatePublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dhParams), ::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method, dhParams, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper..cctor
void Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::DHKeyGeneratorHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Generators", "DHKeyGeneratorHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: DHKeyGeneratorHelper::CalculatePrivate
// Il2CppName: CalculatePrivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (DHKeyGeneratorHelper::*)(Org::BouncyCastle::Crypto::Parameters::DHParameters*, Org::BouncyCastle::Security::SecureRandom*)>(&DHKeyGeneratorHelper::CalculatePrivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHKeyGeneratorHelper*), "CalculatePrivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Parameters::DHParameters*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Security::SecureRandom*>()});
  }
};
// Writing MetadataGetter for method: DHKeyGeneratorHelper::CalculatePublic
// Il2CppName: CalculatePublic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (DHKeyGeneratorHelper::*)(Org::BouncyCastle::Crypto::Parameters::DHParameters*, Org::BouncyCastle::Math::BigInteger*)>(&DHKeyGeneratorHelper::CalculatePublic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHKeyGeneratorHelper*), "CalculatePublic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Parameters::DHParameters*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: DHKeyGeneratorHelper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DHKeyGeneratorHelper::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHKeyGeneratorHelper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DHKeyGeneratorHelper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DHKeyGeneratorHelper::*)()>(&DHKeyGeneratorHelper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHKeyGeneratorHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DHKeyGeneratorHelper::*)()>(&DHKeyGeneratorHelper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHKeyGeneratorHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator
#include "Org/BouncyCastle/Crypto/Generators/ECKeyPairGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECDomainParameters.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
// Including type: Org.BouncyCastle.Crypto.KeyGenerationParameters
#include "Org/BouncyCastle/Crypto/KeyGenerationParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
#include "Org/BouncyCastle/Crypto/AsymmetricCipherKeyPair.hpp"
// Including type: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
#include "Org/BouncyCastle/Math/EC/Multiplier/ECMultiplier.hpp"
// Including type: Org.BouncyCastle.Asn1.X9.X9ECParameters
#include "Org/BouncyCastle/Asn1/X9/X9ECParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECPublicKeyParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECPrivateKeyParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator.Init
void Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::Init(Org::BouncyCastle::Crypto::KeyGenerationParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator.GenerateKeyPair
Org::BouncyCastle::Crypto::AsymmetricCipherKeyPair* Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::GenerateKeyPair");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::AsymmetricCipherKeyPair*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator.CreateBasePointMultiplier
Org::BouncyCastle::Math::EC::Multiplier::ECMultiplier* Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::CreateBasePointMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::CreateBasePointMultiplier");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBasePointMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::Multiplier::ECMultiplier*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator.FindECCurveByOid
Org::BouncyCastle::Asn1::X9::X9ECParameters* Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::FindECCurveByOid(Org::BouncyCastle::Asn1::DerObjectIdentifier* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::FindECCurveByOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Generators", "ECKeyPairGenerator", "FindECCurveByOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::X9::X9ECParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator.GetCorrespondingPublicKey
Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters* Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::GetCorrespondingPublicKey(Org::BouncyCastle::Crypto::Parameters::ECPrivateKeyParameters* privKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::ECKeyPairGenerator::GetCorrespondingPublicKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Generators", "ECKeyPairGenerator", "GetCorrespondingPublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privKey)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, privKey);
}
// Writing MetadataGetter for method: ECKeyPairGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ECKeyPairGenerator::*)(::Il2CppString*)>(&ECKeyPairGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECKeyPairGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ECKeyPairGenerator::*)(::Il2CppString*)>(&ECKeyPairGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECKeyPairGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ECKeyPairGenerator::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ECKeyPairGenerator::*)(Org::BouncyCastle::Crypto::KeyGenerationParameters*)>(&ECKeyPairGenerator::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECKeyPairGenerator*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::KeyGenerationParameters*>()});
  }
};
// Writing MetadataGetter for method: ECKeyPairGenerator::GenerateKeyPair
// Il2CppName: GenerateKeyPair
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::AsymmetricCipherKeyPair* (ECKeyPairGenerator::*)()>(&ECKeyPairGenerator::GenerateKeyPair)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECKeyPairGenerator*), "GenerateKeyPair", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ECKeyPairGenerator::CreateBasePointMultiplier
// Il2CppName: CreateBasePointMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::EC::Multiplier::ECMultiplier* (ECKeyPairGenerator::*)()>(&ECKeyPairGenerator::CreateBasePointMultiplier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECKeyPairGenerator*), "CreateBasePointMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ECKeyPairGenerator::FindECCurveByOid
// Il2CppName: FindECCurveByOid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::X9::X9ECParameters* (*)(Org::BouncyCastle::Asn1::DerObjectIdentifier*)>(&ECKeyPairGenerator::FindECCurveByOid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECKeyPairGenerator*), "FindECCurveByOid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerObjectIdentifier*>()});
  }
};
// Writing MetadataGetter for method: ECKeyPairGenerator::GetCorrespondingPublicKey
// Il2CppName: GetCorrespondingPublicKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters* (*)(Org::BouncyCastle::Crypto::Parameters::ECPrivateKeyParameters*)>(&ECKeyPairGenerator::GetCorrespondingPublicKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECKeyPairGenerator*), "GetCorrespondingPublicKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Parameters::ECPrivateKeyParameters*>()});
  }
};
// Writing MetadataGetter for method: ECKeyPairGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ECKeyPairGenerator::*)()>(&ECKeyPairGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECKeyPairGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ECKeyPairGenerator::*)()>(&ECKeyPairGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECKeyPairGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.Generators.Kdf2BytesGenerator
#include "Org/BouncyCastle/Crypto/Generators/Kdf2BytesGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Kdf2BytesGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Kdf2BytesGenerator::*)(Org::BouncyCastle::Crypto::IDigest*)>(&Kdf2BytesGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Kdf2BytesGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Kdf2BytesGenerator::*)(Org::BouncyCastle::Crypto::IDigest*)>(&Kdf2BytesGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Kdf2BytesGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.PbeParametersGenerator
#include "Org/BouncyCastle/Crypto/PbeParametersGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.PbeParametersGenerator.Init
void Org::BouncyCastle::Crypto::PbeParametersGenerator::Init(::Array<uint8_t>* password, ::Array<uint8_t>* salt, int iterationCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::PbeParametersGenerator::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, password, salt, iterationCount);
}
// Autogenerated method: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::PbeParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::PbeParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::PbeParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize, int ivSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::PbeParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize), ::il2cpp_utils::ExtractType(ivSize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize, ivSize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::PbeParametersGenerator::GenerateDerivedMacParameters(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::PbeParametersGenerator::GenerateDerivedMacParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedMacParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, keySize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes
::Array<uint8_t>* Org::BouncyCastle::Crypto::PbeParametersGenerator::Pkcs5PasswordToBytes(::Array<::Il2CppChar>* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::PbeParametersGenerator::Pkcs5PasswordToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto", "PbeParametersGenerator", "Pkcs5PasswordToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password);
}
// Autogenerated method: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes
::Array<uint8_t>* Org::BouncyCastle::Crypto::PbeParametersGenerator::Pkcs12PasswordToBytes(::Array<::Il2CppChar>* password, bool wrongPkcs12Zero) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::PbeParametersGenerator::Pkcs12PasswordToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto", "PbeParametersGenerator", "Pkcs12PasswordToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(wrongPkcs12Zero)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password, wrongPkcs12Zero);
}
// Writing MetadataGetter for method: PbeParametersGenerator::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PbeParametersGenerator::*)(::Array<uint8_t>*, ::Array<uint8_t>*, int)>(&PbeParametersGenerator::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PbeParametersGenerator*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PbeParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (PbeParametersGenerator::*)(::Il2CppString*, int)>(&PbeParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PbeParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PbeParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (PbeParametersGenerator::*)(::Il2CppString*, int, int)>(&PbeParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PbeParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PbeParametersGenerator::GenerateDerivedMacParameters
// Il2CppName: GenerateDerivedMacParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (PbeParametersGenerator::*)(int)>(&PbeParametersGenerator::GenerateDerivedMacParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PbeParametersGenerator*), "GenerateDerivedMacParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PbeParametersGenerator::Pkcs5PasswordToBytes
// Il2CppName: Pkcs5PasswordToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<::Il2CppChar>*)>(&PbeParametersGenerator::Pkcs5PasswordToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PbeParametersGenerator*), "Pkcs5PasswordToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>()});
  }
};
// Writing MetadataGetter for method: PbeParametersGenerator::Pkcs12PasswordToBytes
// Il2CppName: Pkcs12PasswordToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<::Il2CppChar>*, bool)>(&PbeParametersGenerator::Pkcs12PasswordToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PbeParametersGenerator*), "Pkcs12PasswordToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PbeParametersGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PbeParametersGenerator::*)()>(&PbeParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PbeParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PbeParametersGenerator::*)()>(&PbeParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PbeParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator
#include "Org/BouncyCastle/Crypto/Generators/OpenSslPbeParametersGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.Init
void Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::Init(::Array<uint8_t>* password, ::Array<uint8_t>* salt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(salt)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, password, salt);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.GenerateDerivedKey
::Array<uint8_t>* Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::GenerateDerivedKey(int bytesNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::GenerateDerivedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytesNeeded)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, bytesNeeded);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.Init
void Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::Init(::Array<uint8_t>* password, ::Array<uint8_t>* salt, int iterationCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, password, salt, iterationCount);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize, int ivSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize), ::il2cpp_utils::ExtractType(ivSize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize, ivSize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.GenerateDerivedMacParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::GenerateDerivedMacParameters(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::OpenSslPbeParametersGenerator::GenerateDerivedMacParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedMacParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, keySize);
}
// Writing MetadataGetter for method: OpenSslPbeParametersGenerator::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OpenSslPbeParametersGenerator::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&OpenSslPbeParametersGenerator::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OpenSslPbeParametersGenerator*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: OpenSslPbeParametersGenerator::GenerateDerivedKey
// Il2CppName: GenerateDerivedKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (OpenSslPbeParametersGenerator::*)(int)>(&OpenSslPbeParametersGenerator::GenerateDerivedKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OpenSslPbeParametersGenerator*), "GenerateDerivedKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: OpenSslPbeParametersGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OpenSslPbeParametersGenerator::*)()>(&OpenSslPbeParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OpenSslPbeParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OpenSslPbeParametersGenerator::*)()>(&OpenSslPbeParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OpenSslPbeParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OpenSslPbeParametersGenerator::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OpenSslPbeParametersGenerator::*)(::Array<uint8_t>*, ::Array<uint8_t>*, int)>(&OpenSslPbeParametersGenerator::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OpenSslPbeParametersGenerator*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: OpenSslPbeParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (OpenSslPbeParametersGenerator::*)(::Il2CppString*, int)>(&OpenSslPbeParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OpenSslPbeParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: OpenSslPbeParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (OpenSslPbeParametersGenerator::*)(::Il2CppString*, int, int)>(&OpenSslPbeParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OpenSslPbeParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: OpenSslPbeParametersGenerator::GenerateDerivedMacParameters
// Il2CppName: GenerateDerivedMacParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (OpenSslPbeParametersGenerator::*)(int)>(&OpenSslPbeParametersGenerator::GenerateDerivedMacParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OpenSslPbeParametersGenerator*), "GenerateDerivedMacParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator
#include "Org/BouncyCastle/Crypto/Generators/Pkcs12ParametersGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.Adjust
void Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::Adjust(::Array<uint8_t>* a, int aOff, ::Array<uint8_t>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::Adjust");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adjust", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(aOff), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, aOff, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.GenerateDerivedKey
::Array<uint8_t>* Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::GenerateDerivedKey(int idByte, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::GenerateDerivedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idByte), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, idByte, n);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize, int ivSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize), ::il2cpp_utils::ExtractType(ivSize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize, ivSize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.GenerateDerivedMacParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::GenerateDerivedMacParameters(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs12ParametersGenerator::GenerateDerivedMacParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedMacParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, keySize);
}
// Writing MetadataGetter for method: Pkcs12ParametersGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs12ParametersGenerator::*)(Org::BouncyCastle::Crypto::IDigest*)>(&Pkcs12ParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs12ParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs12ParametersGenerator::*)(Org::BouncyCastle::Crypto::IDigest*)>(&Pkcs12ParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs12ParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
// Writing MetadataGetter for method: Pkcs12ParametersGenerator::Adjust
// Il2CppName: Adjust
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs12ParametersGenerator::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*)>(&Pkcs12ParametersGenerator::Adjust)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs12ParametersGenerator*), "Adjust", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Pkcs12ParametersGenerator::GenerateDerivedKey
// Il2CppName: GenerateDerivedKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Pkcs12ParametersGenerator::*)(int, int)>(&Pkcs12ParametersGenerator::GenerateDerivedKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs12ParametersGenerator*), "GenerateDerivedKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs12ParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (Pkcs12ParametersGenerator::*)(::Il2CppString*, int)>(&Pkcs12ParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs12ParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs12ParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (Pkcs12ParametersGenerator::*)(::Il2CppString*, int, int)>(&Pkcs12ParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs12ParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs12ParametersGenerator::GenerateDerivedMacParameters
// Il2CppName: GenerateDerivedMacParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (Pkcs12ParametersGenerator::*)(int)>(&Pkcs12ParametersGenerator::GenerateDerivedMacParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs12ParametersGenerator*), "GenerateDerivedMacParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator
#include "Org/BouncyCastle/Crypto/Generators/Pkcs5S1ParametersGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator.GenerateDerivedKey
::Array<uint8_t>* Org::BouncyCastle::Crypto::Generators::Pkcs5S1ParametersGenerator::GenerateDerivedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs5S1ParametersGenerator::GenerateDerivedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::Pkcs5S1ParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs5S1ParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::Pkcs5S1ParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize, int ivSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs5S1ParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize), ::il2cpp_utils::ExtractType(ivSize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize, ivSize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator.GenerateDerivedMacParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::Pkcs5S1ParametersGenerator::GenerateDerivedMacParameters(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs5S1ParametersGenerator::GenerateDerivedMacParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedMacParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, keySize);
}
// Writing MetadataGetter for method: Pkcs5S1ParametersGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs5S1ParametersGenerator::*)(Org::BouncyCastle::Crypto::IDigest*)>(&Pkcs5S1ParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S1ParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs5S1ParametersGenerator::*)(Org::BouncyCastle::Crypto::IDigest*)>(&Pkcs5S1ParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S1ParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
// Writing MetadataGetter for method: Pkcs5S1ParametersGenerator::GenerateDerivedKey
// Il2CppName: GenerateDerivedKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Pkcs5S1ParametersGenerator::*)()>(&Pkcs5S1ParametersGenerator::GenerateDerivedKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S1ParametersGenerator*), "GenerateDerivedKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pkcs5S1ParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (Pkcs5S1ParametersGenerator::*)(::Il2CppString*, int)>(&Pkcs5S1ParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S1ParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs5S1ParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (Pkcs5S1ParametersGenerator::*)(::Il2CppString*, int, int)>(&Pkcs5S1ParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S1ParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs5S1ParametersGenerator::GenerateDerivedMacParameters
// Il2CppName: GenerateDerivedMacParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (Pkcs5S1ParametersGenerator::*)(int)>(&Pkcs5S1ParametersGenerator::GenerateDerivedMacParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S1ParametersGenerator*), "GenerateDerivedMacParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator
#include "Org/BouncyCastle/Crypto/Generators/Pkcs5S2ParametersGenerator.hpp"
// Including type: Org.BouncyCastle.Crypto.IMac
#include "Org/BouncyCastle/Crypto/IMac.hpp"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator.F
void Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::F(::Array<uint8_t>* S, int c, ::Array<uint8_t>* iBuf, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(S), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(iBuf), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, S, c, iBuf, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator.GenerateDerivedKey
::Array<uint8_t>* Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::GenerateDerivedKey(int dkLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::GenerateDerivedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dkLen)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, dkLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator.GenerateDerivedParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::GenerateDerivedParameters(::Il2CppString* algorithm, int keySize, int ivSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::GenerateDerivedParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(keySize), ::il2cpp_utils::ExtractType(ivSize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, algorithm, keySize, ivSize);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator.GenerateDerivedMacParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::GenerateDerivedMacParameters(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Generators::Pkcs5S2ParametersGenerator::GenerateDerivedMacParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateDerivedMacParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::ICipherParameters*, false>(this, ___internal__method, keySize);
}
// Writing MetadataGetter for method: Pkcs5S2ParametersGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs5S2ParametersGenerator::*)(Org::BouncyCastle::Crypto::IDigest*)>(&Pkcs5S2ParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S2ParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs5S2ParametersGenerator::*)(Org::BouncyCastle::Crypto::IDigest*)>(&Pkcs5S2ParametersGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S2ParametersGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDigest*>()});
  }
};
// Writing MetadataGetter for method: Pkcs5S2ParametersGenerator::F
// Il2CppName: F
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pkcs5S2ParametersGenerator::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, ::Array<uint8_t>*, int)>(&Pkcs5S2ParametersGenerator::F)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S2ParametersGenerator*), "F", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs5S2ParametersGenerator::GenerateDerivedKey
// Il2CppName: GenerateDerivedKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Pkcs5S2ParametersGenerator::*)(int)>(&Pkcs5S2ParametersGenerator::GenerateDerivedKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S2ParametersGenerator*), "GenerateDerivedKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs5S2ParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (Pkcs5S2ParametersGenerator::*)(::Il2CppString*, int)>(&Pkcs5S2ParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S2ParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs5S2ParametersGenerator::GenerateDerivedParameters
// Il2CppName: GenerateDerivedParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (Pkcs5S2ParametersGenerator::*)(::Il2CppString*, int, int)>(&Pkcs5S2ParametersGenerator::GenerateDerivedParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S2ParametersGenerator*), "GenerateDerivedParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Pkcs5S2ParametersGenerator::GenerateDerivedMacParameters
// Il2CppName: GenerateDerivedMacParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::ICipherParameters* (Pkcs5S2ParametersGenerator::*)(int)>(&Pkcs5S2ParametersGenerator::GenerateDerivedMacParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pkcs5S2ParametersGenerator*), "GenerateDerivedMacParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IMac
#include "Org/BouncyCastle/Crypto/IMac.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.IMac.Init
void Org::BouncyCastle::Crypto::IMac::Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IMac::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IMac.GetMacSize
int Org::BouncyCastle::Crypto::IMac::GetMacSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IMac::GetMacSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMacSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IMac.Update
void Org::BouncyCastle::Crypto::IMac::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IMac::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IMac.BlockUpdate
void Org::BouncyCastle::Crypto::IMac::BlockUpdate(::Array<uint8_t>* input, int inOff, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IMac::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IMac.DoFinal
int Org::BouncyCastle::Crypto::IMac::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IMac::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IMac.Reset
void Org::BouncyCastle::Crypto::IMac::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IMac::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IMac::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMac::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&IMac::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMac*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: IMac::GetMacSize
// Il2CppName: GetMacSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IMac::*)()>(&IMac::GetMacSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMac*), "GetMacSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMac::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMac::*)(uint8_t)>(&IMac::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMac*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: IMac::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMac::*)(::Array<uint8_t>*, int, int)>(&IMac::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMac*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IMac::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IMac::*)(::Array<uint8_t>*, int)>(&IMac::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMac*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IMac::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMac::*)()>(&IMac::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMac*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac
#include "Org/BouncyCastle/Crypto/Macs/CbcBlockCipherMac.hpp"
// Including type: Org.BouncyCastle.Crypto.IBlockCipher
#include "Org/BouncyCastle/Crypto/IBlockCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding
#include "Org/BouncyCastle/Crypto/Paddings/IBlockCipherPadding.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.Init
void Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.GetMacSize
int Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::GetMacSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::GetMacSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMacSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.Update
void Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.BlockUpdate
void Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::BlockUpdate(::Array<uint8_t>* input, int inOff, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.DoFinal
int Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.Reset
void Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CbcBlockCipherMac::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CbcBlockCipherMac::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*)>(&CbcBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*)>(&CbcBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>()});
  }
};
// Writing MetadataGetter for method: CbcBlockCipherMac::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int)>(&CbcBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int)>(&CbcBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CbcBlockCipherMac::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int, Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*)>(&CbcBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int, Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*)>(&CbcBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*>()});
  }
};
// Writing MetadataGetter for method: CbcBlockCipherMac::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&CbcBlockCipherMac::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: CbcBlockCipherMac::GetMacSize
// Il2CppName: GetMacSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CbcBlockCipherMac::*)()>(&CbcBlockCipherMac::GetMacSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), "GetMacSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CbcBlockCipherMac::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)(uint8_t)>(&CbcBlockCipherMac::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: CbcBlockCipherMac::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)(::Array<uint8_t>*, int, int)>(&CbcBlockCipherMac::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CbcBlockCipherMac::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CbcBlockCipherMac::*)(::Array<uint8_t>*, int)>(&CbcBlockCipherMac::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CbcBlockCipherMac::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CbcBlockCipherMac::*)()>(&CbcBlockCipherMac::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CbcBlockCipherMac*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher
#include "Org/BouncyCastle/Crypto/Macs/MacCFBBlockCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.Init
void Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forEncryption), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forEncryption, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::get_IsPartialBlockOkay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::get_IsPartialBlockOkay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPartialBlockOkay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.GetBlockSize
int Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::GetBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::GetBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.ProcessBlock
int Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, input, inOff, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.Reset
void Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.GetMacBlock
void Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::GetMacBlock(::Array<uint8_t>* mac) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::MacCFBBlockCipher::GetMacBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMacBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mac)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mac);
}
// Writing MetadataGetter for method: MacCFBBlockCipher::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MacCFBBlockCipher::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int)>(&MacCFBBlockCipher::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacCFBBlockCipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MacCFBBlockCipher::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int)>(&MacCFBBlockCipher::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacCFBBlockCipher*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MacCFBBlockCipher::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MacCFBBlockCipher::*)(bool, Org::BouncyCastle::Crypto::ICipherParameters*)>(&MacCFBBlockCipher::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacCFBBlockCipher*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: MacCFBBlockCipher::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MacCFBBlockCipher::*)()>(&MacCFBBlockCipher::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacCFBBlockCipher*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MacCFBBlockCipher::get_IsPartialBlockOkay
// Il2CppName: get_IsPartialBlockOkay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MacCFBBlockCipher::*)()>(&MacCFBBlockCipher::get_IsPartialBlockOkay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacCFBBlockCipher*), "get_IsPartialBlockOkay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MacCFBBlockCipher::GetBlockSize
// Il2CppName: GetBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MacCFBBlockCipher::*)()>(&MacCFBBlockCipher::GetBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacCFBBlockCipher*), "GetBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MacCFBBlockCipher::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MacCFBBlockCipher::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&MacCFBBlockCipher::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacCFBBlockCipher*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MacCFBBlockCipher::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MacCFBBlockCipher::*)()>(&MacCFBBlockCipher::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacCFBBlockCipher*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MacCFBBlockCipher::GetMacBlock
// Il2CppName: GetMacBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MacCFBBlockCipher::*)(::Array<uint8_t>*)>(&MacCFBBlockCipher::GetMacBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacCFBBlockCipher*), "GetMacBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac
#include "Org/BouncyCastle/Crypto/Macs/CfbBlockCipherMac.hpp"
// Including type: Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher
#include "Org/BouncyCastle/Crypto/Macs/MacCFBBlockCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding
#include "Org/BouncyCastle/Crypto/Paddings/IBlockCipherPadding.hpp"
// Including type: Org.BouncyCastle.Crypto.IBlockCipher
#include "Org/BouncyCastle/Crypto/IBlockCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.Init
void Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.GetMacSize
int Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::GetMacSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::GetMacSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMacSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.Update
void Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.BlockUpdate
void Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::BlockUpdate(::Array<uint8_t>* input, int inOff, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.DoFinal
int Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.Reset
void Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CfbBlockCipherMac::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CfbBlockCipherMac::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CfbBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*)>(&CfbBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CfbBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*)>(&CfbBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>()});
  }
};
// Writing MetadataGetter for method: CfbBlockCipherMac::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CfbBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int, int, Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*)>(&CfbBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CfbBlockCipherMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int, int, Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*)>(&CfbBlockCipherMac::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*>()});
  }
};
// Writing MetadataGetter for method: CfbBlockCipherMac::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CfbBlockCipherMac::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&CfbBlockCipherMac::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: CfbBlockCipherMac::GetMacSize
// Il2CppName: GetMacSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CfbBlockCipherMac::*)()>(&CfbBlockCipherMac::GetMacSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), "GetMacSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CfbBlockCipherMac::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CfbBlockCipherMac::*)(uint8_t)>(&CfbBlockCipherMac::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: CfbBlockCipherMac::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CfbBlockCipherMac::*)(::Array<uint8_t>*, int, int)>(&CfbBlockCipherMac::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CfbBlockCipherMac::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CfbBlockCipherMac::*)(::Array<uint8_t>*, int)>(&CfbBlockCipherMac::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CfbBlockCipherMac::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CfbBlockCipherMac::*)()>(&CfbBlockCipherMac::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CfbBlockCipherMac*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Macs.CMac
#include "Org/BouncyCastle/Crypto/Macs/CMac.hpp"
// Including type: Org.BouncyCastle.Crypto.IBlockCipher
#include "Org/BouncyCastle/Crypto/IBlockCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CMac.ShiftLeft
int Org::BouncyCastle::Crypto::Macs::CMac::ShiftLeft(::Array<uint8_t>* block, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CMac::ShiftLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Macs", "CMac", "ShiftLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, block, output);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CMac.DoubleLu
::Array<uint8_t>* Org::BouncyCastle::Crypto::Macs::CMac::DoubleLu(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CMac::DoubleLu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Macs", "CMac", "DoubleLu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CMac.Init
void Org::BouncyCastle::Crypto::Macs::CMac::Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CMac::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CMac.GetMacSize
int Org::BouncyCastle::Crypto::Macs::CMac::GetMacSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CMac::GetMacSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMacSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CMac.Update
void Org::BouncyCastle::Crypto::Macs::CMac::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CMac::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CMac.BlockUpdate
void Org::BouncyCastle::Crypto::Macs::CMac::BlockUpdate(::Array<uint8_t>* inBytes, int inOff, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CMac::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inBytes, inOff, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CMac.DoFinal
int Org::BouncyCastle::Crypto::Macs::CMac::DoFinal(::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CMac::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.CMac.Reset
void Org::BouncyCastle::Crypto::Macs::CMac::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::CMac::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CMac::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*)>(&CMac::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*)>(&CMac::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>()});
  }
};
// Writing MetadataGetter for method: CMac::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int)>(&CMac::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CMac::*)(Org::BouncyCastle::Crypto::IBlockCipher*, int)>(&CMac::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IBlockCipher*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CMac::ShiftLeft
// Il2CppName: ShiftLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&CMac::ShiftLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), "ShiftLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: CMac::DoubleLu
// Il2CppName: DoubleLu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<uint8_t>*)>(&CMac::DoubleLu)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), "DoubleLu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: CMac::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CMac::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&CMac::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: CMac::GetMacSize
// Il2CppName: GetMacSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CMac::*)()>(&CMac::GetMacSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), "GetMacSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CMac::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CMac::*)(uint8_t)>(&CMac::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: CMac::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CMac::*)(::Array<uint8_t>*, int, int)>(&CMac::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CMac::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CMac::*)(::Array<uint8_t>*, int)>(&CMac::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CMac::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CMac::*)()>(&CMac::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CMac*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Macs.Gost28147Mac
#include "Org/BouncyCastle/Crypto/Macs/Gost28147Mac.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.GenerateWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Macs::Gost28147Mac::GenerateWorkingKey(::Array<uint8_t>* userKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::GenerateWorkingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Macs", "Gost28147Mac", "GenerateWorkingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userKey)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userKey);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.Init
void Org::BouncyCastle::Crypto::Macs::Gost28147Mac::Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.GetMacSize
int Org::BouncyCastle::Crypto::Macs::Gost28147Mac::GetMacSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::GetMacSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMacSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.gost28147_mainStep
int Org::BouncyCastle::Crypto::Macs::Gost28147Mac::gost28147_mainStep(int n1, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::gost28147_mainStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "gost28147_mainStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n1), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, n1, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.gost28147MacFunc
void Org::BouncyCastle::Crypto::Macs::Gost28147Mac::gost28147MacFunc(::Array<int>* workingKey, ::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::gost28147MacFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "gost28147MacFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(workingKey), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, workingKey, input, inOff, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.bytesToint
int Org::BouncyCastle::Crypto::Macs::Gost28147Mac::bytesToint(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::bytesToint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Macs", "Gost28147Mac", "bytesToint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.intTobytes
void Org::BouncyCastle::Crypto::Macs::Gost28147Mac::intTobytes(int num, ::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::intTobytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Macs", "Gost28147Mac", "intTobytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, num, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.CM5func
::Array<uint8_t>* Org::BouncyCastle::Crypto::Macs::Gost28147Mac::CM5func(::Array<uint8_t>* buf, int bufOff, ::Array<uint8_t>* mac) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::CM5func");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Macs", "Gost28147Mac", "CM5func", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(bufOff), ::il2cpp_utils::ExtractType(mac)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buf, bufOff, mac);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.Update
void Org::BouncyCastle::Crypto::Macs::Gost28147Mac::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.BlockUpdate
void Org::BouncyCastle::Crypto::Macs::Gost28147Mac::BlockUpdate(::Array<uint8_t>* input, int inOff, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.DoFinal
int Org::BouncyCastle::Crypto::Macs::Gost28147Mac::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Macs.Gost28147Mac.Reset
void Org::BouncyCastle::Crypto::Macs::Gost28147Mac::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Macs::Gost28147Mac::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Gost28147Mac::GenerateWorkingKey
// Il2CppName: GenerateWorkingKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (*)(::Array<uint8_t>*)>(&Gost28147Mac::GenerateWorkingKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "GenerateWorkingKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Mac::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&Gost28147Mac::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::GetMacSize
// Il2CppName: GetMacSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost28147Mac::*)()>(&Gost28147Mac::GetMacSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "GetMacSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::gost28147_mainStep
// Il2CppName: gost28147_mainStep
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost28147Mac::*)(int, int)>(&Gost28147Mac::gost28147_mainStep)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "gost28147_mainStep", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::gost28147MacFunc
// Il2CppName: gost28147MacFunc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Mac::*)(::Array<int>*, ::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&Gost28147Mac::gost28147MacFunc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "gost28147MacFunc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::bytesToint
// Il2CppName: bytesToint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int)>(&Gost28147Mac::bytesToint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "bytesToint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::intTobytes
// Il2CppName: intTobytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<uint8_t>*, int)>(&Gost28147Mac::intTobytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "intTobytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::CM5func
// Il2CppName: CM5func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<uint8_t>*, int, ::Array<uint8_t>*)>(&Gost28147Mac::CM5func)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "CM5func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Mac::*)(uint8_t)>(&Gost28147Mac::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Mac::*)(::Array<uint8_t>*, int, int)>(&Gost28147Mac::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost28147Mac::*)(::Array<uint8_t>*, int)>(&Gost28147Mac::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Mac::*)()>(&Gost28147Mac::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost28147Mac::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Mac::*)()>(&Gost28147Mac::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost28147Mac::*)()>(&Gost28147Mac::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost28147Mac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
