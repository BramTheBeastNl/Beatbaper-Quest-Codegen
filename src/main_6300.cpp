// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_28_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_28_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Handedness
#include "GlobalNamespace/OVRPlugin_Handedness.hpp"
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace/OVRPlugin_LayerDesc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_28_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_28_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_28_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_28_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_28_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_GetDominantHand
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_GetDominantHand(GlobalNamespace::OVRPlugin::Handedness& dominantHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_GetDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Handedness&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dominantHand);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_SendEvent
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_SendEvent(::Il2CppString* name, ::Il2CppString* param) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, param);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_EnqueueSetupLayer2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_EnqueueSetupLayer2(GlobalNamespace::OVRPlugin::LayerDesc& desc, int compositionDepth, System::IntPtr layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_EnqueueSetupLayer2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_EnqueueSetupLayer2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc), ::il2cpp_utils::ExtractType(compositionDepth), ::il2cpp_utils::ExtractType(layerId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, desc, compositionDepth, layerId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_29_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_29_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_29_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_29_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_29_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_29_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_29_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_GetLayerAndroidSurfaceObject
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject(int layerId, System::IntPtr& surfaceObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_GetLayerAndroidSurfaceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(surfaceObject)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerId, surfaceObject);
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_SetHeadPoseModifier
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_SetHeadPoseModifier(GlobalNamespace::OVRPlugin::Quatf& relativeRotation, GlobalNamespace::OVRPlugin::Vector3f& relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_SetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_SetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeRotation), ::il2cpp_utils::ExtractType(relativeTranslation)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, relativeRotation, relativeTranslation);
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_GetHeadPoseModifier
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetHeadPoseModifier(GlobalNamespace::OVRPlugin::Quatf& relativeRotation, GlobalNamespace::OVRPlugin::Vector3f& relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_GetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Quatf&>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Vector3f&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, relativeRotation, relativeTranslation);
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_GetNodePoseStateRaw
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetNodePoseStateRaw(GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::PoseStatef& nodePoseState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetNodePoseStateRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_GetNodePoseStateRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::PoseStatef&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stepId, frameIndex, nodeId, nodePoseState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_30_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_30_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/PerfMetrics
#include "GlobalNamespace/OVRPlugin_PerfMetrics.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_30_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_30_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_30_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_30_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_30_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetCurrentTrackingTransformPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose(GlobalNamespace::OVRPlugin::Posef& trackingTransformPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Posef&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingTransformPose);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetTrackingTransformRawPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetTrackingTransformRawPose(GlobalNamespace::OVRPlugin::Posef& trackingTransformRawPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetTrackingTransformRawPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetTrackingTransformRawPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Posef&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingTransformRawPose);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_SendEvent2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_SendEvent2(::Il2CppString* name, ::Il2CppString* param, ::Il2CppString* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_SendEvent2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_SendEvent2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_IsPerfMetricsSupported
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_IsPerfMetricsSupported(GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, GlobalNamespace::OVRPlugin::Bool& isSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_IsPerfMetricsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_IsPerfMetricsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, perfMetrics, isSupported);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetPerfMetricsFloat
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsFloat(GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, float& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetPerfMetricsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, perfMetrics, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetPerfMetricsInt
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsInt(GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetPerfMetricsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, perfMetrics, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_31_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_31_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_31_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_31_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_31_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_31_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_31_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_31_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_31_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_31_0.ovrp_GetTimeInSeconds
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_GetTimeInSeconds(double& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_GetTimeInSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_31_0", "ovrp_GetTimeInSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_31_0.ovrp_SetColorScaleAndOffset
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_SetColorScaleAndOffset(UnityEngine::Vector4 colorScale, UnityEngine::Vector4 colorOffset, GlobalNamespace::OVRPlugin::Bool applyToAllLayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_31_0", "ovrp_SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset), ::il2cpp_utils::ExtractType(applyToAllLayers)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorScale, colorOffset, applyToAllLayers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_32_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_32_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_32_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_32_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_32_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_32_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_32_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_32_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_32_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_32_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_32_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_32_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_32_0.ovrp_AddCustomMetadata
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_32_0::ovrp_AddCustomMetadata(::Il2CppString* name, ::Il2CppString* param) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_32_0::ovrp_AddCustomMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_32_0", "ovrp_AddCustomMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, param);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_34_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_34_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/TextureRectMatrixf
#include "GlobalNamespace/OVRPlugin_TextureRectMatrixf.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_34_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_34_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_34_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_34_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_34_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_34_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_34_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_34_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_34_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_34_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_34_0.ovrp_EnqueueSubmitLayer2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_34_0::ovrp_EnqueueSubmitLayer2(uint flags, System::IntPtr textureLeft, System::IntPtr textureRight, int layerId, int frameIndex, GlobalNamespace::OVRPlugin::Posef& pose, GlobalNamespace::OVRPlugin::Vector3f& scale, int layerIndex, GlobalNamespace::OVRPlugin::Bool overrideTextureRectMatrix, GlobalNamespace::OVRPlugin::TextureRectMatrixf& textureRectMatrix, GlobalNamespace::OVRPlugin::Bool overridePerLayerColorScaleAndOffset, UnityEngine::Vector4& colorScale, UnityEngine::Vector4& colorOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_34_0::ovrp_EnqueueSubmitLayer2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_34_0", "ovrp_EnqueueSubmitLayer2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(textureLeft), ::il2cpp_utils::ExtractType(textureRight), ::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(overrideTextureRectMatrix), ::il2cpp_utils::ExtractType(textureRectMatrix), ::il2cpp_utils::ExtractType(overridePerLayerColorScaleAndOffset), ::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex, overrideTextureRectMatrix, textureRectMatrix, overridePerLayerColorScaleAndOffset, colorScale, colorOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_35_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_35_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_35_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_35_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_35_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_35_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_35_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_35_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_35_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_35_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_35_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_35_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_36_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_36_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_36_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_36_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_36_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_36_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_36_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_36_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_36_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_36_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_36_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_36_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_37_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_37_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_37_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_37_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_37_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_37_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_37_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_37_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_37_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_37_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_37_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_37_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_38_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_38_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_38_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_38_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_38_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_38_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_38_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetTrackingTransformRelativePose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose(GlobalNamespace::OVRPlugin::Posef& trackingTransformRelativePose, GlobalNamespace::OVRPlugin::TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetTrackingTransformRelativePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingTransformRelativePose), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingTransformRelativePose, trackingOrigin);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_Initialize
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_Shutdown
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetInitialized
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetInitialized(GlobalNamespace::OVRPlugin::Bool& initialized) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, initialized);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_Update
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcActivationMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcActivationMode(GlobalNamespace::OVRPlugin::Media::MrcActivationMode& activationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Media::MrcActivationMode&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, activationMode);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcActivationMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcActivationMode(GlobalNamespace::OVRPlugin::Media::MrcActivationMode activationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activationMode)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, activationMode);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_IsMrcEnabled
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcEnabled(GlobalNamespace::OVRPlugin::Bool& mrcEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_IsMrcEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mrcEnabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_IsMrcActivated
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcActivated(GlobalNamespace::OVRPlugin::Bool& mrcActivated) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_IsMrcActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mrcActivated);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_UseMrcDebugCamera
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera(GlobalNamespace::OVRPlugin::Bool& useMrcDebugCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_UseMrcDebugCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, useMrcDebugCamera);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcInputVideoBufferType
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType(GlobalNamespace::OVRPlugin::Media::InputVideoBufferType inputVideoBufferType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputVideoBufferType)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputVideoBufferType);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcInputVideoBufferType
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType(GlobalNamespace::OVRPlugin::Media::InputVideoBufferType& inputVideoBufferType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputVideoBufferType)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputVideoBufferType);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcFrameSize
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameSize(int frameWidth, int frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameWidth), ::il2cpp_utils::ExtractType(frameHeight)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameWidth, frameHeight);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcFrameSize
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameSize(int& frameWidth, int& frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameWidth), ::il2cpp_utils::ExtractType(frameHeight)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameWidth, frameHeight);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcAudioSampleRate
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate(int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sampleRate);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcAudioSampleRate
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate(int& sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sampleRate);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcFrameImageFlipped
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped(GlobalNamespace::OVRPlugin::Bool flipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flipped)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flipped);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcFrameImageFlipped
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped(GlobalNamespace::OVRPlugin::Bool& flipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flipped)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flipped);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_EncodeMrcFrame
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrame(System::IntPtr rawBuffer, System::IntPtr audioDataPtr, int audioDataLen, int audioChannels, double timestamp, int& outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_EncodeMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawBuffer), ::il2cpp_utils::ExtractType(audioDataPtr), ::il2cpp_utils::ExtractType(audioDataLen), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, outSyncId);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_EncodeMrcFrameWithDualTextures
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures(System::IntPtr backgroundTextureHandle, System::IntPtr foregroundTextureHandle, System::IntPtr audioData, int audioDataLen, int audioChannels, double timestamp, int& outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_EncodeMrcFrameWithDualTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backgroundTextureHandle), ::il2cpp_utils::ExtractType(foregroundTextureHandle), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLen), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen, audioChannels, timestamp, outSyncId);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SyncMrcFrame
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SyncMrcFrame(int syncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SyncMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SyncMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, syncId);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_SetDeveloperMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_SetDeveloperMode(GlobalNamespace::OVRPlugin::Bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_SetDeveloperMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_SetDeveloperMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, active);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetNodeOrientationValid
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodeOrientationValid(GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::Bool& nodeOrientationValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodeOrientationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetNodeOrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(nodeOrientationValid)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId, nodeOrientationValid);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetNodePositionValid
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodePositionValid(GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::Bool& nodePositionValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodePositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetNodePositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(nodePositionValid)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId, nodePositionValid);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_39_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_39_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_39_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_39_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_39_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_39_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_39_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_39_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_39_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_39_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_39_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_39_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_40_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_40_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_40_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_40_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_40_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_40_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_40_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_40_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_40_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_40_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_40_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_40_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_41_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_41_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_41_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_41_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_41_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_41_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_41_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_41_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_41_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_41_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_41_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_41_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_42_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_42_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_42_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_42_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_42_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_42_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_42_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_42_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_42_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_42_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_42_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_42_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_42_0.ovrp_GetAdaptiveGpuPerformanceScale2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2(float& adaptiveGpuPerformanceScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_42_0", "ovrp_GetAdaptiveGpuPerformanceScale2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adaptiveGpuPerformanceScale)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, adaptiveGpuPerformanceScale);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_43_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_43_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_43_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_43_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_43_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_43_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_43_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_43_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_43_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_43_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_43_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_43_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_44_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_44_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/Hand
#include "GlobalNamespace/OVRPlugin_Hand.hpp"
// Including type: OVRPlugin/MeshType
#include "GlobalNamespace/OVRPlugin_MeshType.hpp"
// Including type: OVRPlugin/Fovf
#include "GlobalNamespace/OVRPlugin_Fovf.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_44_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_44_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_44_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_44_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_44_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetHandTrackingEnabled
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandTrackingEnabled(GlobalNamespace::OVRPlugin::Bool& handTrackingEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetHandTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handTrackingEnabled)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handTrackingEnabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetHandState
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandState(GlobalNamespace::OVRPlugin::Step stepId, GlobalNamespace::OVRPlugin::Hand hand, GlobalNamespace::OVRPlugin::HandStateInternal& handState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetHandState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::HandStateInternal&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stepId, hand, handState);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetSkeleton
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetSkeleton(GlobalNamespace::OVRPlugin::SkeletonType skeletonType, GlobalNamespace::OVRPlugin::Skeleton& skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeletonType), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Skeleton&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, skeletonType, skeleton);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetMesh
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetMesh(GlobalNamespace::OVRPlugin::MeshType meshType, System::IntPtr meshPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(meshPtr)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, meshType, meshPtr);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_OverrideExternalCameraFov
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraFov(int cameraId, GlobalNamespace::OVRPlugin::Bool useOverriddenFov, GlobalNamespace::OVRPlugin::Fovf& fov) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_OverrideExternalCameraFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractType(useOverriddenFov), ::il2cpp_utils::ExtractType(fov)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, useOverriddenFov, fov);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraFov
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov(int cameraId, GlobalNamespace::OVRPlugin::Bool& useOverriddenFov) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetUseOverriddenExternalCameraFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, useOverriddenFov);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_OverrideExternalCameraStaticPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose(int cameraId, GlobalNamespace::OVRPlugin::Bool useOverriddenPose, GlobalNamespace::OVRPlugin::Posef& poseInStageOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_OverrideExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractType(useOverriddenPose), ::il2cpp_utils::ExtractType(poseInStageOrigin)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, useOverriddenPose, poseInStageOrigin);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraStaticPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose(int cameraId, GlobalNamespace::OVRPlugin::Bool& useOverriddenStaticPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetUseOverriddenExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, useOverriddenStaticPose);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_ResetDefaultExternalCamera
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_ResetDefaultExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_ResetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_ResetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_SetDefaultExternalCamera
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_SetDefaultExternalCamera(::Il2CppString* cameraName, GlobalNamespace::OVRPlugin::CameraIntrinsics& cameraIntrinsics, GlobalNamespace::OVRPlugin::CameraExtrinsics& cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_SetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_SetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraName), ::il2cpp_utils::ExtractType(cameraIntrinsics), ::il2cpp_utils::ExtractType(cameraExtrinsics)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetLocalTrackingSpaceRecenterCount
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetLocalTrackingSpaceRecenterCount(int& recenterCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetLocalTrackingSpaceRecenterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetLocalTrackingSpaceRecenterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recenterCount)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, recenterCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_45_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_45_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_45_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_45_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_45_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_45_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_45_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_45_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_45_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_45_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_45_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_45_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_45_0.ovrp_GetSystemHmd3DofModeEnabled
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled(GlobalNamespace::OVRPlugin::Bool& enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_45_0", "ovrp_GetSystemHmd3DofModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_45_0.ovrp_Media_SetAvailableQueueIndexVulkan
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_Media_SetAvailableQueueIndexVulkan(uint queueIndexVk) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_Media_SetAvailableQueueIndexVulkan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_45_0", "ovrp_Media_SetAvailableQueueIndexVulkan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queueIndexVk)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, queueIndexVk);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_46_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_46_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_46_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_46_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_46_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_46_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_46_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_46_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_46_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_46_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_46_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_46_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_46_0.ovrp_GetTiledMultiResDynamic
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_46_0::ovrp_GetTiledMultiResDynamic(GlobalNamespace::OVRPlugin::Bool& isDynamic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_46_0::ovrp_GetTiledMultiResDynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_46_0", "ovrp_GetTiledMultiResDynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isDynamic);
}
// Autogenerated method: OVRPlugin/OVRP_1_46_0.ovrp_SetTiledMultiResDynamic
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_46_0::ovrp_SetTiledMultiResDynamic(GlobalNamespace::OVRPlugin::Bool isDynamic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_46_0::ovrp_SetTiledMultiResDynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_46_0", "ovrp_SetTiledMultiResDynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDynamic)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isDynamic);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_47_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_47_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_47_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_47_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_47_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_47_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_47_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_47_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_47_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_47_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_47_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_47_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_48_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_48_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_48_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_48_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_48_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_48_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_48_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_48_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_48_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_48_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_48_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_48_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_48_0.ovrp_SetExternalCameraProperties
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_48_0::ovrp_SetExternalCameraProperties(::Il2CppString* cameraName, GlobalNamespace::OVRPlugin::CameraIntrinsics& cameraIntrinsics, GlobalNamespace::OVRPlugin::CameraExtrinsics& cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_48_0::ovrp_SetExternalCameraProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_48_0", "ovrp_SetExternalCameraProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraName), ::il2cpp_utils::ExtractType(cameraIntrinsics), ::il2cpp_utils::ExtractType(cameraExtrinsics)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_49_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_49_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/ColorSpace
#include "GlobalNamespace/OVRPlugin_ColorSpace.hpp"
// Including type: OVRPlugin/CameraAnchorType
#include "GlobalNamespace/OVRPlugin_CameraAnchorType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_49_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_49_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_49_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_49_0", "version", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OVRP_ANCHOR_NAME_SIZE
int GlobalNamespace::OVRPlugin::OVRP_1_49_0::_get_OVRP_ANCHOR_NAME_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::_get_OVRP_ANCHOR_NAME_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/OVRP_1_49_0", "OVRP_ANCHOR_NAME_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OVRP_ANCHOR_NAME_SIZE
void GlobalNamespace::OVRPlugin::OVRP_1_49_0::_set_OVRP_ANCHOR_NAME_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::_set_OVRP_ANCHOR_NAME_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_49_0", "OVRP_ANCHOR_NAME_SIZE", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_49_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_SetClientColorDesc
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_SetClientColorDesc(GlobalNamespace::OVRPlugin::ColorSpace colorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_SetClientColorDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_SetClientColorDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSpace)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorSpace);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_GetHmdColorDesc
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_GetHmdColorDesc(GlobalNamespace::OVRPlugin::ColorSpace& colorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_GetHmdColorDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_GetHmdColorDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSpace)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorSpace);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_EncodeMrcFrameWithPoseTime
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EncodeMrcFrameWithPoseTime(System::IntPtr rawBuffer, System::IntPtr audioDataPtr, int audioDataLen, int audioChannels, double timestamp, double poseTime, int& outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EncodeMrcFrameWithPoseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_EncodeMrcFrameWithPoseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawBuffer), ::il2cpp_utils::ExtractType(audioDataPtr), ::il2cpp_utils::ExtractType(audioDataLen), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(poseTime), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, poseTime, outSyncId);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime(System::IntPtr backgroundTextureHandle, System::IntPtr foregroundTextureHandle, System::IntPtr audioData, int audioDataLen, int audioChannels, double timestamp, double poseTime, int& outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backgroundTextureHandle), ::il2cpp_utils::ExtractType(foregroundTextureHandle), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLen), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(poseTime), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen, audioChannels, timestamp, poseTime, outSyncId);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_SetHeadsetControllerPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetHeadsetControllerPose(GlobalNamespace::OVRPlugin::Posef headsetPose, GlobalNamespace::OVRPlugin::Posef leftControllerPose, GlobalNamespace::OVRPlugin::Posef rightControllerPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetHeadsetControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_SetHeadsetControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headsetPose), ::il2cpp_utils::ExtractType(leftControllerPose), ::il2cpp_utils::ExtractType(rightControllerPose)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, headsetPose, leftControllerPose, rightControllerPose);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_EnumerateCameraAnchorHandles
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EnumerateCameraAnchorHandles(int& anchorCount, System::IntPtr& CameraAnchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EnumerateCameraAnchorHandles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_EnumerateCameraAnchorHandles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorCount), ::il2cpp_utils::ExtractType(CameraAnchorHandle)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorCount, CameraAnchorHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCurrentCameraAnchorHandle
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCurrentCameraAnchorHandle(System::IntPtr& anchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCurrentCameraAnchorHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCurrentCameraAnchorHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCameraAnchorName
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorName(System::IntPtr anchorHandle, ::Array<::Il2CppChar>* cameraName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCameraAnchorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(cameraName)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorHandle, cameraName);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCameraAnchorHandle
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorHandle(System::IntPtr anchorName, System::IntPtr& anchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCameraAnchorHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorName), ::il2cpp_utils::ExtractType(anchorHandle)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorName, anchorHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCameraAnchorType
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorType(System::IntPtr anchorHandle, GlobalNamespace::OVRPlugin::CameraAnchorType& anchorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCameraAnchorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(anchorType)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorHandle, anchorType);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_CreateCustomCameraAnchor
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_CreateCustomCameraAnchor(System::IntPtr anchorName, System::IntPtr& anchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_CreateCustomCameraAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_CreateCustomCameraAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorName), ::il2cpp_utils::ExtractType(anchorHandle)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorName, anchorHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_DestroyCustomCameraAnchor
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_DestroyCustomCameraAnchor(System::IntPtr anchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_DestroyCustomCameraAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_DestroyCustomCameraAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCustomCameraAnchorPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCustomCameraAnchorPose(System::IntPtr anchorHandle, GlobalNamespace::OVRPlugin::Posef& pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCustomCameraAnchorPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCustomCameraAnchorPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorHandle, pose);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_SetCustomCameraAnchorPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetCustomCameraAnchorPose(System::IntPtr anchorHandle, GlobalNamespace::OVRPlugin::Posef pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetCustomCameraAnchorPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_SetCustomCameraAnchorPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorHandle, pose);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCameraMinMaxDistance
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraMinMaxDistance(System::IntPtr anchorHandle, double& minDistance, double& maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraMinMaxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCameraMinMaxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(minDistance), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorHandle, minDistance, maxDistance);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_SetCameraMinMaxDistance
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetCameraMinMaxDistance(System::IntPtr anchorHandle, double minDistance, double maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetCameraMinMaxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_SetCameraMinMaxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(minDistance), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchorHandle, minDistance, maxDistance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_50_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_50_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_50_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_50_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_50_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_50_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_50_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_50_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_50_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_50_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_50_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_50_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_51_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_51_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_51_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_51_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_51_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_51_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_51_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_51_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_51_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_51_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_51_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_51_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_52_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_52_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_52_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_52_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_52_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_52_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_52_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_52_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_52_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_52_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_52_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_52_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_53_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_53_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_53_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_53_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_53_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_53_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_53_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_53_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_53_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_53_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_53_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_53_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_54_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_54_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_54_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_54_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_54_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_54_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_54_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_54_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_54_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_54_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_54_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_54_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_54_0.ovrp_Media_SetPlatformInitialized
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_54_0::ovrp_Media_SetPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_54_0::ovrp_Media_SetPlatformInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_54_0", "ovrp_Media_SetPlatformInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_55_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_55_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/EventDataBuffer
#include "GlobalNamespace/OVRPlugin_EventDataBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_55_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_55_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_55_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_55_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_55_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0.ovrp_GetSkeleton2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetSkeleton2(GlobalNamespace::OVRPlugin::SkeletonType skeletonType, GlobalNamespace::OVRPlugin::Skeleton2Internal& skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetSkeleton2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", "ovrp_GetSkeleton2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeletonType), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Skeleton2Internal&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, skeletonType, skeleton);
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0.ovrp_PollEvent
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_PollEvent(GlobalNamespace::OVRPlugin::EventDataBuffer& eventDataBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_PollEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", "ovrp_PollEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventDataBuffer)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventDataBuffer);
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0.ovrp_GetNativeXrApiType
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetNativeXrApiType(GlobalNamespace::OVRPlugin::XrApi& xrApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetNativeXrApiType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", "ovrp_GetNativeXrApiType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::XrApi&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xrApi);
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0.ovrp_GetNativeOpenXRHandles
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetNativeOpenXRHandles(uint64_t& xrInstance, uint64_t& xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetNativeOpenXRHandles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", "ovrp_GetNativeOpenXRHandles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xrInstance, xrSession);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_55_1
#include "GlobalNamespace/OVRPlugin_OVRP_1_55_1.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/EventType
#include "GlobalNamespace/OVRPlugin_EventType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_55_1::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_1::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_55_1", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_55_1::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_1::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_55_1", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_55_1..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_55_1::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_1::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_1", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_55_1.ovrp_PollEvent2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_1::ovrp_PollEvent2(GlobalNamespace::OVRPlugin::EventType& eventType, System::IntPtr& eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_55_1::ovrp_PollEvent2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_1", "ovrp_PollEvent2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventType, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_56_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_56_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_56_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_56_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_56_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_56_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_56_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_56_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_56_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_56_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_56_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_56_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_57_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_57_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Media/PlatformCameraMode
#include "GlobalNamespace/OVRPlugin_Media_PlatformCameraMode.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/Vector2f
#include "GlobalNamespace/OVRPlugin_Vector2f.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_57_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_57_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_57_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_57_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_57_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_57_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_57_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_57_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_Media_GetPlatformCameraMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_Media_GetPlatformCameraMode(GlobalNamespace::OVRPlugin::Media::PlatformCameraMode& platformCameraMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_Media_GetPlatformCameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_Media_GetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Media::PlatformCameraMode&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, platformCameraMode);
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_Media_SetPlatformCameraMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_Media_SetPlatformCameraMode(GlobalNamespace::OVRPlugin::Media::PlatformCameraMode platformCameraMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_Media_SetPlatformCameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_Media_SetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platformCameraMode)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, platformCameraMode);
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_SetEyeFovPremultipliedAlphaMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_SetEyeFovPremultipliedAlphaMode(GlobalNamespace::OVRPlugin::Bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_SetEyeFovPremultipliedAlphaMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_SetEyeFovPremultipliedAlphaMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_GetEyeFovPremultipliedAlphaMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_GetEyeFovPremultipliedAlphaMode(GlobalNamespace::OVRPlugin::Bool& enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_GetEyeFovPremultipliedAlphaMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_GetEyeFovPremultipliedAlphaMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_SetKeyboardOverlayUV
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_SetKeyboardOverlayUV(GlobalNamespace::OVRPlugin::Vector2f uv) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_SetKeyboardOverlayUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_SetKeyboardOverlayUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uv)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uv);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_58_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_58_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_58_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_58_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_58_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_58_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_58_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_58_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_58_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_58_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_58_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_58_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_59_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_59_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_59_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_59_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_59_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_59_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_59_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_59_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_59_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_59_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_59_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_59_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_60_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_60_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_60_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_60_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_60_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_60_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_60_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_60_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_60_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_60_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_60_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_60_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRProfile
#include "GlobalNamespace/OVRProfile.hpp"
// Including type: OVRProfile/State
#include "GlobalNamespace/OVRProfile_State.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRProfile.get_id
::Il2CppString* GlobalNamespace::OVRProfile::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_userName
::Il2CppString* GlobalNamespace::OVRProfile::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_locale
::Il2CppString* GlobalNamespace::OVRProfile::get_locale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_locale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_locale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_ipd
float GlobalNamespace::OVRProfile::get_ipd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_ipd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ipd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_eyeHeight
float GlobalNamespace::OVRProfile::get_eyeHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_eyeHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_eyeDepth
float GlobalNamespace::OVRProfile::get_eyeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_eyeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_neckHeight
float GlobalNamespace::OVRProfile::get_neckHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_neckHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_neckHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_state
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_state");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRProfile::State, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRProfile/State
#include "GlobalNamespace/OVRProfile_State.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRProfile/State NOT_TRIGGERED
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_NOT_TRIGGERED() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_get_NOT_TRIGGERED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "NOT_TRIGGERED"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State NOT_TRIGGERED
void GlobalNamespace::OVRProfile::State::_set_NOT_TRIGGERED(GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_set_NOT_TRIGGERED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "NOT_TRIGGERED", value));
}
// Autogenerated static field getter
// Get static field: static public OVRProfile/State LOADING
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_LOADING() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_get_LOADING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "LOADING"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State LOADING
void GlobalNamespace::OVRProfile::State::_set_LOADING(GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_set_LOADING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "LOADING", value));
}
// Autogenerated static field getter
// Get static field: static public OVRProfile/State READY
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_READY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_get_READY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "READY"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State READY
void GlobalNamespace::OVRProfile::State::_set_READY(GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_set_READY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "READY", value));
}
// Autogenerated static field getter
// Get static field: static public OVRProfile/State ERROR
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_get_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "ERROR"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State ERROR
void GlobalNamespace::OVRProfile::State::_set_ERROR(GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_set_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "ERROR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRProfile::State::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRProfile::State::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRResources
#include "GlobalNamespace/OVRResources.hpp"
// Including type: OVRResources/<>c__DisplayClass2_0
#include "GlobalNamespace/OVRResources_--c__DisplayClass2_0.hpp"
// Including type: OVRResources/<>c__DisplayClass3_0`1
#include "GlobalNamespace/OVRResources_--c__DisplayClass3_0_1.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.AssetBundle resourceBundle
UnityEngine::AssetBundle* GlobalNamespace::OVRResources::_get_resourceBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::_get_resourceBundle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AssetBundle*>("", "OVRResources", "resourceBundle"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AssetBundle resourceBundle
void GlobalNamespace::OVRResources::_set_resourceBundle(UnityEngine::AssetBundle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::_set_resourceBundle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRResources", "resourceBundle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.String> assetNames
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::OVRResources::_get_assetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::_get_assetNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>("", "OVRResources", "assetNames"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.String> assetNames
void GlobalNamespace::OVRResources::_set_assetNames(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::_set_assetNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRResources", "assetNames", value));
}
// Autogenerated method: OVRResources.Load
UnityEngine::Object* GlobalNamespace::OVRResources::Load(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRResources", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: OVRResources.SetResourceBundle
void GlobalNamespace::OVRResources::SetResourceBundle(UnityEngine::AssetBundle* bundle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::SetResourceBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRResources", "SetResourceBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bundle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bundle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRResources/<>c__DisplayClass2_0
#include "GlobalNamespace/OVRResources_--c__DisplayClass2_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String path
::Il2CppString* GlobalNamespace::OVRResources::$$c__DisplayClass2_0::_get_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::$$c__DisplayClass2_0::_get_path");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "path"));
}
// Autogenerated instance field setter
// Set instance field: public System.String path
void GlobalNamespace::OVRResources::$$c__DisplayClass2_0::_set_path(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::$$c__DisplayClass2_0::_set_path");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "path", value));
}
// Autogenerated method: OVRResources/<>c__DisplayClass2_0.<Load>b__0
bool GlobalNamespace::OVRResources::$$c__DisplayClass2_0::$Load$b__0(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::$$c__DisplayClass2_0::<Load>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Load>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader
#include "GlobalNamespace/OVRSceneLoader.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRSceneLoader/<DelayCanvasPosUpdate>d__24
#include "GlobalNamespace/OVRSceneLoader_-DelayCanvasPosUpdate-d__24.hpp"
// Including type: OVRSceneLoader/<onCheckSceneCoroutine>d__25
#include "GlobalNamespace/OVRSceneLoader_-onCheckSceneCoroutine-d__25.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String externalStoragePath
::Il2CppString* GlobalNamespace::OVRSceneLoader::_get_externalStoragePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_externalStoragePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRSceneLoader", "externalStoragePath"));
}
// Autogenerated static field setter
// Set static field: static public System.String externalStoragePath
void GlobalNamespace::OVRSceneLoader::_set_externalStoragePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_externalStoragePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneLoader", "externalStoragePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.String sceneLoadDataName
::Il2CppString* GlobalNamespace::OVRSceneLoader::_get_sceneLoadDataName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_sceneLoadDataName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRSceneLoader", "sceneLoadDataName"));
}
// Autogenerated static field setter
// Set static field: static public System.String sceneLoadDataName
void GlobalNamespace::OVRSceneLoader::_set_sceneLoadDataName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_sceneLoadDataName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneLoader", "sceneLoadDataName", value));
}
// Autogenerated static field getter
// Get static field: static public System.String resourceBundleName
::Il2CppString* GlobalNamespace::OVRSceneLoader::_get_resourceBundleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_resourceBundleName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRSceneLoader", "resourceBundleName"));
}
// Autogenerated static field setter
// Set static field: static public System.String resourceBundleName
void GlobalNamespace::OVRSceneLoader::_set_resourceBundleName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_resourceBundleName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneLoader", "resourceBundleName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single sceneCheckIntervalSeconds
float GlobalNamespace::OVRSceneLoader::_get_sceneCheckIntervalSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_sceneCheckIntervalSeconds");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "sceneCheckIntervalSeconds"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single sceneCheckIntervalSeconds
void GlobalNamespace::OVRSceneLoader::_set_sceneCheckIntervalSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_sceneCheckIntervalSeconds");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "sceneCheckIntervalSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single logCloseTime
float GlobalNamespace::OVRSceneLoader::_get_logCloseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_logCloseTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "logCloseTime"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single logCloseTime
void GlobalNamespace::OVRSceneLoader::_set_logCloseTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_logCloseTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "logCloseTime", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Canvas mainCanvas
UnityEngine::Canvas* GlobalNamespace::OVRSceneLoader::_get_mainCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_mainCanvas");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Canvas*>(___internal__instance, "mainCanvas"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Canvas mainCanvas
void GlobalNamespace::OVRSceneLoader::_set_mainCanvas(UnityEngine::Canvas* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_mainCanvas");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "mainCanvas", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text logTextBox
UnityEngine::UI::Text* GlobalNamespace::OVRSceneLoader::_get_logTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_logTextBox");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Text*>(___internal__instance, "logTextBox"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.UI.Text logTextBox
void GlobalNamespace::OVRSceneLoader::_set_logTextBox(UnityEngine::UI::Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_logTextBox");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "logTextBox", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation loadSceneOperation
UnityEngine::AsyncOperation* GlobalNamespace::OVRSceneLoader::_get_loadSceneOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_loadSceneOperation");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AsyncOperation*>(___internal__instance, "loadSceneOperation"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.AsyncOperation loadSceneOperation
void GlobalNamespace::OVRSceneLoader::_set_loadSceneOperation(UnityEngine::AsyncOperation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_loadSceneOperation");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "loadSceneOperation", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String formattedLogText
::Il2CppString* GlobalNamespace::OVRSceneLoader::_get_formattedLogText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_formattedLogText");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "formattedLogText"));
}
// Autogenerated instance field setter
// Set instance field: private System.String formattedLogText
void GlobalNamespace::OVRSceneLoader::_set_formattedLogText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_formattedLogText");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "formattedLogText", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single closeLogTimer
float GlobalNamespace::OVRSceneLoader::_get_closeLogTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_closeLogTimer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "closeLogTimer"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single closeLogTimer
void GlobalNamespace::OVRSceneLoader::_set_closeLogTimer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_closeLogTimer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "closeLogTimer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closeLogDialogue
bool GlobalNamespace::OVRSceneLoader::_get_closeLogDialogue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_closeLogDialogue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "closeLogDialogue"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean closeLogDialogue
void GlobalNamespace::OVRSceneLoader::_set_closeLogDialogue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_closeLogDialogue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "closeLogDialogue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canvasPosUpdated
bool GlobalNamespace::OVRSceneLoader::_get_canvasPosUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_canvasPosUpdated");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "canvasPosUpdated"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean canvasPosUpdated
void GlobalNamespace::OVRSceneLoader::_set_canvasPosUpdated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_canvasPosUpdated");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "canvasPosUpdated", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String scenePath
::Il2CppString* GlobalNamespace::OVRSceneLoader::_get_scenePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_scenePath");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "scenePath"));
}
// Autogenerated instance field setter
// Set instance field: private System.String scenePath
void GlobalNamespace::OVRSceneLoader::_set_scenePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_scenePath");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "scenePath", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String sceneLoadDataPath
::Il2CppString* GlobalNamespace::OVRSceneLoader::_get_sceneLoadDataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_sceneLoadDataPath");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "sceneLoadDataPath"));
}
// Autogenerated instance field setter
// Set instance field: private System.String sceneLoadDataPath
void GlobalNamespace::OVRSceneLoader::_set_sceneLoadDataPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_sceneLoadDataPath");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "sceneLoadDataPath", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.AssetBundle> loadedAssetBundles
System::Collections::Generic::List_1<UnityEngine::AssetBundle*>* GlobalNamespace::OVRSceneLoader::_get_loadedAssetBundles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_loadedAssetBundles");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::AssetBundle*>*>(___internal__instance, "loadedAssetBundles"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<UnityEngine.AssetBundle> loadedAssetBundles
void GlobalNamespace::OVRSceneLoader::_set_loadedAssetBundles(System::Collections::Generic::List_1<UnityEngine::AssetBundle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_loadedAssetBundles");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "loadedAssetBundles", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneLoader/SceneInfo currentSceneInfo
GlobalNamespace::OVRSceneLoader::SceneInfo GlobalNamespace::OVRSceneLoader::_get_currentSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_currentSceneInfo");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRSceneLoader::SceneInfo>(___internal__instance, "currentSceneInfo"));
}
// Autogenerated instance field setter
// Set instance field: private OVRSceneLoader/SceneInfo currentSceneInfo
void GlobalNamespace::OVRSceneLoader::_set_currentSceneInfo(GlobalNamespace::OVRSceneLoader::SceneInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_currentSceneInfo");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "currentSceneInfo", value));
}
// Autogenerated method: OVRSceneLoader.Awake
void GlobalNamespace::OVRSceneLoader::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.Start
void GlobalNamespace::OVRSceneLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.LoadScene
void GlobalNamespace::OVRSceneLoader::LoadScene(GlobalNamespace::OVRSceneLoader::SceneInfo sceneInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneInfo);
}
// Autogenerated method: OVRSceneLoader.LoadSceneOperation_completed
void GlobalNamespace::OVRSceneLoader::LoadSceneOperation_completed(UnityEngine::AsyncOperation* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::LoadSceneOperation_completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneOperation_completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSceneLoader.Update
void GlobalNamespace::OVRSceneLoader::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.UpdateCanvasPosition
void GlobalNamespace::OVRSceneLoader::UpdateCanvasPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::UpdateCanvasPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCanvasPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.GetSceneInfo
GlobalNamespace::OVRSceneLoader::SceneInfo GlobalNamespace::OVRSceneLoader::GetSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::GetSceneInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSceneInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSceneLoader::SceneInfo, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.DelayCanvasPosUpdate
System::Collections::IEnumerator* GlobalNamespace::OVRSceneLoader::DelayCanvasPosUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::DelayCanvasPosUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayCanvasPosUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.onCheckSceneCoroutine
System::Collections::IEnumerator* GlobalNamespace::OVRSceneLoader::onCheckSceneCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::onCheckSceneCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onCheckSceneCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.DestroyAllGameObjects
void GlobalNamespace::OVRSceneLoader::DestroyAllGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::DestroyAllGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAllGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader/SceneInfo
#include "GlobalNamespace/OVRSceneLoader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> scenes
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::OVRSceneLoader::SceneInfo::_get_scenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::SceneInfo::_get_scenes");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>(___internal__instance, "scenes"));
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.List`1<System.String> scenes
void GlobalNamespace::OVRSceneLoader::SceneInfo::_set_scenes(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::SceneInfo::_set_scenes");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "scenes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 version
int64_t GlobalNamespace::OVRSceneLoader::SceneInfo::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::SceneInfo::_get_version");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "version"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int64 version
void GlobalNamespace::OVRSceneLoader::SceneInfo::_set_version(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::SceneInfo::_set_version");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "version", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader/<DelayCanvasPosUpdate>d__24
#include "GlobalNamespace/OVRSceneLoader_-DelayCanvasPosUpdate-d__24.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneLoader <>4__this
GlobalNamespace::OVRSceneLoader* GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRSceneLoader*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OVRSceneLoader <>4__this
void GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_set_$$4__this(GlobalNamespace::OVRSceneLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.IDisposable.Dispose
void GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.MoveNext
bool GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader/<onCheckSceneCoroutine>d__25
#include "GlobalNamespace/OVRSceneLoader_-onCheckSceneCoroutine-d__25.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneLoader <>4__this
GlobalNamespace::OVRSceneLoader* GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRSceneLoader*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OVRSceneLoader <>4__this
void GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_set_$$4__this(GlobalNamespace::OVRSceneLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.IDisposable.Dispose
void GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.MoveNext
bool GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTracker
#include "GlobalNamespace/OVRTracker.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTracker.get_isPresent
bool GlobalNamespace::OVRTracker::get_isPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::get_isPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.get_isPositionTracked
bool GlobalNamespace::OVRTracker::get_isPositionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::get_isPositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.get_isEnabled
bool GlobalNamespace::OVRTracker::get_isEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::get_isEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.set_isEnabled
void GlobalNamespace::OVRTracker::set_isEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::set_isEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTracker.get_count
int GlobalNamespace::OVRTracker::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::get_count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.GetFrustum
GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRTracker::GetFrustum(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::GetFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracker)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRTracker::Frustum, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPose
GlobalNamespace::OVRPose GlobalNamespace::OVRTracker::GetPose(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::GetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracker)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPoseValid
bool GlobalNamespace::OVRTracker::GetPoseValid(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::GetPoseValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoseValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracker)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPresent
bool GlobalNamespace::OVRTracker::GetPresent(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::GetPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracker)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tracker);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRAudioSourceTest
#include "GlobalNamespace/OVRAudioSourceTest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single period
float GlobalNamespace::OVRAudioSourceTest::_get_period() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAudioSourceTest::_get_period");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "period"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single period
void GlobalNamespace::OVRAudioSourceTest::_set_period(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAudioSourceTest::_set_period");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "period", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextActionTime
float GlobalNamespace::OVRAudioSourceTest::_get_nextActionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAudioSourceTest::_get_nextActionTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "nextActionTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single nextActionTime
void GlobalNamespace::OVRAudioSourceTest::_set_nextActionTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAudioSourceTest::_set_nextActionTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "nextActionTime", value));
}
// Autogenerated method: OVRAudioSourceTest.Start
void GlobalNamespace::OVRAudioSourceTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAudioSourceTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRAudioSourceTest.Update
void GlobalNamespace::OVRAudioSourceTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAudioSourceTest::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRAutoDestroyInMRC
#include "GlobalNamespace/OVRAutoDestroyInMRC.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRAutoDestroyInMRC.Start
void GlobalNamespace::OVRAutoDestroyInMRC::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAutoDestroyInMRC::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRAutoDestroyInMRC.Update
void GlobalNamespace::OVRAutoDestroyInMRC::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAutoDestroyInMRC::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRChromaticAberration
#include "GlobalNamespace/OVRChromaticAberration.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton toggleButton
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRChromaticAberration::_get_toggleButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRChromaticAberration::_get_toggleButton");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>(___internal__instance, "toggleButton"));
}
// Autogenerated instance field setter
// Set instance field: public OVRInput/RawButton toggleButton
void GlobalNamespace::OVRChromaticAberration::_set_toggleButton(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRChromaticAberration::_set_toggleButton");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "toggleButton", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean chromatic
bool GlobalNamespace::OVRChromaticAberration::_get_chromatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRChromaticAberration::_get_chromatic");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "chromatic"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean chromatic
void GlobalNamespace::OVRChromaticAberration::_set_chromatic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRChromaticAberration::_set_chromatic");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "chromatic", value));
}
// Autogenerated method: OVRChromaticAberration.Start
void GlobalNamespace::OVRChromaticAberration::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRChromaticAberration::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRChromaticAberration.Update
void GlobalNamespace::OVRChromaticAberration::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRChromaticAberration::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRControllerHelper
#include "GlobalNamespace/OVRControllerHelper.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchQuestAndRiftSLeftController
UnityEngine::GameObject* GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchQuestAndRiftSLeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchQuestAndRiftSLeftController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "m_modelOculusTouchQuestAndRiftSLeftController"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.GameObject m_modelOculusTouchQuestAndRiftSLeftController
void GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchQuestAndRiftSLeftController(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchQuestAndRiftSLeftController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_modelOculusTouchQuestAndRiftSLeftController", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchQuestAndRiftSRightController
UnityEngine::GameObject* GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchQuestAndRiftSRightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchQuestAndRiftSRightController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "m_modelOculusTouchQuestAndRiftSRightController"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.GameObject m_modelOculusTouchQuestAndRiftSRightController
void GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchQuestAndRiftSRightController(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchQuestAndRiftSRightController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_modelOculusTouchQuestAndRiftSRightController", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchRiftLeftController
UnityEngine::GameObject* GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchRiftLeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchRiftLeftController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "m_modelOculusTouchRiftLeftController"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.GameObject m_modelOculusTouchRiftLeftController
void GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchRiftLeftController(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchRiftLeftController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_modelOculusTouchRiftLeftController", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchRiftRightController
UnityEngine::GameObject* GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchRiftRightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchRiftRightController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "m_modelOculusTouchRiftRightController"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.GameObject m_modelOculusTouchRiftRightController
void GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchRiftRightController(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchRiftRightController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_modelOculusTouchRiftRightController", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchQuest2LeftController
UnityEngine::GameObject* GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchQuest2LeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchQuest2LeftController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "m_modelOculusTouchQuest2LeftController"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.GameObject m_modelOculusTouchQuest2LeftController
void GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchQuest2LeftController(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchQuest2LeftController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_modelOculusTouchQuest2LeftController", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchQuest2RightController
UnityEngine::GameObject* GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchQuest2RightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_modelOculusTouchQuest2RightController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "m_modelOculusTouchQuest2RightController"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.GameObject m_modelOculusTouchQuest2RightController
void GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchQuest2RightController(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_modelOculusTouchQuest2RightController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_modelOculusTouchQuest2RightController", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller m_controller
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRControllerHelper::_get_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_controller");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>(___internal__instance, "m_controller"));
}
// Autogenerated instance field setter
// Set instance field: public OVRInput/Controller m_controller
void GlobalNamespace::OVRControllerHelper::_set_m_controller(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_controller");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_controller", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_animator
UnityEngine::Animator* GlobalNamespace::OVRControllerHelper::_get_m_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_animator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animator*>(___internal__instance, "m_animator"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Animator m_animator
void GlobalNamespace::OVRControllerHelper::_set_m_animator(UnityEngine::Animator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_animator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_animator", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRControllerHelper/ControllerType activeControllerType
GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::_get_activeControllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_activeControllerType");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerHelper::ControllerType>(___internal__instance, "activeControllerType"));
}
// Autogenerated instance field setter
// Set instance field: private OVRControllerHelper/ControllerType activeControllerType
void GlobalNamespace::OVRControllerHelper::_set_activeControllerType(GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_activeControllerType");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "activeControllerType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_prevControllerConnected
bool GlobalNamespace::OVRControllerHelper::_get_m_prevControllerConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_prevControllerConnected");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_prevControllerConnected"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean m_prevControllerConnected
void GlobalNamespace::OVRControllerHelper::_set_m_prevControllerConnected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_prevControllerConnected");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_prevControllerConnected", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_prevControllerConnectedCached
bool GlobalNamespace::OVRControllerHelper::_get_m_prevControllerConnectedCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_get_m_prevControllerConnectedCached");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_prevControllerConnectedCached"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean m_prevControllerConnectedCached
void GlobalNamespace::OVRControllerHelper::_set_m_prevControllerConnectedCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::_set_m_prevControllerConnectedCached");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_prevControllerConnectedCached", value));
}
// Autogenerated method: OVRControllerHelper.Start
void GlobalNamespace::OVRControllerHelper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerHelper.Update
void GlobalNamespace::OVRControllerHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRControllerHelper/ControllerType
#include "GlobalNamespace/OVRControllerHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType QuestAndRiftS
GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_QuestAndRiftS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_get_QuestAndRiftS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "QuestAndRiftS"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType QuestAndRiftS
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_QuestAndRiftS(GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_set_QuestAndRiftS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "QuestAndRiftS", value));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType Rift
GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_Rift() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_get_Rift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "Rift"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType Rift
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_Rift(GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_set_Rift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "Rift", value));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType Quest2
GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_Quest2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_get_Quest2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "Quest2"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType Quest2
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_Quest2(GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_set_Quest2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "Quest2", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRControllerHelper::ControllerType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRControllerTest
#include "GlobalNamespace/OVRControllerTest.hpp"
// Including type: OVRControllerTest/BoolMonitor
#include "GlobalNamespace/OVRControllerTest_BoolMonitor.hpp"
// Including type: OVRControllerTest/<>c
#include "GlobalNamespace/OVRControllerTest_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String prevConnected
::Il2CppString* GlobalNamespace::OVRControllerTest::_get_prevConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_get_prevConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRControllerTest", "prevConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevConnected
void GlobalNamespace::OVRControllerTest::_set_prevConnected(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_set_prevConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerTest", "prevConnected", value));
}
// Autogenerated static field getter
// Get static field: static private OVRControllerTest/BoolMonitor controllers
GlobalNamespace::OVRControllerTest::BoolMonitor* GlobalNamespace::OVRControllerTest::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor*>("", "OVRControllerTest", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private OVRControllerTest/BoolMonitor controllers
void GlobalNamespace::OVRControllerTest::_set_controllers(GlobalNamespace::OVRControllerTest::BoolMonitor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerTest", "controllers", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text uiText
UnityEngine::UI::Text* GlobalNamespace::OVRControllerTest::_get_uiText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_get_uiText");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Text*>(___internal__instance, "uiText"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.UI.Text uiText
void GlobalNamespace::OVRControllerTest::_set_uiText(UnityEngine::UI::Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_set_uiText");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "uiText", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRControllerTest/BoolMonitor> monitors
System::Collections::Generic::List_1<GlobalNamespace::OVRControllerTest::BoolMonitor*>* GlobalNamespace::OVRControllerTest::_get_monitors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_get_monitors");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OVRControllerTest::BoolMonitor*>*>(___internal__instance, "monitors"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<OVRControllerTest/BoolMonitor> monitors
void GlobalNamespace::OVRControllerTest::_set_monitors(System::Collections::Generic::List_1<GlobalNamespace::OVRControllerTest::BoolMonitor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_set_monitors");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "monitors", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder data
System::Text::StringBuilder* GlobalNamespace::OVRControllerTest::_get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_get_data");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::StringBuilder*>(___internal__instance, "data"));
}
// Autogenerated instance field setter
// Set instance field: private System.Text.StringBuilder data
void GlobalNamespace::OVRControllerTest::_set_data(System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::_set_data");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "data", value));
}
// Autogenerated method: OVRControllerTest.Start
void GlobalNamespace::OVRControllerTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest.Update
void GlobalNamespace::OVRControllerTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest..cctor
void GlobalNamespace::OVRControllerTest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRControllerTest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRControllerTest/BoolMonitor
#include "GlobalNamespace/OVRControllerTest_BoolMonitor.hpp"
// Including type: OVRControllerTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRControllerTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_name
::Il2CppString* GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_name");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "m_name"));
}
// Autogenerated instance field setter
// Set instance field: private System.String m_name
void GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_name");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_name", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRControllerTest/BoolMonitor/BoolGenerator m_generator
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_generator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_generator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>(___internal__instance, "m_generator"));
}
// Autogenerated instance field setter
// Set instance field: private OVRControllerTest/BoolMonitor/BoolGenerator m_generator
void GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_generator(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_generator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_generator", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_prevValue
bool GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_prevValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_prevValue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_prevValue"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean m_prevValue
void GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_prevValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_prevValue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_prevValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currentValue
bool GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_currentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_currentValue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_currentValue"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean m_currentValue
void GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_currentValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_currentValue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_currentValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currentValueRecentlyChanged
bool GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_currentValueRecentlyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_currentValueRecentlyChanged");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_currentValueRecentlyChanged"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean m_currentValueRecentlyChanged
void GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_currentValueRecentlyChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_currentValueRecentlyChanged");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_currentValueRecentlyChanged", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_displayTimeout
float GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_displayTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_displayTimeout");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "m_displayTimeout"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single m_displayTimeout
void GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_displayTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_displayTimeout");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_displayTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_displayTimer
float GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_displayTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_get_m_displayTimer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "m_displayTimer"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single m_displayTimer
void GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_displayTimer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::_set_m_displayTimer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_displayTimer", value));
}
// Autogenerated method: OVRControllerTest/BoolMonitor.Update
void GlobalNamespace::OVRControllerTest::BoolMonitor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/BoolMonitor.AppendToStringBuilder
void GlobalNamespace::OVRControllerTest::BoolMonitor::AppendToStringBuilder(System::Text::StringBuilder*& sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::AppendToStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRControllerTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRControllerTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRControllerTest/BoolMonitor/BoolGenerator.Invoke
bool GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/BoolMonitor/BoolGenerator.BeginInvoke
System::IAsyncResult* GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVRControllerTest/BoolMonitor/BoolGenerator.EndInvoke
bool GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRControllerTest/<>c
#include "GlobalNamespace/OVRControllerTest_--c.hpp"
// Including type: OVRControllerTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRControllerTest_BoolMonitor_BoolGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRControllerTest/<>c <>9
GlobalNamespace::OVRControllerTest::$$c* GlobalNamespace::OVRControllerTest::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::$$c*>("", "OVRControllerTest/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRControllerTest/<>c <>9
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9(GlobalNamespace::OVRControllerTest::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_0
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_0
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_0(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_1
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_1
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_1(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_1", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_2
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_2")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_2
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_2(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_2", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_3
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_3")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_3
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_3(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_3", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_4
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_4")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_4
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_4(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_4", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_5
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_5")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_5
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_5(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_5", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_6
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_6")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_6
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_6(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_6", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_7
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_7")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_7
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_7(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_7", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_8
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_8")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_8
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_8(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_8", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_9
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_9")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_9
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_9(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_9", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_10
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_10")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_10
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_10(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_10", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_11
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_11")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_11
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_11(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_11", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_12
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_12")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_12
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_12(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_12", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_13
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_13")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_13
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_13(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_13", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_14
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_14");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_14")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_14
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_14(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_14");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_14", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_15
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_15");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_15")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_15
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_15(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_15");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_15", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_16
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_16");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_16")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_16
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_16(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_16");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_16", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_17
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_17");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_17")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_17
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_17(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_17");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_17", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_18
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_18");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_18")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_18
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_18(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_18");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_18", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_19
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_19");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_19")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_19
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_19(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_19");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_19", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_20
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_20");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_20")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_20
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_20(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_20");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_20", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_21
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_21() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_21");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_21")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_21
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_21(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_21");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_21", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_22
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_22() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_22");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_22")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_22
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_22(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_22");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_22", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_23
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_23() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_23");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_23")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_23
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_23(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_23");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_23", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_24
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_24() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_24");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_24")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_24
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_24(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_24");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_24", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_25
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_25() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_25");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_25")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_25
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_25(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_25");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_25", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_26
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_26() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_26");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_26")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_26
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_26(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_26");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_26", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_27
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_27() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_27");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_27")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_27
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_27(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_27");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_27", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_28
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_28() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_28");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_28")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_28
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_28(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_28");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_28", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_29
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_29() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_29");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_29")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_29
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_29(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_29");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_29", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_30
GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_30() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_30");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_30")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_30
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_30(GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_30");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_30", value)));
}
// Autogenerated method: OVRControllerTest/<>c..cctor
void GlobalNamespace::OVRControllerTest::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRControllerTest/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_0
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_1
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_2
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_3
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_4
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_5
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_6
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_7
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_8
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_9
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_10
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_11
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_12
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_13
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_14
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_15
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_16
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_17
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_17");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_17", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_18
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_18");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_18", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_19
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_19");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_19", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_20
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_20");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_20", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_21
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_21() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_21");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_21", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_22
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_22() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_22");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_22", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_23
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_23() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_23");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_23", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_24
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_24() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_25
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_25() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_25");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_25", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_26
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_26() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_26");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_26", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_27
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_27() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_27");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_27", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_28
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_28() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_28");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_28", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_29
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_29() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_29");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_29", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_30
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_30() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_30");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_30", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<.cctor>b__9_0
bool GlobalNamespace::OVRControllerTest::$$c::$_cctor$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerTest::$$c::<.cctor>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRCubemapCapture
#include "GlobalNamespace/OVRCubemapCapture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoTriggerAfterLaunch
bool GlobalNamespace::OVRCubemapCapture::_get_autoTriggerAfterLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_get_autoTriggerAfterLaunch");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "autoTriggerAfterLaunch"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean autoTriggerAfterLaunch
void GlobalNamespace::OVRCubemapCapture::_set_autoTriggerAfterLaunch(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_set_autoTriggerAfterLaunch");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "autoTriggerAfterLaunch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single autoTriggerDelay
float GlobalNamespace::OVRCubemapCapture::_get_autoTriggerDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_get_autoTriggerDelay");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "autoTriggerDelay"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single autoTriggerDelay
void GlobalNamespace::OVRCubemapCapture::_set_autoTriggerDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_set_autoTriggerDelay");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "autoTriggerDelay", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single autoTriggerElapse
float GlobalNamespace::OVRCubemapCapture::_get_autoTriggerElapse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_get_autoTriggerElapse");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "autoTriggerElapse"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single autoTriggerElapse
void GlobalNamespace::OVRCubemapCapture::_set_autoTriggerElapse(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_set_autoTriggerElapse");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "autoTriggerElapse", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode triggeredByKey
UnityEngine::KeyCode GlobalNamespace::OVRCubemapCapture::_get_triggeredByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_get_triggeredByKey");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>(___internal__instance, "triggeredByKey"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.KeyCode triggeredByKey
void GlobalNamespace::OVRCubemapCapture::_set_triggeredByKey(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_set_triggeredByKey");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "triggeredByKey", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String pathName
::Il2CppString* GlobalNamespace::OVRCubemapCapture::_get_pathName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_get_pathName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "pathName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String pathName
void GlobalNamespace::OVRCubemapCapture::_set_pathName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_set_pathName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "pathName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cubemapSize
int GlobalNamespace::OVRCubemapCapture::_get_cubemapSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_get_cubemapSize");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "cubemapSize"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 cubemapSize
void GlobalNamespace::OVRCubemapCapture::_set_cubemapSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::_set_cubemapSize");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "cubemapSize", value));
}
// Autogenerated method: OVRCubemapCapture.Update
void GlobalNamespace::OVRCubemapCapture::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCubemapCapture.TriggerCubemapCapture
void GlobalNamespace::OVRCubemapCapture::TriggerCubemapCapture(UnityEngine::Vector3 capturePos, int cubemapSize, ::Il2CppString* pathName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::TriggerCubemapCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCubemapCapture", "TriggerCubemapCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capturePos), ::il2cpp_utils::ExtractType(cubemapSize), ::il2cpp_utils::ExtractType(pathName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capturePos, cubemapSize, pathName);
}
// Autogenerated method: OVRCubemapCapture.RenderIntoCubemap
void GlobalNamespace::OVRCubemapCapture::RenderIntoCubemap(UnityEngine::Camera* ownerCamera, UnityEngine::Cubemap* outCubemap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::RenderIntoCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCubemapCapture", "RenderIntoCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerCamera), ::il2cpp_utils::ExtractType(outCubemap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ownerCamera, outCubemap);
}
// Autogenerated method: OVRCubemapCapture.SaveCubemapCapture
bool GlobalNamespace::OVRCubemapCapture::SaveCubemapCapture(UnityEngine::Cubemap* cubemap, ::Il2CppString* pathName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::SaveCubemapCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCubemapCapture", "SaveCubemapCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cubemap), ::il2cpp_utils::ExtractType(pathName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cubemap, pathName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCursor
#include "GlobalNamespace/OVRCursor.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCursor.SetCursorRay
void GlobalNamespace::OVRCursor::SetCursorRay(UnityEngine::Transform* ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCursor::SetCursorRay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ray);
}
// Autogenerated method: OVRCursor.SetCursorStartDest
void GlobalNamespace::OVRCursor::SetCursorStartDest(UnityEngine::Vector3 start, UnityEngine::Vector3 dest, UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCursor::SetCursorStartDest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorStartDest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(normal)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, dest, normal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCustomSkeleton
#include "GlobalNamespace/OVRCustomSkeleton.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _applyBoneTranslations
bool GlobalNamespace::OVRCustomSkeleton::_get__applyBoneTranslations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCustomSkeleton::_get__applyBoneTranslations");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_applyBoneTranslations"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _applyBoneTranslations
void GlobalNamespace::OVRCustomSkeleton::_set__applyBoneTranslations(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCustomSkeleton::_set__applyBoneTranslations");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_applyBoneTranslations", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> _customBones_V2
System::Collections::Generic::List_1<UnityEngine::Transform*>* GlobalNamespace::OVRCustomSkeleton::_get__customBones_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCustomSkeleton::_get__customBones_V2");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::Transform*>*>(___internal__instance, "_customBones_V2"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> _customBones_V2
void GlobalNamespace::OVRCustomSkeleton::_set__customBones_V2(System::Collections::Generic::List_1<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCustomSkeleton::_set__customBones_V2");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_customBones_V2", value));
}
// Autogenerated method: OVRCustomSkeleton.get_CustomBones
System::Collections::Generic::List_1<UnityEngine::Transform*>* GlobalNamespace::OVRCustomSkeleton::get_CustomBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCustomSkeleton::get_CustomBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomSkeleton.InitializeBones
void GlobalNamespace::OVRCustomSkeleton::InitializeBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCustomSkeleton::InitializeBones");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRDebugInfo
#include "GlobalNamespace/OVRDebugInfo.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject debugUIManager
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_debugUIManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_debugUIManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "debugUIManager"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject debugUIManager
void GlobalNamespace::OVRDebugInfo::_set_debugUIManager(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_debugUIManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "debugUIManager", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject debugUIObject
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_debugUIObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_debugUIObject");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "debugUIObject"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject debugUIObject
void GlobalNamespace::OVRDebugInfo::_set_debugUIObject(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_debugUIObject");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "debugUIObject", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject riftPresent
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_riftPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_riftPresent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "riftPresent"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject riftPresent
void GlobalNamespace::OVRDebugInfo::_set_riftPresent(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_riftPresent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "riftPresent", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject fps
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_fps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_fps");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "fps"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject fps
void GlobalNamespace::OVRDebugInfo::_set_fps(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_fps");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "fps", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject ipd
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_ipd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_ipd");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "ipd"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject ipd
void GlobalNamespace::OVRDebugInfo::_set_ipd(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_ipd");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "ipd", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject fov
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_fov() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_fov");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "fov"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject fov
void GlobalNamespace::OVRDebugInfo::_set_fov(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_fov");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "fov", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject height
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_height");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "height"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject height
void GlobalNamespace::OVRDebugInfo::_set_height(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_height");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "height", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject depth
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_depth");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "depth"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject depth
void GlobalNamespace::OVRDebugInfo::_set_depth(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_depth");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "depth", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject resolutionEyeTexture
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_resolutionEyeTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_resolutionEyeTexture");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "resolutionEyeTexture"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject resolutionEyeTexture
void GlobalNamespace::OVRDebugInfo::_set_resolutionEyeTexture(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_resolutionEyeTexture");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "resolutionEyeTexture", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject latencies
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_latencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_latencies");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "latencies"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject latencies
void GlobalNamespace::OVRDebugInfo::_set_latencies(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_latencies");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "latencies", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject texts
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::_get_texts() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_texts");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "texts"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject texts
void GlobalNamespace::OVRDebugInfo::_set_texts(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_texts");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "texts", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String strRiftPresent
::Il2CppString* GlobalNamespace::OVRDebugInfo::_get_strRiftPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_strRiftPresent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "strRiftPresent"));
}
// Autogenerated instance field setter
// Set instance field: private System.String strRiftPresent
void GlobalNamespace::OVRDebugInfo::_set_strRiftPresent(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_strRiftPresent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "strRiftPresent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String strFPS
::Il2CppString* GlobalNamespace::OVRDebugInfo::_get_strFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_strFPS");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "strFPS"));
}
// Autogenerated instance field setter
// Set instance field: private System.String strFPS
void GlobalNamespace::OVRDebugInfo::_set_strFPS(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_strFPS");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "strFPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String strIPD
::Il2CppString* GlobalNamespace::OVRDebugInfo::_get_strIPD() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_strIPD");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "strIPD"));
}
// Autogenerated instance field setter
// Set instance field: private System.String strIPD
void GlobalNamespace::OVRDebugInfo::_set_strIPD(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_strIPD");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "strIPD", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String strFOV
::Il2CppString* GlobalNamespace::OVRDebugInfo::_get_strFOV() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_strFOV");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "strFOV"));
}
// Autogenerated instance field setter
// Set instance field: private System.String strFOV
void GlobalNamespace::OVRDebugInfo::_set_strFOV(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_strFOV");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "strFOV", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String strHeight
::Il2CppString* GlobalNamespace::OVRDebugInfo::_get_strHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_strHeight");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "strHeight"));
}
// Autogenerated instance field setter
// Set instance field: private System.String strHeight
void GlobalNamespace::OVRDebugInfo::_set_strHeight(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_strHeight");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "strHeight", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String strDepth
::Il2CppString* GlobalNamespace::OVRDebugInfo::_get_strDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_strDepth");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "strDepth"));
}
// Autogenerated instance field setter
// Set instance field: private System.String strDepth
void GlobalNamespace::OVRDebugInfo::_set_strDepth(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_strDepth");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "strDepth", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String strResolutionEyeTexture
::Il2CppString* GlobalNamespace::OVRDebugInfo::_get_strResolutionEyeTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_strResolutionEyeTexture");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "strResolutionEyeTexture"));
}
// Autogenerated instance field setter
// Set instance field: private System.String strResolutionEyeTexture
void GlobalNamespace::OVRDebugInfo::_set_strResolutionEyeTexture(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_strResolutionEyeTexture");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "strResolutionEyeTexture", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String strLatencies
::Il2CppString* GlobalNamespace::OVRDebugInfo::_get_strLatencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_strLatencies");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "strLatencies"));
}
// Autogenerated instance field setter
// Set instance field: private System.String strLatencies
void GlobalNamespace::OVRDebugInfo::_set_strLatencies(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_strLatencies");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "strLatencies", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single updateInterval
float GlobalNamespace::OVRDebugInfo::_get_updateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_updateInterval");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "updateInterval"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single updateInterval
void GlobalNamespace::OVRDebugInfo::_set_updateInterval(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_updateInterval");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "updateInterval", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single accum
float GlobalNamespace::OVRDebugInfo::_get_accum() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_accum");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "accum"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single accum
void GlobalNamespace::OVRDebugInfo::_set_accum(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_accum");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "accum", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 frames
int GlobalNamespace::OVRDebugInfo::_get_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_frames");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "frames"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 frames
void GlobalNamespace::OVRDebugInfo::_set_frames(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_frames");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "frames", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeLeft
float GlobalNamespace::OVRDebugInfo::_get_timeLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_timeLeft");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "timeLeft"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single timeLeft
void GlobalNamespace::OVRDebugInfo::_set_timeLeft(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_timeLeft");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "timeLeft", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initUIComponent
bool GlobalNamespace::OVRDebugInfo::_get_initUIComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_initUIComponent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "initUIComponent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean initUIComponent
void GlobalNamespace::OVRDebugInfo::_set_initUIComponent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_initUIComponent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "initUIComponent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isInited
bool GlobalNamespace::OVRDebugInfo::_get_isInited() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_isInited");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "isInited"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean isInited
void GlobalNamespace::OVRDebugInfo::_set_isInited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_isInited");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "isInited", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single offsetY
float GlobalNamespace::OVRDebugInfo::_get_offsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_offsetY");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "offsetY"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single offsetY
void GlobalNamespace::OVRDebugInfo::_set_offsetY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_offsetY");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "offsetY", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single riftPresentTimeout
float GlobalNamespace::OVRDebugInfo::_get_riftPresentTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_riftPresentTimeout");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "riftPresentTimeout"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single riftPresentTimeout
void GlobalNamespace::OVRDebugInfo::_set_riftPresentTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_riftPresentTimeout");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "riftPresentTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean showVRVars
bool GlobalNamespace::OVRDebugInfo::_get_showVRVars() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_get_showVRVars");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "showVRVars"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean showVRVars
void GlobalNamespace::OVRDebugInfo::_set_showVRVars(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::_set_showVRVars");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "showVRVars", value));
}
// Autogenerated method: OVRDebugInfo.Awake
void GlobalNamespace::OVRDebugInfo::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.Update
void GlobalNamespace::OVRDebugInfo::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.OnDestroy
void GlobalNamespace::OVRDebugInfo::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.InitUIComponents
void GlobalNamespace::OVRDebugInfo::InitUIComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::InitUIComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitUIComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateVariable
void GlobalNamespace::OVRDebugInfo::UpdateVariable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateStrings
void GlobalNamespace::OVRDebugInfo::UpdateStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateStrings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStrings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.RiftPresentGUI
void GlobalNamespace::OVRDebugInfo::RiftPresentGUI(UnityEngine::GameObject* guiMainOBj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::RiftPresentGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RiftPresentGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guiMainOBj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, guiMainOBj);
}
// Autogenerated method: OVRDebugInfo.UpdateDeviceDetection
void GlobalNamespace::OVRDebugInfo::UpdateDeviceDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateDeviceDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDeviceDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.VariableObjectManager
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::VariableObjectManager(UnityEngine::GameObject* gameObject, ::Il2CppString* name, float posY, ::Il2CppString* str, int fontSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::VariableObjectManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VariableObjectManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(posY), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(fontSize)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, gameObject, name, posY, str, fontSize);
}
// Autogenerated method: OVRDebugInfo.ComponentComposition
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::ComponentComposition(UnityEngine::GameObject* GO) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::ComponentComposition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComponentComposition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(GO)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, GO);
}
// Autogenerated method: OVRDebugInfo.UpdateIPD
void GlobalNamespace::OVRDebugInfo::UpdateIPD() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateIPD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIPD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateEyeHeightOffset
void GlobalNamespace::OVRDebugInfo::UpdateEyeHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateEyeHeightOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEyeHeightOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateEyeDepthOffset
void GlobalNamespace::OVRDebugInfo::UpdateEyeDepthOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateEyeDepthOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEyeDepthOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateFOV
void GlobalNamespace::OVRDebugInfo::UpdateFOV() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateFOV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFOV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateResolutionEyeTexture
void GlobalNamespace::OVRDebugInfo::UpdateResolutionEyeTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateResolutionEyeTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateResolutionEyeTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateLatencyValues
void GlobalNamespace::OVRDebugInfo::UpdateLatencyValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateLatencyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLatencyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateFPS
void GlobalNamespace::OVRDebugInfo::UpdateFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGazePointer
#include "GlobalNamespace/OVRGazePointer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRProgressIndicator
#include "GlobalNamespace/OVRProgressIndicator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRGazePointer _instance
GlobalNamespace::OVRGazePointer* GlobalNamespace::OVRGazePointer::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGazePointer*>("", "OVRGazePointer", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private OVRGazePointer _instance
void GlobalNamespace::OVRGazePointer::_set__instance(GlobalNamespace::OVRGazePointer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGazePointer", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform gazeIcon
UnityEngine::Transform* GlobalNamespace::OVRGazePointer::_get_gazeIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_gazeIcon");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "gazeIcon"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform gazeIcon
void GlobalNamespace::OVRGazePointer::_set_gazeIcon(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_gazeIcon");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gazeIcon", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hideByDefault
bool GlobalNamespace::OVRGazePointer::_get_hideByDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_hideByDefault");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "hideByDefault"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean hideByDefault
void GlobalNamespace::OVRGazePointer::_set_hideByDefault(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_hideByDefault");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "hideByDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single showTimeoutPeriod
float GlobalNamespace::OVRGazePointer::_get_showTimeoutPeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_showTimeoutPeriod");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "showTimeoutPeriod"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single showTimeoutPeriod
void GlobalNamespace::OVRGazePointer::_set_showTimeoutPeriod(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_showTimeoutPeriod");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "showTimeoutPeriod", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single hideTimeoutPeriod
float GlobalNamespace::OVRGazePointer::_get_hideTimeoutPeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_hideTimeoutPeriod");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "hideTimeoutPeriod"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single hideTimeoutPeriod
void GlobalNamespace::OVRGazePointer::_set_hideTimeoutPeriod(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_hideTimeoutPeriod");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "hideTimeoutPeriod", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dimOnHideRequest
bool GlobalNamespace::OVRGazePointer::_get_dimOnHideRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_dimOnHideRequest");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "dimOnHideRequest"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean dimOnHideRequest
void GlobalNamespace::OVRGazePointer::_set_dimOnHideRequest(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_dimOnHideRequest");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "dimOnHideRequest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single depthScaleMultiplier
float GlobalNamespace::OVRGazePointer::_get_depthScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_depthScaleMultiplier");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "depthScaleMultiplier"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single depthScaleMultiplier
void GlobalNamespace::OVRGazePointer::_set_depthScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_depthScaleMultiplier");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "depthScaleMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean matchNormalOnPhysicsColliders
bool GlobalNamespace::OVRGazePointer::_get_matchNormalOnPhysicsColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_matchNormalOnPhysicsColliders");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "matchNormalOnPhysicsColliders"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean matchNormalOnPhysicsColliders
void GlobalNamespace::OVRGazePointer::_set_matchNormalOnPhysicsColliders(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_matchNormalOnPhysicsColliders");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "matchNormalOnPhysicsColliders", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rayTransform
UnityEngine::Transform* GlobalNamespace::OVRGazePointer::_get_rayTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_rayTransform");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "rayTransform"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Transform rayTransform
void GlobalNamespace::OVRGazePointer::_set_rayTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_rayTransform");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "rayTransform", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hidden>k__BackingField
bool GlobalNamespace::OVRGazePointer::_get_$hidden$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_$hidden$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<hidden>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <hidden>k__BackingField
void GlobalNamespace::OVRGazePointer::_set_$hidden$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_$hidden$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<hidden>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <currentScale>k__BackingField
float GlobalNamespace::OVRGazePointer::_get_$currentScale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_$currentScale$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(___internal__instance, "<currentScale>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Single <currentScale>k__BackingField
void GlobalNamespace::OVRGazePointer::_set_$currentScale$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_$currentScale$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<currentScale>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single depth
float GlobalNamespace::OVRGazePointer::_get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_depth");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "depth"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single depth
void GlobalNamespace::OVRGazePointer::_set_depth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_depth");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "depth", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single hideUntilTime
float GlobalNamespace::OVRGazePointer::_get_hideUntilTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_hideUntilTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "hideUntilTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single hideUntilTime
void GlobalNamespace::OVRGazePointer::_set_hideUntilTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_hideUntilTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "hideUntilTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 positionSetsThisFrame
int GlobalNamespace::OVRGazePointer::_get_positionSetsThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_positionSetsThisFrame");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "positionSetsThisFrame"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 positionSetsThisFrame
void GlobalNamespace::OVRGazePointer::_set_positionSetsThisFrame(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_positionSetsThisFrame");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "positionSetsThisFrame", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastShowRequestTime
float GlobalNamespace::OVRGazePointer::_get_lastShowRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_lastShowRequestTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "lastShowRequestTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single lastShowRequestTime
void GlobalNamespace::OVRGazePointer::_set_lastShowRequestTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_lastShowRequestTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "lastShowRequestTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastHideRequestTime
float GlobalNamespace::OVRGazePointer::_get_lastHideRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_lastHideRequestTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "lastHideRequestTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single lastHideRequestTime
void GlobalNamespace::OVRGazePointer::_set_lastHideRequestTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_lastHideRequestTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "lastHideRequestTime", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRProgressIndicator progressIndicator
GlobalNamespace::OVRProgressIndicator* GlobalNamespace::OVRGazePointer::_get_progressIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get_progressIndicator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProgressIndicator*>(___internal__instance, "progressIndicator"));
}
// Autogenerated instance field setter
// Set instance field: private OVRProgressIndicator progressIndicator
void GlobalNamespace::OVRGazePointer::_set_progressIndicator(GlobalNamespace::OVRProgressIndicator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set_progressIndicator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "progressIndicator", value));
}
// Autogenerated method: OVRGazePointer.get_hidden
bool GlobalNamespace::OVRGazePointer::get_hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_hidden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.set_hidden
void GlobalNamespace::OVRGazePointer::set_hidden(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::set_hidden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hidden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRGazePointer.get_currentScale
float GlobalNamespace::OVRGazePointer::get_currentScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_currentScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.set_currentScale
void GlobalNamespace::OVRGazePointer::set_currentScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::set_currentScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRGazePointer.get_instance
GlobalNamespace::OVRGazePointer* GlobalNamespace::OVRGazePointer::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGazePointer", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRGazePointer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRGazePointer.get_visibilityStrength
float GlobalNamespace::OVRGazePointer::get_visibilityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_visibilityStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_visibilityStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.get_SelectionProgress
float GlobalNamespace::OVRGazePointer::get_SelectionProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_SelectionProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectionProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.set_SelectionProgress
void GlobalNamespace::OVRGazePointer::set_SelectionProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::set_SelectionProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectionProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRGazePointer.Awake
void GlobalNamespace::OVRGazePointer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.Update
void GlobalNamespace::OVRGazePointer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.LateUpdate
void GlobalNamespace::OVRGazePointer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.RequestHide
void GlobalNamespace::OVRGazePointer::RequestHide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::RequestHide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestHide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.RequestShow
void GlobalNamespace::OVRGazePointer::RequestShow() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::RequestShow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestShow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.Hide
void GlobalNamespace::OVRGazePointer::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.Show
void GlobalNamespace::OVRGazePointer::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.SetCursorStartDest
void GlobalNamespace::OVRGazePointer::SetCursorStartDest(UnityEngine::Vector3 _, UnityEngine::Vector3 pos, UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::SetCursorStartDest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorStartDest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(normal)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, _, pos, normal);
}
// Autogenerated method: OVRGazePointer.SetCursorRay
void GlobalNamespace::OVRGazePointer::SetCursorRay(UnityEngine::Transform* ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::SetCursorRay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGearVrControllerTest
#include "GlobalNamespace/OVRGearVrControllerTest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_allowOffhandGrab
bool GlobalNamespace::OVRGrabbable::_get_m_allowOffhandGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_get_m_allowOffhandGrab");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_allowOffhandGrab"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Boolean m_allowOffhandGrab
void GlobalNamespace::OVRGrabbable::_set_m_allowOffhandGrab(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_set_m_allowOffhandGrab");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_allowOffhandGrab", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_snapPosition
bool GlobalNamespace::OVRGrabbable::_get_m_snapPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_get_m_snapPosition");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_snapPosition"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Boolean m_snapPosition
void GlobalNamespace::OVRGrabbable::_set_m_snapPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_set_m_snapPosition");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_snapPosition", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_snapOrientation
bool GlobalNamespace::OVRGrabbable::_get_m_snapOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_get_m_snapOrientation");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_snapOrientation"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Boolean m_snapOrientation
void GlobalNamespace::OVRGrabbable::_set_m_snapOrientation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_set_m_snapOrientation");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_snapOrientation", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform m_snapOffset
UnityEngine::Transform* GlobalNamespace::OVRGrabbable::_get_m_snapOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_get_m_snapOffset");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "m_snapOffset"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Transform m_snapOffset
void GlobalNamespace::OVRGrabbable::_set_m_snapOffset(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_set_m_snapOffset");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_snapOffset", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Collider[] m_grabPoints
::Array<UnityEngine::Collider*>* GlobalNamespace::OVRGrabbable::_get_m_grabPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_get_m_grabPoints");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Collider*>*>(___internal__instance, "m_grabPoints"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Collider[] m_grabPoints
void GlobalNamespace::OVRGrabbable::_set_m_grabPoints(::Array<UnityEngine::Collider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_set_m_grabPoints");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabPoints", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_grabbedKinematic
bool GlobalNamespace::OVRGrabbable::_get_m_grabbedKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_get_m_grabbedKinematic");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_grabbedKinematic"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Boolean m_grabbedKinematic
void GlobalNamespace::OVRGrabbable::_set_m_grabbedKinematic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_set_m_grabbedKinematic");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabbedKinematic", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Collider m_grabbedCollider
UnityEngine::Collider* GlobalNamespace::OVRGrabbable::_get_m_grabbedCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_get_m_grabbedCollider");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Collider*>(___internal__instance, "m_grabbedCollider"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Collider m_grabbedCollider
void GlobalNamespace::OVRGrabbable::_set_m_grabbedCollider(UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_set_m_grabbedCollider");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabbedCollider", value));
}
// Autogenerated instance field getter
// Get instance field: protected OVRGrabber m_grabbedBy
GlobalNamespace::OVRGrabber* GlobalNamespace::OVRGrabbable::_get_m_grabbedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_get_m_grabbedBy");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGrabber*>(___internal__instance, "m_grabbedBy"));
}
// Autogenerated instance field setter
// Set instance field: protected OVRGrabber m_grabbedBy
void GlobalNamespace::OVRGrabbable::_set_m_grabbedBy(GlobalNamespace::OVRGrabber* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::_set_m_grabbedBy");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabbedBy", value));
}
// Autogenerated method: OVRGrabbable.get_allowOffhandGrab
bool GlobalNamespace::OVRGrabbable::get_allowOffhandGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_allowOffhandGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowOffhandGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_isGrabbed
bool GlobalNamespace::OVRGrabbable::get_isGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_isGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_snapPosition
bool GlobalNamespace::OVRGrabbable::get_snapPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_snapPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_snapOrientation
bool GlobalNamespace::OVRGrabbable::get_snapOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_snapOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_snapOffset
UnityEngine::Transform* GlobalNamespace::OVRGrabbable::get_snapOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_snapOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_grabbedBy
GlobalNamespace::OVRGrabber* GlobalNamespace::OVRGrabbable::get_grabbedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_grabbedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grabbedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRGrabber*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_grabbedTransform
UnityEngine::Transform* GlobalNamespace::OVRGrabbable::get_grabbedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_grabbedTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grabbedTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_grabbedRigidbody
UnityEngine::Rigidbody* GlobalNamespace::OVRGrabbable::get_grabbedRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_grabbedRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grabbedRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_grabPoints
::Array<UnityEngine::Collider*>* GlobalNamespace::OVRGrabbable::get_grabPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_grabPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grabPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Collider*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.GrabBegin
void GlobalNamespace::OVRGrabbable::GrabBegin(GlobalNamespace::OVRGrabber* hand, UnityEngine::Collider* grabPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::GrabBegin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(grabPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hand, grabPoint);
}
// Autogenerated method: OVRGrabbable.GrabEnd
void GlobalNamespace::OVRGrabbable::GrabEnd(UnityEngine::Vector3 linearVelocity, UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::GrabEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: OVRGrabbable.Awake
void GlobalNamespace::OVRGrabbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.Start
void GlobalNamespace::OVRGrabbable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.OnDestroy
void GlobalNamespace::OVRGrabbable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single grabBegin
float GlobalNamespace::OVRGrabber::_get_grabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_grabBegin");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "grabBegin"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single grabBegin
void GlobalNamespace::OVRGrabber::_set_grabBegin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_grabBegin");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "grabBegin", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single grabEnd
float GlobalNamespace::OVRGrabber::_get_grabEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_grabEnd");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "grabEnd"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single grabEnd
void GlobalNamespace::OVRGrabber::_set_grabEnd(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_grabEnd");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "grabEnd", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_parentHeldObject
bool GlobalNamespace::OVRGrabber::_get_m_parentHeldObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_parentHeldObject");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_parentHeldObject"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Boolean m_parentHeldObject
void GlobalNamespace::OVRGrabber::_set_m_parentHeldObject(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_parentHeldObject");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_parentHeldObject", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_moveHandPosition
bool GlobalNamespace::OVRGrabber::_get_m_moveHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_moveHandPosition");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_moveHandPosition"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Boolean m_moveHandPosition
void GlobalNamespace::OVRGrabber::_set_m_moveHandPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_moveHandPosition");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_moveHandPosition", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform m_gripTransform
UnityEngine::Transform* GlobalNamespace::OVRGrabber::_get_m_gripTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_gripTransform");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "m_gripTransform"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Transform m_gripTransform
void GlobalNamespace::OVRGrabber::_set_m_gripTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_gripTransform");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_gripTransform", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Collider[] m_grabVolumes
::Array<UnityEngine::Collider*>* GlobalNamespace::OVRGrabber::_get_m_grabVolumes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_grabVolumes");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Collider*>*>(___internal__instance, "m_grabVolumes"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Collider[] m_grabVolumes
void GlobalNamespace::OVRGrabber::_set_m_grabVolumes(::Array<UnityEngine::Collider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_grabVolumes");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabVolumes", value));
}
// Autogenerated instance field getter
// Get instance field: protected OVRInput/Controller m_controller
GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRGrabber::_get_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_controller");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::Controller>(___internal__instance, "m_controller"));
}
// Autogenerated instance field setter
// Set instance field: protected OVRInput/Controller m_controller
void GlobalNamespace::OVRGrabber::_set_m_controller(GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_controller");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_controller", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform m_parentTransform
UnityEngine::Transform* GlobalNamespace::OVRGrabber::_get_m_parentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_parentTransform");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "m_parentTransform"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Transform m_parentTransform
void GlobalNamespace::OVRGrabber::_set_m_parentTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_parentTransform");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_parentTransform", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.GameObject m_player
UnityEngine::GameObject* GlobalNamespace::OVRGrabber::_get_m_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_player");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "m_player"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.GameObject m_player
void GlobalNamespace::OVRGrabber::_set_m_player(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_player");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_player", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_grabVolumeEnabled
bool GlobalNamespace::OVRGrabber::_get_m_grabVolumeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_grabVolumeEnabled");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_grabVolumeEnabled"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Boolean m_grabVolumeEnabled
void GlobalNamespace::OVRGrabber::_set_m_grabVolumeEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_grabVolumeEnabled");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabVolumeEnabled", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 m_lastPos
UnityEngine::Vector3 GlobalNamespace::OVRGrabber::_get_m_lastPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_lastPos");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>(___internal__instance, "m_lastPos"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Vector3 m_lastPos
void GlobalNamespace::OVRGrabber::_set_m_lastPos(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_lastPos");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_lastPos", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Quaternion m_lastRot
UnityEngine::Quaternion GlobalNamespace::OVRGrabber::_get_m_lastRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_lastRot");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Quaternion>(___internal__instance, "m_lastRot"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Quaternion m_lastRot
void GlobalNamespace::OVRGrabber::_set_m_lastRot(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_lastRot");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_lastRot", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Quaternion m_anchorOffsetRotation
UnityEngine::Quaternion GlobalNamespace::OVRGrabber::_get_m_anchorOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_anchorOffsetRotation");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Quaternion>(___internal__instance, "m_anchorOffsetRotation"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Quaternion m_anchorOffsetRotation
void GlobalNamespace::OVRGrabber::_set_m_anchorOffsetRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_anchorOffsetRotation");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_anchorOffsetRotation", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 m_anchorOffsetPosition
UnityEngine::Vector3 GlobalNamespace::OVRGrabber::_get_m_anchorOffsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_anchorOffsetPosition");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>(___internal__instance, "m_anchorOffsetPosition"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Vector3 m_anchorOffsetPosition
void GlobalNamespace::OVRGrabber::_set_m_anchorOffsetPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_anchorOffsetPosition");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_anchorOffsetPosition", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_prevFlex
float GlobalNamespace::OVRGrabber::_get_m_prevFlex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_prevFlex");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "m_prevFlex"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Single m_prevFlex
void GlobalNamespace::OVRGrabber::_set_m_prevFlex(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_prevFlex");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_prevFlex", value));
}
// Autogenerated instance field getter
// Get instance field: protected OVRGrabbable m_grabbedObj
GlobalNamespace::OVRGrabbable* GlobalNamespace::OVRGrabber::_get_m_grabbedObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_grabbedObj");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGrabbable*>(___internal__instance, "m_grabbedObj"));
}
// Autogenerated instance field setter
// Set instance field: protected OVRGrabbable m_grabbedObj
void GlobalNamespace::OVRGrabber::_set_m_grabbedObj(GlobalNamespace::OVRGrabbable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_grabbedObj");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabbedObj", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 m_grabbedObjectPosOff
UnityEngine::Vector3 GlobalNamespace::OVRGrabber::_get_m_grabbedObjectPosOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_grabbedObjectPosOff");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>(___internal__instance, "m_grabbedObjectPosOff"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Vector3 m_grabbedObjectPosOff
void GlobalNamespace::OVRGrabber::_set_m_grabbedObjectPosOff(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_grabbedObjectPosOff");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabbedObjectPosOff", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Quaternion m_grabbedObjectRotOff
UnityEngine::Quaternion GlobalNamespace::OVRGrabber::_get_m_grabbedObjectRotOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_grabbedObjectRotOff");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Quaternion>(___internal__instance, "m_grabbedObjectRotOff"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.Quaternion m_grabbedObjectRotOff
void GlobalNamespace::OVRGrabber::_set_m_grabbedObjectRotOff(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_grabbedObjectRotOff");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabbedObjectRotOff", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<OVRGrabbable,System.Int32> m_grabCandidates
System::Collections::Generic::Dictionary_2<GlobalNamespace::OVRGrabbable*, int>* GlobalNamespace::OVRGrabber::_get_m_grabCandidates() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_grabCandidates");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<GlobalNamespace::OVRGrabbable*, int>*>(___internal__instance, "m_grabCandidates")));
}
// Autogenerated instance field setter
// Set instance field: protected System.Collections.Generic.Dictionary`2<OVRGrabbable,System.Int32> m_grabCandidates
void GlobalNamespace::OVRGrabber::_set_m_grabCandidates(System::Collections::Generic::Dictionary_2<GlobalNamespace::OVRGrabbable*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_grabCandidates");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_grabCandidates", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_operatingWithoutOVRCameraRig
bool GlobalNamespace::OVRGrabber::_get_m_operatingWithoutOVRCameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_get_m_operatingWithoutOVRCameraRig");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_operatingWithoutOVRCameraRig"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Boolean m_operatingWithoutOVRCameraRig
void GlobalNamespace::OVRGrabber::_set_m_operatingWithoutOVRCameraRig(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::_set_m_operatingWithoutOVRCameraRig");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_operatingWithoutOVRCameraRig", value));
}
// Autogenerated method: OVRGrabber.get_grabbedObject
GlobalNamespace::OVRGrabbable* GlobalNamespace::OVRGrabber::get_grabbedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::get_grabbedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grabbedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRGrabbable*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.ForceRelease
void GlobalNamespace::OVRGrabber::ForceRelease(GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::ForceRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabbable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: OVRGrabber.Awake
void GlobalNamespace::OVRGrabber::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.Start
void GlobalNamespace::OVRGrabber::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.Update
void GlobalNamespace::OVRGrabber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.OnUpdatedAnchors
void GlobalNamespace::OVRGrabber::OnUpdatedAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OnUpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.OnDestroy
void GlobalNamespace::OVRGrabber::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.OnTriggerEnter
void GlobalNamespace::OVRGrabber::OnTriggerEnter(UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OVRGrabber.OnTriggerExit
void GlobalNamespace::OVRGrabber::OnTriggerExit(UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OVRGrabber.CheckForGrabOrRelease
void GlobalNamespace::OVRGrabber::CheckForGrabOrRelease(float prevFlex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::CheckForGrabOrRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForGrabOrRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prevFlex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prevFlex);
}
// Autogenerated method: OVRGrabber.GrabBegin
void GlobalNamespace::OVRGrabber::GrabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::GrabBegin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.MoveGrabbedObject
void GlobalNamespace::OVRGrabber::MoveGrabbedObject(UnityEngine::Vector3 pos, UnityEngine::Quaternion rot, bool forceTeleport) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::MoveGrabbedObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveGrabbedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(forceTeleport)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos, rot, forceTeleport);
}
// Autogenerated method: OVRGrabber.GrabEnd
void GlobalNamespace::OVRGrabber::GrabEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::GrabEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.GrabbableRelease
void GlobalNamespace::OVRGrabber::GrabbableRelease(UnityEngine::Vector3 linearVelocity, UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::GrabbableRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabbableRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: OVRGrabber.GrabVolumeEnable
void GlobalNamespace::OVRGrabber::GrabVolumeEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::GrabVolumeEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabVolumeEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: OVRGrabber.OffhandGrabbed
void GlobalNamespace::OVRGrabber::OffhandGrabbed(GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OffhandGrabbed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OffhandGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabbable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: OVRGrabber.SetPlayerIgnoreCollision
void GlobalNamespace::OVRGrabber::SetPlayerIgnoreCollision(UnityEngine::GameObject* grabbable, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::SetPlayerIgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabbable), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, grabbable, ignore);
}
// Autogenerated method: OVRGrabber.<Awake>b__23_0
void GlobalNamespace::OVRGrabber::$Awake$b__23_0(GlobalNamespace::OVRCameraRig* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::<Awake>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGridCube
#include "GlobalNamespace/OVRGridCube.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode GridKey
UnityEngine::KeyCode GlobalNamespace::OVRGridCube::_get_GridKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_GridKey");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>(___internal__instance, "GridKey"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.KeyCode GridKey
void GlobalNamespace::OVRGridCube::_set_GridKey(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_GridKey");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "GridKey", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject CubeGrid
UnityEngine::GameObject* GlobalNamespace::OVRGridCube::_get_CubeGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_CubeGrid");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "CubeGrid"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject CubeGrid
void GlobalNamespace::OVRGridCube::_set_CubeGrid(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_CubeGrid");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CubeGrid", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean CubeGridOn
bool GlobalNamespace::OVRGridCube::_get_CubeGridOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_CubeGridOn");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "CubeGridOn"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean CubeGridOn
void GlobalNamespace::OVRGridCube::_set_CubeGridOn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_CubeGridOn");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CubeGridOn", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean CubeSwitchColorOld
bool GlobalNamespace::OVRGridCube::_get_CubeSwitchColorOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_CubeSwitchColorOld");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "CubeSwitchColorOld"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean CubeSwitchColorOld
void GlobalNamespace::OVRGridCube::_set_CubeSwitchColorOld(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_CubeSwitchColorOld");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CubeSwitchColorOld", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean CubeSwitchColor
bool GlobalNamespace::OVRGridCube::_get_CubeSwitchColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_CubeSwitchColor");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "CubeSwitchColor"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean CubeSwitchColor
void GlobalNamespace::OVRGridCube::_set_CubeSwitchColor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_CubeSwitchColor");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CubeSwitchColor", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 gridSizeX
int GlobalNamespace::OVRGridCube::_get_gridSizeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_gridSizeX");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "gridSizeX"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 gridSizeX
void GlobalNamespace::OVRGridCube::_set_gridSizeX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_gridSizeX");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gridSizeX", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 gridSizeY
int GlobalNamespace::OVRGridCube::_get_gridSizeY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_gridSizeY");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "gridSizeY"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 gridSizeY
void GlobalNamespace::OVRGridCube::_set_gridSizeY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_gridSizeY");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gridSizeY", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 gridSizeZ
int GlobalNamespace::OVRGridCube::_get_gridSizeZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_gridSizeZ");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "gridSizeZ"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 gridSizeZ
void GlobalNamespace::OVRGridCube::_set_gridSizeZ(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_gridSizeZ");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gridSizeZ", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single gridScale
float GlobalNamespace::OVRGridCube::_get_gridScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_gridScale");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "gridScale"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single gridScale
void GlobalNamespace::OVRGridCube::_set_gridScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_gridScale");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gridScale", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single cubeScale
float GlobalNamespace::OVRGridCube::_get_cubeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_cubeScale");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "cubeScale"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single cubeScale
void GlobalNamespace::OVRGridCube::_set_cubeScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_cubeScale");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "cubeScale", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig CameraController
GlobalNamespace::OVRCameraRig* GlobalNamespace::OVRGridCube::_get_CameraController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_get_CameraController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRCameraRig*>(___internal__instance, "CameraController"));
}
// Autogenerated instance field setter
// Set instance field: private OVRCameraRig CameraController
void GlobalNamespace::OVRGridCube::_set_CameraController(GlobalNamespace::OVRCameraRig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::_set_CameraController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CameraController", value));
}
// Autogenerated method: OVRGridCube.Update
void GlobalNamespace::OVRGridCube::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGridCube.SetOVRCameraController
void GlobalNamespace::OVRGridCube::SetOVRCameraController(GlobalNamespace::OVRCameraRig*& cameraController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::SetOVRCameraController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOVRCameraController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cameraController);
}
// Autogenerated method: OVRGridCube.UpdateCubeGrid
void GlobalNamespace::OVRGridCube::UpdateCubeGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::UpdateCubeGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCubeGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGridCube.CreateCubeGrid
void GlobalNamespace::OVRGridCube::CreateCubeGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::CreateCubeGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCubeGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGridCube.CubeGridSwitchColor
void GlobalNamespace::OVRGridCube::CubeGridSwitchColor(bool CubeSwitchColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::CubeGridSwitchColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CubeGridSwitchColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(CubeSwitchColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, CubeSwitchColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRHand/HandFinger
#include "GlobalNamespace/OVRHand_HandFinger.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRSkeleton/SkeletonPoseData
#include "GlobalNamespace/OVRSkeleton_SkeletonPoseData.hpp"
// Including type: OVRSkeletonRenderer/SkeletonRendererData
#include "GlobalNamespace/OVRSkeletonRenderer_SkeletonRendererData.hpp"
// Including type: OVRMeshRenderer/MeshRendererData
#include "GlobalNamespace/OVRMeshRenderer_MeshRendererData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRHand/Hand HandType
GlobalNamespace::OVRHand::Hand GlobalNamespace::OVRHand::_get_HandType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_HandType");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::Hand>(___internal__instance, "HandType"));
}
// Autogenerated instance field setter
// Set instance field: private OVRHand/Hand HandType
void GlobalNamespace::OVRHand::_set_HandType(GlobalNamespace::OVRHand::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_HandType");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "HandType", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pointerPoseRoot
UnityEngine::Transform* GlobalNamespace::OVRHand::_get__pointerPoseRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get__pointerPoseRoot");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "_pointerPoseRoot"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _pointerPoseRoot
void GlobalNamespace::OVRHand::_set__pointerPoseRoot(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set__pointerPoseRoot");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_pointerPoseRoot", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _pointerPoseGO
UnityEngine::GameObject* GlobalNamespace::OVRHand::_get__pointerPoseGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get__pointerPoseGO");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "_pointerPoseGO"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _pointerPoseGO
void GlobalNamespace::OVRHand::_set__pointerPoseGO(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set__pointerPoseGO");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_pointerPoseGO", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/HandState _handState
GlobalNamespace::OVRPlugin::HandState GlobalNamespace::OVRHand::_get__handState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get__handState");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandState>(___internal__instance, "_handState"));
}
// Autogenerated instance field setter
// Set instance field: private OVRPlugin/HandState _handState
void GlobalNamespace::OVRHand::_set__handState(GlobalNamespace::OVRPlugin::HandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set__handState");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_handState", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDataValid>k__BackingField
bool GlobalNamespace::OVRHand::_get_$IsDataValid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_$IsDataValid$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsDataValid>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsDataValid>k__BackingField
void GlobalNamespace::OVRHand::_set_$IsDataValid$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_$IsDataValid$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsDataValid>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDataHighConfidence>k__BackingField
bool GlobalNamespace::OVRHand::_get_$IsDataHighConfidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_$IsDataHighConfidence$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsDataHighConfidence>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsDataHighConfidence>k__BackingField
void GlobalNamespace::OVRHand::_set_$IsDataHighConfidence$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_$IsDataHighConfidence$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsDataHighConfidence>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsTracked>k__BackingField
bool GlobalNamespace::OVRHand::_get_$IsTracked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_$IsTracked$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsTracked>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsTracked>k__BackingField
void GlobalNamespace::OVRHand::_set_$IsTracked$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_$IsTracked$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsTracked>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsSystemGestureInProgress>k__BackingField
bool GlobalNamespace::OVRHand::_get_$IsSystemGestureInProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_$IsSystemGestureInProgress$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsSystemGestureInProgress>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsSystemGestureInProgress>k__BackingField
void GlobalNamespace::OVRHand::_set_$IsSystemGestureInProgress$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_$IsSystemGestureInProgress$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsSystemGestureInProgress>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPointerPoseValid>k__BackingField
bool GlobalNamespace::OVRHand::_get_$IsPointerPoseValid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_$IsPointerPoseValid$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsPointerPoseValid>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsPointerPoseValid>k__BackingField
void GlobalNamespace::OVRHand::_set_$IsPointerPoseValid$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_$IsPointerPoseValid$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsPointerPoseValid>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <PointerPose>k__BackingField
UnityEngine::Transform* GlobalNamespace::OVRHand::_get_$PointerPose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_$PointerPose$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "<PointerPose>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform <PointerPose>k__BackingField
void GlobalNamespace::OVRHand::_set_$PointerPose$k__BackingField(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_$PointerPose$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<PointerPose>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <HandScale>k__BackingField
float GlobalNamespace::OVRHand::_get_$HandScale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_$HandScale$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(___internal__instance, "<HandScale>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Single <HandScale>k__BackingField
void GlobalNamespace::OVRHand::_set_$HandScale$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_$HandScale$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<HandScale>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRHand/TrackingConfidence <HandConfidence>k__BackingField
GlobalNamespace::OVRHand::TrackingConfidence GlobalNamespace::OVRHand::_get_$HandConfidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_$HandConfidence$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::TrackingConfidence>(___internal__instance, "<HandConfidence>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private OVRHand/TrackingConfidence <HandConfidence>k__BackingField
void GlobalNamespace::OVRHand::_set_$HandConfidence$k__BackingField(GlobalNamespace::OVRHand::TrackingConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_$HandConfidence$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<HandConfidence>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDominantHand>k__BackingField
bool GlobalNamespace::OVRHand::_get_$IsDominantHand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_get_$IsDominantHand$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsDominantHand>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsDominantHand>k__BackingField
void GlobalNamespace::OVRHand::_set_$IsDominantHand$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::_set_$IsDominantHand$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsDominantHand>k__BackingField", value));
}
// Autogenerated method: OVRHand.get_IsDataValid
bool GlobalNamespace::OVRHand::get_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDataValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsDataValid
void GlobalNamespace::OVRHand::set_IsDataValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDataValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_IsDataHighConfidence
bool GlobalNamespace::OVRHand::get_IsDataHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsDataHighConfidence
void GlobalNamespace::OVRHand::set_IsDataHighConfidence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_IsTracked
bool GlobalNamespace::OVRHand::get_IsTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsTracked
void GlobalNamespace::OVRHand::set_IsTracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_IsSystemGestureInProgress
bool GlobalNamespace::OVRHand::get_IsSystemGestureInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsSystemGestureInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSystemGestureInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsSystemGestureInProgress
void GlobalNamespace::OVRHand::set_IsSystemGestureInProgress(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsSystemGestureInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsSystemGestureInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_IsPointerPoseValid
bool GlobalNamespace::OVRHand::get_IsPointerPoseValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsPointerPoseValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPointerPoseValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsPointerPoseValid
void GlobalNamespace::OVRHand::set_IsPointerPoseValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsPointerPoseValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPointerPoseValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_PointerPose
UnityEngine::Transform* GlobalNamespace::OVRHand::get_PointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_PointerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_PointerPose
void GlobalNamespace::OVRHand::set_PointerPose(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_PointerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PointerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_HandScale
float GlobalNamespace::OVRHand::get_HandScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_HandScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_HandScale
void GlobalNamespace::OVRHand::set_HandScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_HandScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_HandConfidence
GlobalNamespace::OVRHand::TrackingConfidence GlobalNamespace::OVRHand::get_HandConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_HandConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRHand::TrackingConfidence, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_HandConfidence
void GlobalNamespace::OVRHand::set_HandConfidence(GlobalNamespace::OVRHand::TrackingConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_HandConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_IsDominantHand
bool GlobalNamespace::OVRHand::get_IsDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsDominantHand
void GlobalNamespace::OVRHand::set_IsDominantHand(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.Awake
void GlobalNamespace::OVRHand::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.Update
void GlobalNamespace::OVRHand::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.FixedUpdate
void GlobalNamespace::OVRHand::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.GetHandState
void GlobalNamespace::OVRHand::GetHandState(GlobalNamespace::OVRPlugin::Step step) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::GetHandState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, step);
}
// Autogenerated method: OVRHand.GetFingerIsPinching
bool GlobalNamespace::OVRHand::GetFingerIsPinching(GlobalNamespace::OVRHand::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::GetFingerIsPinching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFingerIsPinching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: OVRHand.GetFingerPinchStrength
float GlobalNamespace::OVRHand::GetFingerPinchStrength(GlobalNamespace::OVRHand::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::GetFingerPinchStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFingerPinchStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated method: OVRHand.GetFingerConfidence
GlobalNamespace::OVRHand::TrackingConfidence GlobalNamespace::OVRHand::GetFingerConfidence(GlobalNamespace::OVRHand::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::GetFingerConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFingerConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRHand::TrackingConfidence, false>(this, ___internal__method, finger);
}
// Autogenerated method: OVRHand.OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonType
GlobalNamespace::OVRSkeleton::SkeletonType GlobalNamespace::OVRHand::OVRSkeleton_IOVRSkeletonDataProvider_GetSkeletonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeleton::SkeletonType, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData
GlobalNamespace::OVRSkeleton::SkeletonPoseData GlobalNamespace::OVRHand::OVRSkeleton_IOVRSkeletonDataProvider_GetSkeletonPoseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeleton::SkeletonPoseData, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider.GetSkeletonRendererData
GlobalNamespace::OVRSkeletonRenderer::SkeletonRendererData GlobalNamespace::OVRHand::OVRSkeletonRenderer_IOVRSkeletonRendererDataProvider_GetSkeletonRendererData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider.GetSkeletonRendererData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider.GetSkeletonRendererData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeletonRenderer::SkeletonRendererData, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.OVRMesh.IOVRMeshDataProvider.GetMeshType
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRHand::OVRMesh_IOVRMeshDataProvider_GetMeshType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRMesh.IOVRMeshDataProvider.GetMeshType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMesh.IOVRMeshDataProvider.GetMeshType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRMesh::MeshType, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.OVRMeshRenderer.IOVRMeshRendererDataProvider.GetMeshRendererData
GlobalNamespace::OVRMeshRenderer::MeshRendererData GlobalNamespace::OVRHand::OVRMeshRenderer_IOVRMeshRendererDataProvider_GetMeshRendererData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRMeshRenderer.IOVRMeshRendererDataProvider.GetMeshRendererData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMeshRenderer.IOVRMeshRendererDataProvider.GetMeshRendererData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRMeshRenderer::MeshRendererData, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHand/Hand
#include "GlobalNamespace/OVRHand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHand/Hand None
GlobalNamespace::OVRHand::Hand GlobalNamespace::OVRHand::Hand::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::Hand>("", "OVRHand/Hand", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/Hand None
void GlobalNamespace::OVRHand::Hand::_set_None(GlobalNamespace::OVRHand::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/Hand", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/Hand HandLeft
GlobalNamespace::OVRHand::Hand GlobalNamespace::OVRHand::Hand::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::Hand>("", "OVRHand/Hand", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/Hand HandLeft
void GlobalNamespace::OVRHand::Hand::_set_HandLeft(GlobalNamespace::OVRHand::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/Hand", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/Hand HandRight
GlobalNamespace::OVRHand::Hand GlobalNamespace::OVRHand::Hand::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::Hand>("", "OVRHand/Hand", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/Hand HandRight
void GlobalNamespace::OVRHand::Hand::_set_HandRight(GlobalNamespace::OVRHand::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/Hand", "HandRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRHand::Hand::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRHand::Hand::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHand/HandFinger
#include "GlobalNamespace/OVRHand_HandFinger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Thumb
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Thumb
void GlobalNamespace::OVRHand::HandFinger::_set_Thumb(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Index
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Index"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Index
void GlobalNamespace::OVRHand::HandFinger::_set_Index(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Middle
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Middle
void GlobalNamespace::OVRHand::HandFinger::_set_Middle(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Ring
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Ring() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Ring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Ring"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Ring
void GlobalNamespace::OVRHand::HandFinger::_set_Ring(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Ring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Ring", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Pinky
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Pinky() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Pinky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Pinky"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Pinky
void GlobalNamespace::OVRHand::HandFinger::_set_Pinky(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Pinky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Pinky", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Max
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Max
void GlobalNamespace::OVRHand::HandFinger::_set_Max(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRHand::HandFinger::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRHand::HandFinger::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHand/TrackingConfidence
#include "GlobalNamespace/OVRHand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHand/TrackingConfidence Low
GlobalNamespace::OVRHand::TrackingConfidence GlobalNamespace::OVRHand::TrackingConfidence::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::TrackingConfidence>("", "OVRHand/TrackingConfidence", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/TrackingConfidence Low
void GlobalNamespace::OVRHand::TrackingConfidence::_set_Low(GlobalNamespace::OVRHand::TrackingConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/TrackingConfidence", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/TrackingConfidence High
GlobalNamespace::OVRHand::TrackingConfidence GlobalNamespace::OVRHand::TrackingConfidence::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::TrackingConfidence>("", "OVRHand/TrackingConfidence", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/TrackingConfidence High
void GlobalNamespace::OVRHand::TrackingConfidence::_set_High(GlobalNamespace::OVRHand::TrackingConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/TrackingConfidence", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRHand::TrackingConfidence::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRHand::TrackingConfidence::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHandTest
#include "GlobalNamespace/OVRHandTest.hpp"
// Including type: OVRHandTest/BoolMonitor
#include "GlobalNamespace/OVRHandTest_BoolMonitor.hpp"
// Including type: OVRHandTest/<>c
#include "GlobalNamespace/OVRHandTest_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRPlugin/Mesh
#include "GlobalNamespace/OVRPlugin_Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String prevConnected
::Il2CppString* GlobalNamespace::OVRHandTest::_get_prevConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_prevConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRHandTest", "prevConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevConnected
void GlobalNamespace::OVRHandTest::_set_prevConnected(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_prevConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHandTest", "prevConnected", value));
}
// Autogenerated static field getter
// Get static field: static private OVRHandTest/BoolMonitor controllers
GlobalNamespace::OVRHandTest::BoolMonitor* GlobalNamespace::OVRHandTest::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHandTest::BoolMonitor*>("", "OVRHandTest", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private OVRHandTest/BoolMonitor controllers
void GlobalNamespace::OVRHandTest::_set_controllers(GlobalNamespace::OVRHandTest::BoolMonitor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHandTest", "controllers", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text uiText
UnityEngine::UI::Text* GlobalNamespace::OVRHandTest::_get_uiText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_uiText");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Text*>(___internal__instance, "uiText"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.UI.Text uiText
void GlobalNamespace::OVRHandTest::_set_uiText(UnityEngine::UI::Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_uiText");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "uiText", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRHandTest/BoolMonitor> monitors
System::Collections::Generic::List_1<GlobalNamespace::OVRHandTest::BoolMonitor*>* GlobalNamespace::OVRHandTest::_get_monitors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_monitors");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OVRHandTest::BoolMonitor*>*>(___internal__instance, "monitors"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<OVRHandTest/BoolMonitor> monitors
void GlobalNamespace::OVRHandTest::_set_monitors(System::Collections::Generic::List_1<GlobalNamespace::OVRHandTest::BoolMonitor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_monitors");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "monitors", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder data
System::Text::StringBuilder* GlobalNamespace::OVRHandTest::_get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_data");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::StringBuilder*>(___internal__instance, "data"));
}
// Autogenerated instance field setter
// Set instance field: private System.Text.StringBuilder data
void GlobalNamespace::OVRHandTest::_set_data(System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_data");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "data", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/HandState hs_LH
GlobalNamespace::OVRPlugin::HandState GlobalNamespace::OVRHandTest::_get_hs_LH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_hs_LH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandState>(___internal__instance, "hs_LH"));
}
// Autogenerated instance field setter
// Set instance field: private OVRPlugin/HandState hs_LH
void GlobalNamespace::OVRHandTest::_set_hs_LH(GlobalNamespace::OVRPlugin::HandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_hs_LH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "hs_LH", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/HandState hs_RH
GlobalNamespace::OVRPlugin::HandState GlobalNamespace::OVRHandTest::_get_hs_RH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_hs_RH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandState>(___internal__instance, "hs_RH"));
}
// Autogenerated instance field setter
// Set instance field: private OVRPlugin/HandState hs_RH
void GlobalNamespace::OVRHandTest::_set_hs_RH(GlobalNamespace::OVRPlugin::HandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_hs_RH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "hs_RH", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Skeleton skel_LH
GlobalNamespace::OVRPlugin::Skeleton GlobalNamespace::OVRHandTest::_get_skel_LH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_skel_LH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Skeleton>(___internal__instance, "skel_LH"));
}
// Autogenerated instance field setter
// Set instance field: private OVRPlugin/Skeleton skel_LH
void GlobalNamespace::OVRHandTest::_set_skel_LH(GlobalNamespace::OVRPlugin::Skeleton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_skel_LH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "skel_LH", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Skeleton skel_RH
GlobalNamespace::OVRPlugin::Skeleton GlobalNamespace::OVRHandTest::_get_skel_RH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_skel_RH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Skeleton>(___internal__instance, "skel_RH"));
}
// Autogenerated instance field setter
// Set instance field: private OVRPlugin/Skeleton skel_RH
void GlobalNamespace::OVRHandTest::_set_skel_RH(GlobalNamespace::OVRPlugin::Skeleton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_skel_RH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "skel_RH", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Mesh mesh_LH
GlobalNamespace::OVRPlugin::Mesh* GlobalNamespace::OVRHandTest::_get_mesh_LH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_mesh_LH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Mesh*>(___internal__instance, "mesh_LH"));
}
// Autogenerated instance field setter
// Set instance field: private OVRPlugin/Mesh mesh_LH
void GlobalNamespace::OVRHandTest::_set_mesh_LH(GlobalNamespace::OVRPlugin::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_mesh_LH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "mesh_LH", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Mesh mesh_RH
GlobalNamespace::OVRPlugin::Mesh* GlobalNamespace::OVRHandTest::_get_mesh_RH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_mesh_RH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Mesh*>(___internal__instance, "mesh_RH"));
}
// Autogenerated instance field setter
// Set instance field: private OVRPlugin/Mesh mesh_RH
void GlobalNamespace::OVRHandTest::_set_mesh_RH(GlobalNamespace::OVRPlugin::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_mesh_RH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "mesh_RH", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean result_skel_LH
bool GlobalNamespace::OVRHandTest::_get_result_skel_LH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_result_skel_LH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "result_skel_LH"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean result_skel_LH
void GlobalNamespace::OVRHandTest::_set_result_skel_LH(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_result_skel_LH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "result_skel_LH", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean result_skel_RH
bool GlobalNamespace::OVRHandTest::_get_result_skel_RH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_result_skel_RH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "result_skel_RH"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean result_skel_RH
void GlobalNamespace::OVRHandTest::_set_result_skel_RH(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_result_skel_RH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "result_skel_RH", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean result_mesh_LH
bool GlobalNamespace::OVRHandTest::_get_result_mesh_LH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_result_mesh_LH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "result_mesh_LH"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean result_mesh_LH
void GlobalNamespace::OVRHandTest::_set_result_mesh_LH(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_result_mesh_LH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "result_mesh_LH", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean result_mesh_RH
bool GlobalNamespace::OVRHandTest::_get_result_mesh_RH() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_result_mesh_RH");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "result_mesh_RH"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean result_mesh_RH
void GlobalNamespace::OVRHandTest::_set_result_mesh_RH(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_result_mesh_RH");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "result_mesh_RH", value));
}
// Autogenerated method: OVRHandTest.Start
void GlobalNamespace::OVRHandTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest.Update
void GlobalNamespace::OVRHandTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest..cctor
void GlobalNamespace::OVRHandTest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHandTest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHandTest/BoolMonitor
#include "GlobalNamespace/OVRHandTest_BoolMonitor.hpp"
// Including type: OVRHandTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRHandTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_name
::Il2CppString* GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_name");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "m_name"));
}
// Autogenerated instance field setter
// Set instance field: private System.String m_name
void GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_name");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_name", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRHandTest/BoolMonitor/BoolGenerator m_generator
GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_generator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_generator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator*>(___internal__instance, "m_generator"));
}
// Autogenerated instance field setter
// Set instance field: private OVRHandTest/BoolMonitor/BoolGenerator m_generator
void GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_generator(GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_generator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_generator", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_prevValue
bool GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_prevValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_prevValue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_prevValue"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean m_prevValue
void GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_prevValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_prevValue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_prevValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currentValue
bool GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_currentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_currentValue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_currentValue"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean m_currentValue
void GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_currentValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_currentValue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_currentValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currentValueRecentlyChanged
bool GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_currentValueRecentlyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_currentValueRecentlyChanged");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "m_currentValueRecentlyChanged"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean m_currentValueRecentlyChanged
void GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_currentValueRecentlyChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_currentValueRecentlyChanged");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_currentValueRecentlyChanged", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_displayTimeout
float GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_displayTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_displayTimeout");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "m_displayTimeout"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single m_displayTimeout
void GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_displayTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_displayTimeout");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_displayTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_displayTimer
float GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_displayTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_get_m_displayTimer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "m_displayTimer"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single m_displayTimer
void GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_displayTimer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::_set_m_displayTimer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_displayTimer", value));
}
// Autogenerated method: OVRHandTest/BoolMonitor.Update
void GlobalNamespace::OVRHandTest::BoolMonitor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest/BoolMonitor.AppendToStringBuilder
void GlobalNamespace::OVRHandTest::BoolMonitor::AppendToStringBuilder(System::Text::StringBuilder*& sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::AppendToStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHandTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRHandTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRHandTest/BoolMonitor/BoolGenerator.Invoke
bool GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest/BoolMonitor/BoolGenerator.BeginInvoke
System::IAsyncResult* GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVRHandTest/BoolMonitor/BoolGenerator.EndInvoke
bool GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHandTest/<>c
#include "GlobalNamespace/OVRHandTest_--c.hpp"
// Including type: OVRHandTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRHandTest_BoolMonitor_BoolGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRHandTest/<>c <>9
GlobalNamespace::OVRHandTest::$$c* GlobalNamespace::OVRHandTest::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHandTest::$$c*>("", "OVRHandTest/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHandTest/<>c <>9
void GlobalNamespace::OVRHandTest::$$c::_set_$$9(GlobalNamespace::OVRHandTest::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRHandTest/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRHandTest/BoolMonitor/BoolGenerator <>9__14_0
GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRHandTest::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator*>("", "OVRHandTest/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public OVRHandTest/BoolMonitor/BoolGenerator <>9__14_0
void GlobalNamespace::OVRHandTest::$$c::_set_$$9__14_0(GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRHandTest/<>c", "<>9__14_0", value)));
}
// Autogenerated method: OVRHandTest/<>c..cctor
void GlobalNamespace::OVRHandTest::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHandTest/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHandTest/<>c.<Start>b__14_0
bool GlobalNamespace::OVRHandTest::$$c::$Start$b__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::<Start>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest/<>c.<.cctor>b__19_0
bool GlobalNamespace::OVRHandTest::$$c::$_cctor$b__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::<.cctor>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMesh
#include "GlobalNamespace/OVRMesh.hpp"
// Including type: OVRMesh/IOVRMeshDataProvider
#include "GlobalNamespace/OVRMesh_IOVRMeshDataProvider.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRMesh/IOVRMeshDataProvider _dataProvider
GlobalNamespace::OVRMesh::IOVRMeshDataProvider* GlobalNamespace::OVRMesh::_get__dataProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::_get__dataProvider");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMesh::IOVRMeshDataProvider*>(___internal__instance, "_dataProvider"));
}
// Autogenerated instance field setter
// Set instance field: private OVRMesh/IOVRMeshDataProvider _dataProvider
void GlobalNamespace::OVRMesh::_set__dataProvider(GlobalNamespace::OVRMesh::IOVRMeshDataProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::_set__dataProvider");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_dataProvider", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRMesh/MeshType _meshType
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRMesh::_get__meshType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::_get__meshType");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMesh::MeshType>(___internal__instance, "_meshType"));
}
// Autogenerated instance field setter
// Set instance field: private OVRMesh/MeshType _meshType
void GlobalNamespace::OVRMesh::_set__meshType(GlobalNamespace::OVRMesh::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::_set__meshType");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_meshType", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
UnityEngine::Mesh* GlobalNamespace::OVRMesh::_get__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::_get__mesh");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Mesh*>(___internal__instance, "_mesh"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Mesh _mesh
void GlobalNamespace::OVRMesh::_set__mesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::_set__mesh");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_mesh", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsInitialized>k__BackingField
bool GlobalNamespace::OVRMesh::_get_$IsInitialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::_get_$IsInitialized$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsInitialized>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsInitialized>k__BackingField
void GlobalNamespace::OVRMesh::_set_$IsInitialized$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::_set_$IsInitialized$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsInitialized>k__BackingField", value));
}
// Autogenerated method: OVRMesh.get_IsInitialized
bool GlobalNamespace::OVRMesh::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMesh.set_IsInitialized
void GlobalNamespace::OVRMesh::set_IsInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::set_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMesh.get_Mesh
UnityEngine::Mesh* GlobalNamespace::OVRMesh::get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::get_Mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: OVRMesh.Awake
void GlobalNamespace::OVRMesh::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMesh.ShouldInitialize
bool GlobalNamespace::OVRMesh::ShouldInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::ShouldInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMesh.Initialize
void GlobalNamespace::OVRMesh::Initialize(GlobalNamespace::OVRMesh::MeshType meshType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, meshType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMesh/IOVRMeshDataProvider
#include "GlobalNamespace/OVRMesh_IOVRMeshDataProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMesh/IOVRMeshDataProvider.GetMeshType
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRMesh::IOVRMeshDataProvider::GetMeshType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::IOVRMeshDataProvider::GetMeshType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMeshType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRMesh::MeshType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMesh/MeshType
#include "GlobalNamespace/OVRMesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRMesh/MeshType None
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRMesh::MeshType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMesh::MeshType>("", "OVRMesh/MeshType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRMesh/MeshType None
void GlobalNamespace::OVRMesh::MeshType::_set_None(GlobalNamespace::OVRMesh::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMesh/MeshType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMesh/MeshType HandLeft
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRMesh::MeshType::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMesh::MeshType>("", "OVRMesh/MeshType", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRMesh/MeshType HandLeft
void GlobalNamespace::OVRMesh::MeshType::_set_HandLeft(GlobalNamespace::OVRMesh::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMesh/MeshType", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMesh/MeshType HandRight
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRMesh::MeshType::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMesh::MeshType>("", "OVRMesh/MeshType", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRMesh/MeshType HandRight
void GlobalNamespace::OVRMesh::MeshType::_set_HandRight(GlobalNamespace::OVRMesh::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMesh/MeshType", "HandRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRMesh::MeshType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRMesh::MeshType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMeshRenderer
#include "GlobalNamespace/OVRMeshRenderer.hpp"
// Including type: OVRMeshRenderer/IOVRMeshRendererDataProvider
#include "GlobalNamespace/OVRMeshRenderer_IOVRMeshRendererDataProvider.hpp"
// Including type: OVRMeshRenderer/MeshRendererData
#include "GlobalNamespace/OVRMeshRenderer_MeshRendererData.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: OVRMesh
#include "GlobalNamespace/OVRMesh.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer/IOVRMeshRendererDataProvider _dataProvider
GlobalNamespace::OVRMeshRenderer::IOVRMeshRendererDataProvider* GlobalNamespace::OVRMeshRenderer::_get__dataProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get__dataProvider");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMeshRenderer::IOVRMeshRendererDataProvider*>(___internal__instance, "_dataProvider"));
}
// Autogenerated instance field setter
// Set instance field: private OVRMeshRenderer/IOVRMeshRendererDataProvider _dataProvider
void GlobalNamespace::OVRMeshRenderer::_set__dataProvider(GlobalNamespace::OVRMeshRenderer::IOVRMeshRendererDataProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set__dataProvider");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_dataProvider", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRMesh _ovrMesh
GlobalNamespace::OVRMesh* GlobalNamespace::OVRMeshRenderer::_get__ovrMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get__ovrMesh");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMesh*>(___internal__instance, "_ovrMesh"));
}
// Autogenerated instance field setter
// Set instance field: private OVRMesh _ovrMesh
void GlobalNamespace::OVRMeshRenderer::_set__ovrMesh(GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set__ovrMesh");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_ovrMesh", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton _ovrSkeleton
GlobalNamespace::OVRSkeleton* GlobalNamespace::OVRMeshRenderer::_get__ovrSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get__ovrSkeleton");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRSkeleton*>(___internal__instance, "_ovrSkeleton"));
}
// Autogenerated instance field setter
// Set instance field: private OVRSkeleton _ovrSkeleton
void GlobalNamespace::OVRMeshRenderer::_set__ovrSkeleton(GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set__ovrSkeleton");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_ovrSkeleton", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer/ConfidenceBehavior _confidenceBehavior
GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior GlobalNamespace::OVRMeshRenderer::_get__confidenceBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get__confidenceBehavior");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior>(___internal__instance, "_confidenceBehavior"));
}
// Autogenerated instance field setter
// Set instance field: private OVRMeshRenderer/ConfidenceBehavior _confidenceBehavior
void GlobalNamespace::OVRMeshRenderer::_set__confidenceBehavior(GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set__confidenceBehavior");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_confidenceBehavior", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer/SystemGestureBehavior _systemGestureBehavior
GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior GlobalNamespace::OVRMeshRenderer::_get__systemGestureBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get__systemGestureBehavior");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior>(___internal__instance, "_systemGestureBehavior"));
}
// Autogenerated instance field setter
// Set instance field: private OVRMeshRenderer/SystemGestureBehavior _systemGestureBehavior
void GlobalNamespace::OVRMeshRenderer::_set__systemGestureBehavior(GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set__systemGestureBehavior");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_systemGestureBehavior", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _systemGestureMaterial
UnityEngine::Material* GlobalNamespace::OVRMeshRenderer::_get__systemGestureMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get__systemGestureMaterial");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>(___internal__instance, "_systemGestureMaterial"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Material _systemGestureMaterial
void GlobalNamespace::OVRMeshRenderer::_set__systemGestureMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set__systemGestureMaterial");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_systemGestureMaterial", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _originalMaterial
UnityEngine::Material* GlobalNamespace::OVRMeshRenderer::_get__originalMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get__originalMaterial");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>(___internal__instance, "_originalMaterial"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Material _originalMaterial
void GlobalNamespace::OVRMeshRenderer::_set__originalMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set__originalMaterial");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_originalMaterial", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _skinnedMeshRenderer
UnityEngine::SkinnedMeshRenderer* GlobalNamespace::OVRMeshRenderer::_get__skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get__skinnedMeshRenderer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SkinnedMeshRenderer*>(___internal__instance, "_skinnedMeshRenderer"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.SkinnedMeshRenderer _skinnedMeshRenderer
void GlobalNamespace::OVRMeshRenderer::_set__skinnedMeshRenderer(UnityEngine::SkinnedMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set__skinnedMeshRenderer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_skinnedMeshRenderer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsInitialized>k__BackingField
bool GlobalNamespace::OVRMeshRenderer::_get_$IsInitialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get_$IsInitialized$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsInitialized>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsInitialized>k__BackingField
void GlobalNamespace::OVRMeshRenderer::_set_$IsInitialized$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set_$IsInitialized$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsInitialized>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDataValid>k__BackingField
bool GlobalNamespace::OVRMeshRenderer::_get_$IsDataValid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get_$IsDataValid$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsDataValid>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsDataValid>k__BackingField
void GlobalNamespace::OVRMeshRenderer::_set_$IsDataValid$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set_$IsDataValid$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsDataValid>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDataHighConfidence>k__BackingField
bool GlobalNamespace::OVRMeshRenderer::_get_$IsDataHighConfidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get_$IsDataHighConfidence$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsDataHighConfidence>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsDataHighConfidence>k__BackingField
void GlobalNamespace::OVRMeshRenderer::_set_$IsDataHighConfidence$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set_$IsDataHighConfidence$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsDataHighConfidence>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ShouldUseSystemGestureMaterial>k__BackingField
bool GlobalNamespace::OVRMeshRenderer::_get_$ShouldUseSystemGestureMaterial$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_get_$ShouldUseSystemGestureMaterial$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<ShouldUseSystemGestureMaterial>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <ShouldUseSystemGestureMaterial>k__BackingField
void GlobalNamespace::OVRMeshRenderer::_set_$ShouldUseSystemGestureMaterial$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::_set_$ShouldUseSystemGestureMaterial$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<ShouldUseSystemGestureMaterial>k__BackingField", value));
}
// Autogenerated method: OVRMeshRenderer.get_IsInitialized
bool GlobalNamespace::OVRMeshRenderer::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.set_IsInitialized
void GlobalNamespace::OVRMeshRenderer::set_IsInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::set_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer.get_IsDataValid
bool GlobalNamespace::OVRMeshRenderer::get_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::get_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDataValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.set_IsDataValid
void GlobalNamespace::OVRMeshRenderer::set_IsDataValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::set_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDataValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer.get_IsDataHighConfidence
bool GlobalNamespace::OVRMeshRenderer::get_IsDataHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::get_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.set_IsDataHighConfidence
void GlobalNamespace::OVRMeshRenderer::set_IsDataHighConfidence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::set_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer.get_ShouldUseSystemGestureMaterial
bool GlobalNamespace::OVRMeshRenderer::get_ShouldUseSystemGestureMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::get_ShouldUseSystemGestureMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldUseSystemGestureMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.set_ShouldUseSystemGestureMaterial
void GlobalNamespace::OVRMeshRenderer::set_ShouldUseSystemGestureMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::set_ShouldUseSystemGestureMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShouldUseSystemGestureMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer.Awake
void GlobalNamespace::OVRMeshRenderer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.Start
void GlobalNamespace::OVRMeshRenderer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.ShouldInitialize
bool GlobalNamespace::OVRMeshRenderer::ShouldInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::ShouldInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.Initialize
void GlobalNamespace::OVRMeshRenderer::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.Update
void GlobalNamespace::OVRMeshRenderer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMeshRenderer/IOVRMeshRendererDataProvider
#include "GlobalNamespace/OVRMeshRenderer_IOVRMeshRendererDataProvider.hpp"
// Including type: OVRMeshRenderer/MeshRendererData
#include "GlobalNamespace/OVRMeshRenderer_MeshRendererData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMeshRenderer/IOVRMeshRendererDataProvider.GetMeshRendererData
GlobalNamespace::OVRMeshRenderer::MeshRendererData GlobalNamespace::OVRMeshRenderer::IOVRMeshRendererDataProvider::GetMeshRendererData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::IOVRMeshRendererDataProvider::GetMeshRendererData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMeshRendererData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRMeshRenderer::MeshRendererData, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMeshRenderer/MeshRendererData
#include "GlobalNamespace/OVRMeshRenderer_MeshRendererData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDataValid>k__BackingField
bool GlobalNamespace::OVRMeshRenderer::MeshRendererData::_get_$IsDataValid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::_get_$IsDataValid$k__BackingField");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsDataValid>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsDataValid>k__BackingField
void GlobalNamespace::OVRMeshRenderer::MeshRendererData::_set_$IsDataValid$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::_set_$IsDataValid$k__BackingField");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsDataValid>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDataHighConfidence>k__BackingField
bool GlobalNamespace::OVRMeshRenderer::MeshRendererData::_get_$IsDataHighConfidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::_get_$IsDataHighConfidence$k__BackingField");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsDataHighConfidence>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsDataHighConfidence>k__BackingField
void GlobalNamespace::OVRMeshRenderer::MeshRendererData::_set_$IsDataHighConfidence$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::_set_$IsDataHighConfidence$k__BackingField");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsDataHighConfidence>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ShouldUseSystemGestureMaterial>k__BackingField
bool GlobalNamespace::OVRMeshRenderer::MeshRendererData::_get_$ShouldUseSystemGestureMaterial$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::_get_$ShouldUseSystemGestureMaterial$k__BackingField");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<ShouldUseSystemGestureMaterial>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <ShouldUseSystemGestureMaterial>k__BackingField
void GlobalNamespace::OVRMeshRenderer::MeshRendererData::_set_$ShouldUseSystemGestureMaterial$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::_set_$ShouldUseSystemGestureMaterial$k__BackingField");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<ShouldUseSystemGestureMaterial>k__BackingField", value));
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.get_IsDataValid
bool GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsDataValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.set_IsDataValid
void GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_IsDataValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IsDataValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.get_IsDataHighConfidence
bool GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_IsDataHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.set_IsDataHighConfidence
void GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_IsDataHighConfidence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.get_ShouldUseSystemGestureMaterial
bool GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_ShouldUseSystemGestureMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_ShouldUseSystemGestureMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ShouldUseSystemGestureMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.set_ShouldUseSystemGestureMaterial
void GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_ShouldUseSystemGestureMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_ShouldUseSystemGestureMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ShouldUseSystemGestureMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMeshRenderer/ConfidenceBehavior
#include "GlobalNamespace/OVRMeshRenderer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRMeshRenderer/ConfidenceBehavior None
GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior>("", "OVRMeshRenderer/ConfidenceBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRMeshRenderer/ConfidenceBehavior None
void GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_set_None(GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMeshRenderer/ConfidenceBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMeshRenderer/ConfidenceBehavior ToggleRenderer
GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_get_ToggleRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_get_ToggleRenderer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior>("", "OVRMeshRenderer/ConfidenceBehavior", "ToggleRenderer"));
}
// Autogenerated static field setter
// Set static field: static public OVRMeshRenderer/ConfidenceBehavior ToggleRenderer
void GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_set_ToggleRenderer(GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_set_ToggleRenderer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMeshRenderer/ConfidenceBehavior", "ToggleRenderer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::ConfidenceBehavior::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMeshRenderer/SystemGestureBehavior
#include "GlobalNamespace/OVRMeshRenderer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRMeshRenderer/SystemGestureBehavior None
GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior>("", "OVRMeshRenderer/SystemGestureBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRMeshRenderer/SystemGestureBehavior None
void GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_set_None(GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMeshRenderer/SystemGestureBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMeshRenderer/SystemGestureBehavior SwapMaterial
GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_get_SwapMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_get_SwapMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior>("", "OVRMeshRenderer/SystemGestureBehavior", "SwapMaterial"));
}
// Autogenerated static field setter
// Set static field: static public OVRMeshRenderer/SystemGestureBehavior SwapMaterial
void GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_set_SwapMaterial(GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_set_SwapMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMeshRenderer/SystemGestureBehavior", "SwapMaterial", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::SystemGestureBehavior::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager_CameraDevice.hpp"
// Including type: OVRManager/DepthQuality
#include "GlobalNamespace/OVRManager_DepthQuality.hpp"
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager_VirtualGreenScreenType.hpp"
// Including type: OVRManager/MrcActivationMode
#include "GlobalNamespace/OVRManager_MrcActivationMode.hpp"
// Including type: OVRManager/InstantiateMrcCameraDelegate
#include "GlobalNamespace/OVRManager_InstantiateMrcCameraDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_enableMixedReality
bool GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_enableMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_enableMixedReality");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_enableMixedReality
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_enableMixedReality(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_enableMixedReality");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_extraHiddenLayers
UnityEngine::LayerMask GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_extraHiddenLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_extraHiddenLayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extraHiddenLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_extraHiddenLayers
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_extraHiddenLayers(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_extraHiddenLayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_extraHiddenLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_extraVisibleLayers
UnityEngine::LayerMask GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_extraVisibleLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_extraVisibleLayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extraVisibleLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_extraVisibleLayers
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_extraVisibleLayers(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_extraVisibleLayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_extraVisibleLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_dynamicCullingMask
bool GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_dynamicCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_dynamicCullingMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dynamicCullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_dynamicCullingMask
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_dynamicCullingMask(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_dynamicCullingMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dynamicCullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_compositionMethod
GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_compositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_compositionMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compositionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_compositionMethod
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_compositionMethod(GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_compositionMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_compositionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorRift
UnityEngine::Color GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_externalCompositionBackdropColorRift() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_externalCompositionBackdropColorRift");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_externalCompositionBackdropColorRift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorRift
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_externalCompositionBackdropColorRift(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_externalCompositionBackdropColorRift");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_externalCompositionBackdropColorRift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorQuest
UnityEngine::Color GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_externalCompositionBackdropColorQuest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_externalCompositionBackdropColorQuest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_externalCompositionBackdropColorQuest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorQuest
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_externalCompositionBackdropColorQuest(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_externalCompositionBackdropColorQuest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_externalCompositionBackdropColorQuest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_capturingCameraDevice
GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_capturingCameraDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_capturingCameraDevice");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_capturingCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_CameraDevice, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_capturingCameraDevice
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_capturingCameraDevice(GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_capturingCameraDevice");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_capturingCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_flipCameraFrameHorizontally
bool GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_flipCameraFrameHorizontally() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_flipCameraFrameHorizontally");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flipCameraFrameHorizontally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_flipCameraFrameHorizontally
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_flipCameraFrameHorizontally(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_flipCameraFrameHorizontally");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flipCameraFrameHorizontally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_flipCameraFrameVertically
bool GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_flipCameraFrameVertically() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_flipCameraFrameVertically");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flipCameraFrameVertically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_flipCameraFrameVertically
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_flipCameraFrameVertically(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_flipCameraFrameVertically");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flipCameraFrameVertically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_handPoseStateLatency
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_handPoseStateLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_handPoseStateLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handPoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_handPoseStateLatency
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_handPoseStateLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_handPoseStateLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handPoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_sandwichCompositionRenderLatency
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_sandwichCompositionRenderLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_sandwichCompositionRenderLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sandwichCompositionRenderLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_sandwichCompositionRenderLatency
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_sandwichCompositionRenderLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_sandwichCompositionRenderLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sandwichCompositionRenderLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_sandwichCompositionBufferedFrames
int GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_sandwichCompositionBufferedFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_sandwichCompositionBufferedFrames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sandwichCompositionBufferedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_sandwichCompositionBufferedFrames
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_sandwichCompositionBufferedFrames(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_sandwichCompositionBufferedFrames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sandwichCompositionBufferedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_chromaKeyColor
UnityEngine::Color GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_chromaKeyColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_chromaKeyColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_chromaKeyColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_chromaKeyColor
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_chromaKeyColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_chromaKeyColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_chromaKeyColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_chromaKeySimilarity
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_chromaKeySimilarity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_chromaKeySimilarity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_chromaKeySimilarity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_chromaKeySimilarity
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_chromaKeySimilarity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_chromaKeySimilarity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_chromaKeySimilarity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_chromaKeySmoothRange
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_chromaKeySmoothRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_chromaKeySmoothRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_chromaKeySmoothRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_chromaKeySmoothRange
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_chromaKeySmoothRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_chromaKeySmoothRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_chromaKeySmoothRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_chromaKeySpillRange
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_chromaKeySpillRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_chromaKeySpillRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_chromaKeySpillRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_chromaKeySpillRange
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_chromaKeySpillRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_chromaKeySpillRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_chromaKeySpillRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_useDynamicLighting
bool GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_useDynamicLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_useDynamicLighting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useDynamicLighting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_useDynamicLighting
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_useDynamicLighting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_useDynamicLighting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useDynamicLighting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_depthQuality
GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_depthQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_depthQuality");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_DepthQuality, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_depthQuality
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_depthQuality(GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_depthQuality");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_dynamicLightingSmoothFactor
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_dynamicLightingSmoothFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_dynamicLightingSmoothFactor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dynamicLightingSmoothFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_dynamicLightingSmoothFactor
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_dynamicLightingSmoothFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_dynamicLightingSmoothFactor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dynamicLightingSmoothFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_dynamicLightingDepthVariationClampingValue
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_dynamicLightingDepthVariationClampingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_dynamicLightingDepthVariationClampingValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dynamicLightingDepthVariationClampingValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_dynamicLightingDepthVariationClampingValue
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_dynamicLightingDepthVariationClampingValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_dynamicLightingDepthVariationClampingValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dynamicLightingDepthVariationClampingValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenType
GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_virtualGreenScreenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_VirtualGreenScreenType, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenType
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenType(GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_virtualGreenScreenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenTopY
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenTopY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenTopY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_virtualGreenScreenTopY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenTopY
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenTopY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenTopY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_virtualGreenScreenTopY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenBottomY
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenBottomY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenBottomY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_virtualGreenScreenBottomY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenBottomY
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenBottomY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenBottomY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_virtualGreenScreenBottomY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenApplyDepthCulling
bool GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenApplyDepthCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenApplyDepthCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_virtualGreenScreenApplyDepthCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenApplyDepthCulling
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenApplyDepthCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenApplyDepthCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_virtualGreenScreenApplyDepthCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenDepthTolerance
float GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenDepthTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_virtualGreenScreenDepthTolerance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_virtualGreenScreenDepthTolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenDepthTolerance
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenDepthTolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_virtualGreenScreenDepthTolerance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_virtualGreenScreenDepthTolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_mrcActivationMode
GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_mrcActivationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_mrcActivationMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_MrcActivationMode, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_mrcActivationMode
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_mrcActivationMode(GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_mrcActivationMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.get_instantiateMixedRealityCameraGameObject
GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate* GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_instantiateMixedRealityCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::get_instantiateMixedRealityCameraGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_instantiateMixedRealityCameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureConfiguration.set_instantiateMixedRealityCameraGameObject
void GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_instantiateMixedRealityCameraGameObject(GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfiguration::set_instantiateMixedRealityCameraGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_instantiateMixedRealityCameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMixedRealityCaptureConfigurationExtensions
#include "GlobalNamespace/OVRMixedRealityCaptureConfigurationExtensions.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMixedRealityCaptureConfigurationExtensions.ApplyTo
void GlobalNamespace::OVRMixedRealityCaptureConfigurationExtensions::ApplyTo(GlobalNamespace::OVRMixedRealityCaptureConfiguration* dest, GlobalNamespace::OVRMixedRealityCaptureConfiguration* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfigurationExtensions::ApplyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRMixedRealityCaptureConfigurationExtensions", "ApplyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, source);
}
// Autogenerated method: OVRMixedRealityCaptureConfigurationExtensions.ReadFrom
void GlobalNamespace::OVRMixedRealityCaptureConfigurationExtensions::ReadFrom(GlobalNamespace::OVRMixedRealityCaptureConfiguration* dest, GlobalNamespace::OVRMixedRealityCaptureConfiguration* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureConfigurationExtensions::ReadFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRMixedRealityCaptureConfigurationExtensions", "ReadFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMixedRealityCaptureSettings
#include "GlobalNamespace/OVRMixedRealityCaptureSettings.hpp"
// Including type: OVRManager/InstantiateMrcCameraDelegate
#include "GlobalNamespace/OVRManager_InstantiateMrcCameraDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableMixedReality
bool GlobalNamespace::OVRMixedRealityCaptureSettings::_get_enableMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_enableMixedReality");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "enableMixedReality"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean enableMixedReality
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_enableMixedReality(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_enableMixedReality");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "enableMixedReality", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask extraHiddenLayers
UnityEngine::LayerMask GlobalNamespace::OVRMixedRealityCaptureSettings::_get_extraHiddenLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_extraHiddenLayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LayerMask>(___internal__instance, "extraHiddenLayers"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.LayerMask extraHiddenLayers
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_extraHiddenLayers(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_extraHiddenLayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "extraHiddenLayers", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask extraVisibleLayers
UnityEngine::LayerMask GlobalNamespace::OVRMixedRealityCaptureSettings::_get_extraVisibleLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_extraVisibleLayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LayerMask>(___internal__instance, "extraVisibleLayers"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.LayerMask extraVisibleLayers
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_extraVisibleLayers(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_extraVisibleLayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "extraVisibleLayers", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dynamicCullingMask
bool GlobalNamespace::OVRMixedRealityCaptureSettings::_get_dynamicCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_dynamicCullingMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "dynamicCullingMask"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean dynamicCullingMask
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_dynamicCullingMask(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_dynamicCullingMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "dynamicCullingMask", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/CompositionMethod compositionMethod
GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRMixedRealityCaptureSettings::_get_compositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_compositionMethod");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_CompositionMethod>(___internal__instance, "compositionMethod"));
}
// Autogenerated instance field setter
// Set instance field: public OVRManager/CompositionMethod compositionMethod
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_compositionMethod(GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_compositionMethod");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "compositionMethod", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color externalCompositionBackdropColorRift
UnityEngine::Color GlobalNamespace::OVRMixedRealityCaptureSettings::_get_externalCompositionBackdropColorRift() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_externalCompositionBackdropColorRift");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>(___internal__instance, "externalCompositionBackdropColorRift"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color externalCompositionBackdropColorRift
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_externalCompositionBackdropColorRift(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_externalCompositionBackdropColorRift");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "externalCompositionBackdropColorRift", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color externalCompositionBackdropColorQuest
UnityEngine::Color GlobalNamespace::OVRMixedRealityCaptureSettings::_get_externalCompositionBackdropColorQuest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_externalCompositionBackdropColorQuest");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>(___internal__instance, "externalCompositionBackdropColorQuest"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color externalCompositionBackdropColorQuest
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_externalCompositionBackdropColorQuest(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_externalCompositionBackdropColorQuest");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "externalCompositionBackdropColorQuest", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/CameraDevice capturingCameraDevice
GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRMixedRealityCaptureSettings::_get_capturingCameraDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_capturingCameraDevice");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_CameraDevice>(___internal__instance, "capturingCameraDevice"));
}
// Autogenerated instance field setter
// Set instance field: public OVRManager/CameraDevice capturingCameraDevice
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_capturingCameraDevice(GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_capturingCameraDevice");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "capturingCameraDevice", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flipCameraFrameHorizontally
bool GlobalNamespace::OVRMixedRealityCaptureSettings::_get_flipCameraFrameHorizontally() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_flipCameraFrameHorizontally");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "flipCameraFrameHorizontally"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean flipCameraFrameHorizontally
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_flipCameraFrameHorizontally(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_flipCameraFrameHorizontally");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "flipCameraFrameHorizontally", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flipCameraFrameVertically
bool GlobalNamespace::OVRMixedRealityCaptureSettings::_get_flipCameraFrameVertically() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_flipCameraFrameVertically");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "flipCameraFrameVertically"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean flipCameraFrameVertically
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_flipCameraFrameVertically(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_flipCameraFrameVertically");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "flipCameraFrameVertically", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single handPoseStateLatency
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_handPoseStateLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_handPoseStateLatency");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "handPoseStateLatency"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single handPoseStateLatency
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_handPoseStateLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_handPoseStateLatency");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "handPoseStateLatency", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single sandwichCompositionRenderLatency
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_sandwichCompositionRenderLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_sandwichCompositionRenderLatency");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "sandwichCompositionRenderLatency"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single sandwichCompositionRenderLatency
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_sandwichCompositionRenderLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_sandwichCompositionRenderLatency");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "sandwichCompositionRenderLatency", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sandwichCompositionBufferedFrames
int GlobalNamespace::OVRMixedRealityCaptureSettings::_get_sandwichCompositionBufferedFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_sandwichCompositionBufferedFrames");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "sandwichCompositionBufferedFrames"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 sandwichCompositionBufferedFrames
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_sandwichCompositionBufferedFrames(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_sandwichCompositionBufferedFrames");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "sandwichCompositionBufferedFrames", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color chromaKeyColor
UnityEngine::Color GlobalNamespace::OVRMixedRealityCaptureSettings::_get_chromaKeyColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_chromaKeyColor");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>(___internal__instance, "chromaKeyColor"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color chromaKeyColor
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_chromaKeyColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_chromaKeyColor");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "chromaKeyColor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single chromaKeySimilarity
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_chromaKeySimilarity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_chromaKeySimilarity");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "chromaKeySimilarity"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single chromaKeySimilarity
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_chromaKeySimilarity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_chromaKeySimilarity");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "chromaKeySimilarity", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single chromaKeySmoothRange
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_chromaKeySmoothRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_chromaKeySmoothRange");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "chromaKeySmoothRange"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single chromaKeySmoothRange
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_chromaKeySmoothRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_chromaKeySmoothRange");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "chromaKeySmoothRange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single chromaKeySpillRange
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_chromaKeySpillRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_chromaKeySpillRange");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "chromaKeySpillRange"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single chromaKeySpillRange
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_chromaKeySpillRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_chromaKeySpillRange");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "chromaKeySpillRange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useDynamicLighting
bool GlobalNamespace::OVRMixedRealityCaptureSettings::_get_useDynamicLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_useDynamicLighting");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "useDynamicLighting"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean useDynamicLighting
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_useDynamicLighting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_useDynamicLighting");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "useDynamicLighting", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/DepthQuality depthQuality
GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRMixedRealityCaptureSettings::_get_depthQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_depthQuality");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_DepthQuality>(___internal__instance, "depthQuality"));
}
// Autogenerated instance field setter
// Set instance field: public OVRManager/DepthQuality depthQuality
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_depthQuality(GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_depthQuality");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "depthQuality", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single dynamicLightingSmoothFactor
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_dynamicLightingSmoothFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_dynamicLightingSmoothFactor");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "dynamicLightingSmoothFactor"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single dynamicLightingSmoothFactor
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_dynamicLightingSmoothFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_dynamicLightingSmoothFactor");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "dynamicLightingSmoothFactor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single dynamicLightingDepthVariationClampingValue
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_dynamicLightingDepthVariationClampingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_dynamicLightingDepthVariationClampingValue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "dynamicLightingDepthVariationClampingValue"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single dynamicLightingDepthVariationClampingValue
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_dynamicLightingDepthVariationClampingValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_dynamicLightingDepthVariationClampingValue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "dynamicLightingDepthVariationClampingValue", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/VirtualGreenScreenType virtualGreenScreenType
GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenType");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_VirtualGreenScreenType>(___internal__instance, "virtualGreenScreenType"));
}
// Autogenerated instance field setter
// Set instance field: public OVRManager/VirtualGreenScreenType virtualGreenScreenType
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenType(GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenType");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "virtualGreenScreenType", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single virtualGreenScreenTopY
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenTopY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenTopY");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "virtualGreenScreenTopY"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single virtualGreenScreenTopY
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenTopY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenTopY");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "virtualGreenScreenTopY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single virtualGreenScreenBottomY
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenBottomY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenBottomY");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "virtualGreenScreenBottomY"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single virtualGreenScreenBottomY
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenBottomY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenBottomY");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "virtualGreenScreenBottomY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean virtualGreenScreenApplyDepthCulling
bool GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenApplyDepthCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenApplyDepthCulling");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "virtualGreenScreenApplyDepthCulling"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean virtualGreenScreenApplyDepthCulling
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenApplyDepthCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenApplyDepthCulling");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "virtualGreenScreenApplyDepthCulling", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single virtualGreenScreenDepthTolerance
float GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenDepthTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_virtualGreenScreenDepthTolerance");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "virtualGreenScreenDepthTolerance"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single virtualGreenScreenDepthTolerance
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenDepthTolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_virtualGreenScreenDepthTolerance");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "virtualGreenScreenDepthTolerance", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/MrcActivationMode mrcActivationMode
GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRMixedRealityCaptureSettings::_get_mrcActivationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_mrcActivationMode");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_MrcActivationMode>(___internal__instance, "mrcActivationMode"));
}
// Autogenerated instance field setter
// Set instance field: public OVRManager/MrcActivationMode mrcActivationMode
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_mrcActivationMode(GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_mrcActivationMode");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "mrcActivationMode", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRManager/InstantiateMrcCameraDelegate <OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject>k__BackingField
GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate* GlobalNamespace::OVRMixedRealityCaptureSettings::_get_$OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_get_$OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*>(___internal__instance, "<OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private OVRManager/InstantiateMrcCameraDelegate <OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject>k__BackingField
void GlobalNamespace::OVRMixedRealityCaptureSettings::_set_$OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject$k__BackingField(GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::_set_$OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject>k__BackingField", value));
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_enableMixedReality
bool GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_enableMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_enableMixedReality");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_enableMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_enableMixedReality
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_enableMixedReality(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_enableMixedReality");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_enableMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_extraHiddenLayers
UnityEngine::LayerMask GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_extraHiddenLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_extraHiddenLayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_extraHiddenLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_extraHiddenLayers
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_extraHiddenLayers(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_extraHiddenLayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_extraHiddenLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_extraVisibleLayers
UnityEngine::LayerMask GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_extraVisibleLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_extraVisibleLayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_extraVisibleLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_extraVisibleLayers
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_extraVisibleLayers(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_extraVisibleLayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_extraVisibleLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_dynamicCullingMask
bool GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_dynamicCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_dynamicCullingMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_dynamicCullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_dynamicCullingMask
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_dynamicCullingMask(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_dynamicCullingMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_dynamicCullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_compositionMethod
GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_compositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_compositionMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_compositionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_compositionMethod
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_compositionMethod(GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_compositionMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_compositionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorRift
UnityEngine::Color GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorRift() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorRift");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorRift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorRift
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorRift(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorRift");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorRift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorQuest
UnityEngine::Color GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorQuest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorQuest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorQuest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorQuest
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorQuest(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorQuest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorQuest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_capturingCameraDevice
GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_capturingCameraDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_capturingCameraDevice");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_capturingCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_CameraDevice, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_capturingCameraDevice
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_capturingCameraDevice(GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_capturingCameraDevice");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_capturingCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_flipCameraFrameHorizontally
bool GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_flipCameraFrameHorizontally() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_flipCameraFrameHorizontally");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_flipCameraFrameHorizontally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_flipCameraFrameHorizontally
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_flipCameraFrameHorizontally(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_flipCameraFrameHorizontally");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_flipCameraFrameHorizontally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_flipCameraFrameVertically
bool GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_flipCameraFrameVertically() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_flipCameraFrameVertically");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_flipCameraFrameVertically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_flipCameraFrameVertically
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_flipCameraFrameVertically(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_flipCameraFrameVertically");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_flipCameraFrameVertically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_handPoseStateLatency
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_handPoseStateLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_handPoseStateLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_handPoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_handPoseStateLatency
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_handPoseStateLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_handPoseStateLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_handPoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_sandwichCompositionRenderLatency
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_sandwichCompositionRenderLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_sandwichCompositionRenderLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_sandwichCompositionRenderLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_sandwichCompositionRenderLatency
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_sandwichCompositionRenderLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_sandwichCompositionRenderLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_sandwichCompositionRenderLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_sandwichCompositionBufferedFrames
int GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_sandwichCompositionBufferedFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_sandwichCompositionBufferedFrames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_sandwichCompositionBufferedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_sandwichCompositionBufferedFrames
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_sandwichCompositionBufferedFrames(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_sandwichCompositionBufferedFrames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_sandwichCompositionBufferedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_chromaKeyColor
UnityEngine::Color GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_chromaKeyColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_chromaKeyColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_chromaKeyColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_chromaKeyColor
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_chromaKeyColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_chromaKeyColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_chromaKeyColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_chromaKeySimilarity
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_chromaKeySimilarity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_chromaKeySimilarity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_chromaKeySimilarity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_chromaKeySimilarity
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_chromaKeySimilarity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_chromaKeySimilarity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_chromaKeySimilarity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_chromaKeySmoothRange
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_chromaKeySmoothRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_chromaKeySmoothRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_chromaKeySmoothRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_chromaKeySmoothRange
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_chromaKeySmoothRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_chromaKeySmoothRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_chromaKeySmoothRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_chromaKeySpillRange
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_chromaKeySpillRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_chromaKeySpillRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_chromaKeySpillRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_chromaKeySpillRange
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_chromaKeySpillRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_chromaKeySpillRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_chromaKeySpillRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_useDynamicLighting
bool GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_useDynamicLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_useDynamicLighting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_useDynamicLighting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_useDynamicLighting
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_useDynamicLighting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_useDynamicLighting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_useDynamicLighting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_depthQuality
GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_depthQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_depthQuality");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_depthQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_DepthQuality, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_depthQuality
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_depthQuality(GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_depthQuality");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_depthQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_dynamicLightingSmoothFactor
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_dynamicLightingSmoothFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_dynamicLightingSmoothFactor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_dynamicLightingSmoothFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_dynamicLightingSmoothFactor
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_dynamicLightingSmoothFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_dynamicLightingSmoothFactor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_dynamicLightingSmoothFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_dynamicLightingDepthVariationClampingValue
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_dynamicLightingDepthVariationClampingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_dynamicLightingDepthVariationClampingValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_dynamicLightingDepthVariationClampingValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_dynamicLightingDepthVariationClampingValue
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_dynamicLightingDepthVariationClampingValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_dynamicLightingDepthVariationClampingValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_dynamicLightingDepthVariationClampingValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenType
GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_VirtualGreenScreenType, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenType
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenType(GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenTopY
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenTopY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenTopY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenTopY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenTopY
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenTopY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenTopY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenTopY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenBottomY
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenBottomY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenBottomY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenBottomY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenBottomY
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenBottomY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenBottomY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenBottomY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenApplyDepthCulling
bool GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenApplyDepthCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenApplyDepthCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenApplyDepthCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenApplyDepthCulling
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenApplyDepthCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenApplyDepthCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenApplyDepthCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenDepthTolerance
float GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenDepthTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenDepthTolerance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenDepthTolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenDepthTolerance
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenDepthTolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenDepthTolerance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenDepthTolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_mrcActivationMode
GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_mrcActivationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_mrcActivationMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_mrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_MrcActivationMode, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_mrcActivationMode
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_mrcActivationMode(GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_mrcActivationMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_mrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.get_instantiateMixedRealityCameraGameObject
GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate* GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_get_instantiateMixedRealityCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.get_instantiateMixedRealityCameraGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.get_instantiateMixedRealityCameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.OVRMixedRealityCaptureConfiguration.set_instantiateMixedRealityCameraGameObject
void GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration_set_instantiateMixedRealityCameraGameObject(GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureSettings::OVRMixedRealityCaptureConfiguration.set_instantiateMixedRealityCameraGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRMixedRealityCaptureConfiguration.set_instantiateMixedRealityCameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMixedRealityCaptureTest
#include "GlobalNamespace/OVRMixedRealityCaptureTest.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
bool GlobalNamespace::OVRMixedRealityCaptureTest::_get_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::_get_inited");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "inited"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean inited
void GlobalNamespace::OVRMixedRealityCaptureTest::_set_inited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::_set_inited");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "inited", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRMixedRealityCaptureTest/CameraMode currentMode
GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode GlobalNamespace::OVRMixedRealityCaptureTest::_get_currentMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::_get_currentMode");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode>(___internal__instance, "currentMode"));
}
// Autogenerated instance field setter
// Set instance field: private OVRMixedRealityCaptureTest/CameraMode currentMode
void GlobalNamespace::OVRMixedRealityCaptureTest::_set_currentMode(GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::_set_currentMode");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "currentMode", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera defaultExternalCamera
UnityEngine::Camera* GlobalNamespace::OVRMixedRealityCaptureTest::_get_defaultExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::_get_defaultExternalCamera");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Camera*>(___internal__instance, "defaultExternalCamera"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Camera defaultExternalCamera
void GlobalNamespace::OVRMixedRealityCaptureTest::_set_defaultExternalCamera(UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::_set_defaultExternalCamera");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "defaultExternalCamera", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Fovf defaultFov
GlobalNamespace::OVRPlugin::Fovf GlobalNamespace::OVRMixedRealityCaptureTest::_get_defaultFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::_get_defaultFov");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Fovf>(___internal__instance, "defaultFov"));
}
// Autogenerated instance field setter
// Set instance field: private OVRPlugin/Fovf defaultFov
void GlobalNamespace::OVRMixedRealityCaptureTest::_set_defaultFov(GlobalNamespace::OVRPlugin::Fovf value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::_set_defaultFov");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "defaultFov", value));
}
// Autogenerated method: OVRMixedRealityCaptureTest.Start
void GlobalNamespace::OVRMixedRealityCaptureTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureTest.Initialize
void GlobalNamespace::OVRMixedRealityCaptureTest::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureTest.UpdateDefaultExternalCamera
void GlobalNamespace::OVRMixedRealityCaptureTest::UpdateDefaultExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::UpdateDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMixedRealityCaptureTest.Update
void GlobalNamespace::OVRMixedRealityCaptureTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMixedRealityCaptureTest/CameraMode
#include "GlobalNamespace/OVRMixedRealityCaptureTest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRMixedRealityCaptureTest/CameraMode Normal
GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode>("", "OVRMixedRealityCaptureTest/CameraMode", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public OVRMixedRealityCaptureTest/CameraMode Normal
void GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_set_Normal(GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedRealityCaptureTest/CameraMode", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMixedRealityCaptureTest/CameraMode OverrideFov
GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_get_OverrideFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_get_OverrideFov");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode>("", "OVRMixedRealityCaptureTest/CameraMode", "OverrideFov"));
}
// Autogenerated static field setter
// Set static field: static public OVRMixedRealityCaptureTest/CameraMode OverrideFov
void GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_set_OverrideFov(GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_set_OverrideFov");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedRealityCaptureTest/CameraMode", "OverrideFov", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMixedRealityCaptureTest/CameraMode ThirdPerson
GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_get_ThirdPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_get_ThirdPerson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode>("", "OVRMixedRealityCaptureTest/CameraMode", "ThirdPerson"));
}
// Autogenerated static field setter
// Set static field: static public OVRMixedRealityCaptureTest/CameraMode ThirdPerson
void GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_set_ThirdPerson(GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_set_ThirdPerson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedRealityCaptureTest/CameraMode", "ThirdPerson", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMixedRealityCaptureTest::CameraMode::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRModeParms
#include "GlobalNamespace/OVRModeParms.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton resetButton
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRModeParms::_get_resetButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRModeParms::_get_resetButton");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>(___internal__instance, "resetButton"));
}
// Autogenerated instance field setter
// Set instance field: public OVRInput/RawButton resetButton
void GlobalNamespace::OVRModeParms::_set_resetButton(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRModeParms::_set_resetButton");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "resetButton", value));
}
// Autogenerated method: OVRModeParms.Start
void GlobalNamespace::OVRModeParms::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRModeParms::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRModeParms.Update
void GlobalNamespace::OVRModeParms::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRModeParms::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRModeParms.TestPowerStateMode
void GlobalNamespace::OVRModeParms::TestPowerStateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRModeParms::TestPowerStateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestPowerStateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMonoscopic
#include "GlobalNamespace/OVRMonoscopic.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton toggleButton
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRMonoscopic::_get_toggleButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMonoscopic::_get_toggleButton");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>(___internal__instance, "toggleButton"));
}
// Autogenerated instance field setter
// Set instance field: public OVRInput/RawButton toggleButton
void GlobalNamespace::OVRMonoscopic::_set_toggleButton(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMonoscopic::_set_toggleButton");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "toggleButton", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean monoscopic
bool GlobalNamespace::OVRMonoscopic::_get_monoscopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMonoscopic::_get_monoscopic");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "monoscopic"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean monoscopic
void GlobalNamespace::OVRMonoscopic::_set_monoscopic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMonoscopic::_set_monoscopic");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "monoscopic", value));
}
// Autogenerated method: OVRMonoscopic.Update
void GlobalNamespace::OVRMonoscopic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMonoscopic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNetwork
#include "GlobalNamespace/OVRNetwork.hpp"
// Including type: OVRNetwork/FrameHeader
#include "GlobalNamespace/OVRNetwork_FrameHeader.hpp"
// Including type: OVRNetwork/OVRNetworkTcpServer
#include "GlobalNamespace/OVRNetwork_OVRNetworkTcpServer.hpp"
// Including type: OVRNetwork/OVRNetworkTcpClient
#include "GlobalNamespace/OVRNetwork_OVRNetworkTcpClient.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxBufferLength
int GlobalNamespace::OVRNetwork::_get_MaxBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::_get_MaxBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRNetwork", "MaxBufferLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxBufferLength
void GlobalNamespace::OVRNetwork::_set_MaxBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::_set_MaxBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNetwork", "MaxBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxPayloadLength
int GlobalNamespace::OVRNetwork::_get_MaxPayloadLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::_get_MaxPayloadLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRNetwork", "MaxPayloadLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxPayloadLength
void GlobalNamespace::OVRNetwork::_set_MaxPayloadLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::_set_MaxPayloadLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNetwork", "MaxPayloadLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 FrameHeaderMagicIdentifier
uint GlobalNamespace::OVRNetwork::_get_FrameHeaderMagicIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::_get_FrameHeaderMagicIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "OVRNetwork", "FrameHeaderMagicIdentifier"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 FrameHeaderMagicIdentifier
void GlobalNamespace::OVRNetwork::_set_FrameHeaderMagicIdentifier(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::_set_FrameHeaderMagicIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNetwork", "FrameHeaderMagicIdentifier", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRNetwork/FrameHeader
#include "GlobalNamespace/OVRNetwork_FrameHeader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 StructSize
int GlobalNamespace::OVRNetwork::FrameHeader::_get_StructSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::_get_StructSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRNetwork/FrameHeader", "StructSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 StructSize
void GlobalNamespace::OVRNetwork::FrameHeader::_set_StructSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::_set_StructSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNetwork/FrameHeader", "StructSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolIdentifier
uint GlobalNamespace::OVRNetwork::FrameHeader::_get_protocolIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::_get_protocolIdentifier");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>(___internal__instance, "protocolIdentifier"));
}
// Autogenerated instance field setter
// Set instance field: public System.UInt32 protocolIdentifier
void GlobalNamespace::OVRNetwork::FrameHeader::_set_protocolIdentifier(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::_set_protocolIdentifier");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "protocolIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 payloadType
int GlobalNamespace::OVRNetwork::FrameHeader::_get_payloadType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::_get_payloadType");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "payloadType"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 payloadType
void GlobalNamespace::OVRNetwork::FrameHeader::_set_payloadType(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::_set_payloadType");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "payloadType", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 payloadLength
int GlobalNamespace::OVRNetwork::FrameHeader::_get_payloadLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::_get_payloadLength");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "payloadLength"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 payloadLength
void GlobalNamespace::OVRNetwork::FrameHeader::_set_payloadLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::_set_payloadLength");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "payloadLength", value));
}
// Autogenerated method: OVRNetwork/FrameHeader.ToBytes
::Array<uint8_t>* GlobalNamespace::OVRNetwork::FrameHeader::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(*this, ___internal__method);
}
// Autogenerated method: OVRNetwork/FrameHeader.FromBytes
GlobalNamespace::OVRNetwork::FrameHeader GlobalNamespace::OVRNetwork::FrameHeader::FromBytes(::Array<uint8_t>* arr) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::FrameHeader::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNetwork/FrameHeader", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRNetwork::FrameHeader, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRNetwork/OVRNetworkTcpServer
#include "GlobalNamespace/OVRNetwork_OVRNetworkTcpServer.hpp"
// Including type: System.Net.Sockets.TcpListener
#include "System/Net/Sockets/TcpListener.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Sockets.TcpClient
#include "System/Net/Sockets/TcpClient.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Net.Sockets.TcpListener tcpListener
System::Net::Sockets::TcpListener* GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_get_tcpListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_get_tcpListener");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::TcpListener*>(___internal__instance, "tcpListener"));
}
// Autogenerated instance field setter
// Set instance field: public System.Net.Sockets.TcpListener tcpListener
void GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_set_tcpListener(System::Net::Sockets::TcpListener* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_set_tcpListener");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "tcpListener", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object clientsLock
::Il2CppObject* GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_get_clientsLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_get_clientsLock");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "clientsLock"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Object clientsLock
void GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_set_clientsLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_set_clientsLock");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "clientsLock", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<System.Net.Sockets.TcpClient> clients
System::Collections::Generic::List_1<System::Net::Sockets::TcpClient*>* GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_get_clients() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_get_clients");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<System::Net::Sockets::TcpClient*>*>(___internal__instance, "clients"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Collections.Generic.List`1<System.Net.Sockets.TcpClient> clients
void GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_set_clients(System::Collections::Generic::List_1<System::Net::Sockets::TcpClient*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::_set_clients");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "clients", value));
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpServer.StartListening
void GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::StartListening(int listeningPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::StartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listeningPort)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, listeningPort);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpServer.StopListening
void GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::StopListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::StopListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpServer.DoAcceptTcpClientCallback
void GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::DoAcceptTcpClientCallback(System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::DoAcceptTcpClientCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoAcceptTcpClientCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpServer.HasConnectedClient
bool GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::HasConnectedClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::HasConnectedClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasConnectedClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpServer.Broadcast
void GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::Broadcast(int payloadType, ::Array<uint8_t>* payload) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::Broadcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Broadcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(payloadType), ::il2cpp_utils::ExtractType(payload)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, payloadType, payload);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpServer.DoWriteDataCallback
void GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::DoWriteDataCallback(System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpServer::DoWriteDataCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWriteDataCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRNetwork/OVRNetworkTcpClient
#include "GlobalNamespace/OVRNetwork_OVRNetworkTcpClient.hpp"
// Including type: OVRNetwork/OVRNetworkTcpClient/ConnectionState
#include "GlobalNamespace/OVRNetwork_OVRNetworkTcpClient_ConnectionState.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Net.Sockets.TcpClient
#include "System/Net/Sockets/TcpClient.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action connectionStateChangedCallback
System::Action* GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_connectionStateChangedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_connectionStateChangedCallback");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "connectionStateChangedCallback"));
}
// Autogenerated instance field setter
// Set instance field: public System.Action connectionStateChangedCallback
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_connectionStateChangedCallback(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_connectionStateChangedCallback");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "connectionStateChangedCallback", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Action`4<System.Int32,System.Byte[],System.Int32,System.Int32> payloadReceivedCallback
System::Action_4<int, ::Array<uint8_t>*, int, int>* GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_payloadReceivedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_payloadReceivedCallback");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_4<int, ::Array<uint8_t>*, int, int>*>(___internal__instance, "payloadReceivedCallback")));
}
// Autogenerated instance field setter
// Set instance field: public System.Action`4<System.Int32,System.Byte[],System.Int32,System.Int32> payloadReceivedCallback
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_payloadReceivedCallback(System::Action_4<int, ::Array<uint8_t>*, int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_payloadReceivedCallback");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "payloadReceivedCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.TcpClient tcpClient
System::Net::Sockets::TcpClient* GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_tcpClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_tcpClient");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::TcpClient*>(___internal__instance, "tcpClient"));
}
// Autogenerated instance field setter
// Set instance field: private System.Net.Sockets.TcpClient tcpClient
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_tcpClient(System::Net::Sockets::TcpClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_tcpClient");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "tcpClient", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[][] receivedBuffers
::Array<::Array<uint8_t>*>* GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_receivedBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_receivedBuffers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Array<uint8_t>*>*>(___internal__instance, "receivedBuffers"));
}
// Autogenerated instance field setter
// Set instance field: private System.Byte[][] receivedBuffers
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_receivedBuffers(::Array<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_receivedBuffers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "receivedBuffers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 receivedBufferIndex
int GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_receivedBufferIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_receivedBufferIndex");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "receivedBufferIndex"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 receivedBufferIndex
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_receivedBufferIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_receivedBufferIndex");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "receivedBufferIndex", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 receivedBufferDataSize
int GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_receivedBufferDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_receivedBufferDataSize");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "receivedBufferDataSize"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 receivedBufferDataSize
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_receivedBufferDataSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_receivedBufferDataSize");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "receivedBufferDataSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent readyReceiveDataEvent
System::Threading::ManualResetEvent* GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_readyReceiveDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_get_readyReceiveDataEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ManualResetEvent*>(___internal__instance, "readyReceiveDataEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Threading.ManualResetEvent readyReceiveDataEvent
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_readyReceiveDataEvent(System::Threading::ManualResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::_set_readyReceiveDataEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "readyReceiveDataEvent", value));
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpClient.get_connectionState
GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::get_connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::get_connectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpClient.get_Connected
bool GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::get_Connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpClient.Connect
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::Connect(int listeningPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listeningPort)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, listeningPort);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpClient.ConnectCallback
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectCallback(System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpClient.Disconnect
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpClient.Tick
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNetwork/OVRNetworkTcpClient.OnReadDataCallback
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::OnReadDataCallback(System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::OnReadDataCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnReadDataCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNetwork/OVRNetworkTcpClient/ConnectionState
#include "GlobalNamespace/OVRNetwork_OVRNetworkTcpClient_ConnectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRNetwork/OVRNetworkTcpClient/ConnectionState Disconnected
GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState>("", "OVRNetwork/OVRNetworkTcpClient/ConnectionState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public OVRNetwork/OVRNetworkTcpClient/ConnectionState Disconnected
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_set_Disconnected(GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNetwork/OVRNetworkTcpClient/ConnectionState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public OVRNetwork/OVRNetworkTcpClient/ConnectionState Connected
GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState>("", "OVRNetwork/OVRNetworkTcpClient/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public OVRNetwork/OVRNetworkTcpClient/ConnectionState Connected
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_set_Connected(GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNetwork/OVRNetworkTcpClient/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public OVRNetwork/OVRNetworkTcpClient/ConnectionState Connecting
GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState>("", "OVRNetwork/OVRNetworkTcpClient/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public OVRNetwork/OVRNetworkTcpClient/ConnectionState Connecting
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_set_Connecting(GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNetwork/OVRNetworkTcpClient/ConnectionState", "Connecting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRNetwork::OVRNetworkTcpClient::ConnectionState::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlayerController
#include "GlobalNamespace/OVRPlayerController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Acceleration
float GlobalNamespace::OVRPlayerController::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_Acceleration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "Acceleration"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single Acceleration
void GlobalNamespace::OVRPlayerController::_set_Acceleration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_Acceleration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "Acceleration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single Damping
float GlobalNamespace::OVRPlayerController::_get_Damping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_Damping");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "Damping"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single Damping
void GlobalNamespace::OVRPlayerController::_set_Damping(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_Damping");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "Damping", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single BackAndSideDampen
float GlobalNamespace::OVRPlayerController::_get_BackAndSideDampen() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_BackAndSideDampen");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "BackAndSideDampen"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single BackAndSideDampen
void GlobalNamespace::OVRPlayerController::_set_BackAndSideDampen(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_BackAndSideDampen");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "BackAndSideDampen", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single JumpForce
float GlobalNamespace::OVRPlayerController::_get_JumpForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_JumpForce");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "JumpForce"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single JumpForce
void GlobalNamespace::OVRPlayerController::_set_JumpForce(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_JumpForce");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "JumpForce", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationAmount
float GlobalNamespace::OVRPlayerController::_get_RotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_RotationAmount");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "RotationAmount"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single RotationAmount
void GlobalNamespace::OVRPlayerController::_set_RotationAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_RotationAmount");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "RotationAmount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationRatchet
float GlobalNamespace::OVRPlayerController::_get_RotationRatchet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_RotationRatchet");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "RotationRatchet"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single RotationRatchet
void GlobalNamespace::OVRPlayerController::_set_RotationRatchet(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_RotationRatchet");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "RotationRatchet", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SnapRotation
bool GlobalNamespace::OVRPlayerController::_get_SnapRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_SnapRotation");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "SnapRotation"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean SnapRotation
void GlobalNamespace::OVRPlayerController::_set_SnapRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_SnapRotation");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "SnapRotation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RotateAroundGuardianCenter
bool GlobalNamespace::OVRPlayerController::_get_RotateAroundGuardianCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_RotateAroundGuardianCenter");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "RotateAroundGuardianCenter"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean RotateAroundGuardianCenter
void GlobalNamespace::OVRPlayerController::_set_RotateAroundGuardianCenter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_RotateAroundGuardianCenter");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "RotateAroundGuardianCenter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FixedSpeedSteps
int GlobalNamespace::OVRPlayerController::_get_FixedSpeedSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_FixedSpeedSteps");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "FixedSpeedSteps"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 FixedSpeedSteps
void GlobalNamespace::OVRPlayerController::_set_FixedSpeedSteps(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_FixedSpeedSteps");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "FixedSpeedSteps", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HmdResetsY
bool GlobalNamespace::OVRPlayerController::_get_HmdResetsY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_HmdResetsY");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "HmdResetsY"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean HmdResetsY
void GlobalNamespace::OVRPlayerController::_set_HmdResetsY(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_HmdResetsY");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "HmdResetsY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HmdRotatesY
bool GlobalNamespace::OVRPlayerController::_get_HmdRotatesY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_HmdRotatesY");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "HmdRotatesY"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean HmdRotatesY
void GlobalNamespace::OVRPlayerController::_set_HmdRotatesY(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_HmdRotatesY");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "HmdRotatesY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single GravityModifier
float GlobalNamespace::OVRPlayerController::_get_GravityModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_GravityModifier");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "GravityModifier"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single GravityModifier
void GlobalNamespace::OVRPlayerController::_set_GravityModifier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_GravityModifier");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "GravityModifier", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useProfileData
bool GlobalNamespace::OVRPlayerController::_get_useProfileData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_useProfileData");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "useProfileData"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean useProfileData
void GlobalNamespace::OVRPlayerController::_set_useProfileData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_useProfileData");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "useProfileData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single CameraHeight
float GlobalNamespace::OVRPlayerController::_get_CameraHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_CameraHeight");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "CameraHeight"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single CameraHeight
void GlobalNamespace::OVRPlayerController::_set_CameraHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_CameraHeight");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CameraHeight", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Transform> TransformUpdated
System::Action_1<UnityEngine::Transform*>* GlobalNamespace::OVRPlayerController::_get_TransformUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_TransformUpdated");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::Transform*>*>(___internal__instance, "TransformUpdated"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<UnityEngine.Transform> TransformUpdated
void GlobalNamespace::OVRPlayerController::_set_TransformUpdated(System::Action_1<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_TransformUpdated");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "TransformUpdated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Teleported
bool GlobalNamespace::OVRPlayerController::_get_Teleported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_Teleported");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "Teleported"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean Teleported
void GlobalNamespace::OVRPlayerController::_set_Teleported(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_Teleported");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "Teleported", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action CameraUpdated
System::Action* GlobalNamespace::OVRPlayerController::_get_CameraUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_CameraUpdated");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "CameraUpdated"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action CameraUpdated
void GlobalNamespace::OVRPlayerController::_set_CameraUpdated(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_CameraUpdated");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CameraUpdated", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreCharacterMove
System::Action* GlobalNamespace::OVRPlayerController::_get_PreCharacterMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_PreCharacterMove");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PreCharacterMove"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PreCharacterMove
void GlobalNamespace::OVRPlayerController::_set_PreCharacterMove(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_PreCharacterMove");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PreCharacterMove", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableLinearMovement
bool GlobalNamespace::OVRPlayerController::_get_EnableLinearMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_EnableLinearMovement");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "EnableLinearMovement"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean EnableLinearMovement
void GlobalNamespace::OVRPlayerController::_set_EnableLinearMovement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_EnableLinearMovement");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "EnableLinearMovement", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotation
bool GlobalNamespace::OVRPlayerController::_get_EnableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_EnableRotation");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "EnableRotation"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean EnableRotation
void GlobalNamespace::OVRPlayerController::_set_EnableRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_EnableRotation");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "EnableRotation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RotationEitherThumbstick
bool GlobalNamespace::OVRPlayerController::_get_RotationEitherThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_RotationEitherThumbstick");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "RotationEitherThumbstick"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean RotationEitherThumbstick
void GlobalNamespace::OVRPlayerController::_set_RotationEitherThumbstick(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_RotationEitherThumbstick");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "RotationEitherThumbstick", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.CharacterController Controller
UnityEngine::CharacterController* GlobalNamespace::OVRPlayerController::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_Controller");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CharacterController*>(___internal__instance, "Controller"));
}
// Autogenerated instance field setter
// Set instance field: protected UnityEngine.CharacterController Controller
void GlobalNamespace::OVRPlayerController::_set_Controller(UnityEngine::CharacterController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_Controller");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "Controller", value));
}
// Autogenerated instance field getter
// Get instance field: protected OVRCameraRig CameraRig
GlobalNamespace::OVRCameraRig* GlobalNamespace::OVRPlayerController::_get_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_CameraRig");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRCameraRig*>(___internal__instance, "CameraRig"));
}
// Autogenerated instance field setter
// Set instance field: protected OVRCameraRig CameraRig
void GlobalNamespace::OVRPlayerController::_set_CameraRig(GlobalNamespace::OVRCameraRig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_CameraRig");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CameraRig", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single MoveScale
float GlobalNamespace::OVRPlayerController::_get_MoveScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_MoveScale");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "MoveScale"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single MoveScale
void GlobalNamespace::OVRPlayerController::_set_MoveScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_MoveScale");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "MoveScale", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 MoveThrottle
UnityEngine::Vector3 GlobalNamespace::OVRPlayerController::_get_MoveThrottle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_MoveThrottle");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>(___internal__instance, "MoveThrottle"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 MoveThrottle
void GlobalNamespace::OVRPlayerController::_set_MoveThrottle(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_MoveThrottle");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "MoveThrottle", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single FallSpeed
float GlobalNamespace::OVRPlayerController::_get_FallSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_FallSpeed");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "FallSpeed"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single FallSpeed
void GlobalNamespace::OVRPlayerController::_set_FallSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_FallSpeed");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "FallSpeed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<OVRPose> InitialPose
System::Nullable_1<GlobalNamespace::OVRPose> GlobalNamespace::OVRPlayerController::_get_InitialPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_InitialPose");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Nullable_1<GlobalNamespace::OVRPose>>(___internal__instance, "InitialPose"));
}
// Autogenerated instance field setter
// Set instance field: private System.Nullable`1<OVRPose> InitialPose
void GlobalNamespace::OVRPlayerController::_set_InitialPose(System::Nullable_1<GlobalNamespace::OVRPose> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_InitialPose");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "InitialPose", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <InitialYRotation>k__BackingField
float GlobalNamespace::OVRPlayerController::_get_$InitialYRotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_$InitialYRotation$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(___internal__instance, "<InitialYRotation>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Single <InitialYRotation>k__BackingField
void GlobalNamespace::OVRPlayerController::_set_$InitialYRotation$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_$InitialYRotation$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<InitialYRotation>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single MoveScaleMultiplier
float GlobalNamespace::OVRPlayerController::_get_MoveScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_MoveScaleMultiplier");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "MoveScaleMultiplier"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single MoveScaleMultiplier
void GlobalNamespace::OVRPlayerController::_set_MoveScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_MoveScaleMultiplier");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "MoveScaleMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single RotationScaleMultiplier
float GlobalNamespace::OVRPlayerController::_get_RotationScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_RotationScaleMultiplier");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "RotationScaleMultiplier"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single RotationScaleMultiplier
void GlobalNamespace::OVRPlayerController::_set_RotationScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_RotationScaleMultiplier");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "RotationScaleMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean SkipMouseRotation
bool GlobalNamespace::OVRPlayerController::_get_SkipMouseRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_SkipMouseRotation");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "SkipMouseRotation"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean SkipMouseRotation
void GlobalNamespace::OVRPlayerController::_set_SkipMouseRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_SkipMouseRotation");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "SkipMouseRotation", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean HaltUpdateMovement
bool GlobalNamespace::OVRPlayerController::_get_HaltUpdateMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_HaltUpdateMovement");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "HaltUpdateMovement"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean HaltUpdateMovement
void GlobalNamespace::OVRPlayerController::_set_HaltUpdateMovement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_HaltUpdateMovement");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "HaltUpdateMovement", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean prevHatLeft
bool GlobalNamespace::OVRPlayerController::_get_prevHatLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_prevHatLeft");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "prevHatLeft"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean prevHatLeft
void GlobalNamespace::OVRPlayerController::_set_prevHatLeft(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_prevHatLeft");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "prevHatLeft", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean prevHatRight
bool GlobalNamespace::OVRPlayerController::_get_prevHatRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_prevHatRight");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "prevHatRight"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean prevHatRight
void GlobalNamespace::OVRPlayerController::_set_prevHatRight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_prevHatRight");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "prevHatRight", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single SimulationRate
float GlobalNamespace::OVRPlayerController::_get_SimulationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_SimulationRate");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "SimulationRate"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single SimulationRate
void GlobalNamespace::OVRPlayerController::_set_SimulationRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_SimulationRate");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "SimulationRate", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single buttonRotation
float GlobalNamespace::OVRPlayerController::_get_buttonRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_buttonRotation");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "buttonRotation"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single buttonRotation
void GlobalNamespace::OVRPlayerController::_set_buttonRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_buttonRotation");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "buttonRotation", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ReadyToSnapTurn
bool GlobalNamespace::OVRPlayerController::_get_ReadyToSnapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_ReadyToSnapTurn");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "ReadyToSnapTurn"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean ReadyToSnapTurn
void GlobalNamespace::OVRPlayerController::_set_ReadyToSnapTurn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_ReadyToSnapTurn");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "ReadyToSnapTurn", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean playerControllerEnabled
bool GlobalNamespace::OVRPlayerController::_get_playerControllerEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_get_playerControllerEnabled");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "playerControllerEnabled"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean playerControllerEnabled
void GlobalNamespace::OVRPlayerController::_set_playerControllerEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::_set_playerControllerEnabled");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerControllerEnabled", value));
}
// Autogenerated method: OVRPlayerController.get_InitialYRotation
float GlobalNamespace::OVRPlayerController::get_InitialYRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::get_InitialYRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InitialYRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.set_InitialYRotation
void GlobalNamespace::OVRPlayerController::set_InitialYRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::set_InitialYRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InitialYRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPlayerController.add_TransformUpdated
void GlobalNamespace::OVRPlayerController::add_TransformUpdated(System::Action_1<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::add_TransformUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_TransformUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPlayerController.remove_TransformUpdated
void GlobalNamespace::OVRPlayerController::remove_TransformUpdated(System::Action_1<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::remove_TransformUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_TransformUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPlayerController.add_CameraUpdated
void GlobalNamespace::OVRPlayerController::add_CameraUpdated(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::add_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPlayerController.remove_CameraUpdated
void GlobalNamespace::OVRPlayerController::remove_CameraUpdated(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::remove_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPlayerController.add_PreCharacterMove
void GlobalNamespace::OVRPlayerController::add_PreCharacterMove(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::add_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPlayerController.remove_PreCharacterMove
void GlobalNamespace::OVRPlayerController::remove_PreCharacterMove(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::remove_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPlayerController.Start
void GlobalNamespace::OVRPlayerController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.Awake
void GlobalNamespace::OVRPlayerController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.OnEnable
void GlobalNamespace::OVRPlayerController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.OnDisable
void GlobalNamespace::OVRPlayerController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.Update
void GlobalNamespace::OVRPlayerController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.UpdateController
void GlobalNamespace::OVRPlayerController::UpdateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::UpdateController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.UpdateMovement
void GlobalNamespace::OVRPlayerController::UpdateMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::UpdateMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.UpdateTransform
void GlobalNamespace::OVRPlayerController::UpdateTransform(GlobalNamespace::OVRCameraRig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::UpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rig);
}
// Autogenerated method: OVRPlayerController.Jump
bool GlobalNamespace::OVRPlayerController::Jump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::Jump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Jump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.Stop
void GlobalNamespace::OVRPlayerController::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlayerController.GetMoveScaleMultiplier
void GlobalNamespace::OVRPlayerController::GetMoveScaleMultiplier(float& moveScaleMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::GetMoveScaleMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMoveScaleMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveScaleMultiplier)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, moveScaleMultiplier);
}
// Autogenerated method: OVRPlayerController.SetMoveScaleMultiplier
void GlobalNamespace::OVRPlayerController::SetMoveScaleMultiplier(float moveScaleMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::SetMoveScaleMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMoveScaleMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveScaleMultiplier)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, moveScaleMultiplier);
}
// Autogenerated method: OVRPlayerController.GetRotationScaleMultiplier
void GlobalNamespace::OVRPlayerController::GetRotationScaleMultiplier(float& rotationScaleMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::GetRotationScaleMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotationScaleMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationScaleMultiplier)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotationScaleMultiplier);
}
// Autogenerated method: OVRPlayerController.SetRotationScaleMultiplier
void GlobalNamespace::OVRPlayerController::SetRotationScaleMultiplier(float rotationScaleMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::SetRotationScaleMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRotationScaleMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationScaleMultiplier)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotationScaleMultiplier);
}
// Autogenerated method: OVRPlayerController.GetSkipMouseRotation
void GlobalNamespace::OVRPlayerController::GetSkipMouseRotation(bool& skipMouseRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::GetSkipMouseRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkipMouseRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipMouseRotation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, skipMouseRotation);
}
// Autogenerated method: OVRPlayerController.SetSkipMouseRotation
void GlobalNamespace::OVRPlayerController::SetSkipMouseRotation(bool skipMouseRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::SetSkipMouseRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSkipMouseRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipMouseRotation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, skipMouseRotation);
}
// Autogenerated method: OVRPlayerController.GetHaltUpdateMovement
void GlobalNamespace::OVRPlayerController::GetHaltUpdateMovement(bool& haltUpdateMovement) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::GetHaltUpdateMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHaltUpdateMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(haltUpdateMovement)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, haltUpdateMovement);
}
// Autogenerated method: OVRPlayerController.SetHaltUpdateMovement
void GlobalNamespace::OVRPlayerController::SetHaltUpdateMovement(bool haltUpdateMovement) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::SetHaltUpdateMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHaltUpdateMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(haltUpdateMovement)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, haltUpdateMovement);
}
// Autogenerated method: OVRPlayerController.ResetOrientation
void GlobalNamespace::OVRPlayerController::ResetOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlayerController::ResetOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRProgressIndicator
#include "GlobalNamespace/OVRProgressIndicator.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer progressImage
UnityEngine::MeshRenderer* GlobalNamespace::OVRProgressIndicator::_get_progressImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProgressIndicator::_get_progressImage");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MeshRenderer*>(___internal__instance, "progressImage"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.MeshRenderer progressImage
void GlobalNamespace::OVRProgressIndicator::_set_progressImage(UnityEngine::MeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProgressIndicator::_set_progressImage");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "progressImage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentProgress
float GlobalNamespace::OVRProgressIndicator::_get_currentProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProgressIndicator::_get_currentProgress");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "currentProgress"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single currentProgress
void GlobalNamespace::OVRProgressIndicator::_set_currentProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProgressIndicator::_set_currentProgress");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "currentProgress", value));
}
// Autogenerated method: OVRProgressIndicator.Awake
void GlobalNamespace::OVRProgressIndicator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProgressIndicator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRProgressIndicator.Update
void GlobalNamespace::OVRProgressIndicator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProgressIndicator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRRaycaster
#include "GlobalNamespace/OVRRaycaster.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: OVRRaycaster/<>c
#include "GlobalNamespace/OVRRaycaster_--c.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<OVRRaycaster/RaycastHit> s_SortedGraphics
System::Collections::Generic::List_1<GlobalNamespace::OVRRaycaster::RaycastHit>* GlobalNamespace::OVRRaycaster::_get_s_SortedGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_get_s_SortedGraphics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OVRRaycaster::RaycastHit>*>("", "OVRRaycaster", "s_SortedGraphics"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<OVRRaycaster/RaycastHit> s_SortedGraphics
void GlobalNamespace::OVRRaycaster::_set_s_SortedGraphics(System::Collections::Generic::List_1<GlobalNamespace::OVRRaycaster::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_set_s_SortedGraphics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRRaycaster", "s_SortedGraphics", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject pointer
UnityEngine::GameObject* GlobalNamespace::OVRRaycaster::_get_pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_get_pointer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "pointer"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.GameObject pointer
void GlobalNamespace::OVRRaycaster::_set_pointer(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_set_pointer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "pointer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortOrder
int GlobalNamespace::OVRRaycaster::_get_sortOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_get_sortOrder");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "sortOrder"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 sortOrder
void GlobalNamespace::OVRRaycaster::_set_sortOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_set_sortOrder");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "sortOrder", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas m_Canvas
UnityEngine::Canvas* GlobalNamespace::OVRRaycaster::_get_m_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_get_m_Canvas");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Canvas*>(___internal__instance, "m_Canvas"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Canvas m_Canvas
void GlobalNamespace::OVRRaycaster::_set_m_Canvas(UnityEngine::Canvas* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_set_m_Canvas");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_Canvas", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRRaycaster/RaycastHit> m_RaycastResults
System::Collections::Generic::List_1<GlobalNamespace::OVRRaycaster::RaycastHit>* GlobalNamespace::OVRRaycaster::_get_m_RaycastResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_get_m_RaycastResults");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OVRRaycaster::RaycastHit>*>(___internal__instance, "m_RaycastResults"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<OVRRaycaster/RaycastHit> m_RaycastResults
void GlobalNamespace::OVRRaycaster::_set_m_RaycastResults(System::Collections::Generic::List_1<GlobalNamespace::OVRRaycaster::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::_set_m_RaycastResults");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "m_RaycastResults", value));
}
// Autogenerated method: OVRRaycaster.Raycast
void GlobalNamespace::OVRRaycaster::Raycast(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* resultAppendList, UnityEngine::Ray ray, bool checkForBlocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(checkForBlocking)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, resultAppendList, ray, checkForBlocking);
}
// Autogenerated method: OVRRaycaster.RaycastPointer
void GlobalNamespace::OVRRaycaster::RaycastPointer(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::RaycastPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaycastPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated method: OVRRaycaster.GraphicRaycast
void GlobalNamespace::OVRRaycaster::GraphicRaycast(UnityEngine::Canvas* canvas, UnityEngine::Ray ray, System::Collections::Generic::List_1<GlobalNamespace::OVRRaycaster::RaycastHit>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::GraphicRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, canvas, ray, results);
}
// Autogenerated method: OVRRaycaster.GetScreenPosition
UnityEngine::Vector2 GlobalNamespace::OVRRaycaster::GetScreenPosition(UnityEngine::EventSystems::RaycastResult raycastResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::GetScreenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raycastResult)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, raycastResult);
}
// Autogenerated method: OVRRaycaster.RayIntersectsRectTransform
bool GlobalNamespace::OVRRaycaster::RayIntersectsRectTransform(UnityEngine::RectTransform* rectTransform, UnityEngine::Ray ray, UnityEngine::Vector3& worldPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::RayIntersectsRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRRaycaster", "RayIntersectsRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rectTransform, ray, worldPos);
}
// Autogenerated method: OVRRaycaster.IsFocussed
bool GlobalNamespace::OVRRaycaster::IsFocussed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::IsFocussed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFocussed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRRaycaster.OnPointerEnter
void GlobalNamespace::OVRRaycaster::OnPointerEnter(UnityEngine::EventSystems::PointerEventData* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: OVRRaycaster.get_canvas
UnityEngine::Canvas* GlobalNamespace::OVRRaycaster::get_canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::get_canvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: OVRRaycaster.get_eventCamera
UnityEngine::Camera* GlobalNamespace::OVRRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRRaycaster.get_sortOrderPriority
int GlobalNamespace::OVRRaycaster::get_sortOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::get_sortOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRRaycaster..cctor
void GlobalNamespace::OVRRaycaster::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRRaycaster", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRRaycaster.Start
void GlobalNamespace::OVRRaycaster::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRRaycaster.Raycast
void GlobalNamespace::OVRRaycaster::Raycast(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRRaycaster/<>c
#include "GlobalNamespace/OVRRaycaster_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRRaycaster/<>c <>9
GlobalNamespace::OVRRaycaster::$$c* GlobalNamespace::OVRRaycaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRRaycaster::$$c*>("", "OVRRaycaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRRaycaster/<>c <>9
void GlobalNamespace::OVRRaycaster::$$c::_set_$$9(GlobalNamespace::OVRRaycaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRRaycaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<OVRRaycaster/RaycastHit> <>9__16_0
System::Comparison_1<GlobalNamespace::OVRRaycaster::RaycastHit>* GlobalNamespace::OVRRaycaster::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<GlobalNamespace::OVRRaycaster::RaycastHit>*>("", "OVRRaycaster/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<OVRRaycaster/RaycastHit> <>9__16_0
void GlobalNamespace::OVRRaycaster::$$c::_set_$$9__16_0(System::Comparison_1<GlobalNamespace::OVRRaycaster::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRRaycaster/<>c", "<>9__16_0", value)));
}
// Autogenerated method: OVRRaycaster/<>c..cctor
void GlobalNamespace::OVRRaycaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRRaycaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRRaycaster/<>c.<GraphicRaycast>b__16_0
int GlobalNamespace::OVRRaycaster::$$c::$GraphicRaycast$b__16_0(GlobalNamespace::OVRRaycaster::RaycastHit g1, GlobalNamespace::OVRRaycaster::RaycastHit g2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRRaycaster::$$c::<GraphicRaycast>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GraphicRaycast>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g1), ::il2cpp_utils::ExtractType(g2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, g1, g2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRResetOrientation
#include "GlobalNamespace/OVRResetOrientation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton resetButton
GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRResetOrientation::_get_resetButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResetOrientation::_get_resetButton");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRInput::RawButton>(___internal__instance, "resetButton"));
}
// Autogenerated instance field setter
// Set instance field: public OVRInput/RawButton resetButton
void GlobalNamespace::OVRResetOrientation::_set_resetButton(GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResetOrientation::_set_resetButton");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "resetButton", value));
}
// Autogenerated method: OVRResetOrientation.Update
void GlobalNamespace::OVRResetOrientation::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResetOrientation::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneSampleController
#include "GlobalNamespace/OVRSceneSampleController.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: OVRPlayerController
#include "GlobalNamespace/OVRPlayerController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: OVRGridCube
#include "GlobalNamespace/OVRGridCube.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode quitKey
UnityEngine::KeyCode GlobalNamespace::OVRSceneSampleController::_get_quitKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_get_quitKey");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>(___internal__instance, "quitKey"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.KeyCode quitKey
void GlobalNamespace::OVRSceneSampleController::_set_quitKey(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_set_quitKey");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "quitKey", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture fadeInTexture
UnityEngine::Texture* GlobalNamespace::OVRSceneSampleController::_get_fadeInTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_get_fadeInTexture");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Texture*>(___internal__instance, "fadeInTexture"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Texture fadeInTexture
void GlobalNamespace::OVRSceneSampleController::_set_fadeInTexture(UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_set_fadeInTexture");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "fadeInTexture", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single speedRotationIncrement
float GlobalNamespace::OVRSceneSampleController::_get_speedRotationIncrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_get_speedRotationIncrement");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "speedRotationIncrement"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single speedRotationIncrement
void GlobalNamespace::OVRSceneSampleController::_set_speedRotationIncrement(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_set_speedRotationIncrement");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "speedRotationIncrement", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlayerController playerController
GlobalNamespace::OVRPlayerController* GlobalNamespace::OVRSceneSampleController::_get_playerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_get_playerController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlayerController*>(___internal__instance, "playerController"));
}
// Autogenerated instance field setter
// Set instance field: private OVRPlayerController playerController
void GlobalNamespace::OVRSceneSampleController::_set_playerController(GlobalNamespace::OVRPlayerController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_set_playerController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerController", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig cameraController
GlobalNamespace::OVRCameraRig* GlobalNamespace::OVRSceneSampleController::_get_cameraController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_get_cameraController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRCameraRig*>(___internal__instance, "cameraController"));
}
// Autogenerated instance field setter
// Set instance field: private OVRCameraRig cameraController
void GlobalNamespace::OVRSceneSampleController::_set_cameraController(GlobalNamespace::OVRCameraRig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_set_cameraController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "cameraController", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String layerName
::Il2CppString* GlobalNamespace::OVRSceneSampleController::_get_layerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_get_layerName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "layerName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String layerName
void GlobalNamespace::OVRSceneSampleController::_set_layerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_set_layerName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "layerName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean visionMode
bool GlobalNamespace::OVRSceneSampleController::_get_visionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_get_visionMode");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "visionMode"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean visionMode
void GlobalNamespace::OVRSceneSampleController::_set_visionMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_set_visionMode");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "visionMode", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRGridCube gridCube
GlobalNamespace::OVRGridCube* GlobalNamespace::OVRSceneSampleController::_get_gridCube() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_get_gridCube");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGridCube*>(___internal__instance, "gridCube"));
}
// Autogenerated instance field setter
// Set instance field: private OVRGridCube gridCube
void GlobalNamespace::OVRSceneSampleController::_set_gridCube(GlobalNamespace::OVRGridCube* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::_set_gridCube");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gridCube", value));
}
// Autogenerated method: OVRSceneSampleController.Awake
void GlobalNamespace::OVRSceneSampleController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneSampleController.Start
void GlobalNamespace::OVRSceneSampleController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneSampleController.Update
void GlobalNamespace::OVRSceneSampleController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneSampleController.UpdateVisionMode
void GlobalNamespace::OVRSceneSampleController::UpdateVisionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::UpdateVisionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneSampleController.UpdateSpeedAndRotationScaleMultiplier
void GlobalNamespace::OVRSceneSampleController::UpdateSpeedAndRotationScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::UpdateSpeedAndRotationScaleMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSpeedAndRotationScaleMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneSampleController.UpdateRecenterPose
void GlobalNamespace::OVRSceneSampleController::UpdateRecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneSampleController::UpdateRecenterPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRecenterPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRScreenFade
#include "GlobalNamespace/OVRScreenFade.hpp"
// Including type: OVRScreenFade/<Fade>d__25
#include "GlobalNamespace/OVRScreenFade_-Fade-d__25.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRScreenFade <instance>k__BackingField
GlobalNamespace::OVRScreenFade* GlobalNamespace::OVRScreenFade::_get_$instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_$instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRScreenFade*>("", "OVRScreenFade", "<instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRScreenFade <instance>k__BackingField
void GlobalNamespace::OVRScreenFade::_set_$instance$k__BackingField(GlobalNamespace::OVRScreenFade* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_$instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRScreenFade", "<instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
float GlobalNamespace::OVRScreenFade::_get_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_fadeTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "fadeTime"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single fadeTime
void GlobalNamespace::OVRScreenFade::_set_fadeTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_fadeTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "fadeTime", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color fadeColor
UnityEngine::Color GlobalNamespace::OVRScreenFade::_get_fadeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_fadeColor");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>(___internal__instance, "fadeColor"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color fadeColor
void GlobalNamespace::OVRScreenFade::_set_fadeColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_fadeColor");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "fadeColor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fadeOnStart
bool GlobalNamespace::OVRScreenFade::_get_fadeOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_fadeOnStart");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "fadeOnStart"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean fadeOnStart
void GlobalNamespace::OVRScreenFade::_set_fadeOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_fadeOnStart");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "fadeOnStart", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 renderQueue
int GlobalNamespace::OVRScreenFade::_get_renderQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_renderQueue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "renderQueue"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 renderQueue
void GlobalNamespace::OVRScreenFade::_set_renderQueue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_renderQueue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "renderQueue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single explicitFadeAlpha
float GlobalNamespace::OVRScreenFade::_get_explicitFadeAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_explicitFadeAlpha");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "explicitFadeAlpha"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single explicitFadeAlpha
void GlobalNamespace::OVRScreenFade::_set_explicitFadeAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_explicitFadeAlpha");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "explicitFadeAlpha", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single animatedFadeAlpha
float GlobalNamespace::OVRScreenFade::_get_animatedFadeAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_animatedFadeAlpha");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "animatedFadeAlpha"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single animatedFadeAlpha
void GlobalNamespace::OVRScreenFade::_set_animatedFadeAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_animatedFadeAlpha");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "animatedFadeAlpha", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single uiFadeAlpha
float GlobalNamespace::OVRScreenFade::_get_uiFadeAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_uiFadeAlpha");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "uiFadeAlpha"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single uiFadeAlpha
void GlobalNamespace::OVRScreenFade::_set_uiFadeAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_uiFadeAlpha");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "uiFadeAlpha", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer fadeRenderer
UnityEngine::MeshRenderer* GlobalNamespace::OVRScreenFade::_get_fadeRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_fadeRenderer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MeshRenderer*>(___internal__instance, "fadeRenderer"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.MeshRenderer fadeRenderer
void GlobalNamespace::OVRScreenFade::_set_fadeRenderer(UnityEngine::MeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_fadeRenderer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "fadeRenderer", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter fadeMesh
UnityEngine::MeshFilter* GlobalNamespace::OVRScreenFade::_get_fadeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_fadeMesh");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MeshFilter*>(___internal__instance, "fadeMesh"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.MeshFilter fadeMesh
void GlobalNamespace::OVRScreenFade::_set_fadeMesh(UnityEngine::MeshFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_fadeMesh");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "fadeMesh", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material fadeMaterial
UnityEngine::Material* GlobalNamespace::OVRScreenFade::_get_fadeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_fadeMaterial");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>(___internal__instance, "fadeMaterial"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Material fadeMaterial
void GlobalNamespace::OVRScreenFade::_set_fadeMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_fadeMaterial");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "fadeMaterial", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isFading
bool GlobalNamespace::OVRScreenFade::_get_isFading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_get_isFading");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "isFading"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean isFading
void GlobalNamespace::OVRScreenFade::_set_isFading(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::_set_isFading");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "isFading", value));
}
// Autogenerated method: OVRScreenFade.get_instance
GlobalNamespace::OVRScreenFade* GlobalNamespace::OVRScreenFade::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRScreenFade", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRScreenFade*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRScreenFade.set_instance
void GlobalNamespace::OVRScreenFade::set_instance(GlobalNamespace::OVRScreenFade* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::set_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRScreenFade", "set_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRScreenFade.get_currentAlpha
float GlobalNamespace::OVRScreenFade::get_currentAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::get_currentAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.Start
void GlobalNamespace::OVRScreenFade::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.FadeIn
void GlobalNamespace::OVRScreenFade::FadeIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.FadeOut
void GlobalNamespace::OVRScreenFade::FadeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::FadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.OnLevelFinishedLoading
void GlobalNamespace::OVRScreenFade::OnLevelFinishedLoading(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::OnLevelFinishedLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelFinishedLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: OVRScreenFade.OnEnable
void GlobalNamespace::OVRScreenFade::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.OnDestroy
void GlobalNamespace::OVRScreenFade::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.SetUIFade
void GlobalNamespace::OVRScreenFade::SetUIFade(float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::SetUIFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUIFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: OVRScreenFade.SetExplicitFade
void GlobalNamespace::OVRScreenFade::SetExplicitFade(float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::SetExplicitFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExplicitFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: OVRScreenFade.Fade
System::Collections::IEnumerator* GlobalNamespace::OVRScreenFade::Fade(float startAlpha, float endAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::Fade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startAlpha), ::il2cpp_utils::ExtractType(endAlpha)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, startAlpha, endAlpha);
}
// Autogenerated method: OVRScreenFade.SetMaterialAlpha
void GlobalNamespace::OVRScreenFade::SetMaterialAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::SetMaterialAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRScreenFade/<Fade>d__25
#include "GlobalNamespace/OVRScreenFade_-Fade-d__25.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRScreenFade <>4__this
GlobalNamespace::OVRScreenFade* GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRScreenFade*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OVRScreenFade <>4__this
void GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_$$4__this(GlobalNamespace::OVRScreenFade* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single startAlpha
float GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_startAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_startAlpha");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "startAlpha"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single startAlpha
void GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_startAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_startAlpha");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "startAlpha", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single endAlpha
float GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_endAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_endAlpha");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "endAlpha"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single endAlpha
void GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_endAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_endAlpha");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "endAlpha", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
float GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_get_$elapsedTime$5__2");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(___internal__instance, "<elapsedTime>5__2")));
}
// Autogenerated instance field setter
// Set instance field: private System.Single <elapsedTime>5__2
void GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_$elapsedTime$5__2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::_set_$elapsedTime$5__2");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<elapsedTime>5__2", value));
}
// Autogenerated method: OVRScreenFade/<Fade>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRScreenFade::$Fade$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade/<Fade>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRScreenFade::$Fade$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade/<Fade>d__25.System.IDisposable.Dispose
void GlobalNamespace::OVRScreenFade::$Fade$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade/<Fade>d__25.MoveNext
bool GlobalNamespace::OVRScreenFade::$Fade$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade/<Fade>d__25.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRScreenFade::$Fade$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRScreenFade::$Fade$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
// Including type: OVRSkeleton/IOVRSkeletonDataProvider
#include "GlobalNamespace/OVRSkeleton_IOVRSkeletonDataProvider.hpp"
// Including type: OVRSkeleton/SkeletonPoseData
#include "GlobalNamespace/OVRSkeleton_SkeletonPoseData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRSkeleton/BoneId
#include "GlobalNamespace/OVRSkeleton_BoneId.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRBone
#include "GlobalNamespace/OVRBone.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected OVRSkeleton/SkeletonType _skeletonType
GlobalNamespace::OVRSkeleton::SkeletonType GlobalNamespace::OVRSkeleton::_get__skeletonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__skeletonType");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRSkeleton::SkeletonType>(___internal__instance, "_skeletonType"));
}
// Autogenerated instance field setter
// Set instance field: protected OVRSkeleton/SkeletonType _skeletonType
void GlobalNamespace::OVRSkeleton::_set__skeletonType(GlobalNamespace::OVRSkeleton::SkeletonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__skeletonType");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_skeletonType", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton/IOVRSkeletonDataProvider _dataProvider
GlobalNamespace::OVRSkeleton::IOVRSkeletonDataProvider* GlobalNamespace::OVRSkeleton::_get__dataProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__dataProvider");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRSkeleton::IOVRSkeletonDataProvider*>(___internal__instance, "_dataProvider"));
}
// Autogenerated instance field setter
// Set instance field: private OVRSkeleton/IOVRSkeletonDataProvider _dataProvider
void GlobalNamespace::OVRSkeleton::_set__dataProvider(GlobalNamespace::OVRSkeleton::IOVRSkeletonDataProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__dataProvider");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_dataProvider", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _updateRootPose
bool GlobalNamespace::OVRSkeleton::_get__updateRootPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__updateRootPose");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_updateRootPose"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _updateRootPose
void GlobalNamespace::OVRSkeleton::_set__updateRootPose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__updateRootPose");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_updateRootPose", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _updateRootScale
bool GlobalNamespace::OVRSkeleton::_get__updateRootScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__updateRootScale");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_updateRootScale"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _updateRootScale
void GlobalNamespace::OVRSkeleton::_set__updateRootScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__updateRootScale");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_updateRootScale", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enablePhysicsCapsules
bool GlobalNamespace::OVRSkeleton::_get__enablePhysicsCapsules() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__enablePhysicsCapsules");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_enablePhysicsCapsules"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _enablePhysicsCapsules
void GlobalNamespace::OVRSkeleton::_set__enablePhysicsCapsules(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__enablePhysicsCapsules");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_enablePhysicsCapsules", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _bonesGO
UnityEngine::GameObject* GlobalNamespace::OVRSkeleton::_get__bonesGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__bonesGO");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "_bonesGO"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _bonesGO
void GlobalNamespace::OVRSkeleton::_set__bonesGO(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__bonesGO");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_bonesGO", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _bindPosesGO
UnityEngine::GameObject* GlobalNamespace::OVRSkeleton::_get__bindPosesGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__bindPosesGO");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "_bindPosesGO"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _bindPosesGO
void GlobalNamespace::OVRSkeleton::_set__bindPosesGO(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__bindPosesGO");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_bindPosesGO", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _capsulesGO
UnityEngine::GameObject* GlobalNamespace::OVRSkeleton::_get__capsulesGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__capsulesGO");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GameObject*>(___internal__instance, "_capsulesGO"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _capsulesGO
void GlobalNamespace::OVRSkeleton::_set__capsulesGO(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__capsulesGO");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_capsulesGO", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<OVRBone> _bones
System::Collections::Generic::List_1<GlobalNamespace::OVRBone*>* GlobalNamespace::OVRSkeleton::_get__bones() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__bones");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OVRBone*>*>(___internal__instance, "_bones"));
}
// Autogenerated instance field setter
// Set instance field: protected System.Collections.Generic.List`1<OVRBone> _bones
void GlobalNamespace::OVRSkeleton::_set__bones(System::Collections::Generic::List_1<GlobalNamespace::OVRBone*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__bones");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_bones", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRBone> _bindPoses
System::Collections::Generic::List_1<GlobalNamespace::OVRBone*>* GlobalNamespace::OVRSkeleton::_get__bindPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__bindPoses");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OVRBone*>*>(___internal__instance, "_bindPoses"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<OVRBone> _bindPoses
void GlobalNamespace::OVRSkeleton::_set__bindPoses(System::Collections::Generic::List_1<GlobalNamespace::OVRBone*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__bindPoses");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_bindPoses", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRBoneCapsule> _capsules
System::Collections::Generic::List_1<GlobalNamespace::OVRBoneCapsule*>* GlobalNamespace::OVRSkeleton::_get__capsules() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__capsules");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OVRBoneCapsule*>*>(___internal__instance, "_capsules"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<OVRBoneCapsule> _capsules
void GlobalNamespace::OVRSkeleton::_set__capsules(System::Collections::Generic::List_1<GlobalNamespace::OVRBoneCapsule*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__capsules");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_capsules", value));
}
// Autogenerated instance field getter
// Get instance field: protected OVRPlugin/Skeleton2 _skeleton
GlobalNamespace::OVRPlugin::Skeleton2 GlobalNamespace::OVRSkeleton::_get__skeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get__skeleton");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Skeleton2>(___internal__instance, "_skeleton"));
}
// Autogenerated instance field setter
// Set instance field: protected OVRPlugin/Skeleton2 _skeleton
void GlobalNamespace::OVRSkeleton::_set__skeleton(GlobalNamespace::OVRPlugin::Skeleton2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set__skeleton");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_skeleton", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Quaternion wristFixupRotation
UnityEngine::Quaternion GlobalNamespace::OVRSkeleton::_get_wristFixupRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get_wristFixupRotation");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Quaternion>(___internal__instance, "wristFixupRotation"));
}
// Autogenerated instance field setter
// Set instance field: private readonly UnityEngine.Quaternion wristFixupRotation
void GlobalNamespace::OVRSkeleton::_set_wristFixupRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set_wristFixupRotation");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "wristFixupRotation", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsInitialized>k__BackingField
bool GlobalNamespace::OVRSkeleton::_get_$IsInitialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get_$IsInitialized$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsInitialized>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsInitialized>k__BackingField
void GlobalNamespace::OVRSkeleton::_set_$IsInitialized$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set_$IsInitialized$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsInitialized>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDataValid>k__BackingField
bool GlobalNamespace::OVRSkeleton::_get_$IsDataValid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get_$IsDataValid$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsDataValid>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsDataValid>k__BackingField
void GlobalNamespace::OVRSkeleton::_set_$IsDataValid$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set_$IsDataValid$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsDataValid>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDataHighConfidence>k__BackingField
bool GlobalNamespace::OVRSkeleton::_get_$IsDataHighConfidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get_$IsDataHighConfidence$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<IsDataHighConfidence>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <IsDataHighConfidence>k__BackingField
void GlobalNamespace::OVRSkeleton::_set_$IsDataHighConfidence$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set_$IsDataHighConfidence$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<IsDataHighConfidence>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<OVRBone> <Bones>k__BackingField
System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>* GlobalNamespace::OVRSkeleton::_get_$Bones$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get_$Bones$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>*>(___internal__instance, "<Bones>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.IList`1<OVRBone> <Bones>k__BackingField
void GlobalNamespace::OVRSkeleton::_set_$Bones$k__BackingField(System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set_$Bones$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<Bones>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<OVRBone> <BindPoses>k__BackingField
System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>* GlobalNamespace::OVRSkeleton::_get_$BindPoses$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get_$BindPoses$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>*>(___internal__instance, "<BindPoses>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.IList`1<OVRBone> <BindPoses>k__BackingField
void GlobalNamespace::OVRSkeleton::_set_$BindPoses$k__BackingField(System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set_$BindPoses$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<BindPoses>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<OVRBoneCapsule> <Capsules>k__BackingField
System::Collections::Generic::IList_1<GlobalNamespace::OVRBoneCapsule*>* GlobalNamespace::OVRSkeleton::_get_$Capsules$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get_$Capsules$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::IList_1<GlobalNamespace::OVRBoneCapsule*>*>(___internal__instance, "<Capsules>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.IList`1<OVRBoneCapsule> <Capsules>k__BackingField
void GlobalNamespace::OVRSkeleton::_set_$Capsules$k__BackingField(System::Collections::Generic::IList_1<GlobalNamespace::OVRBoneCapsule*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set_$Capsules$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<Capsules>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <SkeletonChangedCount>k__BackingField
int GlobalNamespace::OVRSkeleton::_get_$SkeletonChangedCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_get_$SkeletonChangedCount$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<SkeletonChangedCount>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <SkeletonChangedCount>k__BackingField
void GlobalNamespace::OVRSkeleton::_set_$SkeletonChangedCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::_set_$SkeletonChangedCount$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<SkeletonChangedCount>k__BackingField", value));
}
// Autogenerated method: OVRSkeleton.get_IsInitialized
bool GlobalNamespace::OVRSkeleton::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.set_IsInitialized
void GlobalNamespace::OVRSkeleton::set_IsInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::set_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton.get_IsDataValid
bool GlobalNamespace::OVRSkeleton::get_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::get_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDataValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.set_IsDataValid
void GlobalNamespace::OVRSkeleton::set_IsDataValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::set_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDataValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton.get_IsDataHighConfidence
bool GlobalNamespace::OVRSkeleton::get_IsDataHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::get_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.set_IsDataHighConfidence
void GlobalNamespace::OVRSkeleton::set_IsDataHighConfidence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::set_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton.get_Bones
System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>* GlobalNamespace::OVRSkeleton::get_Bones() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::get_Bones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.set_Bones
void GlobalNamespace::OVRSkeleton::set_Bones(System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::set_Bones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton.get_BindPoses
System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>* GlobalNamespace::OVRSkeleton::get_BindPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::get_BindPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.set_BindPoses
void GlobalNamespace::OVRSkeleton::set_BindPoses(System::Collections::Generic::IList_1<GlobalNamespace::OVRBone*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::set_BindPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton.get_Capsules
System::Collections::Generic::IList_1<GlobalNamespace::OVRBoneCapsule*>* GlobalNamespace::OVRSkeleton::get_Capsules() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::get_Capsules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capsules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<GlobalNamespace::OVRBoneCapsule*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.set_Capsules
void GlobalNamespace::OVRSkeleton::set_Capsules(System::Collections::Generic::IList_1<GlobalNamespace::OVRBoneCapsule*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::set_Capsules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capsules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton.get_SkeletonChangedCount
int GlobalNamespace::OVRSkeleton::get_SkeletonChangedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::get_SkeletonChangedCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkeletonChangedCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.set_SkeletonChangedCount
void GlobalNamespace::OVRSkeleton::set_SkeletonChangedCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::set_SkeletonChangedCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SkeletonChangedCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton.GetSkeletonType
GlobalNamespace::OVRSkeleton::SkeletonType GlobalNamespace::OVRSkeleton::GetSkeletonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::GetSkeletonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkeletonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeleton::SkeletonType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.Awake
void GlobalNamespace::OVRSkeleton::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.Start
void GlobalNamespace::OVRSkeleton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.ShouldInitialize
bool GlobalNamespace::OVRSkeleton::ShouldInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::ShouldInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.Initialize
void GlobalNamespace::OVRSkeleton::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.InitializeBones
void GlobalNamespace::OVRSkeleton::InitializeBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::InitializeBones");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.InitializeBindPose
void GlobalNamespace::OVRSkeleton::InitializeBindPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::InitializeBindPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeBindPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.InitializeCapsules
void GlobalNamespace::OVRSkeleton::InitializeCapsules() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::InitializeCapsules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeCapsules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.Update
void GlobalNamespace::OVRSkeleton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.FixedUpdate
void GlobalNamespace::OVRSkeleton::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.GetCurrentStartBoneId
GlobalNamespace::OVRSkeleton::BoneId GlobalNamespace::OVRSkeleton::GetCurrentStartBoneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::GetCurrentStartBoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentStartBoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeleton::BoneId, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.GetCurrentEndBoneId
GlobalNamespace::OVRSkeleton::BoneId GlobalNamespace::OVRSkeleton::GetCurrentEndBoneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::GetCurrentEndBoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentEndBoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeleton::BoneId, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.GetCurrentMaxSkinnableBoneId
GlobalNamespace::OVRSkeleton::BoneId GlobalNamespace::OVRSkeleton::GetCurrentMaxSkinnableBoneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::GetCurrentMaxSkinnableBoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentMaxSkinnableBoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeleton::BoneId, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.GetCurrentNumBones
int GlobalNamespace::OVRSkeleton::GetCurrentNumBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::GetCurrentNumBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentNumBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.GetCurrentNumSkinnableBones
int GlobalNamespace::OVRSkeleton::GetCurrentNumSkinnableBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::GetCurrentNumSkinnableBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentNumSkinnableBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSkeleton.BoneLabelFromBoneId
::Il2CppString* GlobalNamespace::OVRSkeleton::BoneLabelFromBoneId(GlobalNamespace::OVRSkeleton::SkeletonType skeletonType, GlobalNamespace::OVRSkeleton::BoneId boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSkeleton::BoneLabelFromBoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSkeleton", "BoneLabelFromBoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeletonType), ::il2cpp_utils::ExtractType(boneId)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, skeletonType, boneId);
}
