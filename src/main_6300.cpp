// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.SafeBuffer
#include "System/Runtime/InteropServices/SafeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
bool& System::Runtime::InteropServices::SafeBuffer::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeBuffer::dyn_inited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.InteropServices.SafeBuffer.AcquirePointer
void System::Runtime::InteropServices::SafeBuffer::AcquirePointer(ByRef<uint8_t*> pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeBuffer::AcquirePointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquirePointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pointer));
}
// Autogenerated method: System.Runtime.InteropServices.SafeBuffer.ReleasePointer
void System::Runtime::InteropServices::SafeBuffer::ReleasePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeBuffer::ReleasePointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleasePointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _key
::Il2CppObject*& System::Collections::DictionaryEntry::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::dyn__key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _value
::Il2CppObject*& System::Collections::DictionaryEntry::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::dyn__value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.DictionaryEntry.get_Key
::Il2CppObject* System::Collections::DictionaryEntry::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.DictionaryEntry.get_Value
::Il2CppObject* System::Collections::DictionaryEntry::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.DictionaryEntry..ctor
// ABORTED elsewhere.  System::Collections::DictionaryEntry::DictionaryEntry(::Il2CppObject* key, ::Il2CppObject* value)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.LowLevelComparer
#include "System/Collections/LowLevelComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.LowLevelComparer Default
::System::Collections::LowLevelComparer* System::Collections::LowLevelComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::LowLevelComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::LowLevelComparer*>("System.Collections", "LowLevelComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.LowLevelComparer Default
void System::Collections::LowLevelComparer::_set_Default(::System::Collections::LowLevelComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::LowLevelComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "LowLevelComparer", "Default", value));
}
// Autogenerated method: System.Collections.LowLevelComparer..cctor
void System::Collections::LowLevelComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::LowLevelComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "LowLevelComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.LowLevelComparer.Compare
int System::Collections::LowLevelComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::LowLevelComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.ArrayList/System.Collections.IListWrapper
#include "System/Collections/ArrayList_IListWrapper.hpp"
// Including type: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList
#include "System/Collections/ArrayList_ReadOnlyArrayList.hpp"
// Including type: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple
#include "System/Collections/ArrayList_ArrayListEnumeratorSimple.hpp"
// Including type: System.Collections.ArrayList/System.Collections.ArrayListDebugView
#include "System/Collections/ArrayList_ArrayListDebugView.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] emptyArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::_get_emptyArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_get_emptyArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Collections", "ArrayList", "emptyArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] emptyArray
void System::Collections::ArrayList::_set_emptyArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_set_emptyArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "ArrayList", "emptyArray", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _items
::ArrayW<::Il2CppObject*>& System::Collections::ArrayList::dyn__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
int& System::Collections::ArrayList::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::ArrayList::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::ArrayList::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList.set_Capacity
void System::Collections::ArrayList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::set_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList.get_Count
int System::Collections::ArrayList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_IsFixedSize
bool System::Collections::ArrayList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_IsReadOnly
bool System::Collections::ArrayList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_SyncRoot
::Il2CppObject* System::Collections::ArrayList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_Item
::Il2CppObject* System::Collections::ArrayList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList.set_Item
void System::Collections::ArrayList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList..cctor
void System::Collections::ArrayList::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.Adapter
::System::Collections::ArrayList* System::Collections::ArrayList::Adapter(::System::Collections::IList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Adapter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList", "Adapter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.ArrayList.Add
int System::Collections::ArrayList::Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList.AddRange
void System::Collections::ArrayList::AddRange(::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::AddRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Collections.ArrayList.Clear
void System::Collections::ArrayList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.Clone
::Il2CppObject* System::Collections::ArrayList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.Contains
bool System::Collections::ArrayList::Contains(::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Collections.ArrayList.CopyTo
void System::Collections::ArrayList::CopyTo(::System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array);
}
// Autogenerated method: System.Collections.ArrayList.CopyTo
void System::Collections::ArrayList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.ArrayList.CopyTo
void System::Collections::ArrayList::CopyTo(int index, ::System::Array* array, int arrayIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, array, arrayIndex, count);
}
// Autogenerated method: System.Collections.ArrayList.EnsureCapacity
void System::Collections::ArrayList::EnsureCapacity(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min);
}
// Autogenerated method: System.Collections.ArrayList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ArrayList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.IndexOf
int System::Collections::ArrayList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList.Insert
void System::Collections::ArrayList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList.InsertRange
void System::Collections::ArrayList::InsertRange(int index, ::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::InsertRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, c);
}
// Autogenerated method: System.Collections.ArrayList.ReadOnly
::System::Collections::ArrayList* System::Collections::ArrayList::ReadOnly(::System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.ArrayList.Remove
void System::Collections::ArrayList::Remove(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList.RemoveAt
void System::Collections::ArrayList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList.RemoveRange
void System::Collections::ArrayList::RemoveRange(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::RemoveRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList.Reverse
void System::Collections::ArrayList::Reverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Reverse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.Reverse
void System::Collections::ArrayList::Reverse(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Reverse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList.Sort
void System::Collections::ArrayList::Sort(::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Sort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, comparer);
}
// Autogenerated method: System.Collections.ArrayList.Sort
void System::Collections::ArrayList::Sort(int index, int count, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Sort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count, comparer);
}
// Autogenerated method: System.Collections.ArrayList.ToArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.ToArray
::System::Array* System::Collections::ArrayList::ToArray(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList/System.Collections.IListWrapper
#include "System/Collections/ArrayList_IListWrapper.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IList _list
::System::Collections::IList*& System::Collections::ArrayList::IListWrapper::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::IList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.set_Capacity
void System::Collections::ArrayList::IListWrapper::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::set_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.get_Count
int System::Collections::ArrayList::IListWrapper::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.get_IsReadOnly
bool System::Collections::ArrayList::IListWrapper::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.get_IsFixedSize
bool System::Collections::ArrayList::IListWrapper::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.get_Item
::Il2CppObject* System::Collections::ArrayList::IListWrapper::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.set_Item
void System::Collections::ArrayList::IListWrapper::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.get_SyncRoot
::Il2CppObject* System::Collections::ArrayList::IListWrapper::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.Add
int System::Collections::ArrayList::IListWrapper::Add(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.AddRange
void System::Collections::ArrayList::IListWrapper::AddRange(::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::AddRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.Clear
void System::Collections::ArrayList::IListWrapper::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.Clone
::Il2CppObject* System::Collections::ArrayList::IListWrapper::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.Contains
bool System::Collections::ArrayList::IListWrapper::Contains(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.CopyTo
void System::Collections::ArrayList::IListWrapper::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.CopyTo
void System::Collections::ArrayList::IListWrapper::CopyTo(int index, ::System::Array* array, int arrayIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, array, arrayIndex, count);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ArrayList::IListWrapper::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.IndexOf
int System::Collections::ArrayList::IListWrapper::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.Insert
void System::Collections::ArrayList::IListWrapper::Insert(int index, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, obj);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.InsertRange
void System::Collections::ArrayList::IListWrapper::InsertRange(int index, ::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::InsertRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, c);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.Remove
void System::Collections::ArrayList::IListWrapper::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.RemoveAt
void System::Collections::ArrayList::IListWrapper::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.RemoveRange
void System::Collections::ArrayList::IListWrapper::RemoveRange(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::RemoveRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.Reverse
void System::Collections::ArrayList::IListWrapper::Reverse(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Reverse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.Sort
void System::Collections::ArrayList::IListWrapper::Sort(int index, int count, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Sort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count, comparer);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.ToArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::IListWrapper::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.IListWrapper.ToArray
::System::Array* System::Collections::ArrayList::IListWrapper::ToArray(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList
#include "System/Collections/ArrayList_ReadOnlyArrayList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
::System::Collections::ArrayList*& System::Collections::ArrayList::ReadOnlyArrayList::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.get_Count
int System::Collections::ArrayList::ReadOnlyArrayList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.get_IsReadOnly
bool System::Collections::ArrayList::ReadOnlyArrayList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.get_IsFixedSize
bool System::Collections::ArrayList::ReadOnlyArrayList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.get_Item
::Il2CppObject* System::Collections::ArrayList::ReadOnlyArrayList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.set_Item
void System::Collections::ArrayList::ReadOnlyArrayList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.get_SyncRoot
::Il2CppObject* System::Collections::ArrayList::ReadOnlyArrayList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.set_Capacity
void System::Collections::ArrayList::ReadOnlyArrayList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::set_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Add
int System::Collections::ArrayList::ReadOnlyArrayList::Add(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.AddRange
void System::Collections::ArrayList::ReadOnlyArrayList::AddRange(::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::AddRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Clear
void System::Collections::ArrayList::ReadOnlyArrayList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Clone
::Il2CppObject* System::Collections::ArrayList::ReadOnlyArrayList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Contains
bool System::Collections::ArrayList::ReadOnlyArrayList::Contains(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.CopyTo
void System::Collections::ArrayList::ReadOnlyArrayList::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.CopyTo
void System::Collections::ArrayList::ReadOnlyArrayList::CopyTo(int index, ::System::Array* array, int arrayIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, array, arrayIndex, count);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ArrayList::ReadOnlyArrayList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.IndexOf
int System::Collections::ArrayList::ReadOnlyArrayList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Insert
void System::Collections::ArrayList::ReadOnlyArrayList::Insert(int index, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, obj);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.InsertRange
void System::Collections::ArrayList::ReadOnlyArrayList::InsertRange(int index, ::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::InsertRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, c);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Remove
void System::Collections::ArrayList::ReadOnlyArrayList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.RemoveAt
void System::Collections::ArrayList::ReadOnlyArrayList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.RemoveRange
void System::Collections::ArrayList::ReadOnlyArrayList::RemoveRange(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::RemoveRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Reverse
void System::Collections::ArrayList::ReadOnlyArrayList::Reverse(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Reverse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Sort
void System::Collections::ArrayList::ReadOnlyArrayList::Sort(int index, int count, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Sort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count, comparer);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.ToArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::ReadOnlyArrayList::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.ToArray
::System::Array* System::Collections::ArrayList::ReadOnlyArrayList::ToArray(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple
#include "System/Collections/ArrayList_ArrayListEnumeratorSimple.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object dummyObject
::Il2CppObject* System::Collections::ArrayList::ArrayListEnumeratorSimple::_get_dummyObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::_get_dummyObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Collections", "ArrayList/ArrayListEnumeratorSimple", "dummyObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object dummyObject
void System::Collections::ArrayList::ArrayListEnumeratorSimple::_set_dummyObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::_set_dummyObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "ArrayList/ArrayListEnumeratorSimple", "dummyObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
::System::Collections::ArrayList*& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
int& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentElement
::Il2CppObject*& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElement"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isArrayList
bool& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_isArrayList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_isArrayList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isArrayList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple.get_Current
::Il2CppObject* System::Collections::ArrayList::ArrayListEnumeratorSimple::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple..cctor
void System::Collections::ArrayList::ArrayListEnumeratorSimple::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList/ArrayListEnumeratorSimple", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple.Clone
::Il2CppObject* System::Collections::ArrayList::ArrayListEnumeratorSimple::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple.MoveNext
bool System::Collections::ArrayList::ArrayListEnumeratorSimple::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple.Reset
void System::Collections::ArrayList::ArrayListEnumeratorSimple::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CaseInsensitiveComparer
#include "System/Collections/CaseInsensitiveComparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_compareInfo
::System::Globalization::CompareInfo*& System::Collections::CaseInsensitiveComparer::dyn_m_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveComparer::dyn_m_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CaseInsensitiveComparer.get_Default
::System::Collections::CaseInsensitiveComparer* System::Collections::CaseInsensitiveComparer::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveComparer::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "CaseInsensitiveComparer", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::CaseInsensitiveComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.CaseInsensitiveComparer.Compare
int System::Collections::CaseInsensitiveComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CaseInsensitiveHashCodeProvider
#include "System/Collections/CaseInsensitiveHashCodeProvider.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TextInfo m_text
::System::Globalization::TextInfo*& System::Collections::CaseInsensitiveHashCodeProvider::dyn_m_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveHashCodeProvider::dyn_m_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_text"))->offset;
  return *reinterpret_cast<::System::Globalization::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CaseInsensitiveHashCodeProvider.get_Default
::System::Collections::CaseInsensitiveHashCodeProvider* System::Collections::CaseInsensitiveHashCodeProvider::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveHashCodeProvider::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "CaseInsensitiveHashCodeProvider", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::CaseInsensitiveHashCodeProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode
int System::Collections::CaseInsensitiveHashCodeProvider::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveHashCodeProvider::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CollectionBase
#include "System/Collections/CollectionBase.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
::System::Collections::ArrayList*& System::Collections::CollectionBase::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CollectionBase.get_InnerList
::System::Collections::ArrayList* System::Collections::CollectionBase::get_InnerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::get_InnerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.get_List
::System::Collections::IList* System::Collections::CollectionBase::get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::get_List");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_List", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.get_Count
int System::Collections::CollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_IsReadOnly
bool System::Collections::CollectionBase::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_IsFixedSize
bool System::Collections::CollectionBase::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::CollectionBase::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_Item
::Il2CppObject* System::Collections::CollectionBase::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.set_Item
void System::Collections::CollectionBase::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.Clear
void System::Collections::CollectionBase::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.RemoveAt
void System::Collections::CollectionBase::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::CollectionBase::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Contains
bool System::Collections::CollectionBase::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Add
int System::Collections::CollectionBase::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Remove
void System::Collections::CollectionBase::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.IndexOf
int System::Collections::CollectionBase::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Insert
void System::Collections::CollectionBase::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.GetEnumerator
::System::Collections::IEnumerator* System::Collections::CollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnSet
void System::Collections::CollectionBase::OnSet(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Collections.CollectionBase.OnInsert
void System::Collections::CollectionBase::OnInsert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnInsert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInsert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnClear
void System::Collections::CollectionBase::OnClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnClear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnRemove
void System::Collections::CollectionBase::OnRemove(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnRemove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnValidate
void System::Collections::CollectionBase::OnValidate(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnSetComplete
void System::Collections::CollectionBase::OnSetComplete(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnSetComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Collections.CollectionBase.OnInsertComplete
void System::Collections::CollectionBase::OnInsertComplete(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnInsertComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInsertComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnClearComplete
void System::Collections::CollectionBase::OnClearComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnClearComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClearComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnRemoveComplete
void System::Collections::CollectionBase::OnRemoveComplete(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnRemoveComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoveComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Comparer
#include "System/Collections/Comparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer Default
::System::Collections::Comparer* System::Collections::Comparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Comparer*>("System.Collections", "Comparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer Default
void System::Collections::Comparer::_set_Default(::System::Collections::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer DefaultInvariant
::System::Collections::Comparer* System::Collections::Comparer::_get_DefaultInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_get_DefaultInvariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Comparer*>("System.Collections", "Comparer", "DefaultInvariant"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer DefaultInvariant
void System::Collections::Comparer::_set_DefaultInvariant(::System::Collections::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_set_DefaultInvariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "DefaultInvariant", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_compareInfo
::System::Globalization::CompareInfo*& System::Collections::Comparer::dyn_m_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::dyn_m_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Comparer..cctor
void System::Collections::Comparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "Comparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Comparer.Compare
int System::Collections::Comparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.Comparer.GetObjectData
void System::Collections::Comparer::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CompatibleComparer
#include "System/Collections/CompatibleComparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer _comparer
::System::Collections::IComparer*& System::Collections::CompatibleComparer::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IHashCodeProvider _hcp
::System::Collections::IHashCodeProvider*& System::Collections::CompatibleComparer::dyn__hcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::dyn__hcp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hcp"))->offset;
  return *reinterpret_cast<::System::Collections::IHashCodeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CompatibleComparer.get_Comparer
::System::Collections::IComparer* System::Collections::CompatibleComparer::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::get_Comparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CompatibleComparer.get_HashCodeProvider
::System::Collections::IHashCodeProvider* System::Collections::CompatibleComparer::get_HashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::get_HashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashCodeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IHashCodeProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CompatibleComparer.Compare
int System::Collections::CompatibleComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.CompatibleComparer.Equals
bool System::Collections::CompatibleComparer::Equals(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.CompatibleComparer.GetHashCode
int System::Collections::CompatibleComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.EmptyReadOnlyDictionaryInternal
#include "System/Collections/EmptyReadOnlyDictionaryInternal.hpp"
// Including type: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator
#include "System/Collections/EmptyReadOnlyDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_Count
int System::Collections::EmptyReadOnlyDictionaryInternal::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_SyncRoot
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_Item
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.set_Item
void System::Collections::EmptyReadOnlyDictionaryInternal::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_Keys
::System::Collections::ICollection* System::Collections::EmptyReadOnlyDictionaryInternal::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_IsReadOnly
bool System::Collections::EmptyReadOnlyDictionaryInternal::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.CopyTo
void System::Collections::EmptyReadOnlyDictionaryInternal::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.Contains
bool System::Collections::EmptyReadOnlyDictionaryInternal::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.Add
void System::Collections::EmptyReadOnlyDictionaryInternal::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.Clear
void System::Collections::EmptyReadOnlyDictionaryInternal::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::EmptyReadOnlyDictionaryInternal::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.Remove
void System::Collections::EmptyReadOnlyDictionaryInternal::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator
#include "System/Collections/EmptyReadOnlyDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.get_Current
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.get_Key
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.get_Value
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.MoveNext
bool System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.Reset
void System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.Hashtable/System.Collections.KeyCollection
#include "System/Collections/Hashtable_KeyCollection.hpp"
// Including type: System.Collections.Hashtable/System.Collections.ValueCollection
#include "System/Collections/Hashtable_ValueCollection.hpp"
// Including type: System.Collections.Hashtable/System.Collections.SyncHashtable
#include "System/Collections/Hashtable_SyncHashtable.hpp"
// Including type: System.Collections.Hashtable/System.Collections.HashtableEnumerator
#include "System/Collections/Hashtable_HashtableEnumerator.hpp"
// Including type: System.Collections.Hashtable/System.Collections.HashtableDebugView
#include "System/Collections/Hashtable_HashtableDebugView.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 HashPrime
int System::Collections::Hashtable::_get_HashPrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_HashPrime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "Hashtable", "HashPrime"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 HashPrime
void System::Collections::Hashtable::_set_HashPrime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_HashPrime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashPrime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 InitialSize
int System::Collections::Hashtable::_get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_InitialSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "Hashtable", "InitialSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InitialSize
void System::Collections::Hashtable::_set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_InitialSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "InitialSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.String LoadFactorName
::StringW System::Collections::Hashtable::_get_LoadFactorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_LoadFactorName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "LoadFactorName"));
}
// Autogenerated static field setter
// Set static field: static private System.String LoadFactorName
void System::Collections::Hashtable::_set_LoadFactorName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_LoadFactorName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "LoadFactorName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String VersionName
::StringW System::Collections::Hashtable::_get_VersionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_VersionName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "VersionName"));
}
// Autogenerated static field setter
// Set static field: static private System.String VersionName
void System::Collections::Hashtable::_set_VersionName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_VersionName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "VersionName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ComparerName
::StringW System::Collections::Hashtable::_get_ComparerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_ComparerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "ComparerName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ComparerName
void System::Collections::Hashtable::_set_ComparerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_ComparerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "ComparerName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HashCodeProviderName
::StringW System::Collections::Hashtable::_get_HashCodeProviderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_HashCodeProviderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "HashCodeProviderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String HashCodeProviderName
void System::Collections::Hashtable::_set_HashCodeProviderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_HashCodeProviderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashCodeProviderName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HashSizeName
::StringW System::Collections::Hashtable::_get_HashSizeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_HashSizeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "HashSizeName"));
}
// Autogenerated static field setter
// Set static field: static private System.String HashSizeName
void System::Collections::Hashtable::_set_HashSizeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_HashSizeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashSizeName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KeysName
::StringW System::Collections::Hashtable::_get_KeysName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_KeysName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "KeysName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeysName
void System::Collections::Hashtable::_set_KeysName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_KeysName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "KeysName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ValuesName
::StringW System::Collections::Hashtable::_get_ValuesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_ValuesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "ValuesName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ValuesName
void System::Collections::Hashtable::_set_ValuesName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_ValuesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "ValuesName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KeyComparerName
::StringW System::Collections::Hashtable::_get_KeyComparerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_KeyComparerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "KeyComparerName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeyComparerName
void System::Collections::Hashtable::_set_KeyComparerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_KeyComparerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "KeyComparerName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable/System.Collections.bucket[] buckets
::ArrayW<::System::Collections::Hashtable::bucket>& System::Collections::Hashtable::dyn_buckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_buckets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buckets"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Hashtable::bucket>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
int& System::Collections::Hashtable::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 occupancy
int& System::Collections::Hashtable::dyn_occupancy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_occupancy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occupancy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 loadsize
int& System::Collections::Hashtable::dyn_loadsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_loadsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single loadFactor
float& System::Collections::Hashtable::dyn_loadFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_loadFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::Hashtable::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isWriterInProgress
bool& System::Collections::Hashtable::dyn_isWriterInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_isWriterInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isWriterInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ICollection keys
::System::Collections::ICollection*& System::Collections::Hashtable::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ICollection values
::System::Collections::ICollection*& System::Collections::Hashtable::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEqualityComparer _keycomparer
::System::Collections::IEqualityComparer*& System::Collections::Hashtable::dyn__keycomparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__keycomparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keycomparer"))->offset;
  return *reinterpret_cast<::System::Collections::IEqualityComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::Hashtable::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable.get_Item
::Il2CppObject* System::Collections::Hashtable::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.set_Item
void System::Collections::Hashtable::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable.get_IsReadOnly
bool System::Collections::Hashtable::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_Keys
::System::Collections::ICollection* System::Collections::Hashtable::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_Values
::System::Collections::ICollection* System::Collections::Hashtable::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_Count
int System::Collections::Hashtable::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.InitHash
uint System::Collections::Hashtable::InitHash(::Il2CppObject* key, int hashsize, ByRef<uint> seed, ByRef<uint> incr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::InitHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(hashsize), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, key, hashsize, byref(seed), byref(incr));
}
// Autogenerated method: System.Collections.Hashtable.Add
void System::Collections::Hashtable::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable.Clear
void System::Collections::Hashtable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Clone
::Il2CppObject* System::Collections::Hashtable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Contains
bool System::Collections::Hashtable::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.ContainsKey
bool System::Collections::Hashtable::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ContainsKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.CopyKeys
void System::Collections::Hashtable::CopyKeys(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyEntries
void System::Collections::Hashtable::CopyEntries(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyTo
void System::Collections::Hashtable::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyValues
void System::Collections::Hashtable::CopyValues(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.expand
void System::Collections::Hashtable::expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.rehash
void System::Collections::Hashtable::rehash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::rehash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "rehash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.UpdateVersion
void System::Collections::Hashtable::UpdateVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::UpdateVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.rehash
void System::Collections::Hashtable::rehash(int newsize, bool forceNewHashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::rehash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "rehash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newsize), ::il2cpp_utils::ExtractType(forceNewHashCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newsize, forceNewHashCode);
}
// Autogenerated method: System.Collections.Hashtable.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.GetHash
int System::Collections::Hashtable::GetHash(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::GetHash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.KeyEquals
bool System::Collections::Hashtable::KeyEquals(::Il2CppObject* item, ::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyEquals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item, key);
}
// Autogenerated method: System.Collections.Hashtable.Insert
void System::Collections::Hashtable::Insert(::Il2CppObject* key, ::Il2CppObject* nvalue, bool add) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(nvalue), ::il2cpp_utils::ExtractType(add)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, nvalue, add);
}
// Autogenerated method: System.Collections.Hashtable.putEntry
void System::Collections::Hashtable::putEntry(::ArrayW<::System::Collections::Hashtable::bucket> newBuckets, ::Il2CppObject* key, ::Il2CppObject* nvalue, int hashcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::putEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "putEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBuckets), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(nvalue), ::il2cpp_utils::ExtractType(hashcode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBuckets, key, nvalue, hashcode);
}
// Autogenerated method: System.Collections.Hashtable.Remove
void System::Collections::Hashtable::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.Synchronized
::System::Collections::Hashtable* System::Collections::Hashtable::Synchronized(::System::Collections::Hashtable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "Hashtable", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Collections.Hashtable.GetObjectData
void System::Collections::Hashtable::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Hashtable.OnDeserialization
void System::Collections::Hashtable::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/System.Collections.KeyCollection
#include "System/Collections/Hashtable_KeyCollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _hashtable
::System::Collections::Hashtable*& System::Collections::Hashtable::KeyCollection::dyn__hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::dyn__hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.KeyCollection.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::KeyCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.KeyCollection.get_Count
int System::Collections::Hashtable::KeyCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.KeyCollection.CopyTo
void System::Collections::Hashtable::KeyCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.KeyCollection.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::KeyCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/System.Collections.ValueCollection
#include "System/Collections/Hashtable_ValueCollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _hashtable
::System::Collections::Hashtable*& System::Collections::Hashtable::ValueCollection::dyn__hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::dyn__hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.ValueCollection.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::ValueCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.ValueCollection.get_Count
int System::Collections::Hashtable::ValueCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.ValueCollection.CopyTo
void System::Collections::Hashtable::ValueCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.ValueCollection.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::ValueCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/System.Collections.SyncHashtable
#include "System/Collections/Hashtable_SyncHashtable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Hashtable _table
::System::Collections::Hashtable*& System::Collections::Hashtable::SyncHashtable::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::SyncHashtable::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_Count
int System::Collections::Hashtable::SyncHashtable::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_IsReadOnly
bool System::Collections::Hashtable::SyncHashtable::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_Item
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.set_Item
void System::Collections::Hashtable::SyncHashtable::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_Keys
::System::Collections::ICollection* System::Collections::Hashtable::SyncHashtable::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_Values
::System::Collections::ICollection* System::Collections::Hashtable::SyncHashtable::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.GetObjectData
void System::Collections::Hashtable::SyncHashtable::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Add
void System::Collections::Hashtable::SyncHashtable::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Clear
void System::Collections::Hashtable::SyncHashtable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Contains
bool System::Collections::Hashtable::SyncHashtable::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.ContainsKey
bool System::Collections::Hashtable::SyncHashtable::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::ContainsKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.CopyTo
void System::Collections::Hashtable::SyncHashtable::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Clone
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::SyncHashtable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Remove
void System::Collections::Hashtable::SyncHashtable::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.OnDeserialization
void System::Collections::Hashtable::SyncHashtable::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/System.Collections.HashtableEnumerator
#include "System/Collections/Hashtable_HashtableEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable hashtable
::System::Collections::Hashtable*& System::Collections::Hashtable::HashtableEnumerator::dyn_hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bucket
int& System::Collections::Hashtable::HashtableEnumerator::dyn_bucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_bucket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bucket"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::Hashtable::HashtableEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean current
bool& System::Collections::Hashtable::HashtableEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 getObjectRetType
int& System::Collections::Hashtable::HashtableEnumerator::dyn_getObjectRetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_getObjectRetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getObjectRetType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentKey
::Il2CppObject*& System::Collections::Hashtable::HashtableEnumerator::dyn_currentKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_currentKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentKey"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentValue
::Il2CppObject*& System::Collections::Hashtable::HashtableEnumerator::dyn_currentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_currentValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.get_Key
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::Hashtable::HashtableEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.get_Current
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.get_Value
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.Clone
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.MoveNext
bool System::Collections::Hashtable::HashtableEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.Reset
void System::Collections::Hashtable::HashtableEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.HashHelpers
#include "System/Collections/HashHelpers.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32[] primes
::ArrayW<int> System::Collections::HashHelpers::_get_primes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_get_primes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Collections", "HashHelpers", "primes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32[] primes
void System::Collections::HashHelpers::_set_primes(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_set_primes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "HashHelpers", "primes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_SerializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::HashHelpers::_get_s_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_get_s_SerializationInfoTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*>("System.Collections", "HashHelpers", "s_SerializationInfoTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_SerializationInfoTable
void System::Collections::HashHelpers::_set_s_SerializationInfoTable(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_set_s_SerializationInfoTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "HashHelpers", "s_SerializationInfoTable", value));
}
// Autogenerated method: System.Collections.HashHelpers.get_SerializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::HashHelpers::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.HashHelpers..cctor
void System::Collections::HashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.HashHelpers.IsPrime
bool System::Collections::HashHelpers::IsPrime(int candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::IsPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "IsPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, candidate);
}
// Autogenerated method: System.Collections.HashHelpers.GetPrime
int System::Collections::HashHelpers::GetPrime(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::GetPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "GetPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, min);
}
// Autogenerated method: System.Collections.HashHelpers.ExpandPrime
int System::Collections::HashHelpers::ExpandPrime(int oldSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::ExpandPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "ExpandPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldSize);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.ICollection.get_Count
int System::Collections::ICollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::ICollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ICollection.CopyTo
void System::Collections::ICollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IComparer.Compare
int System::Collections::IComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IDictionary.get_Item
::Il2CppObject* System::Collections::IDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.IDictionary.set_Item
void System::Collections::IDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.IDictionary.get_Keys
::System::Collections::ICollection* System::Collections::IDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.get_IsReadOnly
bool System::Collections::IDictionary::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.Contains
bool System::Collections::IDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.IDictionary.Add
void System::Collections::IDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.IDictionary.Clear
void System::Collections::IDictionary::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::IDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.Remove
void System::Collections::IDictionary::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Key
::Il2CppObject* System::Collections::IDictionaryEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionaryEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Value
::Il2CppObject* System::Collections::IDictionaryEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionaryEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::IDictionaryEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionaryEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::IEnumerable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Collections::IEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IEnumerator.MoveNext
bool System::Collections::IEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IEnumerator.Reset
void System::Collections::IEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEqualityComparer.Equals
bool System::Collections::IEqualityComparer::Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.IEqualityComparer.GetHashCode
int System::Collections::IEqualityComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IHashCodeProvider.GetHashCode
int System::Collections::IHashCodeProvider::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IHashCodeProvider::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IList.get_Item
::Il2CppObject* System::Collections::IList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.IList.set_Item
void System::Collections::IList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.IList.get_IsReadOnly
bool System::Collections::IList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.get_IsFixedSize
bool System::Collections::IList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.Add
int System::Collections::IList::Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Contains
bool System::Collections::IList::Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Clear
void System::Collections::IList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.IndexOf
int System::Collections::IList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Insert
void System::Collections::IList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.IList.Remove
void System::Collections::IList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.RemoveAt
void System::Collections::IList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IStructuralComparable
#include "System/Collections/IStructuralComparable.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IStructuralComparable.CompareTo
int System::Collections::IStructuralComparable::CompareTo(::Il2CppObject* other, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IStructuralComparable::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IStructuralEquatable
#include "System/Collections/IStructuralEquatable.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IStructuralEquatable.Equals
bool System::Collections::IStructuralEquatable::Equals(::Il2CppObject* other, ::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IStructuralEquatable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.Collections.IStructuralEquatable.GetHashCode
int System::Collections::IStructuralEquatable::GetHashCode(::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IStructuralEquatable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal
#include "System/Collections/ListDictionaryInternal.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator
#include "System/Collections/ListDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode head
::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::ListDictionaryInternal::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
int& System::Collections::ListDictionaryInternal::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::ListDictionaryInternal::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Item
::Il2CppObject* System::Collections::ListDictionaryInternal::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.set_Item
void System::Collections::ListDictionaryInternal::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Count
int System::Collections::ListDictionaryInternal::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Keys
::System::Collections::ICollection* System::Collections::ListDictionaryInternal::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_IsReadOnly
bool System::Collections::ListDictionaryInternal::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_SyncRoot
::Il2CppObject* System::Collections::ListDictionaryInternal::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Add
void System::Collections::ListDictionaryInternal::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Clear
void System::Collections::ListDictionaryInternal::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Contains
bool System::Collections::ListDictionaryInternal::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.CopyTo
void System::Collections::ListDictionaryInternal::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::ListDictionaryInternal::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ListDictionaryInternal::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Remove
void System::Collections::ListDictionaryInternal::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator
#include "System/Collections/ListDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal list
::System::Collections::ListDictionaryInternal*& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode current
::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
bool& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.get_Current
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::ListDictionaryInternal::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.get_Key
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.get_Value
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.MoveNext
bool System::Collections::ListDictionaryInternal::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.Reset
void System::Collections::ListDictionaryInternal::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal list
::System::Collections::ListDictionaryInternal*& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
bool& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal list
::System::Collections::ListDictionaryInternal*& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode current
::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
bool& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
bool& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator.get_Current
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator.MoveNext
bool System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator.Reset
void System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object key
::Il2CppObject*& System::Collections::ListDictionaryInternal::DictionaryNode::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::DictionaryNode::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object value
::Il2CppObject*& System::Collections::ListDictionaryInternal::DictionaryNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::DictionaryNode::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode next
::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::DictionaryNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::DictionaryNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Queue
#include "System/Collections/Queue.hpp"
// Including type: System.Collections.Queue/System.Collections.QueueEnumerator
#include "System/Collections/Queue_QueueEnumerator.hpp"
// Including type: System.Collections.Queue/System.Collections.QueueDebugView
#include "System/Collections/Queue_QueueDebugView.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] _array
::ArrayW<::Il2CppObject*>& System::Collections::Queue::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _head
int& System::Collections::Queue::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tail
int& System::Collections::Queue::dyn__tail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__tail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tail"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
int& System::Collections::Queue::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _growFactor
int& System::Collections::Queue::dyn__growFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__growFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_growFactor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Queue::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::Queue::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Queue.get_Count
int System::Collections::Queue::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.get_SyncRoot
::Il2CppObject* System::Collections::Queue::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Clone
::Il2CppObject* System::Collections::Queue::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Clear
void System::Collections::Queue::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.CopyTo
void System::Collections::Queue::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Queue.Enqueue
void System::Collections::Queue::Enqueue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Enqueue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Queue.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Queue::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Dequeue
::Il2CppObject* System::Collections::Queue::Dequeue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Dequeue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dequeue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Peek
::Il2CppObject* System::Collections::Queue::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.GetElement
::Il2CppObject* System::Collections::Queue::GetElement(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Collections.Queue.ToArray
::ArrayW<::Il2CppObject*> System::Collections::Queue::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.SetCapacity
void System::Collections::Queue::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::SetCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Queue/System.Collections.QueueEnumerator
#include "System/Collections/Queue_QueueEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Queue _q
::System::Collections::Queue*& System::Collections::Queue::QueueEnumerator::dyn__q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_q"))->offset;
  return *reinterpret_cast<::System::Collections::Queue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
int& System::Collections::Queue::QueueEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Queue::QueueEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentElement
::Il2CppObject*& System::Collections::Queue::QueueEnumerator::dyn_currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn_currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElement"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Queue/System.Collections.QueueEnumerator.get_Current
::Il2CppObject* System::Collections::Queue::QueueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue/System.Collections.QueueEnumerator.Clone
::Il2CppObject* System::Collections::Queue::QueueEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue/System.Collections.QueueEnumerator.MoveNext
bool System::Collections::Queue::QueueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue/System.Collections.QueueEnumerator.Reset
void System::Collections::Queue::QueueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ReadOnlyCollectionBase
#include "System/Collections/ReadOnlyCollectionBase.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
::System::Collections::ArrayList*& System::Collections::ReadOnlyCollectionBase::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.get_InnerList
::System::Collections::ArrayList* System::Collections::ReadOnlyCollectionBase::get_InnerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::get_InnerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.get_Count
int System::Collections::ReadOnlyCollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::ReadOnlyCollectionBase::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::ReadOnlyCollectionBase::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ReadOnlyCollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Collections.SortedList/System.Collections.SyncSortedList
#include "System/Collections/SortedList_SyncSortedList.hpp"
// Including type: System.Collections.SortedList/System.Collections.SortedListEnumerator
#include "System/Collections/SortedList_SortedListEnumerator.hpp"
// Including type: System.Collections.SortedList/System.Collections.KeyList
#include "System/Collections/SortedList_KeyList.hpp"
// Including type: System.Collections.SortedList/System.Collections.ValueList
#include "System/Collections/SortedList_ValueList.hpp"
// Including type: System.Collections.SortedList/System.Collections.SortedListDebugView
#include "System/Collections/SortedList_SortedListDebugView.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _defaultCapacity
int System::Collections::SortedList::_get__defaultCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::_get__defaultCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "SortedList", "_defaultCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _defaultCapacity
void System::Collections::SortedList::_set__defaultCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::_set__defaultCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "SortedList", "_defaultCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] emptyArray
::ArrayW<::Il2CppObject*> System::Collections::SortedList::_get_emptyArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::_get_emptyArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Collections", "SortedList", "emptyArray"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] emptyArray
void System::Collections::SortedList::_set_emptyArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::_set_emptyArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "SortedList", "emptyArray", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] keys
::ArrayW<::Il2CppObject*>& System::Collections::SortedList::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] values
::ArrayW<::Il2CppObject*>& System::Collections::SortedList::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
int& System::Collections::SortedList::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::SortedList::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
::System::Collections::IComparer*& System::Collections::SortedList::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList/System.Collections.KeyList keyList
::System::Collections::SortedList::KeyList*& System::Collections::SortedList::dyn_keyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_keyList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList::KeyList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList/System.Collections.ValueList valueList
::System::Collections::SortedList::ValueList*& System::Collections::SortedList::dyn_valueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_valueList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList::ValueList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::SortedList::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList.get_Capacity
int System::Collections::SortedList::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.set_Capacity
void System::Collections::SortedList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::set_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.get_Count
int System::Collections::SortedList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Keys
::System::Collections::ICollection* System::Collections::SortedList::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Values
::System::Collections::ICollection* System::Collections::SortedList::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_IsReadOnly
bool System::Collections::SortedList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Item
::Il2CppObject* System::Collections::SortedList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.set_Item
void System::Collections::SortedList::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList..cctor
void System::Collections::SortedList::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "SortedList", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Init
void System::Collections::SortedList::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Add
void System::Collections::SortedList::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList.Clear
void System::Collections::SortedList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Clone
::Il2CppObject* System::Collections::SortedList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Contains
bool System::Collections::SortedList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.ContainsValue
bool System::Collections::SortedList::ContainsValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ContainsValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.CopyTo
void System::Collections::SortedList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList.EnsureCapacity
void System::Collections::SortedList::EnsureCapacity(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min);
}
// Autogenerated method: System.Collections.SortedList.GetByIndex
::Il2CppObject* System::Collections::SortedList::GetByIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetByIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::SortedList::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::SortedList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetKey
::Il2CppObject* System::Collections::SortedList::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.GetKeyList
::System::Collections::IList* System::Collections::SortedList::GetKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetKeyList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetValueList
::System::Collections::IList* System::Collections::SortedList::GetValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetValueList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.IndexOfKey
int System::Collections::SortedList::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::IndexOfKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.IndexOfValue
int System::Collections::SortedList::IndexOfValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::IndexOfValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.Insert
void System::Collections::SortedList::Insert(int index, ::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, key, value);
}
// Autogenerated method: System.Collections.SortedList.RemoveAt
void System::Collections::SortedList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.Remove
void System::Collections::SortedList::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.Synchronized
::System::Collections::SortedList* System::Collections::SortedList::Synchronized(::System::Collections::SortedList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "SortedList", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::SortedList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/System.Collections.SyncSortedList
#include "System/Collections/SortedList_SyncSortedList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList _list
::System::Collections::SortedList*& System::Collections::SortedList::SyncSortedList::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _root
::Il2CppObject*& System::Collections::SortedList::SyncSortedList::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.get_Count
int System::Collections::SortedList::SyncSortedList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::SyncSortedList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.get_IsReadOnly
bool System::Collections::SortedList::SyncSortedList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.get_Item
::Il2CppObject* System::Collections::SortedList::SyncSortedList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.set_Item
void System::Collections::SortedList::SyncSortedList::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.get_Capacity
int System::Collections::SortedList::SyncSortedList::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.Add
void System::Collections::SortedList::SyncSortedList::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.Clear
void System::Collections::SortedList::SyncSortedList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.Clone
::Il2CppObject* System::Collections::SortedList::SyncSortedList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.Contains
bool System::Collections::SortedList::SyncSortedList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.ContainsValue
bool System::Collections::SortedList::SyncSortedList::ContainsValue(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::ContainsValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.CopyTo
void System::Collections::SortedList::SyncSortedList::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetByIndex
::Il2CppObject* System::Collections::SortedList::SyncSortedList::GetByIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetByIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::SortedList::SyncSortedList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetKey
::Il2CppObject* System::Collections::SortedList::SyncSortedList::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetKeyList
::System::Collections::IList* System::Collections::SortedList::SyncSortedList::GetKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetKeyList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetValueList
::System::Collections::IList* System::Collections::SortedList::SyncSortedList::GetValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetValueList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.IndexOfKey
int System::Collections::SortedList::SyncSortedList::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::IndexOfKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.IndexOfValue
int System::Collections::SortedList::SyncSortedList::IndexOfValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::IndexOfValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.RemoveAt
void System::Collections::SortedList::SyncSortedList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.Remove
void System::Collections::SortedList::SyncSortedList::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/System.Collections.SortedListEnumerator
#include "System/Collections/SortedList_SortedListEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList sortedList
::System::Collections::SortedList*& System::Collections::SortedList::SortedListEnumerator::dyn_sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object key
::Il2CppObject*& System::Collections::SortedList::SortedListEnumerator::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object value
::Il2CppObject*& System::Collections::SortedList::SortedListEnumerator::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
int& System::Collections::SortedList::SortedListEnumerator::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 startIndex
int& System::Collections::SortedList::SortedListEnumerator::dyn_startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_startIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endIndex
int& System::Collections::SortedList::SortedListEnumerator::dyn_endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::SortedList::SortedListEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean current
bool& System::Collections::SortedList::SortedListEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 getObjectRetType
int& System::Collections::SortedList::SortedListEnumerator::dyn_getObjectRetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_getObjectRetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getObjectRetType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.get_Key
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::SortedList::SortedListEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.get_Current
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.get_Value
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.Clone
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.MoveNext
bool System::Collections::SortedList::SortedListEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.Reset
void System::Collections::SortedList::SortedListEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/System.Collections.KeyList
#include "System/Collections/SortedList_KeyList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList sortedList
::System::Collections::SortedList*& System::Collections::SortedList::KeyList::dyn_sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::dyn_sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.get_Count
int System::Collections::SortedList::KeyList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.get_IsReadOnly
bool System::Collections::SortedList::KeyList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.get_IsFixedSize
bool System::Collections::SortedList::KeyList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::KeyList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.get_Item
::Il2CppObject* System::Collections::SortedList::KeyList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.set_Item
void System::Collections::SortedList::KeyList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Add
int System::Collections::SortedList::KeyList::Add(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Clear
void System::Collections::SortedList::KeyList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Contains
bool System::Collections::SortedList::KeyList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.CopyTo
void System::Collections::SortedList::KeyList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Insert
void System::Collections::SortedList::KeyList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::SortedList::KeyList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.IndexOf
int System::Collections::SortedList::KeyList::IndexOf(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Remove
void System::Collections::SortedList::KeyList::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.RemoveAt
void System::Collections::SortedList::KeyList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/System.Collections.ValueList
#include "System/Collections/SortedList_ValueList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList sortedList
::System::Collections::SortedList*& System::Collections::SortedList::ValueList::dyn_sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::dyn_sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.get_Count
int System::Collections::SortedList::ValueList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.get_IsReadOnly
bool System::Collections::SortedList::ValueList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.get_IsFixedSize
bool System::Collections::SortedList::ValueList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::ValueList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.get_Item
::Il2CppObject* System::Collections::SortedList::ValueList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.set_Item
void System::Collections::SortedList::ValueList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Add
int System::Collections::SortedList::ValueList::Add(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Clear
void System::Collections::SortedList::ValueList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Contains
bool System::Collections::SortedList::ValueList::Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.CopyTo
void System::Collections::SortedList::ValueList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Insert
void System::Collections::SortedList::ValueList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::SortedList::ValueList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.IndexOf
int System::Collections::SortedList::ValueList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Remove
void System::Collections::SortedList::ValueList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.RemoveAt
void System::Collections::SortedList::ValueList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Collections.Stack/System.Collections.StackEnumerator
#include "System/Collections/Stack_StackEnumerator.hpp"
// Including type: System.Collections.Stack/System.Collections.StackDebugView
#include "System/Collections/Stack_StackDebugView.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] _array
::ArrayW<::Il2CppObject*>& System::Collections::Stack::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
int& System::Collections::Stack::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Stack::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::Stack::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Stack.get_Count
int System::Collections::Stack::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.get_SyncRoot
::Il2CppObject* System::Collections::Stack::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Clear
void System::Collections::Stack::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Clone
::Il2CppObject* System::Collections::Stack::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.CopyTo
void System::Collections::Stack::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Stack.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Stack::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Peek
::Il2CppObject* System::Collections::Stack::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Pop
::Il2CppObject* System::Collections::Stack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Pop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Push
void System::Collections::Stack::Push(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Push");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Stack/System.Collections.StackEnumerator
#include "System/Collections/Stack_StackEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack _stack
::System::Collections::Stack*& System::Collections::Stack::StackEnumerator::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
int& System::Collections::Stack::StackEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Stack::StackEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentElement
::Il2CppObject*& System::Collections::Stack::StackEnumerator::dyn_currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn_currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElement"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Stack/System.Collections.StackEnumerator.get_Current
::Il2CppObject* System::Collections::Stack::StackEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack/System.Collections.StackEnumerator.Clone
::Il2CppObject* System::Collections::Stack::StackEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack/System.Collections.StackEnumerator.MoveNext
bool System::Collections::Stack::StackEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack/System.Collections.StackEnumerator.Reset
void System::Collections::Stack::StackEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Concurrent.CDSCollectionETWBCLProvider
#include "System/Collections/Concurrent/CDSCollectionETWBCLProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
::System::Collections::Concurrent::CDSCollectionETWBCLProvider* System::Collections::Concurrent::CDSCollectionETWBCLProvider::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::CDSCollectionETWBCLProvider*>("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", "Log"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::_set_Log(::System::Collections::Concurrent::CDSCollectionETWBCLProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", "Log", value));
}
// Autogenerated method: System.Collections.Concurrent.CDSCollectionETWBCLProvider.ConcurrentDictionary_AcquiringAllLocks
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::ConcurrentDictionary_AcquiringAllLocks(int numOfBuckets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::ConcurrentDictionary_AcquiringAllLocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConcurrentDictionary_AcquiringAllLocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numOfBuckets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numOfBuckets);
}
// Autogenerated method: System.Collections.Concurrent.CDSCollectionETWBCLProvider..cctor
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.CollectionExtensions
#include "System/Collections/Generic/CollectionExtensions.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.KeyValuePair
#include "System/Collections/Generic/KeyValuePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.KeyValuePair.PairToString
::StringW System::Collections::Generic::KeyValuePair::PairToString(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::KeyValuePair::PairToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "KeyValuePair", "PairToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.IntrospectiveSortUtilities
#include "System/Collections/Generic/IntrospectiveSortUtilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.FloorLog2
int System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "FloorLog2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer
void System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer(::Il2CppObject* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "ThrowOrIgnoreBadComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.InsertionBehavior
#include "System/Collections/Generic/InsertionBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior None
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior None
void System::Collections::Generic::InsertionBehavior::_set_None(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
void System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
void System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& System::Collections::Generic::InsertionBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.DictionaryHashHelpers
#include "System/Collections/Generic/DictionaryHashHelpers.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*>("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
void System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField", value));
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers.get_SerializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers..cctor
void System::Collections::Generic::DictionaryHashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.NonRandomizedStringEqualityComparer
#include "System/Collections/Generic/NonRandomizedStringEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.Equals
bool System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.GetHashCode
int System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ObjectEqualityComparer
#include "System/Collections/Generic/ObjectEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
::System::Collections::Generic::ObjectEqualityComparer* System::Collections::Generic::ObjectEqualityComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::ObjectEqualityComparer*>("System.Collections.Generic", "ObjectEqualityComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
void System::Collections::Generic::ObjectEqualityComparer::_set_Default(::System::Collections::Generic::ObjectEqualityComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "ObjectEqualityComparer", "Default", value));
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer..cctor
void System::Collections::Generic::ObjectEqualityComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "ObjectEqualityComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.GetHashCode
int System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.Equals
bool System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ByteEqualityComparer
#include "System/Collections/Generic/ByteEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(uint8_t x, uint8_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.IndexOf
int System::Collections::Generic::ByteEqualityComparer::IndexOf(::ArrayW<uint8_t> array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.LastIndexOf
int System::Collections::Generic::ByteEqualityComparer::LastIndexOf(::ArrayW<uint8_t> array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.InternalStringComparer
#include "System/Collections/Generic/InternalStringComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.InternalStringComparer.GetHashCode
int System::Collections::Generic::InternalStringComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.Equals
bool System::Collections::Generic::InternalStringComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.IndexOf
int System::Collections::Generic::InternalStringComparer::IndexOf(::ArrayW<::StringW> array, ::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.KeyNotFoundException
#include "System/Collections/Generic/KeyNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ConditionalAttribute
#include "System/Diagnostics/ConditionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_conditionString
::StringW& System::Diagnostics::ConditionalAttribute::dyn_m_conditionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ConditionalAttribute::dyn_m_conditionString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_conditionString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerStepThroughAttribute
#include "System/Diagnostics/DebuggerStepThroughAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerHiddenAttribute
#include "System/Diagnostics/DebuggerHiddenAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerNonUserCodeAttribute
#include "System/Diagnostics/DebuggerNonUserCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes m_debuggingModes
::System::Diagnostics::DebuggableAttribute::DebuggingModes& System::Diagnostics::DebuggableAttribute::dyn_m_debuggingModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::dyn_m_debuggingModes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_debuggingModes"))->offset;
  return *reinterpret_cast<::System::Diagnostics::DebuggableAttribute::DebuggingModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes None
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes None
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes Default
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes Default
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes DisableOptimizations
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes DisableOptimizations
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes IgnoreSymbolStoreSequencePoints
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes IgnoreSymbolStoreSequencePoints
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes EnableEditAndContinue
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes EnableEditAndContinue
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Diagnostics::DebuggableAttribute::DebuggingModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableState
#include "System/Diagnostics/DebuggerBrowsableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Never
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Never
void System::Diagnostics::DebuggerBrowsableState::_set_Never(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Collapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_Collapsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Collapsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
void System::Diagnostics::DebuggerBrowsableState::_set_Collapsed(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_Collapsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Collapsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_RootHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_RootHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "RootHidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
void System::Diagnostics::DebuggerBrowsableState::_set_RootHidden(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_RootHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "RootHidden", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Diagnostics::DebuggerBrowsableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableAttribute
#include "System/Diagnostics/DebuggerBrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.DebuggerBrowsableState state
::System::Diagnostics::DebuggerBrowsableState& System::Diagnostics::DebuggerBrowsableAttribute::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableAttribute::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Diagnostics::DebuggerBrowsableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerTypeProxyAttribute
#include "System/Diagnostics/DebuggerTypeProxyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String typeName
::StringW& System::Diagnostics::DebuggerTypeProxyAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerTypeProxyAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerDisplayAttribute
#include "System/Diagnostics/DebuggerDisplayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String type
::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Debugger
#include "System/Diagnostics/Debugger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultCategory
::StringW System::Diagnostics::Debugger::_get_DefaultCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::_get_DefaultCategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "Debugger", "DefaultCategory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultCategory
void System::Diagnostics::Debugger::_set_DefaultCategory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::_set_DefaultCategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Debugger", "DefaultCategory", value));
}
// Autogenerated method: System.Diagnostics.Debugger.get_IsAttached
bool System::Diagnostics::Debugger::get_IsAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::get_IsAttached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "get_IsAttached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger..cctor
void System::Diagnostics::Debugger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsAttached_internal
bool System::Diagnostics::Debugger::IsAttached_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::IsAttached_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsAttached_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsLogging
bool System::Diagnostics::Debugger::IsLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::IsLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.Log
void System::Diagnostics::Debugger::Log(int level, ::StringW category, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level, category, message);
}
// Autogenerated method: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency
void System::Diagnostics::Debugger::NotifyOfCrossThreadDependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::NotifyOfCrossThreadDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "NotifyOfCrossThreadDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 OFFSET_UNKNOWN
int System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OFFSET_UNKNOWN
void System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ilOffset
int& System::Diagnostics::StackFrame::dyn_ilOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_ilOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ilOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nativeOffset
int& System::Diagnostics::StackFrame::dyn_nativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_nativeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 methodAddress
int64_t& System::Diagnostics::StackFrame::dyn_methodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodAddress"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 methodIndex
uint& System::Diagnostics::StackFrame::dyn_methodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodBase methodBase
::System::Reflection::MethodBase*& System::Diagnostics::StackFrame::dyn_methodBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodBase"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fileName
::StringW& System::Diagnostics::StackFrame::dyn_fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
int& System::Diagnostics::StackFrame::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 columnNumber
int& System::Diagnostics::StackFrame::dyn_columnNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_columnNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "columnNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String internalMethodName
::StringW& System::Diagnostics::StackFrame::dyn_internalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_internalMethodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalMethodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.StackFrame.get_frame_info
bool System::Diagnostics::StackFrame::get_frame_info(int skip, bool needFileInfo, ByRef<::System::Reflection::MethodBase*> method, ByRef<int> iloffset, ByRef<int> native_offset, ByRef<::StringW> file, ByRef<int> line, ByRef<int> column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::get_frame_info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackFrame", "get_frame_info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skip), ::il2cpp_utils::ExtractType(needFileInfo), ::il2cpp_utils::ExtractIndependentType<::System::Reflection::MethodBase*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skip, needFileInfo, byref(method), byref(iloffset), byref(native_offset), byref(file), byref(line), byref(column));
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileLineNumber
int System::Diagnostics::StackFrame::GetFileLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetFileLineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileName
::StringW System::Diagnostics::StackFrame::GetFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetFileName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetSecureFileName
::StringW System::Diagnostics::StackFrame::GetSecureFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetILOffset
int System::Diagnostics::StackFrame::GetILOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetILOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetILOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethod
::System::Reflection::MethodBase* System::Diagnostics::StackFrame::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetNativeOffset
int System::Diagnostics::StackFrame::GetNativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetNativeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodAddress
int64_t System::Diagnostics::StackFrame::GetMethodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethodAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodIndex
uint System::Diagnostics::StackFrame::GetMethodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethodIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetInternalMethodName
::StringW System::Diagnostics::StackFrame::GetInternalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetInternalMethodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInternalMethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.ToString
::StringW System::Diagnostics::StackFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
// Including type: System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 METHODS_TO_SKIP
int System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 METHODS_TO_SKIP
void System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isAotidSet
bool System::Diagnostics::StackTrace::_get_isAotidSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_isAotidSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "StackTrace", "isAotidSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isAotidSet
void System::Diagnostics::StackTrace::_set_isAotidSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_isAotidSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "isAotidSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.String aotid
::StringW System::Diagnostics::StackTrace::_get_aotid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_aotid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "StackTrace", "aotid"));
}
// Autogenerated static field setter
// Set static field: static private System.String aotid
void System::Diagnostics::StackTrace::_set_aotid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_aotid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "aotid", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.StackFrame[] frames
::ArrayW<::System::Diagnostics::StackFrame*>& System::Diagnostics::StackTrace::dyn_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frames"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::StackFrame*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.StackTrace[] captured_traces
::ArrayW<::System::Diagnostics::StackTrace*>& System::Diagnostics::StackTrace::dyn_captured_traces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_captured_traces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "captured_traces"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::StackTrace*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debug_info
bool& System::Diagnostics::StackTrace::dyn_debug_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_debug_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debug_info"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_FrameCount
int System::Diagnostics::StackTrace::get_FrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::get_FrameCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.init_frames
void System::Diagnostics::StackTrace::init_frames(int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::init_frames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "init_frames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_trace
::ArrayW<::System::Diagnostics::StackFrame*> System::Diagnostics::StackTrace::get_trace(::System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::get_trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "get_trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Diagnostics::StackFrame*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFrame
::System::Diagnostics::StackFrame* System::Diagnostics::StackTrace::GetFrame(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::StackFrame*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetAotId
::StringW System::Diagnostics::StackTrace::GetAotId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetAotId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "GetAotId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.AddFrames
bool System::Diagnostics::StackTrace::AddFrames(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::AddFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFullNameForStackTrace
void System::Diagnostics::StackTrace::GetFullNameForStackTrace(::System::Text::StringBuilder* sb, ::System::Reflection::MethodBase* mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetFullNameForStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullNameForStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(mi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, mi);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::StringW System::Diagnostics::StackTrace::ToString(::System::Diagnostics::StackTrace::TraceFormat traceFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, traceFormat);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::StringW System::Diagnostics::StackTrace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat Normal
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat Normal
void System::Diagnostics::StackTrace::TraceFormat::_set_Normal(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat TrailingNewLine
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat TrailingNewLine
void System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat NoResourceLookup
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat NoResourceLookup
void System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Diagnostics::StackTrace::TraceFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Contracts.Contract
#include "System/Diagnostics/Contracts/Contract.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte m_EventSourceExceptionRecurenceCount
uint8_t System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte m_EventSourceExceptionRecurenceCount
void System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] namespaceBytes
::ArrayW<uint8_t> System::Diagnostics::Tracing::EventSource::_get_namespaceBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_namespaceBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Diagnostics.Tracing", "EventSource", "namespaceBytes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] namespaceBytes
void System::Diagnostics::Tracing::EventSource::_set_namespaceBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_namespaceBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "namespaceBytes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid AspNetEventSourceGuid
::System::Guid System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid AspNetEventSourceGuid
void System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid", value));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource..cctor
void System::Diagnostics::Tracing::EventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ToString
::StringW System::Diagnostics::Tracing::EventSource::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Finalize
void System::Diagnostics::Tracing::EventSource::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.Emit.UnmanagedMarshal
#include "System/Reflection/Emit/UnmanagedMarshal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.DynamicMethod
#include "System/Reflection/Emit/DynamicMethod.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Attributes
::System::Reflection::MethodAttributes System::Reflection::Emit::DynamicMethod::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_DeclaringType
::System::Type* System::Reflection::Emit::DynamicMethod::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_MethodHandle
::System::RuntimeMethodHandle System::Reflection::Emit::DynamicMethod::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Name
::StringW System::Reflection::Emit::DynamicMethod::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_ReflectedType
::System::Type* System::Reflection::Emit::DynamicMethod::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetBaseDefinition
::System::Reflection::MethodInfo* System::Reflection::Emit::DynamicMethod::GetBaseDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetBaseDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::DynamicMethod::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::DynamicMethod::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
::System::Reflection::MethodImplAttributes System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::Emit::DynamicMethod::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.Invoke
::Il2CppObject* System::Reflection::Emit::DynamicMethod::Invoke(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.IsDefined
bool System::Reflection::Emit::DynamicMethod::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.__Il2CppComObject
#include "System/__Il2CppComObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComObject.Finalize
void System::__Il2CppComObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Il2CppComObject::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.__Il2CppComDelegate
#include "System/__Il2CppComDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComDelegate.Finalize
void System::__Il2CppComDelegate::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Il2CppComDelegate::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.AddingNewEventArgs
#include "System/ComponentModel/AddingNewEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AddingNewEventHandler
#include "System/ComponentModel/AddingNewEventHandler.hpp"
// Including type: System.ComponentModel.AddingNewEventArgs
#include "System/ComponentModel/AddingNewEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.AddingNewEventHandler.Invoke
void System::ComponentModel::AddingNewEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::AddingNewEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.AddingNewEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::AddingNewEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::AddingNewEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.AddingNewEventHandler.EndInvoke
void System::ComponentModel::AddingNewEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.NotifyCollectionChangedAction
#include "System/ComponentModel/NotifyCollectionChangedAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Add
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Add
void System::ComponentModel::NotifyCollectionChangedAction::_set_Add(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Remove
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Remove
void System::ComponentModel::NotifyCollectionChangedAction::_set_Remove(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Replace
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Replace
void System::ComponentModel::NotifyCollectionChangedAction::_set_Replace(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Move
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Move"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Move
void System::ComponentModel::NotifyCollectionChangedAction::_set_Move(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Move", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Reset
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Reset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Reset"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Reset
void System::ComponentModel::NotifyCollectionChangedAction::_set_Reset(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Reset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Reset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::ComponentModel::NotifyCollectionChangedAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.NotifyCollectionChangedEventHandler
#include "System/ComponentModel/NotifyCollectionChangedEventHandler.hpp"
// Including type: System.ComponentModel.NotifyCollectionChangedEventArgs
#include "System/ComponentModel/NotifyCollectionChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.NotifyCollectionChangedEventHandler.Invoke
void System::ComponentModel::NotifyCollectionChangedEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::NotifyCollectionChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.NotifyCollectionChangedEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::NotifyCollectionChangedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::NotifyCollectionChangedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.NotifyCollectionChangedEventHandler.EndInvoke
void System::ComponentModel::NotifyCollectionChangedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyChangingEventArgs
#include "System/ComponentModel/PropertyChangingEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <PropertyName>k__BackingField
::StringW& System::ComponentModel::PropertyChangingEventArgs::dyn_$PropertyName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventArgs::dyn_$PropertyName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyChangingEventArgs.set_PropertyName
void System::ComponentModel::PropertyChangingEventArgs::set_PropertyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventArgs::set_PropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyChangingEventHandler
#include "System/ComponentModel/PropertyChangingEventHandler.hpp"
// Including type: System.ComponentModel.PropertyChangingEventArgs
#include "System/ComponentModel/PropertyChangingEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.PropertyChangingEventHandler.Invoke
void System::ComponentModel::PropertyChangingEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangingEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.PropertyChangingEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::PropertyChangingEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangingEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.PropertyChangingEventHandler.EndInvoke
void System::ComponentModel::PropertyChangingEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.ConstructorHandling
#include "Newtonsoft/Json/ConstructorHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ConstructorHandling Default
::Newtonsoft::Json::ConstructorHandling Newtonsoft::Json::ConstructorHandling::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ConstructorHandling>("Newtonsoft.Json", "ConstructorHandling", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ConstructorHandling Default
void Newtonsoft::Json::ConstructorHandling::_set_Default(::Newtonsoft::Json::ConstructorHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ConstructorHandling", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ConstructorHandling AllowNonPublicDefaultConstructor
::Newtonsoft::Json::ConstructorHandling Newtonsoft::Json::ConstructorHandling::_get_AllowNonPublicDefaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_get_AllowNonPublicDefaultConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ConstructorHandling>("Newtonsoft.Json", "ConstructorHandling", "AllowNonPublicDefaultConstructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ConstructorHandling AllowNonPublicDefaultConstructor
void Newtonsoft::Json::ConstructorHandling::_set_AllowNonPublicDefaultConstructor(::Newtonsoft::Json::ConstructorHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_set_AllowNonPublicDefaultConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ConstructorHandling", "AllowNonPublicDefaultConstructor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::ConstructorHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DateFormatHandling
#include "Newtonsoft/Json/DateFormatHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateFormatHandling IsoDateFormat
::Newtonsoft::Json::DateFormatHandling Newtonsoft::Json::DateFormatHandling::_get_IsoDateFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_get_IsoDateFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateFormatHandling>("Newtonsoft.Json", "DateFormatHandling", "IsoDateFormat"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateFormatHandling IsoDateFormat
void Newtonsoft::Json::DateFormatHandling::_set_IsoDateFormat(::Newtonsoft::Json::DateFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_set_IsoDateFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateFormatHandling", "IsoDateFormat", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateFormatHandling MicrosoftDateFormat
::Newtonsoft::Json::DateFormatHandling Newtonsoft::Json::DateFormatHandling::_get_MicrosoftDateFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_get_MicrosoftDateFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateFormatHandling>("Newtonsoft.Json", "DateFormatHandling", "MicrosoftDateFormat"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateFormatHandling MicrosoftDateFormat
void Newtonsoft::Json::DateFormatHandling::_set_MicrosoftDateFormat(::Newtonsoft::Json::DateFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_set_MicrosoftDateFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateFormatHandling", "MicrosoftDateFormat", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::DateFormatHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DateParseHandling
#include "Newtonsoft/Json/DateParseHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateParseHandling None
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::DateParseHandling::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateParseHandling>("Newtonsoft.Json", "DateParseHandling", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateParseHandling None
void Newtonsoft::Json::DateParseHandling::_set_None(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateParseHandling", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateParseHandling DateTime
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::DateParseHandling::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateParseHandling>("Newtonsoft.Json", "DateParseHandling", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateParseHandling DateTime
void Newtonsoft::Json::DateParseHandling::_set_DateTime(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateParseHandling", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateParseHandling DateTimeOffset
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::DateParseHandling::_get_DateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_get_DateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateParseHandling>("Newtonsoft.Json", "DateParseHandling", "DateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateParseHandling DateTimeOffset
void Newtonsoft::Json::DateParseHandling::_set_DateTimeOffset(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_set_DateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateParseHandling", "DateTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::DateParseHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DateTimeZoneHandling
#include "Newtonsoft/Json/DateTimeZoneHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling Local
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "Local"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling Local
void Newtonsoft::Json::DateTimeZoneHandling::_set_Local(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling Utc
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_Utc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "Utc"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling Utc
void Newtonsoft::Json::DateTimeZoneHandling::_set_Utc(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_Utc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "Utc", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling Unspecified
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling Unspecified
void Newtonsoft::Json::DateTimeZoneHandling::_set_Unspecified(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling RoundtripKind
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_RoundtripKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_RoundtripKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "RoundtripKind"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling RoundtripKind
void Newtonsoft::Json::DateTimeZoneHandling::_set_RoundtripKind(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_RoundtripKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "RoundtripKind", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::DateTimeZoneHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.FloatFormatHandling
#include "Newtonsoft/Json/FloatFormatHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatFormatHandling String
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::FloatFormatHandling::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatFormatHandling>("Newtonsoft.Json", "FloatFormatHandling", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatFormatHandling String
void Newtonsoft::Json::FloatFormatHandling::_set_String(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatFormatHandling", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatFormatHandling Symbol
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::FloatFormatHandling::_get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_get_Symbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatFormatHandling>("Newtonsoft.Json", "FloatFormatHandling", "Symbol"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatFormatHandling Symbol
void Newtonsoft::Json::FloatFormatHandling::_set_Symbol(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_set_Symbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatFormatHandling", "Symbol", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatFormatHandling DefaultValue
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::FloatFormatHandling::_get_DefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_get_DefaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatFormatHandling>("Newtonsoft.Json", "FloatFormatHandling", "DefaultValue"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatFormatHandling DefaultValue
void Newtonsoft::Json::FloatFormatHandling::_set_DefaultValue(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_set_DefaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatFormatHandling", "DefaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::FloatFormatHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.FloatParseHandling
#include "Newtonsoft/Json/FloatParseHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatParseHandling Double
::Newtonsoft::Json::FloatParseHandling Newtonsoft::Json::FloatParseHandling::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatParseHandling>("Newtonsoft.Json", "FloatParseHandling", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatParseHandling Double
void Newtonsoft::Json::FloatParseHandling::_set_Double(::Newtonsoft::Json::FloatParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatParseHandling", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatParseHandling Decimal
::Newtonsoft::Json::FloatParseHandling Newtonsoft::Json::FloatParseHandling::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatParseHandling>("Newtonsoft.Json", "FloatParseHandling", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatParseHandling Decimal
void Newtonsoft::Json::FloatParseHandling::_set_Decimal(::Newtonsoft::Json::FloatParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatParseHandling", "Decimal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::FloatParseHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Formatting
#include "Newtonsoft/Json/Formatting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Formatting None
::Newtonsoft::Json::Formatting Newtonsoft::Json::Formatting::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Formatting>("Newtonsoft.Json", "Formatting", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Formatting None
void Newtonsoft::Json::Formatting::_set_None(::Newtonsoft::Json::Formatting value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Formatting", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Formatting Indented
::Newtonsoft::Json::Formatting Newtonsoft::Json::Formatting::_get_Indented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_get_Indented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Formatting>("Newtonsoft.Json", "Formatting", "Indented"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Formatting Indented
void Newtonsoft::Json::Formatting::_set_Indented(::Newtonsoft::Json::Formatting value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_set_Indented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Formatting", "Indented", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::Formatting::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonConstructorAttribute
#include "Newtonsoft/Json/JsonConstructorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonDictionaryAttribute
#include "Newtonsoft/Json/JsonDictionaryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonException
#include "Newtonsoft/Json/JsonException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonExtensionDataAttribute
#include "Newtonsoft/Json/JsonExtensionDataAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WriteData>k__BackingField
bool& Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$WriteData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$WriteData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WriteData>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ReadData>k__BackingField
bool& Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$ReadData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$ReadData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReadData>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.get_WriteData
bool Newtonsoft::Json::JsonExtensionDataAttribute::get_WriteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::get_WriteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.set_WriteData
void Newtonsoft::Json::JsonExtensionDataAttribute::set_WriteData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::set_WriteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WriteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.get_ReadData
bool Newtonsoft::Json::JsonExtensionDataAttribute::get_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::get_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.set_ReadData
void Newtonsoft::Json::JsonExtensionDataAttribute::set_ReadData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::set_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonContainerType
#include "Newtonsoft/Json/JsonContainerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType None
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType None
void Newtonsoft::Json::JsonContainerType::_set_None(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType Object
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType Object
void Newtonsoft::Json::JsonContainerType::_set_Object(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType Array
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType Array
void Newtonsoft::Json::JsonContainerType::_set_Array(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType Constructor
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType Constructor
void Newtonsoft::Json::JsonContainerType::_set_Constructor(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "Constructor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::JsonContainerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonPosition
#include "Newtonsoft/Json/JsonPosition.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] SpecialCharacters
::ArrayW<::Il2CppChar> Newtonsoft::Json::JsonPosition::_get_SpecialCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::_get_SpecialCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Newtonsoft.Json", "JsonPosition", "SpecialCharacters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] SpecialCharacters
void Newtonsoft::Json::JsonPosition::_set_SpecialCharacters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::_set_SpecialCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonPosition", "SpecialCharacters", value));
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.JsonContainerType Type
::Newtonsoft::Json::JsonContainerType& Newtonsoft::Json::JsonPosition::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonContainerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Position
int& Newtonsoft::Json::JsonPosition::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String PropertyName
::StringW& Newtonsoft::Json::JsonPosition::dyn_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_PropertyName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean HasIndex
bool& Newtonsoft::Json::JsonPosition::dyn_HasIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_HasIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasIndex"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition..ctor
Newtonsoft::Json::JsonPosition::JsonPosition(::Newtonsoft::Json::JsonContainerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition..cctor
void Newtonsoft::Json::JsonPosition::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.CalculateLength
int Newtonsoft::Json::JsonPosition::CalculateLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::CalculateLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CalculateLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.WriteTo
void Newtonsoft::Json::JsonPosition::WriteTo(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::WriteTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.TypeHasIndex
bool Newtonsoft::Json::JsonPosition::TypeHasIndex(::Newtonsoft::Json::JsonContainerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::TypeHasIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", "TypeHasIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.BuildPath
::StringW Newtonsoft::Json::JsonPosition::BuildPath(::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>* positions, ::System::Nullable_1<::Newtonsoft::Json::JsonPosition> currentPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::BuildPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", "BuildPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(currentPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, positions, currentPosition);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.FormatMessage
::StringW Newtonsoft::Json::JsonPosition::FormatMessage(::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::StringW path, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::FormatMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", "FormatMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineInfo), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineInfo, path, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonRequiredAttribute
#include "Newtonsoft/Json/JsonRequiredAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.MetadataPropertyHandling
#include "Newtonsoft/Json/MetadataPropertyHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.MetadataPropertyHandling Default
::Newtonsoft::Json::MetadataPropertyHandling Newtonsoft::Json::MetadataPropertyHandling::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::MetadataPropertyHandling>("Newtonsoft.Json", "MetadataPropertyHandling", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.MetadataPropertyHandling Default
void Newtonsoft::Json::MetadataPropertyHandling::_set_Default(::Newtonsoft::Json::MetadataPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "MetadataPropertyHandling", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.MetadataPropertyHandling ReadAhead
::Newtonsoft::Json::MetadataPropertyHandling Newtonsoft::Json::MetadataPropertyHandling::_get_ReadAhead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_get_ReadAhead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::MetadataPropertyHandling>("Newtonsoft.Json", "MetadataPropertyHandling", "ReadAhead"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.MetadataPropertyHandling ReadAhead
void Newtonsoft::Json::MetadataPropertyHandling::_set_ReadAhead(::Newtonsoft::Json::MetadataPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_set_ReadAhead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "MetadataPropertyHandling", "ReadAhead", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.MetadataPropertyHandling Ignore
::Newtonsoft::Json::MetadataPropertyHandling Newtonsoft::Json::MetadataPropertyHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::MetadataPropertyHandling>("Newtonsoft.Json", "MetadataPropertyHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.MetadataPropertyHandling Ignore
void Newtonsoft::Json::MetadataPropertyHandling::_set_Ignore(::Newtonsoft::Json::MetadataPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "MetadataPropertyHandling", "Ignore", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::MetadataPropertyHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.StringEscapeHandling
#include "Newtonsoft/Json/StringEscapeHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.StringEscapeHandling Default
::Newtonsoft::Json::StringEscapeHandling Newtonsoft::Json::StringEscapeHandling::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::StringEscapeHandling>("Newtonsoft.Json", "StringEscapeHandling", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.StringEscapeHandling Default
void Newtonsoft::Json::StringEscapeHandling::_set_Default(::Newtonsoft::Json::StringEscapeHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "StringEscapeHandling", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.StringEscapeHandling EscapeNonAscii
::Newtonsoft::Json::StringEscapeHandling Newtonsoft::Json::StringEscapeHandling::_get_EscapeNonAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_get_EscapeNonAscii");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::StringEscapeHandling>("Newtonsoft.Json", "StringEscapeHandling", "EscapeNonAscii"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.StringEscapeHandling EscapeNonAscii
void Newtonsoft::Json::StringEscapeHandling::_set_EscapeNonAscii(::Newtonsoft::Json::StringEscapeHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_set_EscapeNonAscii");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "StringEscapeHandling", "EscapeNonAscii", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.StringEscapeHandling EscapeHtml
::Newtonsoft::Json::StringEscapeHandling Newtonsoft::Json::StringEscapeHandling::_get_EscapeHtml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_get_EscapeHtml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::StringEscapeHandling>("Newtonsoft.Json", "StringEscapeHandling", "EscapeHtml"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.StringEscapeHandling EscapeHtml
void Newtonsoft::Json::StringEscapeHandling::_set_EscapeHtml(::Newtonsoft::Json::StringEscapeHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_set_EscapeHtml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "StringEscapeHandling", "EscapeHtml", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::StringEscapeHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Required
#include "Newtonsoft/Json/Required.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Required Default
::Newtonsoft::Json::Required Newtonsoft::Json::Required::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Required>("Newtonsoft.Json", "Required", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Required Default
void Newtonsoft::Json::Required::_set_Default(::Newtonsoft::Json::Required value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Required", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Required AllowNull
::Newtonsoft::Json::Required Newtonsoft::Json::Required::_get_AllowNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_get_AllowNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Required>("Newtonsoft.Json", "Required", "AllowNull"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Required AllowNull
void Newtonsoft::Json::Required::_set_AllowNull(::Newtonsoft::Json::Required value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_set_AllowNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Required", "AllowNull", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Required Always
::Newtonsoft::Json::Required Newtonsoft::Json::Required::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Required>("Newtonsoft.Json", "Required", "Always"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Required Always
void Newtonsoft::Json::Required::_set_Always(::Newtonsoft::Json::Required value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Required", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Required DisallowNull
::Newtonsoft::Json::Required Newtonsoft::Json::Required::_get_DisallowNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_get_DisallowNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Required>("Newtonsoft.Json", "Required", "DisallowNull"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Required DisallowNull
void Newtonsoft::Json::Required::_set_DisallowNull(::Newtonsoft::Json::Required value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_set_DisallowNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Required", "DisallowNull", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::Required::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.PreserveReferencesHandling
#include "Newtonsoft/Json/PreserveReferencesHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.PreserveReferencesHandling None
::Newtonsoft::Json::PreserveReferencesHandling Newtonsoft::Json::PreserveReferencesHandling::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::PreserveReferencesHandling>("Newtonsoft.Json", "PreserveReferencesHandling", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.PreserveReferencesHandling None
void Newtonsoft::Json::PreserveReferencesHandling::_set_None(::Newtonsoft::Json::PreserveReferencesHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "PreserveReferencesHandling", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.PreserveReferencesHandling Objects
::Newtonsoft::Json::PreserveReferencesHandling Newtonsoft::Json::PreserveReferencesHandling::_get_Objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_get_Objects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::PreserveReferencesHandling>("Newtonsoft.Json", "PreserveReferencesHandling", "Objects"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.PreserveReferencesHandling Objects
void Newtonsoft::Json::PreserveReferencesHandling::_set_Objects(::Newtonsoft::Json::PreserveReferencesHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_set_Objects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "PreserveReferencesHandling", "Objects", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.PreserveReferencesHandling Arrays
::Newtonsoft::Json::PreserveReferencesHandling Newtonsoft::Json::PreserveReferencesHandling::_get_Arrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_get_Arrays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::PreserveReferencesHandling>("Newtonsoft.Json", "PreserveReferencesHandling", "Arrays"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.PreserveReferencesHandling Arrays
void Newtonsoft::Json::PreserveReferencesHandling::_set_Arrays(::Newtonsoft::Json::PreserveReferencesHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_set_Arrays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "PreserveReferencesHandling", "Arrays", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.PreserveReferencesHandling All
::Newtonsoft::Json::PreserveReferencesHandling Newtonsoft::Json::PreserveReferencesHandling::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::PreserveReferencesHandling>("Newtonsoft.Json", "PreserveReferencesHandling", "All"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.PreserveReferencesHandling All
void Newtonsoft::Json::PreserveReferencesHandling::_set_All(::Newtonsoft::Json::PreserveReferencesHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "PreserveReferencesHandling", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::PreserveReferencesHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.IJsonLineInfo.get_LineNumber
int Newtonsoft::Json::IJsonLineInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::IJsonLineInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.IJsonLineInfo.get_LinePosition
int Newtonsoft::Json::IJsonLineInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::IJsonLineInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.IJsonLineInfo.HasLineInfo
bool Newtonsoft::Json::IJsonLineInfo::HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::IJsonLineInfo::HasLineInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonArrayAttribute
#include "Newtonsoft/Json/JsonArrayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonContainerAttribute
#include "Newtonsoft/Json/JsonContainerAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <ItemConverterType>k__BackingField
::System::Type*& Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <ItemConverterParameters>k__BackingField
::ArrayW<::Il2CppObject*>& Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _isReference
::System::Nullable_1<bool>& Newtonsoft::Json::JsonContainerAttribute::dyn__isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _itemIsReference
::System::Nullable_1<bool>& Newtonsoft::Json::JsonContainerAttribute::dyn__itemIsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__itemIsReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemIsReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _itemReferenceLoopHandling
::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::JsonContainerAttribute::dyn__itemReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__itemReferenceLoopHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemReferenceLoopHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _itemTypeNameHandling
::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::JsonContainerAttribute::dyn__itemTypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__itemTypeNameHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemTypeNameHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.get_ItemConverterType
::System::Type* Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.get_ItemConverterParameters
::ArrayW<::Il2CppObject*> Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DefaultValueHandling
#include "Newtonsoft/Json/DefaultValueHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DefaultValueHandling Include
::Newtonsoft::Json::DefaultValueHandling Newtonsoft::Json::DefaultValueHandling::_get_Include() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_get_Include");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DefaultValueHandling>("Newtonsoft.Json", "DefaultValueHandling", "Include"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DefaultValueHandling Include
void Newtonsoft::Json::DefaultValueHandling::_set_Include(::Newtonsoft::Json::DefaultValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_set_Include");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DefaultValueHandling", "Include", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DefaultValueHandling Ignore
::Newtonsoft::Json::DefaultValueHandling Newtonsoft::Json::DefaultValueHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DefaultValueHandling>("Newtonsoft.Json", "DefaultValueHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DefaultValueHandling Ignore
void Newtonsoft::Json::DefaultValueHandling::_set_Ignore(::Newtonsoft::Json::DefaultValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DefaultValueHandling", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DefaultValueHandling Populate
::Newtonsoft::Json::DefaultValueHandling Newtonsoft::Json::DefaultValueHandling::_get_Populate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_get_Populate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DefaultValueHandling>("Newtonsoft.Json", "DefaultValueHandling", "Populate"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DefaultValueHandling Populate
void Newtonsoft::Json::DefaultValueHandling::_set_Populate(::Newtonsoft::Json::DefaultValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_set_Populate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DefaultValueHandling", "Populate", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DefaultValueHandling IgnoreAndPopulate
::Newtonsoft::Json::DefaultValueHandling Newtonsoft::Json::DefaultValueHandling::_get_IgnoreAndPopulate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_get_IgnoreAndPopulate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DefaultValueHandling>("Newtonsoft.Json", "DefaultValueHandling", "IgnoreAndPopulate"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DefaultValueHandling IgnoreAndPopulate
void Newtonsoft::Json::DefaultValueHandling::_set_IgnoreAndPopulate(::Newtonsoft::Json::DefaultValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_set_IgnoreAndPopulate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DefaultValueHandling", "IgnoreAndPopulate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::DefaultValueHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonConverterAttribute
#include "Newtonsoft/Json/JsonConverterAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _converterType
::System::Type*& Newtonsoft::Json::JsonConverterAttribute::dyn__converterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverterAttribute::dyn__converterType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converterType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <ConverterParameters>k__BackingField
::ArrayW<::Il2CppObject*>& Newtonsoft::Json::JsonConverterAttribute::dyn_$ConverterParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverterAttribute::dyn_$ConverterParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConverterParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonConverterAttribute.get_ConverterType
::System::Type* Newtonsoft::Json::JsonConverterAttribute::get_ConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverterAttribute::get_ConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonConverterAttribute.get_ConverterParameters
::ArrayW<::Il2CppObject*> Newtonsoft::Json::JsonConverterAttribute::get_ConverterParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverterAttribute::get_ConverterParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonObjectAttribute
#include "Newtonsoft/Json/JsonObjectAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.MemberSerialization _memberSerialization
::Newtonsoft::Json::MemberSerialization& Newtonsoft::Json::JsonObjectAttribute::dyn__memberSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonObjectAttribute::dyn__memberSerialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_memberSerialization"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::MemberSerialization*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.Required> _itemRequired
::System::Nullable_1<::Newtonsoft::Json::Required>& Newtonsoft::Json::JsonObjectAttribute::dyn__itemRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonObjectAttribute::dyn__itemRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemRequired"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::Required>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonObjectAttribute.get_MemberSerialization
::Newtonsoft::Json::MemberSerialization Newtonsoft::Json::JsonObjectAttribute::get_MemberSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonObjectAttribute::get_MemberSerialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberSerialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::MemberSerialization, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonSerializerSettings
#include "Newtonsoft/Json/JsonSerializerSettings.hpp"
// Including type: Newtonsoft.Json.JsonSerializerSettings/Newtonsoft.Json.<>c__DisplayClass90_0
#include "Newtonsoft/Json/JsonSerializerSettings_--c__DisplayClass90_0.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: Newtonsoft.Json.Serialization.IContractResolver
#include "Newtonsoft/Json/Serialization/IContractResolver.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Newtonsoft.Json.Serialization.IReferenceResolver
#include "Newtonsoft/Json/Serialization/IReferenceResolver.hpp"
// Including type: Newtonsoft.Json.Serialization.ITraceWriter
#include "Newtonsoft/Json/Serialization/ITraceWriter.hpp"
// Including type: System.Runtime.Serialization.SerializationBinder
#include "System/Runtime/Serialization/SerializationBinder.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorEventArgs
#include "Newtonsoft/Json/Serialization/ErrorEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Runtime.Serialization.StreamingContext DefaultContext
::System::Runtime::Serialization::StreamingContext Newtonsoft::Json::JsonSerializerSettings::_get_DefaultContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::_get_DefaultContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::Serialization::StreamingContext>("Newtonsoft.Json", "JsonSerializerSettings", "DefaultContext"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Runtime.Serialization.StreamingContext DefaultContext
void Newtonsoft::Json::JsonSerializerSettings::_set_DefaultContext(::System::Runtime::Serialization::StreamingContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::_set_DefaultContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonSerializerSettings", "DefaultContext", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Globalization.CultureInfo DefaultCulture
::System::Globalization::CultureInfo* Newtonsoft::Json::JsonSerializerSettings::_get_DefaultCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::_get_DefaultCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("Newtonsoft.Json", "JsonSerializerSettings", "DefaultCulture"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Globalization.CultureInfo DefaultCulture
void Newtonsoft::Json::JsonSerializerSettings::_set_DefaultCulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::_set_DefaultCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonSerializerSettings", "DefaultCulture", value));
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.Formatting> _formatting
::System::Nullable_1<::Newtonsoft::Json::Formatting>& Newtonsoft::Json::JsonSerializerSettings::dyn__formatting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__formatting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formatting"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::Formatting>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.DateFormatHandling> _dateFormatHandling
::System::Nullable_1<::Newtonsoft::Json::DateFormatHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__dateFormatHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__dateFormatHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateFormatHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::DateFormatHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.DateTimeZoneHandling> _dateTimeZoneHandling
::System::Nullable_1<::Newtonsoft::Json::DateTimeZoneHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__dateTimeZoneHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__dateTimeZoneHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeZoneHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::DateTimeZoneHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.DateParseHandling> _dateParseHandling
::System::Nullable_1<::Newtonsoft::Json::DateParseHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__dateParseHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__dateParseHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateParseHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::DateParseHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.FloatFormatHandling> _floatFormatHandling
::System::Nullable_1<::Newtonsoft::Json::FloatFormatHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__floatFormatHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__floatFormatHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floatFormatHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::FloatFormatHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.FloatParseHandling> _floatParseHandling
::System::Nullable_1<::Newtonsoft::Json::FloatParseHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__floatParseHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__floatParseHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floatParseHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::FloatParseHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.StringEscapeHandling> _stringEscapeHandling
::System::Nullable_1<::Newtonsoft::Json::StringEscapeHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__stringEscapeHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__stringEscapeHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringEscapeHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::StringEscapeHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureInfo _culture
::System::Globalization::CultureInfo*& Newtonsoft::Json::JsonSerializerSettings::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _checkAdditionalContent
::System::Nullable_1<bool>& Newtonsoft::Json::JsonSerializerSettings::dyn__checkAdditionalContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__checkAdditionalContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkAdditionalContent"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Int32> _maxDepth
::System::Nullable_1<int>& Newtonsoft::Json::JsonSerializerSettings::dyn__maxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__maxDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxDepth"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _maxDepthSet
bool& Newtonsoft::Json::JsonSerializerSettings::dyn__maxDepthSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__maxDepthSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxDepthSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _dateFormatString
::StringW& Newtonsoft::Json::JsonSerializerSettings::dyn__dateFormatString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__dateFormatString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateFormatString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _dateFormatStringSet
bool& Newtonsoft::Json::JsonSerializerSettings::dyn__dateFormatStringSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__dateFormatStringSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateFormatStringSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Runtime.Serialization.Formatters.FormatterAssemblyStyle> _typeNameAssemblyFormat
::System::Nullable_1<::System::Runtime::Serialization::Formatters::FormatterAssemblyStyle>& Newtonsoft::Json::JsonSerializerSettings::dyn__typeNameAssemblyFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__typeNameAssemblyFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeNameAssemblyFormat"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::Runtime::Serialization::Formatters::FormatterAssemblyStyle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> _defaultValueHandling
::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__defaultValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__defaultValueHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultValueHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.PreserveReferencesHandling> _preserveReferencesHandling
::System::Nullable_1<::Newtonsoft::Json::PreserveReferencesHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__preserveReferencesHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__preserveReferencesHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preserveReferencesHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::PreserveReferencesHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.NullValueHandling> _nullValueHandling
::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__nullValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__nullValueHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullValueHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> _objectCreationHandling
::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__objectCreationHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__objectCreationHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectCreationHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.MissingMemberHandling> _missingMemberHandling
::System::Nullable_1<::Newtonsoft::Json::MissingMemberHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__missingMemberHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__missingMemberHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missingMemberHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::MissingMemberHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _referenceLoopHandling
::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__referenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__referenceLoopHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceLoopHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Runtime.Serialization.StreamingContext> _context
::System::Nullable_1<::System::Runtime::Serialization::StreamingContext>& Newtonsoft::Json::JsonSerializerSettings::dyn__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_context"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::Runtime::Serialization::StreamingContext>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ConstructorHandling> _constructorHandling
::System::Nullable_1<::Newtonsoft::Json::ConstructorHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__constructorHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__constructorHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constructorHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ConstructorHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _typeNameHandling
::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__typeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__typeNameHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeNameHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.MetadataPropertyHandling> _metadataPropertyHandling
::System::Nullable_1<::Newtonsoft::Json::MetadataPropertyHandling>& Newtonsoft::Json::JsonSerializerSettings::dyn__metadataPropertyHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn__metadataPropertyHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_metadataPropertyHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::MetadataPropertyHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<Newtonsoft.Json.JsonConverter> <Converters>k__BackingField
::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonConverter*>*& Newtonsoft::Json::JsonSerializerSettings::dyn_$Converters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn_$Converters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Converters>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonConverter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.IContractResolver <ContractResolver>k__BackingField
::Newtonsoft::Json::Serialization::IContractResolver*& Newtonsoft::Json::JsonSerializerSettings::dyn_$ContractResolver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn_$ContractResolver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ContractResolver>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::IContractResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEqualityComparer <EqualityComparer>k__BackingField
::System::Collections::IEqualityComparer*& Newtonsoft::Json::JsonSerializerSettings::dyn_$EqualityComparer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn_$EqualityComparer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EqualityComparer>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::IEqualityComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<Newtonsoft.Json.Serialization.IReferenceResolver> <ReferenceResolverProvider>k__BackingField
::System::Func_1<::Newtonsoft::Json::Serialization::IReferenceResolver*>*& Newtonsoft::Json::JsonSerializerSettings::dyn_$ReferenceResolverProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn_$ReferenceResolverProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReferenceResolverProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_1<::Newtonsoft::Json::Serialization::IReferenceResolver*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ITraceWriter <TraceWriter>k__BackingField
::Newtonsoft::Json::Serialization::ITraceWriter*& Newtonsoft::Json::JsonSerializerSettings::dyn_$TraceWriter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn_$TraceWriter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TraceWriter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ITraceWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Serialization.SerializationBinder <Binder>k__BackingField
::System::Runtime::Serialization::SerializationBinder*& Newtonsoft::Json::JsonSerializerSettings::dyn_$Binder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn_$Binder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Binder>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Runtime::Serialization::SerializationBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<Newtonsoft.Json.Serialization.ErrorEventArgs> <Error>k__BackingField
::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>*& Newtonsoft::Json::JsonSerializerSettings::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_ReferenceLoopHandling
::Newtonsoft::Json::ReferenceLoopHandling Newtonsoft::Json::JsonSerializerSettings::get_ReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_ReferenceLoopHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceLoopHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::ReferenceLoopHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_MissingMemberHandling
::Newtonsoft::Json::MissingMemberHandling Newtonsoft::Json::JsonSerializerSettings::get_MissingMemberHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_MissingMemberHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MissingMemberHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::MissingMemberHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_ObjectCreationHandling
::Newtonsoft::Json::ObjectCreationHandling Newtonsoft::Json::JsonSerializerSettings::get_ObjectCreationHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_ObjectCreationHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectCreationHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::ObjectCreationHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_NullValueHandling
::Newtonsoft::Json::NullValueHandling Newtonsoft::Json::JsonSerializerSettings::get_NullValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_NullValueHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NullValueHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::NullValueHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_DefaultValueHandling
::Newtonsoft::Json::DefaultValueHandling Newtonsoft::Json::JsonSerializerSettings::get_DefaultValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_DefaultValueHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::DefaultValueHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_Converters
::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonConverter*>* Newtonsoft::Json::JsonSerializerSettings::get_Converters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_Converters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Converters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonConverter*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.set_Converters
void Newtonsoft::Json::JsonSerializerSettings::set_Converters(::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonConverter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::set_Converters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Converters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_PreserveReferencesHandling
::Newtonsoft::Json::PreserveReferencesHandling Newtonsoft::Json::JsonSerializerSettings::get_PreserveReferencesHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_PreserveReferencesHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreserveReferencesHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::PreserveReferencesHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_TypeNameHandling
::Newtonsoft::Json::TypeNameHandling Newtonsoft::Json::JsonSerializerSettings::get_TypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_TypeNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::TypeNameHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_MetadataPropertyHandling
::Newtonsoft::Json::MetadataPropertyHandling Newtonsoft::Json::JsonSerializerSettings::get_MetadataPropertyHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_MetadataPropertyHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MetadataPropertyHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::MetadataPropertyHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_TypeNameAssemblyFormat
::System::Runtime::Serialization::Formatters::FormatterAssemblyStyle Newtonsoft::Json::JsonSerializerSettings::get_TypeNameAssemblyFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_TypeNameAssemblyFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeNameAssemblyFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Serialization::Formatters::FormatterAssemblyStyle, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_ConstructorHandling
::Newtonsoft::Json::ConstructorHandling Newtonsoft::Json::JsonSerializerSettings::get_ConstructorHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_ConstructorHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConstructorHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::ConstructorHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_ContractResolver
::Newtonsoft::Json::Serialization::IContractResolver* Newtonsoft::Json::JsonSerializerSettings::get_ContractResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_ContractResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContractResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::IContractResolver*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_EqualityComparer
::System::Collections::IEqualityComparer* Newtonsoft::Json::JsonSerializerSettings::get_EqualityComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_EqualityComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EqualityComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEqualityComparer*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_ReferenceResolverProvider
::System::Func_1<::Newtonsoft::Json::Serialization::IReferenceResolver*>* Newtonsoft::Json::JsonSerializerSettings::get_ReferenceResolverProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_ReferenceResolverProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceResolverProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::Newtonsoft::Json::Serialization::IReferenceResolver*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_TraceWriter
::Newtonsoft::Json::Serialization::ITraceWriter* Newtonsoft::Json::JsonSerializerSettings::get_TraceWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_TraceWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TraceWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ITraceWriter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_Binder
::System::Runtime::Serialization::SerializationBinder* Newtonsoft::Json::JsonSerializerSettings::get_Binder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_Binder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Binder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Serialization::SerializationBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_Error
::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>* Newtonsoft::Json::JsonSerializerSettings::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings.get_Context
::System::Runtime::Serialization::StreamingContext Newtonsoft::Json::JsonSerializerSettings::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Serialization::StreamingContext, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializerSettings..cctor
void Newtonsoft::Json::JsonSerializerSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializerSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonSerializerSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonSerializerSettings/Newtonsoft.Json.<>c__DisplayClass90_0
#include "Newtonsoft/Json/JsonSerializerSettings_--c__DisplayClass90_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.MemberSerialization
#include "Newtonsoft/Json/MemberSerialization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.MemberSerialization OptOut
::Newtonsoft::Json::MemberSerialization Newtonsoft::Json::MemberSerialization::_get_OptOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MemberSerialization::_get_OptOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::MemberSerialization>("Newtonsoft.Json", "MemberSerialization", "OptOut"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.MemberSerialization OptOut
void Newtonsoft::Json::MemberSerialization::_set_OptOut(::Newtonsoft::Json::MemberSerialization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MemberSerialization::_set_OptOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "MemberSerialization", "OptOut", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.MemberSerialization OptIn
::Newtonsoft::Json::MemberSerialization Newtonsoft::Json::MemberSerialization::_get_OptIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MemberSerialization::_get_OptIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::MemberSerialization>("Newtonsoft.Json", "MemberSerialization", "OptIn"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.MemberSerialization OptIn
void Newtonsoft::Json::MemberSerialization::_set_OptIn(::Newtonsoft::Json::MemberSerialization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MemberSerialization::_set_OptIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "MemberSerialization", "OptIn", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.MemberSerialization Fields
::Newtonsoft::Json::MemberSerialization Newtonsoft::Json::MemberSerialization::_get_Fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MemberSerialization::_get_Fields");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::MemberSerialization>("Newtonsoft.Json", "MemberSerialization", "Fields"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.MemberSerialization Fields
void Newtonsoft::Json::MemberSerialization::_set_Fields(::Newtonsoft::Json::MemberSerialization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MemberSerialization::_set_Fields");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "MemberSerialization", "Fields", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::MemberSerialization::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MemberSerialization::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.ObjectCreationHandling
#include "Newtonsoft/Json/ObjectCreationHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ObjectCreationHandling Auto
::Newtonsoft::Json::ObjectCreationHandling Newtonsoft::Json::ObjectCreationHandling::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ObjectCreationHandling::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ObjectCreationHandling>("Newtonsoft.Json", "ObjectCreationHandling", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ObjectCreationHandling Auto
void Newtonsoft::Json::ObjectCreationHandling::_set_Auto(::Newtonsoft::Json::ObjectCreationHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ObjectCreationHandling::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ObjectCreationHandling", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ObjectCreationHandling Reuse
::Newtonsoft::Json::ObjectCreationHandling Newtonsoft::Json::ObjectCreationHandling::_get_Reuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ObjectCreationHandling::_get_Reuse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ObjectCreationHandling>("Newtonsoft.Json", "ObjectCreationHandling", "Reuse"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ObjectCreationHandling Reuse
void Newtonsoft::Json::ObjectCreationHandling::_set_Reuse(::Newtonsoft::Json::ObjectCreationHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ObjectCreationHandling::_set_Reuse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ObjectCreationHandling", "Reuse", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ObjectCreationHandling Replace
::Newtonsoft::Json::ObjectCreationHandling Newtonsoft::Json::ObjectCreationHandling::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ObjectCreationHandling::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ObjectCreationHandling>("Newtonsoft.Json", "ObjectCreationHandling", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ObjectCreationHandling Replace
void Newtonsoft::Json::ObjectCreationHandling::_set_Replace(::Newtonsoft::Json::ObjectCreationHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ObjectCreationHandling::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ObjectCreationHandling", "Replace", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::ObjectCreationHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ObjectCreationHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.ReadType
#include "Newtonsoft/Json/ReadType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ReadType Read
::Newtonsoft::Json::ReadType Newtonsoft::Json::ReadType::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ReadType>("Newtonsoft.Json", "ReadType", "Read"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ReadType Read
void Newtonsoft::Json::ReadType::_set_Read(::Newtonsoft::Json::ReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ReadType", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ReadType ReadAsInt32
::Newtonsoft::Json::ReadType Newtonsoft::Json::ReadType::_get_ReadAsInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_get_ReadAsInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ReadType>("Newtonsoft.Json", "ReadType", "ReadAsInt32"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ReadType ReadAsInt32
void Newtonsoft::Json::ReadType::_set_ReadAsInt32(::Newtonsoft::Json::ReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_set_ReadAsInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ReadType", "ReadAsInt32", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ReadType ReadAsBytes
::Newtonsoft::Json::ReadType Newtonsoft::Json::ReadType::_get_ReadAsBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_get_ReadAsBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ReadType>("Newtonsoft.Json", "ReadType", "ReadAsBytes"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ReadType ReadAsBytes
void Newtonsoft::Json::ReadType::_set_ReadAsBytes(::Newtonsoft::Json::ReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_set_ReadAsBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ReadType", "ReadAsBytes", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ReadType ReadAsString
::Newtonsoft::Json::ReadType Newtonsoft::Json::ReadType::_get_ReadAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_get_ReadAsString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ReadType>("Newtonsoft.Json", "ReadType", "ReadAsString"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ReadType ReadAsString
void Newtonsoft::Json::ReadType::_set_ReadAsString(::Newtonsoft::Json::ReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_set_ReadAsString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ReadType", "ReadAsString", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ReadType ReadAsDecimal
::Newtonsoft::Json::ReadType Newtonsoft::Json::ReadType::_get_ReadAsDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_get_ReadAsDecimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ReadType>("Newtonsoft.Json", "ReadType", "ReadAsDecimal"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ReadType ReadAsDecimal
void Newtonsoft::Json::ReadType::_set_ReadAsDecimal(::Newtonsoft::Json::ReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_set_ReadAsDecimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ReadType", "ReadAsDecimal", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ReadType ReadAsDateTime
::Newtonsoft::Json::ReadType Newtonsoft::Json::ReadType::_get_ReadAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_get_ReadAsDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ReadType>("Newtonsoft.Json", "ReadType", "ReadAsDateTime"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ReadType ReadAsDateTime
void Newtonsoft::Json::ReadType::_set_ReadAsDateTime(::Newtonsoft::Json::ReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_set_ReadAsDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ReadType", "ReadAsDateTime", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ReadType ReadAsDateTimeOffset
::Newtonsoft::Json::ReadType Newtonsoft::Json::ReadType::_get_ReadAsDateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_get_ReadAsDateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ReadType>("Newtonsoft.Json", "ReadType", "ReadAsDateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ReadType ReadAsDateTimeOffset
void Newtonsoft::Json::ReadType::_set_ReadAsDateTimeOffset(::Newtonsoft::Json::ReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_set_ReadAsDateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ReadType", "ReadAsDateTimeOffset", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ReadType ReadAsDouble
::Newtonsoft::Json::ReadType Newtonsoft::Json::ReadType::_get_ReadAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_get_ReadAsDouble");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ReadType>("Newtonsoft.Json", "ReadType", "ReadAsDouble"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ReadType ReadAsDouble
void Newtonsoft::Json::ReadType::_set_ReadAsDouble(::Newtonsoft::Json::ReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_set_ReadAsDouble");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ReadType", "ReadAsDouble", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ReadType ReadAsBoolean
::Newtonsoft::Json::ReadType Newtonsoft::Json::ReadType::_get_ReadAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_get_ReadAsBoolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ReadType>("Newtonsoft.Json", "ReadType", "ReadAsBoolean"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ReadType ReadAsBoolean
void Newtonsoft::Json::ReadType::_set_ReadAsBoolean(::Newtonsoft::Json::ReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::_set_ReadAsBoolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ReadType", "ReadAsBoolean", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Newtonsoft::Json::ReadType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ReadType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonTextReader
#include "Newtonsoft/Json/JsonTextReader.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: Newtonsoft.Json.IArrayPool`1
#include "Newtonsoft/Json/IArrayPool_1.hpp"
// Including type: Newtonsoft.Json.Utilities.PropertyNameTable
#include "Newtonsoft/Json/Utilities/PropertyNameTable.hpp"
// Including type: Newtonsoft.Json.ReadType
#include "Newtonsoft/Json/ReadType.hpp"
// Including type: Newtonsoft.Json.JsonReaderException
#include "Newtonsoft/Json/JsonReaderException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.TextReader _reader
::System::IO::TextReader*& Newtonsoft::Json::JsonTextReader::dyn__reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _chars
::ArrayW<::Il2CppChar>& Newtonsoft::Json::JsonTextReader::dyn__chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__chars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _charsUsed
int& Newtonsoft::Json::JsonTextReader::dyn__charsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__charsUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charsUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _charPos
int& Newtonsoft::Json::JsonTextReader::dyn__charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__charPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lineStartPos
int& Newtonsoft::Json::JsonTextReader::dyn__lineStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__lineStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineStartPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lineNumber
int& Newtonsoft::Json::JsonTextReader::dyn__lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isEndOfFile
bool& Newtonsoft::Json::JsonTextReader::dyn__isEndOfFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__isEndOfFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isEndOfFile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.StringBuffer _stringBuffer
::Newtonsoft::Json::Utilities::StringBuffer& Newtonsoft::Json::JsonTextReader::dyn__stringBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__stringBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuffer"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::StringBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.StringReference _stringReference
::Newtonsoft::Json::Utilities::StringReference& Newtonsoft::Json::JsonTextReader::dyn__stringReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__stringReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringReference"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::StringReference*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.IArrayPool`1<System.Char> _arrayPool
::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>*& Newtonsoft::Json::JsonTextReader::dyn__arrayPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn__arrayPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayPool"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.Utilities.PropertyNameTable NameTable
::Newtonsoft::Json::Utilities::PropertyNameTable*& Newtonsoft::Json::JsonTextReader::dyn_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::dyn_NameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameTable"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::PropertyNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.get_LineNumber
int Newtonsoft::Json::JsonTextReader::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.get_LinePosition
int Newtonsoft::Json::JsonTextReader::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty
void Newtonsoft::Json::JsonTextReader::EnsureBufferNotEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::EnsureBufferNotEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureBufferNotEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.OnNewLine
void Newtonsoft::Json::JsonTextReader::OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::OnNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseString
void Newtonsoft::Json::JsonTextReader::ParseString(::Il2CppChar quote, ::Newtonsoft::Json::ReadType readType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quote), ::il2cpp_utils::ExtractType(readType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, quote, readType);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.BlockCopyChars
void Newtonsoft::Json::JsonTextReader::BlockCopyChars(::ArrayW<::Il2CppChar> src, int srcOffset, ::ArrayW<::Il2CppChar> dst, int dstOffset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::BlockCopyChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonTextReader", "BlockCopyChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOffset), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOffset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, srcOffset, dst, dstOffset, count);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded
void Newtonsoft::Json::JsonTextReader::ShiftBufferIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ShiftBufferIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShiftBufferIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadData
int Newtonsoft::Json::JsonTextReader::ReadData(bool append) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(append)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, append);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadData
int Newtonsoft::Json::JsonTextReader::ReadData(bool append, int charsRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(append), ::il2cpp_utils::ExtractType(charsRequired)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, append, charsRequired);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.EnsureChars
bool Newtonsoft::Json::JsonTextReader::EnsureChars(int relativePosition, bool append) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::EnsureChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativePosition), ::il2cpp_utils::ExtractType(append)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, relativePosition, append);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadChars
bool Newtonsoft::Json::JsonTextReader::ReadChars(int relativePosition, bool append) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativePosition), ::il2cpp_utils::ExtractType(append)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, relativePosition, append);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadStringValue
::Il2CppObject* Newtonsoft::Json::JsonTextReader::ReadStringValue(::Newtonsoft::Json::ReadType readType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, readType);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException
::Newtonsoft::Json::JsonReaderException* Newtonsoft::Json::JsonTextReader::CreateUnexpectedCharacterException(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::CreateUnexpectedCharacterException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnexpectedCharacterException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReaderException*, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ProcessValueComma
void Newtonsoft::Json::JsonTextReader::ProcessValueComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ProcessValueComma");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessValueComma", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadNumberValue
::Il2CppObject* Newtonsoft::Json::JsonTextReader::ReadNumberValue(::Newtonsoft::Json::ReadType readType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadNumberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNumberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, readType);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.HandleNull
void Newtonsoft::Json::JsonTextReader::HandleNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::HandleNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadFinished
void Newtonsoft::Json::JsonTextReader::ReadFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadNullChar
bool Newtonsoft::Json::JsonTextReader::ReadNullChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadNullChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNullChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.EnsureBuffer
void Newtonsoft::Json::JsonTextReader::EnsureBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::EnsureBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer
void Newtonsoft::Json::JsonTextReader::ReadStringIntoBuffer(::Il2CppChar quote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadStringIntoBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadStringIntoBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, quote);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.WriteCharToBuffer
void Newtonsoft::Json::JsonTextReader::WriteCharToBuffer(::Il2CppChar writeChar, int lastWritePosition, int writeToPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::WriteCharToBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharToBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writeChar), ::il2cpp_utils::ExtractType(lastWritePosition), ::il2cpp_utils::ExtractType(writeToPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writeChar, lastWritePosition, writeToPosition);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseUnicode
::Il2CppChar Newtonsoft::Json::JsonTextReader::ParseUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer
void Newtonsoft::Json::JsonTextReader::ReadNumberIntoBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadNumberIntoBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNumberIntoBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ClearRecentString
void Newtonsoft::Json::JsonTextReader::ClearRecentString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ClearRecentString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecentString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParsePostValue
bool Newtonsoft::Json::JsonTextReader::ParsePostValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParsePostValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePostValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseObject
bool Newtonsoft::Json::JsonTextReader::ParseObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseProperty
bool Newtonsoft::Json::JsonTextReader::ParseProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ValidIdentifierChar
bool Newtonsoft::Json::JsonTextReader::ValidIdentifierChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ValidIdentifierChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidIdentifierChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty
void Newtonsoft::Json::JsonTextReader::ParseUnquotedProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseUnquotedProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnquotedProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseValue
bool Newtonsoft::Json::JsonTextReader::ParseValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ProcessLineFeed
void Newtonsoft::Json::JsonTextReader::ProcessLineFeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ProcessLineFeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLineFeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn
void Newtonsoft::Json::JsonTextReader::ProcessCarriageReturn(bool append) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ProcessCarriageReturn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCarriageReturn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(append)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, append);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.EatWhitespace
bool Newtonsoft::Json::JsonTextReader::EatWhitespace(bool oneOrMore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::EatWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oneOrMore)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, oneOrMore);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseConstructor
void Newtonsoft::Json::JsonTextReader::ParseConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseNumber
void Newtonsoft::Json::JsonTextReader::ParseNumber(::Newtonsoft::Json::ReadType readType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readType);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseComment
void Newtonsoft::Json::JsonTextReader::ParseComment(bool setToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, setToken);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.EndComment
void Newtonsoft::Json::JsonTextReader::EndComment(bool setToken, int initialPosition, int endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::EndComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setToken), ::il2cpp_utils::ExtractType(initialPosition), ::il2cpp_utils::ExtractType(endPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, setToken, initialPosition, endPosition);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.MatchValue
bool Newtonsoft::Json::JsonTextReader::MatchValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::MatchValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator
bool Newtonsoft::Json::JsonTextReader::MatchValueWithTrailingSeparator(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::MatchValueWithTrailingSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchValueWithTrailingSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.IsSeparator
bool Newtonsoft::Json::JsonTextReader::IsSeparator(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::IsSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseTrue
void Newtonsoft::Json::JsonTextReader::ParseTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseNull
void Newtonsoft::Json::JsonTextReader::ParseNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseUndefined
void Newtonsoft::Json::JsonTextReader::ParseUndefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseUndefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUndefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseFalse
void Newtonsoft::Json::JsonTextReader::ParseFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity
::Il2CppObject* Newtonsoft::Json::JsonTextReader::ParseNumberNegativeInfinity(::Newtonsoft::Json::ReadType readType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseNumberNegativeInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumberNegativeInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, readType);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity
::Il2CppObject* Newtonsoft::Json::JsonTextReader::ParseNumberPositiveInfinity(::Newtonsoft::Json::ReadType readType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseNumberPositiveInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumberPositiveInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, readType);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ParseNumberNaN
::Il2CppObject* Newtonsoft::Json::JsonTextReader::ParseNumberNaN(::Newtonsoft::Json::ReadType readType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ParseNumberNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumberNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, readType);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.HasLineInfo
bool Newtonsoft::Json::JsonTextReader::HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::HasLineInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.Read
bool Newtonsoft::Json::JsonTextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadAsInt32
::System::Nullable_1<int> Newtonsoft::Json::JsonTextReader::ReadAsInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadAsInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadAsDateTime
::System::Nullable_1<::System::DateTime> Newtonsoft::Json::JsonTextReader::ReadAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadAsDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadAsString
::StringW Newtonsoft::Json::JsonTextReader::ReadAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadAsString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadAsBytes
::ArrayW<uint8_t> Newtonsoft::Json::JsonTextReader::ReadAsBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadAsBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadAsBoolean
::System::Nullable_1<bool> Newtonsoft::Json::JsonTextReader::ReadAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadAsBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset
::System::Nullable_1<::System::DateTimeOffset> Newtonsoft::Json::JsonTextReader::ReadAsDateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadAsDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadAsDecimal
::System::Nullable_1<::System::Decimal> Newtonsoft::Json::JsonTextReader::ReadAsDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadAsDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Decimal>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.ReadAsDouble
::System::Nullable_1<double> Newtonsoft::Json::JsonTextReader::ReadAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::ReadAsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<double>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextReader.Close
void Newtonsoft::Json::JsonTextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonPropertyAttribute
#include "Newtonsoft/Json/JsonPropertyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.NullValueHandling> _nullValueHandling
::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__nullValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__nullValueHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullValueHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> _defaultValueHandling
::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__defaultValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__defaultValueHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultValueHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _referenceLoopHandling
::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__referenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__referenceLoopHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceLoopHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> _objectCreationHandling
::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__objectCreationHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__objectCreationHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectCreationHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _typeNameHandling
::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__typeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__typeNameHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeNameHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _isReference
::System::Nullable_1<bool>& Newtonsoft::Json::JsonPropertyAttribute::dyn__isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Int32> _order
::System::Nullable_1<int>& Newtonsoft::Json::JsonPropertyAttribute::dyn__order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_order"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.Required> _required
::System::Nullable_1<::Newtonsoft::Json::Required>& Newtonsoft::Json::JsonPropertyAttribute::dyn__required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__required");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_required"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::Required>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _itemIsReference
::System::Nullable_1<bool>& Newtonsoft::Json::JsonPropertyAttribute::dyn__itemIsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__itemIsReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemIsReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _itemReferenceLoopHandling
::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__itemReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__itemReferenceLoopHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemReferenceLoopHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _itemTypeNameHandling
::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__itemTypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__itemTypeNameHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemTypeNameHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <ItemConverterType>k__BackingField
::System::Type*& Newtonsoft::Json::JsonPropertyAttribute::dyn_$ItemConverterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn_$ItemConverterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <ItemConverterParameters>k__BackingField
::ArrayW<::Il2CppObject*>& Newtonsoft::Json::JsonPropertyAttribute::dyn_$ItemConverterParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn_$ItemConverterParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <PropertyName>k__BackingField
::StringW& Newtonsoft::Json::JsonPropertyAttribute::dyn_$PropertyName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn_$PropertyName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonPropertyAttribute.get_ItemConverterType
::System::Type* Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPropertyAttribute.get_ItemConverterParameters
::ArrayW<::Il2CppObject*> Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPropertyAttribute.get_PropertyName
::StringW Newtonsoft::Json::JsonPropertyAttribute::get_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::get_PropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPropertyAttribute.set_PropertyName
void Newtonsoft::Json::JsonPropertyAttribute::set_PropertyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::set_PropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonIgnoreAttribute
#include "Newtonsoft/Json/JsonIgnoreAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonTextWriter
#include "Newtonsoft/Json/JsonTextWriter.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: Newtonsoft.Json.Utilities.Base64Encoder
#include "Newtonsoft/Json/Utilities/Base64Encoder.hpp"
// Including type: Newtonsoft.Json.IArrayPool`1
#include "Newtonsoft/Json/IArrayPool_1.hpp"
// Including type: Newtonsoft.Json.JsonToken
#include "Newtonsoft/Json/JsonToken.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.TextWriter _writer
::System::IO::TextWriter*& Newtonsoft::Json::JsonTextWriter::dyn__writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writer"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.Base64Encoder _base64Encoder
::Newtonsoft::Json::Utilities::Base64Encoder*& Newtonsoft::Json::JsonTextWriter::dyn__base64Encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__base64Encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_base64Encoder"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::Base64Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _indentChar
::Il2CppChar& Newtonsoft::Json::JsonTextWriter::dyn__indentChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__indentChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indentChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _indentation
int& Newtonsoft::Json::JsonTextWriter::dyn__indentation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__indentation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indentation"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _quoteChar
::Il2CppChar& Newtonsoft::Json::JsonTextWriter::dyn__quoteChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__quoteChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quoteChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _quoteName
bool& Newtonsoft::Json::JsonTextWriter::dyn__quoteName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__quoteName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quoteName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] _charEscapeFlags
::ArrayW<bool>& Newtonsoft::Json::JsonTextWriter::dyn__charEscapeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__charEscapeFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charEscapeFlags"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _writeBuffer
::ArrayW<::Il2CppChar>& Newtonsoft::Json::JsonTextWriter::dyn__writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.IArrayPool`1<System.Char> _arrayPool
::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>*& Newtonsoft::Json::JsonTextWriter::dyn__arrayPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__arrayPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayPool"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _indentChars
::ArrayW<::Il2CppChar>& Newtonsoft::Json::JsonTextWriter::dyn__indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::dyn__indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indentChars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.get_Base64Encoder
::Newtonsoft::Json::Utilities::Base64Encoder* Newtonsoft::Json::JsonTextWriter::get_Base64Encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::get_Base64Encoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Base64Encoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::Base64Encoder*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.get_QuoteChar
::Il2CppChar Newtonsoft::Json::JsonTextWriter::get_QuoteChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::get_QuoteChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QuoteChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags
void Newtonsoft::Json::JsonTextWriter::UpdateCharEscapeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::UpdateCharEscapeFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCharEscapeFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValueInternal
void Newtonsoft::Json::JsonTextWriter::WriteValueInternal(::StringW value, ::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValueInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValueInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, token);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteEscapedString
void Newtonsoft::Json::JsonTextWriter::WriteEscapedString(::StringW value, bool quote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteEscapedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEscapedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(quote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, quote);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer
void Newtonsoft::Json::JsonTextWriter::EnsureWriteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::EnsureWriteBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWriteBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteIntegerValue
void Newtonsoft::Json::JsonTextWriter::WriteIntegerValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteIntegerValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIntegerValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteIntegerValue
void Newtonsoft::Json::JsonTextWriter::WriteIntegerValue(uint64_t uvalue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteIntegerValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIntegerValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uvalue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uvalue);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.Close
void Newtonsoft::Json::JsonTextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteStartObject
void Newtonsoft::Json::JsonTextWriter::WriteStartObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteStartObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteStartArray
void Newtonsoft::Json::JsonTextWriter::WriteStartArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteStartArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteStartConstructor
void Newtonsoft::Json::JsonTextWriter::WriteStartConstructor(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteStartConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteEnd
void Newtonsoft::Json::JsonTextWriter::WriteEnd(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WritePropertyName
void Newtonsoft::Json::JsonTextWriter::WritePropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WritePropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WritePropertyName
void Newtonsoft::Json::JsonTextWriter::WritePropertyName(::StringW name, bool escape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WritePropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(escape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, escape);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged
void Newtonsoft::Json::JsonTextWriter::OnStringEscapeHandlingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::OnStringEscapeHandlingChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStringEscapeHandlingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteIndent
void Newtonsoft::Json::JsonTextWriter::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteIndent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter
void Newtonsoft::Json::JsonTextWriter::WriteValueDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValueDelimiter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValueDelimiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteIndentSpace
void Newtonsoft::Json::JsonTextWriter::WriteIndentSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteIndentSpace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndentSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteNull
void Newtonsoft::Json::JsonTextWriter::WriteNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteNull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteUndefined
void Newtonsoft::Json::JsonTextWriter::WriteUndefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteUndefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUndefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteRaw
void Newtonsoft::Json::JsonTextWriter::WriteRaw(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, json);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::System::Nullable_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::System::Nullable_1<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteValue
void Newtonsoft::Json::JsonTextWriter::WriteValue(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonTextWriter.WriteComment
void Newtonsoft::Json::JsonTextWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonWriterException
#include "Newtonsoft/Json/JsonWriterException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Path>k__BackingField
::StringW& Newtonsoft::Json::JsonWriterException::dyn_$Path$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriterException::dyn_$Path$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Path>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonWriterException.set_Path
void Newtonsoft::Json::JsonWriterException::set_Path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriterException::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriterException.Create
::Newtonsoft::Json::JsonWriterException* Newtonsoft::Json::JsonWriterException::Create(::Newtonsoft::Json::JsonWriter* writer, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriterException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonWriterException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonWriterException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, message, ex);
}
// Autogenerated method: Newtonsoft.Json.JsonWriterException.Create
::Newtonsoft::Json::JsonWriterException* Newtonsoft::Json::JsonWriterException::Create(::StringW path, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriterException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonWriterException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonWriterException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, message, ex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonReaderException
#include "Newtonsoft/Json/JsonReaderException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <LineNumber>k__BackingField
int& Newtonsoft::Json::JsonReaderException::dyn_$LineNumber$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::dyn_$LineNumber$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LineNumber>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <LinePosition>k__BackingField
int& Newtonsoft::Json::JsonReaderException::dyn_$LinePosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::dyn_$LinePosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LinePosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Path>k__BackingField
::StringW& Newtonsoft::Json::JsonReaderException::dyn_$Path$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::dyn_$Path$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Path>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonReaderException.set_LineNumber
void Newtonsoft::Json::JsonReaderException::set_LineNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::set_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReaderException.set_LinePosition
void Newtonsoft::Json::JsonReaderException::set_LinePosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::set_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReaderException.set_Path
void Newtonsoft::Json::JsonReaderException::set_Path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReaderException.Create
::Newtonsoft::Json::JsonReaderException* Newtonsoft::Json::JsonReaderException::Create(::Newtonsoft::Json::JsonReader* reader, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonReaderException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReaderException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, message);
}
// Autogenerated method: Newtonsoft.Json.JsonReaderException.Create
::Newtonsoft::Json::JsonReaderException* Newtonsoft::Json::JsonReaderException::Create(::Newtonsoft::Json::JsonReader* reader, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonReaderException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReaderException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, message, ex);
}
// Autogenerated method: Newtonsoft.Json.JsonReaderException.Create
::Newtonsoft::Json::JsonReaderException* Newtonsoft::Json::JsonReaderException::Create(::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::StringW path, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonReaderException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineInfo), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReaderException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineInfo, path, message, ex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.JsonConverter.get_CanRead
bool Newtonsoft::Json::JsonConverter::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonConverter.get_CanWrite
bool Newtonsoft::Json::JsonConverter::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonConverter.WriteJson
void Newtonsoft::Json::JsonConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.JsonConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::JsonConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.JsonConverter.CanConvert
bool Newtonsoft::Json::JsonConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
