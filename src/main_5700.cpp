// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/Callback.Invoke
void Oculus::Platform::Message::Callback::Invoke(Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::Callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.Message/Callback.BeginInvoke
System::IAsyncResult* Oculus::Platform::Message::Callback::BeginInvoke(Oculus::Platform::Message* message, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::Callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, message, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/Callback.EndInvoke
void Oculus::Platform::Message::Callback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::Callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Message/MessageType
#include "Oculus/Platform/Message.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Unknown
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Unknown
void Oculus::Platform::Message::MessageType::_set_Unknown(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_AddCount
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_AddCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddCount"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_AddCount
void Oculus::Platform::Message::MessageType::_set_Achievements_AddCount(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_AddCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddCount", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_AddFields
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_AddFields");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddFields"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_AddFields
void Oculus::Platform::Message::MessageType::_set_Achievements_AddFields(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_AddFields");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddFields", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllDefinitions
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllDefinitions
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllProgress
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllProgress
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetDefinitionsByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetDefinitionsByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementDefinitionArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementDefinitionArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementProgressArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementProgressArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetProgressByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetProgressByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_Unlock
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_Unlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_Unlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_Unlock"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_Unlock
void Oculus::Platform::Message::MessageType::_set_Achievements_Unlock(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_Unlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_Unlock", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetRegisteredPIDs
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetRegisteredPIDs
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetSessionKey
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_RegisterSessionKey
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_RegisterSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_GetVersion
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Application_GetVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_GetVersion"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_GetVersion
void Oculus::Platform::Message::MessageType::_set_Application_GetVersion(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Application_GetVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_GetVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_LaunchOtherApp
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_LaunchOtherApp
void Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_Delete
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_Delete
void Oculus::Platform::Message::MessageType::_set_AssetFile_Delete(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteById
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_Download
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Download() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_Download");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Download"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_Download
void Oculus::Platform::Message::MessageType::_set_AssetFile_Download(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_Download");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Download", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadById
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancel
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancel
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelById
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_GetList
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_GetList
void Oculus::Platform::Message::MessageType::_set_AssetFile_GetList(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_Status
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Status"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_Status
void Oculus::Platform::Message::MessageType::_set_AssetFile_Status(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Status", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusById
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusById
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Create
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Create"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Create
void Oculus::Platform::Message::MessageType::_set_Challenges_Create(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Create", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_DeclineInvite
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_DeclineInvite
void Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Delete
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Delete
void Oculus::Platform::Message::MessageType::_set_Challenges_Delete(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Get
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Get
void Oculus::Platform::Message::MessageType::_set_Challenges_Get(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesAfterRank
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesByIds
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetList
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetList
void Oculus::Platform::Message::MessageType::_set_Challenges_GetList(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextChallenges
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousChallenges
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Join
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Join
void Oculus::Platform::Message::MessageType::_set_Challenges_Join(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Leave
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Leave
void Oculus::Platform::Message::MessageType::_set_Challenges_Leave(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_UpdateInfo
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_UpdateInfo
void Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage2_GetUserDirectoryPath
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage2_GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage2_GetUserDirectoryPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage2_GetUserDirectoryPath"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage2_GetUserDirectoryPath
void Oculus::Platform::Message::MessageType::_set_CloudStorage2_GetUserDirectoryPath(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage2_GetUserDirectoryPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage2_GetUserDirectoryPath", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_Delete
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_Delete
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Delete(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_GetNextCloudStorageMetadataArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_GetNextCloudStorageMetadataArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_GetNextCloudStorageMetadataArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_GetNextCloudStorageMetadataArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_GetNextCloudStorageMetadataArrayPage
void Oculus::Platform::Message::MessageType::_set_CloudStorage_GetNextCloudStorageMetadataArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_GetNextCloudStorageMetadataArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_GetNextCloudStorageMetadataArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_Load
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_Load");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Load"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_Load
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Load(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_Load");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Load", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadBucketMetadata
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadBucketMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadBucketMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadBucketMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadBucketMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadBucketMetadata(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadBucketMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadBucketMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadConflictMetadata
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadConflictMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadConflictMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadConflictMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadConflictMetadata(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadConflictMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadConflictMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadHandle
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadHandle"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadHandle
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadHandle(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadMetadata
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadMetadata(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_ResolveKeepLocal
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepLocal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_ResolveKeepLocal
void Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepLocal(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepLocal", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_ResolveKeepRemote
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepRemote() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepRemote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepRemote"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_ResolveKeepRemote
void Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepRemote(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepRemote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepRemote", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_Save
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_Save");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Save"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_Save
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Save(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_Save");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Save", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Entitlement_GetIsViewerEntitled
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Entitlement_GetIsViewerEntitled
void Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_ConsumePurchase
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_ConsumePurchase
void Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetNextProductArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetNextProductArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetNextPurchaseArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetNextPurchaseArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetProductsBySKU
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetProductsBySKU
void Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchases
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchases
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchasesDurableCache
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchasesDurableCache
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_LaunchCheckoutFlow
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_LaunchCheckoutFlow
void Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType LanguagePack_GetCurrent
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType LanguagePack_GetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType LanguagePack_SetCurrent
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType LanguagePack_SetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesAfterRank
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesByIds
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetPreviousEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntry
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntry
void Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Livestreaming_GetStatus
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_GetStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Livestreaming_GetStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_GetStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Livestreaming_GetStatus
void Oculus::Platform::Message::MessageType::_set_Livestreaming_GetStatus(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Livestreaming_GetStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_GetStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Livestreaming_PauseStream
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_PauseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Livestreaming_PauseStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_PauseStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Livestreaming_PauseStream
void Oculus::Platform::Message::MessageType::_set_Livestreaming_PauseStream(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Livestreaming_PauseStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_PauseStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Livestreaming_ResumeStream
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_ResumeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Livestreaming_ResumeStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_ResumeStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Livestreaming_ResumeStream
void Oculus::Platform::Message::MessageType::_set_Livestreaming_ResumeStream(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Livestreaming_ResumeStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_ResumeStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Browse
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Browse
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Browse2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Browse2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Cancel
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Cancel
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Cancel2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Cancel2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateAndEnqueueRoom
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateAndEnqueueRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateAndEnqueueRoom2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateAndEnqueueRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateRoom
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateRoom2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Enqueue
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Enqueue
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Enqueue2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Enqueue2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_EnqueueRoom
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_EnqueueRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_EnqueueRoom2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_EnqueueRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_GetAdminSnapshot
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_GetAdminSnapshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_GetAdminSnapshot"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_GetAdminSnapshot
void Oculus::Platform::Message::MessageType::_set_Matchmaking_GetAdminSnapshot(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_GetAdminSnapshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_GetAdminSnapshot", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_GetStats
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_GetStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_GetStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_GetStats"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_GetStats
void Oculus::Platform::Message::MessageType::_set_Matchmaking_GetStats(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_GetStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_GetStats", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_JoinRoom
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_JoinRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_JoinRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_JoinRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_JoinRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_JoinRoom(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_JoinRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_JoinRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_ReportResultInsecure
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_ReportResultInsecure() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_ReportResultInsecure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_ReportResultInsecure"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_ReportResultInsecure
void Oculus::Platform::Message::MessageType::_set_Matchmaking_ReportResultInsecure(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_ReportResultInsecure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_ReportResultInsecure", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_StartMatch
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_StartMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_StartMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_StartMatch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_StartMatch
void Oculus::Platform::Message::MessageType::_set_Matchmaking_StartMatch(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_StartMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_StartMatch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Media_ShareToFacebook
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Media_ShareToFacebook
void Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_GetNextRoomInviteNotificationArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GetNextRoomInviteNotificationArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_GetNextRoomInviteNotificationArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GetNextRoomInviteNotificationArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_GetNextRoomInviteNotificationArrayPage
void Oculus::Platform::Message::MessageType::_set_Notification_GetNextRoomInviteNotificationArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_GetNextRoomInviteNotificationArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GetNextRoomInviteNotificationArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_GetRoomInvites
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GetRoomInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_GetRoomInvites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GetRoomInvites"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_GetRoomInvites
void Oculus::Platform::Message::MessageType::_set_Notification_GetRoomInvites(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_GetRoomInvites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GetRoomInvites", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_MarkAsRead
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_MarkAsRead
void Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Party_GetCurrent
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Party_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Party_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Party_GetCurrent
void Oculus::Platform::Message::MessageType::_set_Party_GetCurrent(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Party_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Party_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_Clear
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_RichPresence_Clear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Clear"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_Clear
void Oculus::Platform::Message::MessageType::_set_RichPresence_Clear(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_RichPresence_Clear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Clear", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_GetDestinations
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_GetDestinations
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_GetNextDestinationArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_GetNextDestinationArrayPage
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_Set
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_RichPresence_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Set"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_Set
void Oculus::Platform::Message::MessageType::_set_RichPresence_Set(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_RichPresence_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Set", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_CreateAndJoinPrivate
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_CreateAndJoinPrivate
void Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_CreateAndJoinPrivate2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_CreateAndJoinPrivate2
void Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_Get
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_Get
void Oculus::Platform::Message::MessageType::_set_Room_Get(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetCurrent
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetCurrent
void Oculus::Platform::Message::MessageType::_set_Room_GetCurrent(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetCurrentForUser
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetCurrentForUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetCurrentForUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetCurrentForUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetCurrentForUser
void Oculus::Platform::Message::MessageType::_set_Room_GetCurrentForUser(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetCurrentForUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetCurrentForUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetInvitableUsers
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetInvitableUsers
void Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetInvitableUsers2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetInvitableUsers2
void Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetModeratedRooms
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetModeratedRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetModeratedRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetModeratedRooms
void Oculus::Platform::Message::MessageType::_set_Room_GetModeratedRooms(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetModeratedRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetModeratedRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetNextRoomArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetNextRoomArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetNextRoomArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetNextRoomArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetNextRoomArrayPage
void Oculus::Platform::Message::MessageType::_set_Room_GetNextRoomArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetNextRoomArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetNextRoomArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_InviteUser
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_InviteUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_InviteUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_InviteUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_InviteUser
void Oculus::Platform::Message::MessageType::_set_Room_InviteUser(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_InviteUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_InviteUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_Join
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_Join
void Oculus::Platform::Message::MessageType::_set_Room_Join(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_Join2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Join2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_Join2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Join2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_Join2
void Oculus::Platform::Message::MessageType::_set_Room_Join2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_Join2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Join2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_KickUser
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_KickUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_KickUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_KickUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_KickUser
void Oculus::Platform::Message::MessageType::_set_Room_KickUser(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_KickUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_KickUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_LaunchInvitableUserFlow
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_LaunchInvitableUserFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_LaunchInvitableUserFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_LaunchInvitableUserFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_LaunchInvitableUserFlow
void Oculus::Platform::Message::MessageType::_set_Room_LaunchInvitableUserFlow(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_LaunchInvitableUserFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_LaunchInvitableUserFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_Leave
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_Leave
void Oculus::Platform::Message::MessageType::_set_Room_Leave(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_SetDescription
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_SetDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_SetDescription");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_SetDescription"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_SetDescription
void Oculus::Platform::Message::MessageType::_set_Room_SetDescription(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_SetDescription");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_SetDescription", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_UpdateDataStore
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_UpdateDataStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateDataStore"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_UpdateDataStore
void Oculus::Platform::Message::MessageType::_set_Room_UpdateDataStore(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_UpdateDataStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateDataStore", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_UpdateMembershipLockStatus
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateMembershipLockStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_UpdateMembershipLockStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateMembershipLockStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_UpdateMembershipLockStatus
void Oculus::Platform::Message::MessageType::_set_Room_UpdateMembershipLockStatus(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_UpdateMembershipLockStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateMembershipLockStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_UpdateOwner
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_UpdateOwner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateOwner"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_UpdateOwner
void Oculus::Platform::Message::MessageType::_set_Room_UpdateOwner(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_UpdateOwner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateOwner", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_UpdatePrivateRoomJoinPolicy
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdatePrivateRoomJoinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_UpdatePrivateRoomJoinPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdatePrivateRoomJoinPolicy"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_UpdatePrivateRoomJoinPolicy
void Oculus::Platform::Message::MessageType::_set_Room_UpdatePrivateRoomJoinPolicy(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_UpdatePrivateRoomJoinPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdatePrivateRoomJoinPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_Get
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_Get
void Oculus::Platform::Message::MessageType::_set_User_Get(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetAccessToken
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetAccessToken
void Oculus::Platform::Message::MessageType::_set_User_GetAccessToken(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUser
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUser
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriends
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriends
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriendsAndRooms
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriendsAndRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriendsAndRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriendsAndRooms
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriendsAndRooms(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriendsAndRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriendsAndRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserRecentlyMetUsersAndRooms
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserRecentlyMetUsersAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserRecentlyMetUsersAndRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserRecentlyMetUsersAndRooms
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserRecentlyMetUsersAndRooms(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserRecentlyMetUsersAndRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetNextUserAndRoomArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserAndRoomArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetNextUserAndRoomArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserAndRoomArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetNextUserAndRoomArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserAndRoomArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetNextUserAndRoomArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserAndRoomArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetNextUserArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetNextUserArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetOrgScopedID
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetOrgScopedID
void Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetSdkAccounts
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetSdkAccounts
void Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetUserProof
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetUserProof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetUserProof"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetUserProof
void Oculus::Platform::Message::MessageType::_set_User_GetUserProof(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetUserProof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetUserProof", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_LaunchFriendRequestFlow
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_LaunchFriendRequestFlow
void Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_LaunchProfile
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_LaunchProfile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchProfile"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_LaunchProfile
void Oculus::Platform::Message::MessageType::_set_User_LaunchProfile(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_LaunchProfile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchProfile", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Voip_SetSystemVoipSuppressed
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Voip_SetSystemVoipSuppressed
void Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
void Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_AssetFile_DownloadUpdate
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_AssetFile_DownloadUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Cal_FinalizeApplication
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Cal_FinalizeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Cal_FinalizeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Cal_FinalizeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Cal_FinalizeApplication
void Oculus::Platform::Message::MessageType::_set_Notification_Cal_FinalizeApplication(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Cal_FinalizeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Cal_FinalizeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Cal_ProposeApplication
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Cal_ProposeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Cal_ProposeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Cal_ProposeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Cal_ProposeApplication
void Oculus::Platform::Message::MessageType::_set_Notification_Cal_ProposeApplication(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Cal_ProposeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Cal_ProposeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_HTTP_Transfer
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_HTTP_Transfer
void Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Livestreaming_StatusChange
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Livestreaming_StatusChange
void Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Matchmaking_MatchFound
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Matchmaking_MatchFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Matchmaking_MatchFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Matchmaking_MatchFound"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Matchmaking_MatchFound
void Oculus::Platform::Message::MessageType::_set_Notification_Matchmaking_MatchFound(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Matchmaking_MatchFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Matchmaking_MatchFound", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_ConnectionStatusChanged
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_ConnectionStatusChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_SessionsChanged
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_SessionsChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Networking_ConnectionStateChange
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_ConnectionStateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Networking_ConnectionStateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_ConnectionStateChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Networking_ConnectionStateChange
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_ConnectionStateChange(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Networking_ConnectionStateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_ConnectionStateChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Networking_PeerConnectRequest
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_PeerConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Networking_PeerConnectRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_PeerConnectRequest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Networking_PeerConnectRequest
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_PeerConnectRequest(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Networking_PeerConnectRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_PeerConnectRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Networking_PingResult
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_PingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Networking_PingResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_PingResult"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Networking_PingResult
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_PingResult(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Networking_PingResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_PingResult", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Party_PartyUpdate
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Party_PartyUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Room_InviteAccepted
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteAccepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteAccepted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteAccepted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Room_InviteAccepted
void Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteAccepted(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteAccepted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteAccepted", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Room_InviteReceived
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteReceived"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Room_InviteReceived
void Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteReceived(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Room_RoomUpdate
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_RoomUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Room_RoomUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_RoomUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Room_RoomUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Room_RoomUpdate(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Room_RoomUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_RoomUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Voip_ConnectRequest
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_ConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Voip_ConnectRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_ConnectRequest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Voip_ConnectRequest
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_ConnectRequest(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Voip_ConnectRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_ConnectRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Voip_StateChange
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_StateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Voip_StateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_StateChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Voip_StateChange
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_StateChange(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Voip_StateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_StateChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Voip_SystemVoipState
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Voip_SystemVoipState
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWithAccessToken
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWithAccessToken
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeStandaloneOculus
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeStandaloneOculus
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeAndroidAsynchronous
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeAndroidAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWindowsAsynchronous
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWindowsAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/ExtraMessageTypesHandler
#include "Oculus/Platform/Message_ExtraMessageTypesHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/ExtraMessageTypesHandler.Invoke
Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke(System::IntPtr messageHandle, Oculus::Platform::Message::MessageType message_type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle), ::il2cpp_utils::ExtractType(message_type)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message*, false>(this, ___internal__method, messageHandle, message_type);
}
// Autogenerated method: Oculus.Platform.Message/ExtraMessageTypesHandler.BeginInvoke
System::IAsyncResult* Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke(System::IntPtr messageHandle, Oculus::Platform::Message::MessageType message_type, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle), ::il2cpp_utils::ExtractType(message_type), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, messageHandle, message_type, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/ExtraMessageTypesHandler.EndInvoke
Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAbuseReportRecording
#include "Oculus/Platform/MessageWithAbuseReportRecording.hpp"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetDataFromMessage
Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetAbuseReportRecording
Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementDefinitions
#include "Oculus/Platform/MessageWithAchievementDefinitions.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetDataFromMessage
Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetAchievementDefinitions
Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementProgressList
#include "Oculus/Platform/MessageWithAchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetDataFromMessage
Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetAchievementProgressList
Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementProgressList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementUpdate
#include "Oculus/Platform/MessageWithAchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetDataFromMessage
Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetAchievementUpdate
Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithApplicationVersion
#include "Oculus/Platform/MessageWithApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetDataFromMessage
Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetApplicationVersion
Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetails
#include "Oculus/Platform/MessageWithAssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetDataFromMessage
Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetAssetDetails
Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetDetails::GetAssetDetails");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetailsList
#include "Oculus/Platform/MessageWithAssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetDataFromMessage
Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetAssetDetailsList
Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetailsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDeleteResult
#include "Oculus/Platform/MessageWithAssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetDataFromMessage
Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetAssetFileDeleteResult
Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadCancelResult
#include "Oculus/Platform/MessageWithAssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetDataFromMessage
Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetAssetFileDownloadCancelResult
Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadResult
#include "Oculus/Platform/MessageWithAssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetDataFromMessage
Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetAssetFileDownloadResult
Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadUpdate
#include "Oculus/Platform/MessageWithAssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetDataFromMessage
Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetAssetFileDownloadUpdate
Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationFinalized
#include "Oculus/Platform/MessageWithCalApplicationFinalized.hpp"
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetDataFromMessage
Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationFinalized::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetCalApplicationFinalized
Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetCalApplicationFinalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationFinalized::GetCalApplicationFinalized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationProposed
#include "Oculus/Platform/MessageWithCalApplicationProposed.hpp"
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetDataFromMessage
Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationProposed::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetCalApplicationProposed
Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetCalApplicationProposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationProposed::GetCalApplicationProposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationSuggestionList
#include "Oculus/Platform/MessageWithCalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetDataFromMessage
Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationSuggestionList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetCalApplicationSuggestionList
Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationSuggestionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallenge
#include "Oculus/Platform/MessageWithChallenge.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetDataFromMessage
Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallenge::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Challenge*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetChallenge
Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallenge::GetChallenge");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Challenge*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallengeList
#include "Oculus/Platform/MessageWithChallengeList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetDataFromMessage
Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallengeList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetChallengeList
Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetChallengeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallengeList::GetChallengeList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallengeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallengeEntryList
#include "Oculus/Platform/MessageWithChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallengeEntryList.GetDataFromMessage
Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::MessageWithChallengeEntryList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallengeEntryList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallengeEntryList.GetChallengeEntryList
Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::MessageWithChallengeEntryList::GetChallengeEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallengeEntryList::GetChallengeEntryList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallengeEntryList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageConflictMetadata
#include "Oculus/Platform/MessageWithCloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageConflictMetadata.GetDataFromMessage
Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageConflictMetadata.GetCloudStorageConflictMetadata
Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetCloudStorageConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetCloudStorageConflictMetadata");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageData
#include "Oculus/Platform/MessageWithCloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageData.GetDataFromMessage
Oculus::Platform::Models::CloudStorageData* Oculus::Platform::MessageWithCloudStorageData::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageData::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageData.GetCloudStorageData
Oculus::Platform::Models::CloudStorageData* Oculus::Platform::MessageWithCloudStorageData::GetCloudStorageData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageData::GetCloudStorageData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal
#include "Oculus/Platform/MessageWithCloudStorageMetadataUnderLocal.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal.GetDataFromMessage
Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal.GetCloudStorageMetadata
Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetCloudStorageMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetCloudStorageMetadata");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageMetadataList
#include "Oculus/Platform/MessageWithCloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataList.GetDataFromMessage
Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::MessageWithCloudStorageMetadataList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageMetadataList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataList.GetCloudStorageMetadataList
Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::MessageWithCloudStorageMetadataList::GetCloudStorageMetadataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageMetadataList::GetCloudStorageMetadataList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadataList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageUpdateResponse
#include "Oculus/Platform/MessageWithCloudStorageUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageUpdateResponse.GetDataFromMessage
Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageUpdateResponse.GetCloudStorageUpdateResponse
Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetCloudStorageUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetCloudStorageUpdateResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithDestinationList
#include "Oculus/Platform/MessageWithDestinationList.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDataFromMessage
Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithDestinationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDestinationList
Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDestinationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithDestinationList::GetDestinationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestinationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithInstalledApplicationList
#include "Oculus/Platform/MessageWithInstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetDataFromMessage
Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithInstalledApplicationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetInstalledApplicationList
Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetInstalledApplicationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithInstalledApplicationList::GetInstalledApplicationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstalledApplicationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchBlockFlowResult
#include "Oculus/Platform/MessageWithLaunchBlockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchBlockFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetLaunchBlockFlowResult
Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult
#include "Oculus/Platform/MessageWithLaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetLaunchFriendRequestFlowResult
Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchReportFlowResult
#include "Oculus/Platform/MessageWithLaunchReportFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchReportFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetLaunchReportFlowResult
Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchUnblockFlowResult
#include "Oculus/Platform/MessageWithLaunchUnblockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetLaunchUnblockFlowResult
Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardEntryList
#include "Oculus/Platform/MessageWithLeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetDataFromMessage
Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardEntryList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetLeaderboardEntryList
Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetLeaderboardEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardEntryList::GetLeaderboardEntryList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntryList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLinkedAccountList
#include "Oculus/Platform/MessageWithLinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLinkedAccountList.GetDataFromMessage
Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::MessageWithLinkedAccountList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLinkedAccountList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLinkedAccountList.GetLinkedAccountList
Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::MessageWithLinkedAccountList::GetLinkedAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLinkedAccountList::GetLinkedAccountList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLinkedAccountList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingApplicationStatus
#include "Oculus/Platform/MessageWithLivestreamingApplicationStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingApplicationStatus.GetDataFromMessage
Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingApplicationStatus.GetLivestreamingApplicationStatus
Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetLivestreamingApplicationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetLivestreamingApplicationStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingStartResult
#include "Oculus/Platform/MessageWithLivestreamingStartResult.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStartResult.GetDataFromMessage
Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::MessageWithLivestreamingStartResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingStartResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStartResult.GetLivestreamingStartResult
Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::MessageWithLivestreamingStartResult::GetLivestreamingStartResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingStartResult::GetLivestreamingStartResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingStatus
#include "Oculus/Platform/MessageWithLivestreamingStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStatus.GetDataFromMessage
Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::MessageWithLivestreamingStatus::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingStatus::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStatus.GetLivestreamingStatus
Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::MessageWithLivestreamingStatus::GetLivestreamingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingStatus::GetLivestreamingStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingVideoStats
#include "Oculus/Platform/MessageWithLivestreamingVideoStats.hpp"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingVideoStats.GetDataFromMessage
Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::MessageWithLivestreamingVideoStats::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingVideoStats::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingVideoStats.GetLivestreamingVideoStats
Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::MessageWithLivestreamingVideoStats::GetLivestreamingVideoStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingVideoStats::GetLivestreamingVideoStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingAdminSnapshot
#include "Oculus/Platform/MessageWithMatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingAdminSnapshot.GetDataFromMessage
Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingAdminSnapshot.GetMatchmakingAdminSnapshot
Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetMatchmakingAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetMatchmakingAdminSnapshot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingEnqueueResult
#include "Oculus/Platform/MessageWithMatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResult.GetDataFromMessage
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResult.GetMatchmakingEnqueueResult
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetMatchmakingEnqueueResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/MessageWithMatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom.GetDataFromMessage
Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom.GetMatchmakingEnqueueResultAndRoom
Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetMatchmakingEnqueueResultAndRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetMatchmakingEnqueueResultAndRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats
#include "Oculus/Platform/MessageWithMatchmakingStatsUnderMatchmakingStats.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats.GetDataFromMessage
Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats.GetMatchmakingStats
Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetMatchmakingStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetMatchmakingStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncConnection
#include "Oculus/Platform/MessageWithNetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncConnection.GetDataFromMessage
Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::MessageWithNetSyncConnection::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncConnection::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncConnection.GetNetSyncConnection
Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::MessageWithNetSyncConnection::GetNetSyncConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncConnection::GetNetSyncConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSessionList
#include "Oculus/Platform/MessageWithNetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionList.GetDataFromMessage
Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::MessageWithNetSyncSessionList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSessionList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionList.GetNetSyncSessionList
Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::MessageWithNetSyncSessionList::GetNetSyncSessionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSessionList::GetNetSyncSessionList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSessionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification
#include "Oculus/Platform/MessageWithNetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification.GetDataFromMessage
Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification.GetNetSyncSessionsChangedNotification
Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetNetSyncSessionsChangedNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetNetSyncSessionsChangedNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult
#include "Oculus/Platform/MessageWithNetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult.GetDataFromMessage
Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult.GetNetSyncSetSessionPropertyResult
Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetNetSyncSetSessionPropertyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetNetSyncSetSessionPropertyResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncVoipAttenuationValueList
#include "Oculus/Platform/MessageWithNetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncVoipAttenuationValueList.GetDataFromMessage
Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncVoipAttenuationValueList.GetNetSyncVoipAttenuationValueList
Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetNetSyncVoipAttenuationValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetSyncVoipAttenuationValueList::GetNetSyncVoipAttenuationValueList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncVoipAttenuationValueList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithOrgScopedID
#include "Oculus/Platform/MessageWithOrgScopedID.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithOrgScopedID.GetDataFromMessage
Oculus::Platform::Models::OrgScopedID* Oculus::Platform::MessageWithOrgScopedID::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithOrgScopedID::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithOrgScopedID.GetOrgScopedID
Oculus::Platform::Models::OrgScopedID* Oculus::Platform::MessageWithOrgScopedID::GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithOrgScopedID::GetOrgScopedID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithParty
#include "Oculus/Platform/MessageWithParty.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithParty.GetDataFromMessage
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithParty::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithParty::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithParty.GetParty
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithParty::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithParty::GetParty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyUnderCurrentParty
#include "Oculus/Platform/MessageWithPartyUnderCurrentParty.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyUnderCurrentParty.GetDataFromMessage
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithPartyUnderCurrentParty::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyUnderCurrentParty::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyUnderCurrentParty.GetParty
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithPartyUnderCurrentParty::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyUnderCurrentParty::GetParty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyID
#include "Oculus/Platform/MessageWithPartyID.hpp"
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyID.GetDataFromMessage
Oculus::Platform::Models::PartyID* Oculus::Platform::MessageWithPartyID::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyID::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyID.GetPartyID
Oculus::Platform::Models::PartyID* Oculus::Platform::MessageWithPartyID::GetPartyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyID::GetPartyID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyID*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyUpdateNotification
#include "Oculus/Platform/MessageWithPartyUpdateNotification.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyUpdateNotification.GetDataFromMessage
Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::MessageWithPartyUpdateNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyUpdateNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyUpdateNotification.GetPartyUpdateNotification
Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::MessageWithPartyUpdateNotification::GetPartyUpdateNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPartyUpdateNotification::GetPartyUpdateNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPidList
#include "Oculus/Platform/MessageWithPidList.hpp"
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPidList.GetDataFromMessage
Oculus::Platform::Models::PidList* Oculus::Platform::MessageWithPidList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPidList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PidList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPidList.GetPidList
Oculus::Platform::Models::PidList* Oculus::Platform::MessageWithPidList::GetPidList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPidList::GetPidList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPidList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PidList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithProductList
#include "Oculus/Platform/MessageWithProductList.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithProductList.GetDataFromMessage
Oculus::Platform::Models::ProductList* Oculus::Platform::MessageWithProductList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithProductList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ProductList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithProductList.GetProductList
Oculus::Platform::Models::ProductList* Oculus::Platform::MessageWithProductList::GetProductList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithProductList::GetProductList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProductList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ProductList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPurchase
#include "Oculus/Platform/MessageWithPurchase.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPurchase.GetDataFromMessage
Oculus::Platform::Models::Purchase* Oculus::Platform::MessageWithPurchase::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPurchase::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Purchase*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPurchase.GetPurchase
Oculus::Platform::Models::Purchase* Oculus::Platform::MessageWithPurchase::GetPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPurchase::GetPurchase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Purchase*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPurchaseList
#include "Oculus/Platform/MessageWithPurchaseList.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPurchaseList.GetDataFromMessage
Oculus::Platform::Models::PurchaseList* Oculus::Platform::MessageWithPurchaseList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPurchaseList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPurchaseList.GetPurchaseList
Oculus::Platform::Models::PurchaseList* Oculus::Platform::MessageWithPurchaseList::GetPurchaseList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPurchaseList::GetPurchaseList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPurchaseList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoom
#include "Oculus/Platform/MessageWithRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoom.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoom.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoom::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomUnderCurrentRoom
#include "Oculus/Platform/MessageWithRoomUnderCurrentRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderCurrentRoom.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderCurrentRoom.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomUnderViewerRoom
#include "Oculus/Platform/MessageWithRoomUnderViewerRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderViewerRoom.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderViewerRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomUnderViewerRoom::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderViewerRoom.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderViewerRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomUnderViewerRoom::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomList
#include "Oculus/Platform/MessageWithRoomList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomList.GetDataFromMessage
Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithRoomList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomList.GetRoomList
Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithRoomList::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomList::GetRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomInviteNotification
#include "Oculus/Platform/MessageWithRoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotification.GetDataFromMessage
Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::MessageWithRoomInviteNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomInviteNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotification.GetRoomInviteNotification
Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::MessageWithRoomInviteNotification::GetRoomInviteNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomInviteNotification::GetRoomInviteNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomInviteNotificationList
#include "Oculus/Platform/MessageWithRoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotificationList.GetDataFromMessage
Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::MessageWithRoomInviteNotificationList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomInviteNotificationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotificationList.GetRoomInviteNotificationList
Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::MessageWithRoomInviteNotificationList::GetRoomInviteNotificationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithRoomInviteNotificationList::GetRoomInviteNotificationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotificationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSdkAccountList
#include "Oculus/Platform/MessageWithSdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSdkAccountList.GetDataFromMessage
Oculus::Platform::Models::SdkAccountList* Oculus::Platform::MessageWithSdkAccountList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSdkAccountList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSdkAccountList.GetSdkAccountList
Oculus::Platform::Models::SdkAccountList* Oculus::Platform::MessageWithSdkAccountList::GetSdkAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSdkAccountList::GetSdkAccountList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSdkAccountList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithShareMediaResult
#include "Oculus/Platform/MessageWithShareMediaResult.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithShareMediaResult.GetDataFromMessage
Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::MessageWithShareMediaResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithShareMediaResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithShareMediaResult.GetShareMediaResult
Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::MessageWithShareMediaResult::GetShareMediaResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithShareMediaResult::GetShareMediaResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShareMediaResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MessageWithString
#include "Oculus/Platform/MessageWithString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithString.GetDataFromMessage
::Il2CppString* Oculus::Platform::MessageWithString::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithString::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithString.GetString
::Il2CppString* Oculus::Platform::MessageWithString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSystemPermission
#include "Oculus/Platform/MessageWithSystemPermission.hpp"
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSystemPermission.GetDataFromMessage
Oculus::Platform::Models::SystemPermission* Oculus::Platform::MessageWithSystemPermission::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSystemPermission::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemPermission*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSystemPermission.GetSystemPermission
Oculus::Platform::Models::SystemPermission* Oculus::Platform::MessageWithSystemPermission::GetSystemPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSystemPermission::GetSystemPermission");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSystemPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemPermission*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSystemVoipState
#include "Oculus/Platform/MessageWithSystemVoipState.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSystemVoipState.GetDataFromMessage
Oculus::Platform::Models::SystemVoipState* Oculus::Platform::MessageWithSystemVoipState::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSystemVoipState::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSystemVoipState.GetSystemVoipState
Oculus::Platform::Models::SystemVoipState* Oculus::Platform::MessageWithSystemVoipState::GetSystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithSystemVoipState::GetSystemVoipState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSystemVoipState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUser
#include "Oculus/Platform/MessageWithUser.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUser.GetDataFromMessage
Oculus::Platform::Models::User* Oculus::Platform::MessageWithUser::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUser::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::User*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUser.GetUser
Oculus::Platform::Models::User* Oculus::Platform::MessageWithUser::GetUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUser::GetUser");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::User*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserAndRoomList
#include "Oculus/Platform/MessageWithUserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserAndRoomList.GetDataFromMessage
Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::MessageWithUserAndRoomList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserAndRoomList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserAndRoomList.GetUserAndRoomList
Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::MessageWithUserAndRoomList::GetUserAndRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserAndRoomList::GetUserAndRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserAndRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserList
#include "Oculus/Platform/MessageWithUserList.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserList.GetDataFromMessage
Oculus::Platform::Models::UserList* Oculus::Platform::MessageWithUserList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserList.GetUserList
Oculus::Platform::Models::UserList* Oculus::Platform::MessageWithUserList::GetUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserList::GetUserList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserProof
#include "Oculus/Platform/MessageWithUserProof.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserProof.GetDataFromMessage
Oculus::Platform::Models::UserProof* Oculus::Platform::MessageWithUserProof::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserProof::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserProof*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserProof.GetUserProof
Oculus::Platform::Models::UserProof* Oculus::Platform::MessageWithUserProof::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserProof::GetUserProof");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserProof*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserReportID
#include "Oculus/Platform/MessageWithUserReportID.hpp"
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserReportID.GetDataFromMessage
Oculus::Platform::Models::UserReportID* Oculus::Platform::MessageWithUserReportID::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserReportID::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserReportID.GetUserReportID
Oculus::Platform::Models::UserReportID* Oculus::Platform::MessageWithUserReportID::GetUserReportID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserReportID::GetUserReportID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserReportID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetworkingPeer
#include "Oculus/Platform/MessageWithNetworkingPeer.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetworkingPeer.GetDataFromMessage
Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::MessageWithNetworkingPeer::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetworkingPeer::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetworkingPeer.GetNetworkingPeer
Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::MessageWithNetworkingPeer::GetNetworkingPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithNetworkingPeer::GetNetworkingPeer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPingResult
#include "Oculus/Platform/MessageWithPingResult.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPingResult.GetDataFromMessage
Oculus::Platform::Models::PingResult* Oculus::Platform::MessageWithPingResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPingResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PingResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPingResult.GetPingResult
Oculus::Platform::Models::PingResult* Oculus::Platform::MessageWithPingResult::GetPingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPingResult::GetPingResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PingResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardDidUpdate
#include "Oculus/Platform/MessageWithLeaderboardDidUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardDidUpdate.GetDataFromMessage
bool Oculus::Platform::MessageWithLeaderboardDidUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardDidUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardDidUpdate.GetLeaderboardDidUpdate
bool Oculus::Platform::MessageWithLeaderboardDidUpdate::GetLeaderboardDidUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardDidUpdate::GetLeaderboardDidUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingNotification
#include "Oculus/Platform/MessageWithMatchmakingNotification.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingNotification.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithMatchmakingNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingNotification::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingNotification.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithMatchmakingNotification::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingNotification::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingBrowseResult
#include "Oculus/Platform/MessageWithMatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetDataFromMessage
Oculus::Platform::Models::MatchmakingBrowseResult* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingBrowseResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingBrowseResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetMatchmakingEnqueueResult
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingBrowseResult::GetMatchmakingEnqueueResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetRoomList
Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithMatchmakingBrowseResult::GetRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithHttpTransferUpdate
#include "Oculus/Platform/MessageWithHttpTransferUpdate.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithHttpTransferUpdate.GetDataFromMessage
Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::MessageWithHttpTransferUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithHttpTransferUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithHttpTransferUpdate.GetHttpTransferUpdate
Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::MessageWithHttpTransferUpdate::GetHttpTransferUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithHttpTransferUpdate::GetHttpTransferUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPlatformInitialize
#include "Oculus/Platform/MessageWithPlatformInitialize.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPlatformInitialize.GetDataFromMessage
Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::MessageWithPlatformInitialize::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPlatformInitialize::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPlatformInitialize.GetPlatformInitialize
Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::MessageWithPlatformInitialize::GetPlatformInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithPlatformInitialize::GetPlatformInitialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncConnectionStatus
#include "Oculus/Platform/NetSyncConnectionStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xD1FC94
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Unknown
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Unknown
void Oculus::Platform::NetSyncConnectionStatus::_set_Unknown(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xD1FCCC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Connecting
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Connecting
void Oculus::Platform::NetSyncConnectionStatus::_set_Connecting(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Connecting", value));
}
// [DescriptionAttribute] Offset: 0xD1FD04
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Disconnected
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Disconnected
void Oculus::Platform::NetSyncConnectionStatus::_set_Disconnected(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Disconnected", value));
}
// [DescriptionAttribute] Offset: 0xD1FD3C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Connected
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Connected
void Oculus::Platform::NetSyncConnectionStatus::_set_Connected(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncConnectionStatus::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Connected", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncDisconnectReason
#include "Oculus/Platform/NetSyncDisconnectReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xD1FD74
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Unknown
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Unknown
void Oculus::Platform::NetSyncDisconnectReason::_set_Unknown(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xD1FDAC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason LocalTerminated
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_LocalTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_LocalTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "LocalTerminated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason LocalTerminated
void Oculus::Platform::NetSyncDisconnectReason::_set_LocalTerminated(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_LocalTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "LocalTerminated", value));
}
// [DescriptionAttribute] Offset: 0xD1FDE4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason ServerTerminated
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_ServerTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_ServerTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "ServerTerminated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason ServerTerminated
void Oculus::Platform::NetSyncDisconnectReason::_set_ServerTerminated(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_ServerTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "ServerTerminated", value));
}
// [DescriptionAttribute] Offset: 0xD1FE1C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Failed
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Failed
void Oculus::Platform::NetSyncDisconnectReason::_set_Failed(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Failed", value));
}
// [DescriptionAttribute] Offset: 0xD1FE54
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Lost
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Lost() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_get_Lost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Lost"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Lost
void Oculus::Platform::NetSyncDisconnectReason::_set_Lost(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncDisconnectReason::_set_Lost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Lost", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.NetSyncOptions
#include "Oculus/Platform/NetSyncOptions.hpp"
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetVoipGroup
void Oculus::Platform::NetSyncOptions::SetVoipGroup(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncOptions::SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetVoipStreamDefault
void Oculus::Platform::NetSyncOptions::SetVoipStreamDefault(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncOptions::SetVoipStreamDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVoipStreamDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetZoneId
void Oculus::Platform::NetSyncOptions::SetZoneId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncOptions::SetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::NetSyncOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.NetSyncOptions.Finalize
void Oculus::Platform::NetSyncOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncVoipMicSource
#include "Oculus/Platform/NetSyncVoipMicSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xD1FE8C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource Unknown
Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource Unknown
void Oculus::Platform::NetSyncVoipMicSource::_set_Unknown(Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xD1FEC4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource None
Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource None
void Oculus::Platform::NetSyncVoipMicSource::_set_None(Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "None", value));
}
// [DescriptionAttribute] Offset: 0xD1FEFC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource Internal
Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource Internal
void Oculus::Platform::NetSyncVoipMicSource::_set_Internal(Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipMicSource::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "Internal", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xD1FF34
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Unknown
Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Unknown
void Oculus::Platform::NetSyncVoipStreamMode::_set_Unknown(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xD1FF6C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Ambisonic
Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Ambisonic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_get_Ambisonic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Ambisonic"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Ambisonic
void Oculus::Platform::NetSyncVoipStreamMode::_set_Ambisonic(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_set_Ambisonic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Ambisonic", value));
}
// [DescriptionAttribute] Offset: 0xD1FFA4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Mono
Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Mono
void Oculus::Platform::NetSyncVoipStreamMode::_set_Mono(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::NetSyncVoipStreamMode::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Mono", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Packet.ReadBytes
uint64_t Oculus::Platform::Packet::ReadBytes(::Array<uint8_t>* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, destination);
}
// Autogenerated method: Oculus.Platform.Packet.get_SenderID
uint64_t Oculus::Platform::Packet::get_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::get_SenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Size
uint64_t Oculus::Platform::Packet::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Policy
Oculus::Platform::SendPolicy Oculus::Platform::Packet::get_Policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::get_Policy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Policy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SendPolicy, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.Dispose
void Oculus::Platform::Packet::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.Finalize
void Oculus::Platform::Packet::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Packet::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PartyUpdateAction
#include "Oculus/Platform/PartyUpdateAction.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xD1FFDC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Unknown
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Unknown
void Oculus::Platform::PartyUpdateAction::_set_Unknown(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xD20014
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Join
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Join
void Oculus::Platform::PartyUpdateAction::_set_Join(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Join", value));
}
// [DescriptionAttribute] Offset: 0xD2004C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Leave
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Leave
void Oculus::Platform::PartyUpdateAction::_set_Leave(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Leave", value));
}
// [DescriptionAttribute] Offset: 0xD20084
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Invite
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Invite
void Oculus::Platform::PartyUpdateAction::_set_Invite(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Invite", value));
}
// [DescriptionAttribute] Offset: 0xD200BC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Uninvite
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Uninvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_get_Uninvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Uninvite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Uninvite
void Oculus::Platform::PartyUpdateAction::_set_Uninvite(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PartyUpdateAction::_set_Uninvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Uninvite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PeerConnectionState
#include "Oculus/Platform/PeerConnectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xD200F4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Unknown
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Unknown
void Oculus::Platform::PeerConnectionState::_set_Unknown(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xD2012C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Connected
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Connected
void Oculus::Platform::PeerConnectionState::_set_Connected(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Connected", value));
}
// [DescriptionAttribute] Offset: 0xD20164
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Timeout
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Timeout
void Oculus::Platform::PeerConnectionState::_set_Timeout(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Timeout", value));
}
// [DescriptionAttribute] Offset: 0xD2019C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Closed
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Closed
void Oculus::Platform::PeerConnectionState::_set_Closed(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PeerConnectionState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Closed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PermissionGrantStatus
#include "Oculus/Platform/PermissionGrantStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xD201D4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Unknown
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Unknown
void Oculus::Platform::PermissionGrantStatus::_set_Unknown(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xD2020C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Granted
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Granted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_get_Granted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Granted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Granted
void Oculus::Platform::PermissionGrantStatus::_set_Granted(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_set_Granted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Granted", value));
}
// [DescriptionAttribute] Offset: 0xD20244
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Denied
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Denied() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_get_Denied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Denied"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Denied
void Oculus::Platform::PermissionGrantStatus::_set_Denied(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_set_Denied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Denied", value));
}
// [DescriptionAttribute] Offset: 0xD2027C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Blocked
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_get_Blocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Blocked"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Blocked
void Oculus::Platform::PermissionGrantStatus::_set_Blocked(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionGrantStatus::_set_Blocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Blocked", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PermissionType
#include "Oculus/Platform/PermissionType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xD202B4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Unknown
Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Unknown
void Oculus::Platform::PermissionType::_set_Unknown(Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xD202EC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Microphone
Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_get_Microphone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Microphone"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Microphone
void Oculus::Platform::PermissionType::_set_Microphone(Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_set_Microphone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Microphone", value));
}
// [DescriptionAttribute] Offset: 0xD20324
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType WriteExternalStorage
Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_WriteExternalStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_get_WriteExternalStorage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "WriteExternalStorage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType WriteExternalStorage
void Oculus::Platform::PermissionType::_set_WriteExternalStorage(Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::PermissionType::_set_WriteExternalStorage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "WriteExternalStorage", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Core
#include "Oculus/Platform/Core.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean IsPlatformInitialized
bool Oculus::Platform::Core::_get_IsPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::_get_IsPlatformInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "IsPlatformInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean IsPlatformInitialized
void Oculus::Platform::Core::_set_IsPlatformInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::_set_IsPlatformInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "IsPlatformInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean LogMessages
bool Oculus::Platform::Core::_get_LogMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::_get_LogMessages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "LogMessages"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean LogMessages
void Oculus::Platform::Core::_set_LogMessages(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::_set_LogMessages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "LogMessages", value));
}
// Autogenerated method: Oculus.Platform.Core.IsInitialized
bool Oculus::Platform::Core::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.ForceInitialized
void Oculus::Platform::Core::ForceInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::ForceInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "ForceInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.getAppID
::Il2CppString* Oculus::Platform::Core::getAppID(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::getAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "getAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.AsyncInitialize
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::Core::AsyncInitialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.Initialize
void Oculus::Platform::Core::Initialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.GetAppIDFromConfig
::Il2CppString* Oculus::Platform::Core::GetAppIDFromConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::GetAppIDFromConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "GetAppIDFromConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core..cctor
void Oculus::Platform::Core::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Core::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.ApplicationLifecycle
#include "Oculus/Platform/ApplicationLifecycle.hpp"
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.GetLaunchDetails
Oculus::Platform::Models::LaunchDetails* Oculus::Platform::ApplicationLifecycle::GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ApplicationLifecycle::GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchDetails*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.SetLaunchIntentChangedNotificationCallback
void Oculus::Platform::ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "SetLaunchIntentChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Rooms
#include "Oculus/Platform/Rooms.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
// Including type: Oculus.Platform.RoomOptions
#include "Oculus/Platform/RoomOptions.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Rooms.UpdateDataStore
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateDataStore(uint64_t roomID, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::UpdateDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetRoomInviteNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::CreateAndJoinPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, joinPolicy, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate2(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::CreateAndJoinPrivate2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, joinPolicy, maxUsers, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.Get
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Get(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrent
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrentForUser
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers
Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers2
Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers2(Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetInvitableUsers2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.GetModeratedRooms
Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetModeratedRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetModeratedRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.InviteUser
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::InviteUser(uint64_t roomID, ::Il2CppString* inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::InviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "InviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.Rooms.Join
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.Join2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join2(uint64_t roomID, Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::Join2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.KickUser
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::KickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "KickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(kickDurationSeconds)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, userID, kickDurationSeconds);
}
// Autogenerated method: Oculus.Platform.Rooms.LaunchInvitableUserFlow
Oculus::Platform::Request* Oculus::Platform::Rooms::LaunchInvitableUserFlow(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::LaunchInvitableUserFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "LaunchInvitableUserFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.Leave
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Leave(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.SetDescription
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::SetDescription(uint64_t roomID, ::Il2CppString* description) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateMembershipLockStatus
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateMembershipLockStatus(uint64_t roomID, Oculus::Platform::RoomMembershipLockStatus membershipLockStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::UpdateMembershipLockStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateMembershipLockStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(membershipLockStatus)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, membershipLockStatus);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateOwner
Oculus::Platform::Request* Oculus::Platform::Rooms::UpdateOwner(uint64_t roomID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::UpdateOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdatePrivateRoomJoinPolicy
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdatePrivateRoomJoinPolicy(uint64_t roomID, Oculus::Platform::RoomJoinPolicy newJoinPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::UpdatePrivateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(newJoinPolicy)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, newJoinPolicy);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteAcceptedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteAcceptedNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetRoomInviteAcceptedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteAcceptedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteReceivedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteReceivedNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetRoomInviteReceivedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteReceivedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetUpdateNotificationCallback
void Oculus::Platform::Rooms::SetUpdateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::SetUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.GetNextRoomListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetNextRoomListPage(Oculus::Platform::Models::RoomList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Rooms::GetNextRoomListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetNextRoomListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking
#include "Oculus/Platform/Matchmaking.hpp"
// Including type: Oculus.Platform.Matchmaking/CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Matchmaking.ReportResultsInsecure
Oculus::Platform::Request* Oculus::Platform::Matchmaking::ReportResultsInsecure(uint64_t roomID, System::Collections::Generic::Dictionary_2<::Il2CppString*, int>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::ReportResultsInsecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "ReportResultsInsecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetStats
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingStats*>* Oculus::Platform::Matchmaking::GetStats(::Il2CppString* pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::GetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingStats*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse(::Il2CppString* pool, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Browse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Browse2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel(::Il2CppString* pool, ::Il2CppString* requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CreateAndEnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CreateRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue(::Il2CppString* pool, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::Enqueue2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom(uint64_t roomID, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::EnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom2(uint64_t roomID, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::EnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetAdminSnapshot
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingAdminSnapshot*>* Oculus::Platform::Matchmaking::GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingAdminSnapshot*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.JoinRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.StartMatch
Oculus::Platform::Request* Oculus::Platform::Matchmaking::StartMatch(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::StartMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "StartMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Matchmaking.SetMatchFoundNotificationCallback
void Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "SetMatchFoundNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Matchmaking/CustomQuery.ToUnmanaged
System::IntPtr Oculus::Platform::Matchmaking::CustomQuery::ToUnmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Matchmaking::CustomQuery::ToUnmanaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUnmanaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/CustomQuery/Criterion
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Net
#include "Oculus/Platform/Net.hpp"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Net.ReadPacket
Oculus::Platform::Packet* Oculus::Platform::Net::ReadPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Packet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.SendPacket
bool Oculus::Platform::Net::SendPacket(uint64_t userID, ::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SendPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.Connect
void Oculus::Platform::Net::Connect(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Accept
void Oculus::Platform::Net::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Close
void Oculus::Platform::Net::Close(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.IsConnected
bool Oculus::Platform::Net::IsConnected(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SendPacketToCurrentRoom
bool Oculus::Platform::Net::SendPacketToCurrentRoom(::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SendPacketToCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacketToCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.AcceptForCurrentRoom
bool Oculus::Platform::Net::AcceptForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::AcceptForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "AcceptForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.CloseForCurrentRoom
void Oculus::Platform::Net::CloseForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::CloseForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "CloseForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.Ping
Oculus::Platform::Request_1<Oculus::Platform::Models::PingResult*>* Oculus::Platform::Net::Ping(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PingResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SetConnectionStateChangedCallback
void Oculus::Platform::Net::SetConnectionStateChangedCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SetConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPeerConnectRequestCallback
void Oculus::Platform::Net::SetPeerConnectRequestCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SetPeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPingResultNotificationCallback
void Oculus::Platform::Net::SetPingResultNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::PingResult*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Net::SetPingResultNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPingResultNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Leaderboards
#include "Oculus/Platform/Leaderboards.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Leaderboards.GetNextEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetNextEntries(Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetPreviousEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetPreviousEntries(Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntries(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntriesAfterRank
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntriesAfterRank(::Il2CppString* leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntriesByIds
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntriesByIds(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs);
}
// Autogenerated method: Oculus.Platform.Leaderboards.WriteEntry
Oculus::Platform::Request_1<bool>* Oculus::Platform::Leaderboards::WriteEntry(::Il2CppString* leaderboardName, int64_t score, ::Array<uint8_t>* extraData, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Leaderboards::WriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "WriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, score, extraData, forceUpdate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Challenges
#include "Oculus/Platform/Challenges.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.ChallengeOptions
#include "Oculus/Platform/ChallengeOptions.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Challenges.GetNextEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetNextEntries(Oculus::Platform::Models::ChallengeEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetPreviousEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetPreviousEntries(Oculus::Platform::Models::ChallengeEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetNextChallenges
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetNextChallenges(Oculus::Platform::Models::ChallengeList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetNextChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetNextChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetPreviousChallenges
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetPreviousChallenges(Oculus::Platform::Models::ChallengeList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetPreviousChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetPreviousChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.Create
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Create(::Il2CppString* leaderboardName, Oculus::Platform::ChallengeOptions* challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.Challenges.DeclineInvite
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::DeclineInvite(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::DeclineInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "DeclineInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Delete
Oculus::Platform::Request* Oculus::Platform::Challenges::Delete(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Get
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Get(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntries(uint64_t challengeID, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntriesAfterRank
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntriesByIds
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntriesByIds(uint64_t challengeID, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, limit, startAt, userIDs);
}
// Autogenerated method: Oculus.Platform.Challenges.GetList
Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetList(Oculus::Platform::ChallengeOptions* challengeOptions, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeOptions), ::il2cpp_utils::ExtractType(limit)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeOptions, limit);
}
// Autogenerated method: Oculus.Platform.Challenges.Join
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Join(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Leave
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Leave(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.UpdateInfo
Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::UpdateInfo(uint64_t challengeID, Oculus::Platform::ChallengeOptions* challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Challenges::UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, challengeOptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Voip
#include "Oculus/Platform/Voip.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipOptions
#include "Oculus/Platform/VoipOptions.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.CAPI/FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Voip.Start
void Oculus::Platform::Voip::Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Accept
void Oculus::Platform::Voip::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Stop
void Oculus::Platform::Voip::Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneFilterCallback
void Oculus::Platform::Voip::SetMicrophoneFilterCallback(Oculus::Platform::CAPI::FilterCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneMuted
void Oculus::Platform::Voip::SetMicrophoneMuted(Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipMicrophoneMuted
Oculus::Platform::VoipMuteState Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipStatus
Oculus::Platform::SystemVoipStatus Oculus::Platform::Voip::GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetIsConnectionUsingDtx
Oculus::Platform::VoipDtxState Oculus::Platform::Voip::GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetLocalBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetLocalBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetRemoteBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.SetNewConnectionOptions
void Oculus::Platform::Voip::SetNewConnectionOptions(Oculus::Platform::VoipOptions* voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voipOptions)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipSuppressed
Oculus::Platform::Request_1<Oculus::Platform::Models::SystemVoipState*>* Oculus::Platform::Voip::SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suppressed)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::SystemVoipState*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipConnectRequestCallback
void Oculus::Platform::Voip::SetVoipConnectRequestCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetVoipConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipStateChangeCallback
void Oculus::Platform::Voip::SetVoipStateChangeCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetVoipStateChangeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipStateChangeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipStateNotificationCallback
void Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::SystemVoipState*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipStateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Achievements
#include "Oculus/Platform/Achievements.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Achievements.AddCount
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddCount(::Il2CppString* name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::AddCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.Achievements.AddFields
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddFields(::Il2CppString* name, ::Il2CppString* fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::AddFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllDefinitions
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllProgress
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetDefinitionsByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetDefinitionsByName(::Array<::Il2CppString*>* names) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.GetProgressByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetProgressByName(::Array<::Il2CppString*>* names) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetProgressByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.Unlock
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::Unlock(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementDefinitionListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetNextAchievementDefinitionListPage(Oculus::Platform::Models::AchievementDefinitionList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetNextAchievementDefinitionListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementDefinitionListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementProgressListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetNextAchievementProgressListPage(Oculus::Platform::Models::AchievementProgressList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Achievements::GetNextAchievementProgressListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementProgressListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Application
#include "Oculus/Platform/Application.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Application.GetVersion
Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>* Oculus::Platform::Application::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Application::GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Application.LaunchOtherApp
Oculus::Platform::Request_1<::Il2CppString*>* Oculus::Platform::Application::LaunchOtherApp(uint64_t appID, Oculus::Platform::ApplicationOptions* deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Application::LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appID, deeplink_options);
}
