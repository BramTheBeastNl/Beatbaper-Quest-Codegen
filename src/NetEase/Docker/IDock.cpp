// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEase.Docker.IDock
#include "NetEase/Docker/IDock.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NetEase.Docker.UploadScoreData
#include "NetEase/Docker/UploadScoreData.hpp"
// Including type: NetEase.Docker.RequestHighscoreData
#include "NetEase/Docker/RequestHighscoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.IDock.SetInitializeCallback
void NetEase::Docker::IDock::SetInitializeCallback(System::Action_1<NetEase::Docker::InitializeData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("SetInitializeCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetInitializeCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.IDock.Initialize
void NetEase::Docker::IDock::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.IDock.SetLoginCallback
void NetEase::Docker::IDock::SetLoginCallback(System::Action_1<NetEase::Docker::LoginData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("SetLoginCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLoginCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.IDock.Login
void NetEase::Docker::IDock::Login() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("Login");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Login", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.IDock.SetLogoutCallback
void NetEase::Docker::IDock::SetLogoutCallback(System::Action_1<NetEase::Docker::LogoutData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("SetLogoutCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLogoutCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.IDock.Logout
void NetEase::Docker::IDock::Logout() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("Logout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Logout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.IDock.UploadScore
void NetEase::Docker::IDock::UploadScore(NetEase::Docker::UploadScoreData scoreData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("UploadScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scoreData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scoreData);
}
// Autogenerated method: NetEase.Docker.IDock.WillProvideHighscore
bool NetEase::Docker::IDock::WillProvideHighscore() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("WillProvideHighscore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WillProvideHighscore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.IDock.SetHighscoreReceivedCallback
void NetEase::Docker::IDock::SetHighscoreReceivedCallback(System::Action_1<NetEase::Docker::ReceivedHighscoreData>* callbackAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("SetHighscoreReceivedCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetHighscoreReceivedCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackAction);
}
// Autogenerated method: NetEase.Docker.IDock.RequestHighscoreList
void NetEase::Docker::IDock::RequestHighscoreList(NetEase::Docker::RequestHighscoreData highscoreRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("RequestHighscoreList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RequestHighscoreList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(highscoreRequest)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, highscoreRequest);
}
// Autogenerated method: NetEase.Docker.IDock.UpdateLoop
void NetEase::Docker::IDock::UpdateLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("IDock").WithContext("UpdateLoop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateLoop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
