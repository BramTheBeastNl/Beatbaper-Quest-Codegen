// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEase.Docker.InitializeData
#include "NetEase/Docker/InitializeData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEase.Docker.InitializeData.get_InitializeSuccessful
bool NetEase::Docker::InitializeData::get_InitializeSuccessful() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("InitializeData").WithContext("get_InitializeSuccessful");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_InitializeSuccessful", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: NetEase.Docker.InitializeData.set_InitializeSuccessful
void NetEase::Docker::InitializeData::set_InitializeSuccessful(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("InitializeData").WithContext("set_InitializeSuccessful");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_InitializeSuccessful", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: NetEase.Docker.InitializeData.set_InitializeCode
void NetEase::Docker::InitializeData::set_InitializeCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NetEase::Docker").WithContext("InitializeData").WithContext("set_InitializeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_InitializeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
