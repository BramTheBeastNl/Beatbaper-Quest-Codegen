// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1
#include "Newtonsoft/Json/Linq/JProperty_JPropertyList_-GetEnumerator-d__1.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JToken <>2__current
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JToken*& Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList <>4__this
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JProperty::JPropertyList*& Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JProperty::JPropertyList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.System.Collections.Generic.IEnumerator<Newtonsoft.Json.Linq.JToken>.get_Current
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System_Collections_Generic_IEnumerator$Newtonsoft_Json_Linq_JToken$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System.Collections.Generic.IEnumerator<Newtonsoft.Json.Linq.JToken>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<Newtonsoft.Json.Linq.JToken>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.System.Collections.IEnumerator.get_Current
::Il2CppObject* Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.System.IDisposable.Dispose
void Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.MoveNext
bool Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JProperty/Newtonsoft.Json.Linq.JPropertyList/Newtonsoft.Json.Linq.<GetEnumerator>d__1.System.Collections.IEnumerator.Reset
void Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JProperty::JPropertyList::$GetEnumerator$d__1::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JTokenType
#include "Newtonsoft/Json/Linq/JTokenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType None
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType None
void Newtonsoft::Json::Linq::JTokenType::_set_None(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Object
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Object
void Newtonsoft::Json::Linq::JTokenType::_set_Object(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Array
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Array
void Newtonsoft::Json::Linq::JTokenType::_set_Array(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Constructor
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Constructor
void Newtonsoft::Json::Linq::JTokenType::_set_Constructor(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Constructor", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Property
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Property"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Property
void Newtonsoft::Json::Linq::JTokenType::_set_Property(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Comment
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Comment
void Newtonsoft::Json::Linq::JTokenType::_set_Comment(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Integer
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Integer
void Newtonsoft::Json::Linq::JTokenType::_set_Integer(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Float
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Float
void Newtonsoft::Json::Linq::JTokenType::_set_Float(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType String
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType String
void Newtonsoft::Json::Linq::JTokenType::_set_String(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Boolean
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Boolean
void Newtonsoft::Json::Linq::JTokenType::_set_Boolean(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Null
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Null
void Newtonsoft::Json::Linq::JTokenType::_set_Null(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Undefined
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Undefined
void Newtonsoft::Json::Linq::JTokenType::_set_Undefined(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Date
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Date"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Date
void Newtonsoft::Json::Linq::JTokenType::_set_Date(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Raw
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Raw
void Newtonsoft::Json::Linq::JTokenType::_set_Raw(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Bytes
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Bytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Bytes"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Bytes
void Newtonsoft::Json::Linq::JTokenType::_set_Bytes(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Bytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Bytes", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Guid
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Guid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Guid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Guid
void Newtonsoft::Json::Linq::JTokenType::_set_Guid(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Guid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Guid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType Uri
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_Uri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "Uri"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType Uri
void Newtonsoft::Json::Linq::JTokenType::_set_Uri(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_Uri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "Uri", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JTokenType TimeSpan
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JTokenType::_get_TimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_get_TimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JTokenType>("Newtonsoft.Json.Linq", "JTokenType", "TimeSpan"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JTokenType TimeSpan
void Newtonsoft::Json::Linq::JTokenType::_set_TimeSpan(::Newtonsoft::Json::Linq::JTokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::_set_TimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "JTokenType", "TimeSpan", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::JTokenType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JTokenType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JValue
#include "Newtonsoft/Json/Linq/JValue.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Linq.JTokenType _valueType
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Linq::JTokenType& Newtonsoft::Json::Linq::JValue::dyn__valueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::dyn__valueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueType"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Linq::JTokenType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Linq::JValue::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.get_Value
::Il2CppObject* Newtonsoft::Json::Linq::JValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.Compare
int Newtonsoft::Json::Linq::JValue::Compare(::Newtonsoft::Json::Linq::JTokenType valueType, ::Il2CppObject* objA, ::Il2CppObject* objB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType), ::il2cpp_utils::ExtractType(objA), ::il2cpp_utils::ExtractType(objB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valueType, objA, objB);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CompareFloat
int Newtonsoft::Json::Linq::JValue::CompareFloat(::Il2CppObject* objA, ::Il2CppObject* objB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CompareFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "CompareFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objA), ::il2cpp_utils::ExtractType(objB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objA, objB);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CreateComment
::Newtonsoft::Json::Linq::JValue* Newtonsoft::Json::Linq::JValue::CreateComment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CreateComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "CreateComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CreateNull
::Newtonsoft::Json::Linq::JValue* Newtonsoft::Json::Linq::JValue::CreateNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CreateNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "CreateNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CreateUndefined
::Newtonsoft::Json::Linq::JValue* Newtonsoft::Json::Linq::JValue::CreateUndefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CreateUndefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "CreateUndefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.GetValueType
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JValue::GetValueType(::System::Nullable_1<::Newtonsoft::Json::Linq::JTokenType> current, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::GetValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "GetValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, value);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.GetStringValueType
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JValue::GetStringValueType(::System::Nullable_1<::Newtonsoft::Json::Linq::JTokenType> current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::GetStringValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "GetStringValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.ValuesEquals
bool Newtonsoft::Json::Linq::JValue::ValuesEquals(::Newtonsoft::Json::Linq::JValue* v1, ::Newtonsoft::Json::Linq::JValue* v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::ValuesEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq", "JValue", "ValuesEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, v2);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.Equals
bool Newtonsoft::Json::Linq::JValue::Equals(::Newtonsoft::Json::Linq::JValue* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.ToString
::StringW Newtonsoft::Json::Linq::JValue::ToString(::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, formatProvider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.ToString
::StringW Newtonsoft::Json::Linq::JValue::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo
int Newtonsoft::Json::Linq::JValue::System_IComparable_CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IComparable.CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode
::System::TypeCode Newtonsoft::Json::Linq::JValue::System_IConvertible_GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean
bool Newtonsoft::Json::Linq::JValue::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar
::Il2CppChar Newtonsoft::Json::Linq::JValue::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte
int8_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte
uint8_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16
int16_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16
uint16_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32
int Newtonsoft::Json::Linq::JValue::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32
uint Newtonsoft::Json::Linq::JValue::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64
int64_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64
uint64_t Newtonsoft::Json::Linq::JValue::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle
float Newtonsoft::Json::Linq::JValue::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble
double Newtonsoft::Json::Linq::JValue::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal
::System::Decimal Newtonsoft::Json::Linq::JValue::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime
::System::DateTime Newtonsoft::Json::Linq::JValue::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType
::Il2CppObject* Newtonsoft::Json::Linq::JValue::System_IConvertible_ToType(::System::Type* conversionType, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conversionType), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, conversionType, provider);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.get_HasValues
bool Newtonsoft::Json::Linq::JValue::get_HasValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::get_HasValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.get_Type
::Newtonsoft::Json::Linq::JTokenType Newtonsoft::Json::Linq::JValue::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JTokenType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.DeepEquals
bool Newtonsoft::Json::Linq::JValue::DeepEquals(::Newtonsoft::Json::Linq::JToken* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::DeepEquals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeepEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.CloneToken
::Newtonsoft::Json::Linq::JToken* Newtonsoft::Json::Linq::JValue::CloneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::CloneToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Linq::JToken*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.WriteTo
void Newtonsoft::Json::Linq::JValue::WriteTo(::Newtonsoft::Json::JsonWriter* writer, ::ArrayW<::Newtonsoft::Json::JsonConverter*> converters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(converters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, converters);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.GetDeepHashCode
int Newtonsoft::Json::Linq::JValue::GetDeepHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::GetDeepHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeepHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.Equals
bool Newtonsoft::Json::Linq::JValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.GetHashCode
int Newtonsoft::Json::Linq::JValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue.ToString
::StringW Newtonsoft::Json::Linq::JValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter
#include "Newtonsoft/Json/Linq/JsonPath/ArrayIndexFilter.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter/Newtonsoft.Json.Linq.JsonPath.<ExecuteFilter>d__4
#include "Newtonsoft/Json/Linq/JsonPath/ArrayIndexFilter_-ExecuteFilter-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter
#include "Newtonsoft/Json/Linq/JsonPath/ArrayMultipleIndexFilter.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter/Newtonsoft.Json.Linq.JsonPath.<ExecuteFilter>d__4
#include "Newtonsoft/Json/Linq/JsonPath/ArrayMultipleIndexFilter_-ExecuteFilter-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter
#include "Newtonsoft/Json/Linq/JsonPath/ArraySliceFilter.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter/Newtonsoft.Json.Linq.JsonPath.<ExecuteFilter>d__12
#include "Newtonsoft/Json/Linq/JsonPath/ArraySliceFilter_-ExecuteFilter-d__12.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.FieldFilter
#include "Newtonsoft/Json/Linq/JsonPath/FieldFilter.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.FieldFilter/Newtonsoft.Json.Linq.JsonPath.<ExecuteFilter>d__4
#include "Newtonsoft/Json/Linq/JsonPath/FieldFilter_-ExecuteFilter-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter
#include "Newtonsoft/Json/Linq/JsonPath/FieldMultipleFilter.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter/Newtonsoft.Json.Linq.JsonPath.<>c
#include "Newtonsoft/Json/Linq/JsonPath/FieldMultipleFilter_--c.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter/Newtonsoft.Json.Linq.JsonPath.<ExecuteFilter>d__4
#include "Newtonsoft/Json/Linq/JsonPath/FieldMultipleFilter_-ExecuteFilter-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter/Newtonsoft.Json.Linq.JsonPath.<>c
#include "Newtonsoft/Json/Linq/JsonPath/FieldMultipleFilter_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter/Newtonsoft.Json.Linq.JsonPath.<>c <>9
::Newtonsoft::Json::Linq::JsonPath::FieldMultipleFilter::$$c* Newtonsoft::Json::Linq::JsonPath::FieldMultipleFilter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::FieldMultipleFilter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::FieldMultipleFilter::$$c*>("Newtonsoft.Json.Linq.JsonPath", "FieldMultipleFilter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter/Newtonsoft.Json.Linq.JsonPath.<>c <>9
void Newtonsoft::Json::Linq::JsonPath::FieldMultipleFilter::$$c::_set_$$9(::Newtonsoft::Json::Linq::JsonPath::FieldMultipleFilter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::FieldMultipleFilter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "FieldMultipleFilter/<>c", "<>9", value)));
}
// Autogenerated method: Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter/Newtonsoft.Json.Linq.JsonPath.<>c..cctor
void Newtonsoft::Json::Linq::JsonPath::FieldMultipleFilter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::FieldMultipleFilter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Linq.JsonPath", "FieldMultipleFilter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.PathFilter
#include "Newtonsoft/Json/Linq/JsonPath/PathFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.QueryOperator
#include "Newtonsoft/Json/Linq/JsonPath/QueryOperator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator None
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator None
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_None(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator Equals
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_Equals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_Equals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "Equals"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator Equals
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_Equals(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_Equals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "Equals", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator NotEquals
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_NotEquals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_NotEquals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "NotEquals"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator NotEquals
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_NotEquals(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_NotEquals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "NotEquals", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator Exists
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_Exists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "Exists"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator Exists
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_Exists(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_Exists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "Exists", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator LessThan
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_LessThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_LessThan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "LessThan"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator LessThan
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_LessThan(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_LessThan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "LessThan", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator LessThanOrEquals
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_LessThanOrEquals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_LessThanOrEquals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "LessThanOrEquals"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator LessThanOrEquals
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_LessThanOrEquals(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_LessThanOrEquals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "LessThanOrEquals", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator GreaterThan
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_GreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_GreaterThan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "GreaterThan"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator GreaterThan
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_GreaterThan(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_GreaterThan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "GreaterThan", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator GreaterThanOrEquals
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_GreaterThanOrEquals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_GreaterThanOrEquals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "GreaterThanOrEquals"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator GreaterThanOrEquals
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_GreaterThanOrEquals(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_GreaterThanOrEquals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "GreaterThanOrEquals", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator And
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_And() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_And");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "And"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator And
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_And(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_And");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "And", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator Or
::Newtonsoft::Json::Linq::JsonPath::QueryOperator Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_Or() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_get_Or");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::JsonPath::QueryOperator>("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "Or"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.JsonPath.QueryOperator Or
void Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_Or(::Newtonsoft::Json::Linq::JsonPath::QueryOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::_set_Or");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq.JsonPath", "QueryOperator", "Or", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::JsonPath::QueryOperator::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::QueryOperator::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.QueryExpression
#include "Newtonsoft/Json/Linq/JsonPath/QueryExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.CompositeExpression
#include "Newtonsoft/Json/Linq/JsonPath/CompositeExpression.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Linq.JsonPath.QueryExpression> <Expressions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JsonPath::QueryExpression*>*& Newtonsoft::Json::Linq::JsonPath::CompositeExpression::dyn_$Expressions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::CompositeExpression::dyn_$Expressions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Expressions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JsonPath::QueryExpression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JsonPath.CompositeExpression.set_Expressions
void Newtonsoft::Json::Linq::JsonPath::CompositeExpression::set_Expressions(::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JsonPath::QueryExpression*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::CompositeExpression::set_Expressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression
#include "Newtonsoft/Json/Linq/JsonPath/BooleanQueryExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.QueryFilter
#include "Newtonsoft/Json/Linq/JsonPath/QueryFilter.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.QueryFilter/Newtonsoft.Json.Linq.JsonPath.<ExecuteFilter>d__4
#include "Newtonsoft/Json/Linq/JsonPath/QueryFilter_-ExecuteFilter-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.ScanFilter
#include "Newtonsoft/Json/Linq/JsonPath/ScanFilter.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.ScanFilter/Newtonsoft.Json.Linq.JsonPath.<ExecuteFilter>d__4
#include "Newtonsoft/Json/Linq/JsonPath/ScanFilter_-ExecuteFilter-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.BinaryConverter
#include "Newtonsoft/Json/Converters/BinaryConverter.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::ReflectionObject*& Newtonsoft::Json::Converters::BinaryConverter::dyn__reflectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::dyn__reflectionObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionObject"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::ReflectionObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.GetByteArray
::ArrayW<uint8_t> Newtonsoft::Json::Converters::BinaryConverter::GetByteArray(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.EnsureReflectionObject
void Newtonsoft::Json::Converters::BinaryConverter::EnsureReflectionObject(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::EnsureReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.ReadByteArray
::ArrayW<uint8_t> Newtonsoft::Json::Converters::BinaryConverter::ReadByteArray(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::ReadByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.WriteJson
void Newtonsoft::Json::Converters::BinaryConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::BinaryConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.CanConvert
bool Newtonsoft::Json::Converters::BinaryConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DateTimeConverterBase
#include "Newtonsoft/Json/Converters/DateTimeConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert
bool Newtonsoft::Json::Converters::DateTimeConverterBase::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DateTimeConverterBase::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.HashSetConverter
#include "Newtonsoft/Json/Converters/HashSetConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.HashSetConverter.get_CanWrite
bool Newtonsoft::Json::Converters::HashSetConverter::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::HashSetConverter::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.HashSetConverter.WriteJson
void Newtonsoft::Json::Converters::HashSetConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::HashSetConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.HashSetConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::HashSetConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::HashSetConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.HashSetConverter.CanConvert
bool Newtonsoft::Json::Converters::HashSetConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::HashSetConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.KeyValuePairConverter
#include "Newtonsoft/Json/Converters/KeyValuePairConverter.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>*>("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
void Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter..cctor
void Newtonsoft::Json::Converters::KeyValuePairConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.InitializeReflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", "InitializeReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.WriteJson
void Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.CanConvert
bool Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.BsonObjectIdConverter
#include "Newtonsoft/Json/Converters/BsonObjectIdConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.WriteJson
void Newtonsoft::Json::Converters::BsonObjectIdConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::BsonObjectIdConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert
bool Newtonsoft::Json::Converters::BsonObjectIdConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.RegexConverter
#include "Newtonsoft/Json/Converters/RegexConverter.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.HasFlag
bool Newtonsoft::Json::Converters::RegexConverter::HasFlag(::System::Text::RegularExpressions::RegexOptions options, ::System::Text::RegularExpressions::RegexOptions flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, options, flag);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteBson
void Newtonsoft::Json::Converters::RegexConverter::WriteBson(::Newtonsoft::Json::Bson::BsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteBson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexString
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadRegexString(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject
::System::Text::RegularExpressions::Regex* Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex*, false>(this, ___internal__method, reader, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.CanConvert
bool Newtonsoft::Json::Converters::RegexConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.StringEnumConverter
#include "Newtonsoft/Json/Converters/StringEnumConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CamelCaseText>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::StringEnumConverter::dyn_$CamelCaseText$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::dyn_$CamelCaseText$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CamelCaseText>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AllowIntegerValues>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::StringEnumConverter::dyn_$AllowIntegerValues$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::dyn_$AllowIntegerValues$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AllowIntegerValues>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.get_CamelCaseText
bool Newtonsoft::Json::Converters::StringEnumConverter::get_CamelCaseText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::get_CamelCaseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CamelCaseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.get_AllowIntegerValues
bool Newtonsoft::Json::Converters::StringEnumConverter::get_AllowIntegerValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::get_AllowIntegerValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowIntegerValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.set_AllowIntegerValues
void Newtonsoft::Json::Converters::StringEnumConverter::set_AllowIntegerValues(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::set_AllowIntegerValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowIntegerValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson
void Newtonsoft::Json::Converters::StringEnumConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::StringEnumConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert
bool Newtonsoft::Json::Converters::StringEnumConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.VectorConverter
#include "Newtonsoft/Json/Converters/VectorConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type V2
::System::Type* Newtonsoft::Json::Converters::VectorConverter::_get_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_get_V2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Newtonsoft.Json.Converters", "VectorConverter", "V2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type V2
void Newtonsoft::Json::Converters::VectorConverter::_set_V2(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_set_V2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "VectorConverter", "V2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type V3
::System::Type* Newtonsoft::Json::Converters::VectorConverter::_get_V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_get_V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Newtonsoft.Json.Converters", "VectorConverter", "V3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type V3
void Newtonsoft::Json::Converters::VectorConverter::_set_V3(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_set_V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "VectorConverter", "V3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type V4
::System::Type* Newtonsoft::Json::Converters::VectorConverter::_get_V4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_get_V4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Newtonsoft.Json.Converters", "VectorConverter", "V4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type V4
void Newtonsoft::Json::Converters::VectorConverter::_set_V4(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_set_V4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "VectorConverter", "V4", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableVector2>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector2$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector2$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableVector2>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableVector3>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector3$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector3$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableVector3>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableVector4>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector4$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector4$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableVector4>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.get_EnableVector2
bool Newtonsoft::Json::Converters::VectorConverter::get_EnableVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::get_EnableVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.set_EnableVector2
void Newtonsoft::Json::Converters::VectorConverter::set_EnableVector2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::set_EnableVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.get_EnableVector3
bool Newtonsoft::Json::Converters::VectorConverter::get_EnableVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::get_EnableVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.set_EnableVector3
void Newtonsoft::Json::Converters::VectorConverter::set_EnableVector3(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::set_EnableVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.get_EnableVector4
bool Newtonsoft::Json::Converters::VectorConverter::get_EnableVector4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::get_EnableVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.set_EnableVector4
void Newtonsoft::Json::Converters::VectorConverter::set_EnableVector4(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::set_EnableVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter..cctor
void Newtonsoft::Json::Converters::VectorConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.WriteVector
void Newtonsoft::Json::Converters::VectorConverter::WriteVector(::Newtonsoft::Json::JsonWriter* writer, float x, float y, ::System::Nullable_1<float> z, ::System::Nullable_1<float> w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::WriteVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", "WriteVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, x, y, z, w);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.PopulateVector2
::UnityEngine::Vector2 Newtonsoft::Json::Converters::VectorConverter::PopulateVector2(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::PopulateVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", "PopulateVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.PopulateVector3
::UnityEngine::Vector3 Newtonsoft::Json::Converters::VectorConverter::PopulateVector3(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::PopulateVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", "PopulateVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.PopulateVector4
::UnityEngine::Vector4 Newtonsoft::Json::Converters::VectorConverter::PopulateVector4(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::PopulateVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", "PopulateVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.WriteJson
void Newtonsoft::Json::Converters::VectorConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::VectorConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.CanConvert
bool Newtonsoft::Json::Converters::VectorConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.VersionConverter
#include "Newtonsoft/Json/Converters/VersionConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.VersionConverter.WriteJson
void Newtonsoft::Json::Converters::VersionConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VersionConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VersionConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::VersionConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VersionConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VersionConverter.CanConvert
bool Newtonsoft::Json::Converters::VersionConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VersionConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.IsoDateTimeConverter
#include "Newtonsoft/Json/Converters/IsoDateTimeConverter.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Globalization.DateTimeStyles _dateTimeStyles
[[deprecated("Use field access instead!")]] ::System::Globalization::DateTimeStyles& Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeStyles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeStyles"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeStyles*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dateTimeFormat
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeFormat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.get_Culture
::System::Globalization::CultureInfo* Newtonsoft::Json::Converters::IsoDateTimeConverter::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson
void Newtonsoft::Json::Converters::IsoDateTimeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::IsoDateTimeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter
#include "Newtonsoft/Json/Converters/JavaScriptDateTimeConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson
void Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentWrapper.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocument _document
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_document"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSignificantWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(standalone)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlElementWrapper
#include "Newtonsoft/Json/Converters/XmlElementWrapper.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlElement _element
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_element"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDeclarationWrapper
#include "Newtonsoft/Json/Converters/XmlDeclarationWrapper.hpp"
// Including type: System.Xml.XmlDeclaration
#include "System/Xml/XmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDeclaration _declaration
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDeclaration*& Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_declaration"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentTypeWrapper.hpp"
// Including type: System.Xml.XmlDocumentType
#include "System/Xml/XmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocumentType _documentType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocumentType*& Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeWrapper
#include "Newtonsoft/Json/Converters/XmlNodeWrapper.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlNode _node
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WrappedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.set_Value
void Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSignificantWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(standalone)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDeclaration
#include "Newtonsoft/Json/Converters/IXmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Version
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Encoding
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Standalone
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocumentType
#include "Newtonsoft/Json/Converters/IXmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Name
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_System
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_System");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Public
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Public");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_InternalSubset
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.get_IsEmpty
bool Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode
void Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::IXmlNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_LocalName
::StringW Newtonsoft::Json::Converters::IXmlNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Value
::StringW Newtonsoft::Json::Converters::IXmlNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WrappedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDeclarationWrapper
#include "Newtonsoft/Json/Converters/XDeclarationWrapper.hpp"
// Including type: System.Xml.Linq.XDeclaration
#include "System/Xml/Linq/XDeclaration.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XDeclaration <Declaration>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XDeclaration*& Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Declaration>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Declaration
::System::Xml::Linq::XDeclaration* Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDeclaration*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.set_Declaration
void Newtonsoft::Json::Converters::XDeclarationWrapper::set_Declaration(::System::Xml::Linq::XDeclaration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::set_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XDocumentTypeWrapper.hpp"
// Including type: System.Xml.Linq.XDocumentType
#include "System/Xml/Linq/XDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XDocumentType _documentType
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XDocumentType*& Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentWrapper
#include "Newtonsoft/Json/Converters/XDocumentWrapper.hpp"
// Including type: System.Xml.Linq.XDocument
#include "System/Xml/Linq/XDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_Document
::System::Xml::Linq::XDocument* Newtonsoft::Json::Converters::XDocumentWrapper::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDocument*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSignificantWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(standalone)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XTextWrapper
#include "Newtonsoft/Json/Converters/XTextWrapper.hpp"
// Including type: System.Xml.Linq.XText
#include "System/Xml/Linq/XText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Text
::System::Xml::Linq::XText* Newtonsoft::Json::Converters::XTextWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XText*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XTextWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XCommentWrapper
#include "Newtonsoft/Json/Converters/XCommentWrapper.hpp"
// Including type: System.Xml.Linq.XComment
#include "System/Xml/Linq/XComment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Text
::System::Xml::Linq::XComment* Newtonsoft::Json::Converters::XCommentWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XComment*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XCommentWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XProcessingInstructionWrapper
#include "Newtonsoft/Json/Converters/XProcessingInstructionWrapper.hpp"
// Including type: System.Xml.Linq.XProcessingInstruction
#include "System/Xml/Linq/XProcessingInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_ProcessingInstruction
::System::Xml::Linq::XProcessingInstruction* Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XProcessingInstruction*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XContainerWrapper
#include "Newtonsoft/Json/Converters/XContainerWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XContainer
#include "System/Xml/Linq/XContainer.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_Container
::System::Xml::Linq::XContainer* Newtonsoft::Json::Converters::XContainerWrapper::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::WrapNode(::System::Xml::Linq::XObject* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XContainerWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XObjectWrapper
#include "Newtonsoft/Json/Converters/XObjectWrapper.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::_get_EmptyChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::_get_EmptyChildNodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*>("Newtonsoft.Json.Converters", "XObjectWrapper", "EmptyChildNodes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
void Newtonsoft::Json::Converters::XObjectWrapper::_set_EmptyChildNodes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::_set_EmptyChildNodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XObjectWrapper", "EmptyChildNodes", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XObject _xmlObject
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XObject*& Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlObject"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WrappedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper..cctor
void Newtonsoft::Json::Converters::XObjectWrapper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XObjectWrapper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XAttributeWrapper
#include "Newtonsoft/Json/Converters/XAttributeWrapper.hpp"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Attribute
::System::Xml::Linq::XAttribute* Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XElementWrapper
#include "Newtonsoft/Json/Converters/XElementWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Element
::System::Xml::Linq::XElement* Newtonsoft::Json::Converters::XElementWrapper::get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XElementWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XElementWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeConverter
#include "Newtonsoft/Json/Converters/XmlNodeConverter.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <DeserializeRootElementName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeserializeRootElementName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WriteArrayAttribute>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WriteArrayAttribute>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OmitRootObject>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OmitRootObject>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_DeserializeRootElementName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeserializeRootElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_WriteArrayAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_OmitRootObject
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OmitRootObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrapXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces
void Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushParentNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsArray
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsArray(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName
bool Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AllSameName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, propertyName, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW elementName, ::System::Xml::XmlNamespaceManager* manager, ::StringW elementPrefix, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributeNameValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(attributeNameValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, elementName, manager, elementPrefix, attributeNameValues);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW attributeName, ::System::Xml::XmlNamespaceManager* manager, ::StringW attributePrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(attributePrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, document, currentNode, attributeName, manager, attributePrefix);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTokenToXmlValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadArrayElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, propertyName, currentNode, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute(::Newtonsoft::Json::Converters::IXmlElement* element, ::Newtonsoft::Json::Converters::IXmlDocument* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddJsonArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(document)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element, document);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements(::Newtonsoft::Json::JsonReader* reader, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, reader, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::StringW elementName, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW elementPrefix, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName, document, elementPrefix, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute(::StringW attributeName, ByRef<::StringW> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNamespaceAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeName, byref(prefix));
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes
bool Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert
bool Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonBinaryType
#include "Newtonsoft/Json/Bson/BsonBinaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType Binary
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType Binary
void Newtonsoft::Json::Bson::BsonBinaryType::_set_Binary(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType Function
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_Function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_Function");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "Function"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType Function
void Newtonsoft::Json::Bson::BsonBinaryType::_set_Function(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_Function");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "Function", value));
}
// [ObsoleteAttribute] Offset: 0x10EF718
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType BinaryOld
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_BinaryOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_BinaryOld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "BinaryOld"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType BinaryOld
void Newtonsoft::Json::Bson::BsonBinaryType::_set_BinaryOld(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_BinaryOld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "BinaryOld", value));
}
// [ObsoleteAttribute] Offset: 0x10EF750
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType UuidOld
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_UuidOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_UuidOld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "UuidOld"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType UuidOld
void Newtonsoft::Json::Bson::BsonBinaryType::_set_UuidOld(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_UuidOld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "UuidOld", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType Uuid
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_Uuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "Uuid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType Uuid
void Newtonsoft::Json::Bson::BsonBinaryType::_set_Uuid(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_Uuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "Uuid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType Md5
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_Md5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_Md5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "Md5"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType Md5
void Newtonsoft::Json::Bson::BsonBinaryType::_set_Md5(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_Md5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "Md5", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType UserDefined
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_UserDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_UserDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "UserDefined"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType UserDefined
void Newtonsoft::Json::Bson::BsonBinaryType::_set_UserDefined(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_UserDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "UserDefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Newtonsoft::Json::Bson::BsonBinaryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonBinaryWriter
#include "Newtonsoft/Json/Bson/BsonBinaryWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Text.Encoding Encoding
::System::Text::Encoding* Newtonsoft::Json::Bson::BsonBinaryWriter::_get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryWriter::_get_Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("Newtonsoft.Json.Bson", "BsonBinaryWriter", "Encoding"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.Encoding Encoding
void Newtonsoft::Json::Bson::BsonBinaryWriter::_set_Encoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryWriter::_set_Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryWriter", "Encoding", value));
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonBinaryWriter..cctor
void Newtonsoft::Json::Bson::BsonBinaryWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Bson", "BsonBinaryWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonReader
#include "Newtonsoft/Json/Bson/BsonReader.hpp"
// Including type: Newtonsoft.Json.Bson.BsonBinaryType
#include "Newtonsoft/Json/Bson/BsonBinaryType.hpp"
// Including type: Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext
#include "Newtonsoft/Json/Bson/BsonReader_ContainerContext.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SeqRange1
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::_get_SeqRange1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_get_SeqRange1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Newtonsoft.Json.Bson", "BsonReader", "SeqRange1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SeqRange1
void Newtonsoft::Json::Bson::BsonReader::_set_SeqRange1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_set_SeqRange1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader", "SeqRange1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SeqRange2
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::_get_SeqRange2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_get_SeqRange2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Newtonsoft.Json.Bson", "BsonReader", "SeqRange2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SeqRange2
void Newtonsoft::Json::Bson::BsonReader::_set_SeqRange2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_set_SeqRange2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader", "SeqRange2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SeqRange3
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::_get_SeqRange3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_get_SeqRange3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Newtonsoft.Json.Bson", "BsonReader", "SeqRange3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SeqRange3
void Newtonsoft::Json::Bson::BsonReader::_set_SeqRange3(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_set_SeqRange3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader", "SeqRange3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SeqRange4
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::_get_SeqRange4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_get_SeqRange4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Newtonsoft.Json.Bson", "BsonReader", "SeqRange4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SeqRange4
void Newtonsoft::Json::Bson::BsonReader::_set_SeqRange4(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_set_SeqRange4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader", "SeqRange4", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.BinaryReader _reader
[[deprecated("Use field access instead!")]] ::System::IO::BinaryReader*& Newtonsoft::Json::Bson::BsonReader::dyn__reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reader"))->offset;
  return *reinterpret_cast<::System::IO::BinaryReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext> _stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonReader::ContainerContext*>*& Newtonsoft::Json::Bson::BsonReader::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonReader::ContainerContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Newtonsoft::Json::Bson::BsonReader::dyn__byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Newtonsoft::Json::Bson::BsonReader::dyn__charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonType _currentElementType
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonType& Newtonsoft::Json::Bson::BsonReader::dyn__currentElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__currentElementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentElementType"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState _bsonReaderState
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonReader::BsonReaderState& Newtonsoft::Json::Bson::BsonReader::dyn__bsonReaderState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__bsonReaderState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bsonReaderState"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext _currentContext
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonReader::ContainerContext*& Newtonsoft::Json::Bson::BsonReader::dyn__currentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__currentContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentContext"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonReader::ContainerContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _readRootValueAsArray
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Bson::BsonReader::dyn__readRootValueAsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__readRootValueAsArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readRootValueAsArray"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _jsonNet35BinaryCompatibility
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Bson::BsonReader::dyn__jsonNet35BinaryCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__jsonNet35BinaryCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jsonNet35BinaryCompatibility"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTimeKind _dateTimeKindHandling
[[deprecated("Use field access instead!")]] ::System::DateTimeKind& Newtonsoft::Json::Bson::BsonReader::dyn__dateTimeKindHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__dateTimeKindHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeKindHandling"))->offset;
  return *reinterpret_cast<::System::DateTimeKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.get_DateTimeKindHandling
::System::DateTimeKind Newtonsoft::Json::Bson::BsonReader::get_DateTimeKindHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::get_DateTimeKindHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeKindHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeKind, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader..cctor
void Newtonsoft::Json::Bson::BsonReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Bson", "BsonReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadElement
::StringW Newtonsoft::Json::Bson::BsonReader::ReadElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope
bool Newtonsoft::Json::Bson::BsonReader::ReadCodeWScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadCodeWScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCodeWScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadReference
bool Newtonsoft::Json::Bson::BsonReader::ReadReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadNormal
bool Newtonsoft::Json::Bson::BsonReader::ReadNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.PopContext
void Newtonsoft::Json::Bson::BsonReader::PopContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::PopContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.PushContext
void Newtonsoft::Json::Bson::BsonReader::PushContext(::Newtonsoft::Json::Bson::BsonReader::ContainerContext* newContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::PushContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newContext);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadByte
uint8_t Newtonsoft::Json::Bson::BsonReader::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadType
void Newtonsoft::Json::Bson::BsonReader::ReadType(::Newtonsoft::Json::Bson::BsonType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadBinary
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::ReadBinary(ByRef<::Newtonsoft::Json::Bson::BsonBinaryType> binaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Newtonsoft::Json::Bson::BsonBinaryType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, byref(binaryType));
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadString
::StringW Newtonsoft::Json::Bson::BsonReader::ReadString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadLengthString
::StringW Newtonsoft::Json::Bson::BsonReader::ReadLengthString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadLengthString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLengthString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.GetString
::StringW Newtonsoft::Json::Bson::BsonReader::GetString(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, length);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop
int Newtonsoft::Json::Bson::BsonReader::GetLastFullCharStop(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::GetLastFullCharStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastFullCharStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, start);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.BytesInSequence
int Newtonsoft::Json::Bson::BsonReader::BytesInSequence(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BytesInSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BytesInSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.EnsureBuffers
void Newtonsoft::Json::Bson::BsonReader::EnsureBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::EnsureBuffers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadDouble
double Newtonsoft::Json::Bson::BsonReader::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadInt32
int Newtonsoft::Json::Bson::BsonReader::ReadInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadInt64
int64_t Newtonsoft::Json::Bson::BsonReader::ReadInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadType
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonReader::ReadType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.MovePosition
void Newtonsoft::Json::Bson::BsonReader::MovePosition(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::MovePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadBytes
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::ReadBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, count);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.Read
bool Newtonsoft::Json::Bson::BsonReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState
#include "Newtonsoft/Json/Bson/BsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState Normal
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState Normal
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_Normal(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceStart
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceStart
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceStart(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceRef
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceRef"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceRef
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceRef(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceRef", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceId
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceId"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceId
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceId(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceId", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeStart
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeStart
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeStart(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeCode
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeCode"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeCode
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeCode(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeCode", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScope
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScope"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScope
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScope(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScope", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScopeObject
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScopeObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScopeObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScopeObject"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScopeObject
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScopeObject(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScopeObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScopeObject", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScopeEnd
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScopeEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScopeEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScopeEnd"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScopeEnd
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScopeEnd(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScopeEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScopeEnd", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Bson::BsonReader::BsonReaderState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext
#include "Newtonsoft/Json/Bson/BsonReader_ContainerContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Bson.BsonType Type
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonType& Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Length
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Position
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Parent>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parent>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonToken::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.set_Parent
void Newtonsoft::Json::Bson::BsonToken::set_Parent(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::set_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObject
#include "Newtonsoft/Json/Bson/BsonObject.hpp"
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonProperty> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>*& Newtonsoft::Json::Bson::BsonObject::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.Add
void Newtonsoft::Json::Bson::BsonObject::Add(::StringW name, ::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Bson::BsonProperty*>* Newtonsoft::Json::Bson::BsonObject::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Bson::BsonProperty*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Newtonsoft::Json::Bson::BsonObject::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonObject::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonArray
#include "Newtonsoft/Json/Bson/BsonArray.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonToken> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>*& Newtonsoft::Json::Bson::BsonArray::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.Add
void Newtonsoft::Json::Bson::BsonArray::Add(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Bson::BsonToken*>* Newtonsoft::Json::Bson::BsonArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Bson::BsonToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Newtonsoft::Json::Bson::BsonArray::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonArray::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonValue
#include "Newtonsoft/Json/Bson/BsonValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Bson::BsonValue::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Bson.BsonType _type
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonType& Newtonsoft::Json::Bson::BsonValue::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonValue.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonValue::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IncludeLength>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IncludeLength>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonString.set_IncludeLength
void Newtonsoft::Json::Bson::BsonString::set_IncludeLength(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonString::set_IncludeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonRegex
#include "Newtonsoft/Json/Bson/BsonRegex.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Pattern>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pattern>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Options>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Options>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Pattern
void Newtonsoft::Json::Bson::BsonRegex::set_Pattern(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Options
void Newtonsoft::Json::Bson::BsonRegex::set_Options(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonRegex::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Name
void Newtonsoft::Json::Bson::BsonProperty::set_Name(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Value
void Newtonsoft::Json::Bson::BsonProperty::set_Value(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Number
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Number
void Newtonsoft::Json::Bson::BsonType::_set_Number(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType String
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType String
void Newtonsoft::Json::Bson::BsonType::_set_String(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Object
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Object
void Newtonsoft::Json::Bson::BsonType::_set_Object(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Array
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Array
void Newtonsoft::Json::Bson::BsonType::_set_Array(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Binary
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Binary
void Newtonsoft::Json::Bson::BsonType::_set_Binary(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Undefined
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Undefined
void Newtonsoft::Json::Bson::BsonType::_set_Undefined(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Oid
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Oid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Oid
void Newtonsoft::Json::Bson::BsonType::_set_Oid(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Oid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Boolean
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Boolean
void Newtonsoft::Json::Bson::BsonType::_set_Boolean(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Date
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Date"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Date
void Newtonsoft::Json::Bson::BsonType::_set_Date(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Null
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Null
void Newtonsoft::Json::Bson::BsonType::_set_Null(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Regex
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Regex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Regex"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Regex
void Newtonsoft::Json::Bson::BsonType::_set_Regex(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Regex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Regex", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Reference
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Reference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Reference"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Reference
void Newtonsoft::Json::Bson::BsonType::_set_Reference(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Reference", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Code
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Code"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Code
void Newtonsoft::Json::Bson::BsonType::_set_Code(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Code", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Symbol
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Symbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Symbol"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Symbol
void Newtonsoft::Json::Bson::BsonType::_set_Symbol(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Symbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Symbol", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_CodeWScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_CodeWScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "CodeWScope"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
void Newtonsoft::Json::Bson::BsonType::_set_CodeWScope(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_CodeWScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "CodeWScope", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Integer
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Integer
void Newtonsoft::Json::Bson::BsonType::_set_Integer(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_TimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_TimeStamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "TimeStamp"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
void Newtonsoft::Json::Bson::BsonType::_set_TimeStamp(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_TimeStamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "TimeStamp", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Long
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Long"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Long
void Newtonsoft::Json::Bson::BsonType::_set_Long(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MinKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MinKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MinKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MinKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MinKey
void Newtonsoft::Json::Bson::BsonType::_set_MinKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MinKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MinKey", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MaxKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MaxKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MaxKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
void Newtonsoft::Json::Bson::BsonType::_set_MaxKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MaxKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MaxKey", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
[[deprecated("Use field access instead!")]] int8_t& Newtonsoft::Json::Bson::BsonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _root
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _parent
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _propertyName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddValue
void Newtonsoft::Json::Bson::BsonWriter::AddValue(::Il2CppObject* value, ::Newtonsoft::Json::Bson::BsonType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddToken
void Newtonsoft::Json::Bson::BsonWriter::AddToken(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteObjectId
void Newtonsoft::Json::Bson::BsonWriter::WriteObjectId(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteObjectId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObjectId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteRegex
void Newtonsoft::Json::Bson::BsonWriter::WriteRegex(::StringW pattern, ::StringW options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pattern, options);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObjectId
#include "Newtonsoft/Json/Bson/BsonObjectId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObjectId.get_Value
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonObjectId::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObjectId.set_Value
void Newtonsoft::Json::Bson::BsonObjectId::set_Value(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Notepad.NoteSO
#include "Notepad/NoteSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String title
[[deprecated("Use field access instead!")]] ::StringW& Notepad::NoteSO::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Notepad::NoteSO::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String content
[[deprecated("Use field access instead!")]] ::StringW& Notepad::NoteSO::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Notepad::NoteSO::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Notepad.NoteURL[] urls
[[deprecated("Use field access instead!")]] ::ArrayW<::Notepad::NoteURL>& Notepad::NoteSO::dyn_urls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Notepad::NoteSO::dyn_urls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "urls"))->offset;
  return *reinterpret_cast<::ArrayW<::Notepad::NoteURL>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Notepad.NotepadComponent
#include "Notepad/NotepadComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LazyThreadSafetyMode
#include "System/Threading/LazyThreadSafetyMode_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.LazyThreadSafetyMode None
::System::Threading::LazyThreadSafetyMode_ System::Threading::LazyThreadSafetyMode_::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::LazyThreadSafetyMode_>("System.Threading", "LazyThreadSafetyMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LazyThreadSafetyMode None
void System::Threading::LazyThreadSafetyMode_::_set_None(::System::Threading::LazyThreadSafetyMode_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LazyThreadSafetyMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LazyThreadSafetyMode PublicationOnly
::System::Threading::LazyThreadSafetyMode_ System::Threading::LazyThreadSafetyMode_::_get_PublicationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_get_PublicationOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::LazyThreadSafetyMode_>("System.Threading", "LazyThreadSafetyMode", "PublicationOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LazyThreadSafetyMode PublicationOnly
void System::Threading::LazyThreadSafetyMode_::_set_PublicationOnly(::System::Threading::LazyThreadSafetyMode_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_set_PublicationOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LazyThreadSafetyMode", "PublicationOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LazyThreadSafetyMode ExecutionAndPublication
::System::Threading::LazyThreadSafetyMode_ System::Threading::LazyThreadSafetyMode_::_get_ExecutionAndPublication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_get_ExecutionAndPublication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::LazyThreadSafetyMode_>("System.Threading", "LazyThreadSafetyMode", "ExecutionAndPublication"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LazyThreadSafetyMode ExecutionAndPublication
void System::Threading::LazyThreadSafetyMode_::_set_ExecutionAndPublication(::System::Threading::LazyThreadSafetyMode_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_set_ExecutionAndPublication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LazyThreadSafetyMode", "ExecutionAndPublication", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Threading::LazyThreadSafetyMode_::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Env
#include "NUnit/Env.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String NewLine
::StringW NUnit::Env::_get_NewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_get_NewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit", "Env", "NewLine"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String NewLine
void NUnit::Env::_set_NewLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_set_NewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit", "Env", "NewLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.String DocumentFolder
::StringW NUnit::Env::_get_DocumentFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_get_DocumentFolder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit", "Env", "DocumentFolder"));
}
// Autogenerated static field setter
// Set static field: static public System.String DocumentFolder
void NUnit::Env::_set_DocumentFolder(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_set_DocumentFolder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit", "Env", "DocumentFolder", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultWorkDirectory
::StringW NUnit::Env::_get_DefaultWorkDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_get_DefaultWorkDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit", "Env", "DefaultWorkDirectory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultWorkDirectory
void NUnit::Env::_set_DefaultWorkDirectory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_set_DefaultWorkDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit", "Env", "DefaultWorkDirectory", value));
}
// Autogenerated method: NUnit.Env..cctor
void NUnit::Env::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit", "Env", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Compatibility.LongLivedMarshalByRefObject
#include "NUnit/Compatibility/LongLivedMarshalByRefObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Compatibility.LongLivedMarshalByRefObject.InitializeLifetimeService
::Il2CppObject* NUnit::Compatibility::LongLivedMarshalByRefObject::InitializeLifetimeService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::LongLivedMarshalByRefObject::InitializeLifetimeService");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLifetimeService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Compatibility.TypeExtensions
#include "NUnit/Compatibility/TypeExtensions.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Compatibility.TypeExtensions.GetTypeInfo
::System::Type* NUnit::Compatibility::TypeExtensions::GetTypeInfo(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::TypeExtensions::GetTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "TypeExtensions", "GetTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Compatibility.AdditionalTypeExtensions
#include "NUnit/Compatibility/AdditionalTypeExtensions.hpp"
// Including type: NUnit.Compatibility.AdditionalTypeExtensions/NUnit.Compatibility.<>c__DisplayClass2_0
#include "NUnit/Compatibility/AdditionalTypeExtensions_--c__DisplayClass2_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Type>> convertibleValueTypes
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Type*>*>* NUnit::Compatibility::AdditionalTypeExtensions::_get_convertibleValueTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::_get_convertibleValueTypes");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Type*>*>*>("NUnit.Compatibility", "AdditionalTypeExtensions", "convertibleValueTypes")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Type>> convertibleValueTypes
void NUnit::Compatibility::AdditionalTypeExtensions::_set_convertibleValueTypes(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Type*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::_set_convertibleValueTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Compatibility", "AdditionalTypeExtensions", "convertibleValueTypes", value));
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions..cctor
void NUnit::Compatibility::AdditionalTypeExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "AdditionalTypeExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions.ParametersMatch
bool NUnit::Compatibility::AdditionalTypeExtensions::ParametersMatch(::ArrayW<::System::Reflection::ParameterInfo*> pinfos, ::ArrayW<::System::Type*> ptypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::ParametersMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "AdditionalTypeExtensions", "ParametersMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinfos), ::il2cpp_utils::ExtractType(ptypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pinfos, ptypes);
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions.IsCastableFrom
bool NUnit::Compatibility::AdditionalTypeExtensions::IsCastableFrom(::System::Type* to, ::System::Type* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::IsCastableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "AdditionalTypeExtensions", "IsCastableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(from)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, to, from);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Compatibility.AdditionalTypeExtensions/NUnit.Compatibility.<>c__DisplayClass2_0
#include "NUnit/Compatibility/AdditionalTypeExtensions_--c__DisplayClass2_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type to
[[deprecated("Use field access instead!")]] ::System::Type*& NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::dyn_to() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::dyn_to");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "to"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions/NUnit.Compatibility.<>c__DisplayClass2_0.<IsCastableFrom>b__0
bool NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::$IsCastableFrom$b__0(::System::Reflection::MethodInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::<IsCastableFrom>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsCastableFrom>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ActionTargets
#include "NUnit/Framework/ActionTargets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ActionTargets Default
::NUnit::Framework::ActionTargets NUnit::Framework::ActionTargets::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ActionTargets>("NUnit.Framework", "ActionTargets", "Default"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ActionTargets Default
void NUnit::Framework::ActionTargets::_set_Default(::NUnit::Framework::ActionTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ActionTargets", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ActionTargets Test
::NUnit::Framework::ActionTargets NUnit::Framework::ActionTargets::_get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_get_Test");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ActionTargets>("NUnit.Framework", "ActionTargets", "Test"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ActionTargets Test
void NUnit::Framework::ActionTargets::_set_Test(::NUnit::Framework::ActionTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_set_Test");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ActionTargets", "Test", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ActionTargets Suite
::NUnit::Framework::ActionTargets NUnit::Framework::ActionTargets::_get_Suite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_get_Suite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ActionTargets>("NUnit.Framework", "ActionTargets", "Suite"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ActionTargets Suite
void NUnit::Framework::ActionTargets::_set_Suite(::NUnit::Framework::ActionTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_set_Suite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ActionTargets", "Suite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& NUnit::Framework::ActionTargets::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.CombiningStrategyAttribute
#include "NUnit/Framework/CombiningStrategyAttribute.hpp"
// Including type: NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestCaseBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.ICombiningStrategy
#include "NUnit/Framework/Interfaces/ICombiningStrategy.hpp"
// Including type: NUnit.Framework.Interfaces.IParameterDataProvider
#include "NUnit/Framework/Interfaces/IParameterDataProvider.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder _builder
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder*& NUnit::Framework::CombiningStrategyAttribute::dyn__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::dyn__builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_builder"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ICombiningStrategy _strategy
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ICombiningStrategy*& NUnit::Framework::CombiningStrategyAttribute::dyn__strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::dyn__strategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strategy"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ICombiningStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.IParameterDataProvider _dataProvider
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::IParameterDataProvider*& NUnit::Framework::CombiningStrategyAttribute::dyn__dataProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::dyn__dataProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataProvider"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::IParameterDataProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.CombiningStrategyAttribute.BuildFrom
::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestMethod*>* NUnit::Framework::CombiningStrategyAttribute::BuildFrom(::NUnit::Framework::Interfaces::IMethodInfo* method, ::NUnit::Framework::Internal::Test* suite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::BuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(suite)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestMethod*>*, false>(this, ___internal__method, method, suite);
}
// Autogenerated method: NUnit.Framework.CombiningStrategyAttribute.ApplyToTest
void NUnit::Framework::CombiningStrategyAttribute::ApplyToTest(::NUnit::Framework::Internal::Test* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::ApplyToTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyToTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.RetryAttribute/NUnit.Framework.RetryCommand
#include "NUnit/Framework/RetryAttribute_RetryCommand.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _retryCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::RetryAttribute::RetryCommand::dyn__retryCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::RetryAttribute::RetryCommand::dyn__retryCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_retryCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.RetryAttribute/NUnit.Framework.RetryCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::RetryAttribute::RetryCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::RetryAttribute::RetryCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ParallelScope
#include "NUnit/Framework/ParallelScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope None
::NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "None"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope None
void NUnit::Framework::ParallelScope::_set_None(::NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "None", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope Self
::NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "Self"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope Self
void NUnit::Framework::ParallelScope::_set_Self(::NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "Self", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope Children
::NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_get_Children");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "Children"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope Children
void NUnit::Framework::ParallelScope::_set_Children(::NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_set_Children");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "Children", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope Fixtures
::NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_Fixtures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_get_Fixtures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "Fixtures"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope Fixtures
void NUnit::Framework::ParallelScope::_set_Fixtures(::NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_set_Fixtures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "Fixtures", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& NUnit::Framework::ParallelScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Assert
#include "NUnit/Framework/_Assert.hpp"
// Including type: NUnit.Framework.Constraints.IResolveConstraint
#include "NUnit/Framework/Constraints/IResolveConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Assert.AreEqual
void NUnit::Framework::_Assert::AreEqual(::Il2CppObject* expected, ::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::_Assert::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expected, actual);
}
// Autogenerated method: NUnit.Framework.Assert.IncrementAssertCount
void NUnit::Framework::_Assert::IncrementAssertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::_Assert::IncrementAssertCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "IncrementAssertCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Assert.IsTrue
void NUnit::Framework::_Assert::IsTrue(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::_Assert::IsTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "IsTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition);
}
// Autogenerated method: NUnit.Framework.Assert.IsFalse
void NUnit::Framework::_Assert::IsFalse(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::_Assert::IsFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "IsFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Guard
#include "NUnit/Framework/Guard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Guard.ArgumentNotNull
void NUnit::Framework::Guard::ArgumentNotNull(::Il2CppObject* value, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Guard::ArgumentNotNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Guard", "ArgumentNotNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, name);
}
// Autogenerated method: NUnit.Framework.Guard.ArgumentNotNullOrEmpty
void NUnit::Framework::Guard::ArgumentNotNullOrEmpty(::StringW value, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Guard::ArgumentNotNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Guard", "ArgumentNotNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, name);
}
// Autogenerated method: NUnit.Framework.Guard.ArgumentValid
void NUnit::Framework::Guard::ArgumentValid(bool condition, ::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Guard::ArgumentValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Guard", "ArgumentValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition, message, paramName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ResultStateException
#include "NUnit/Framework/ResultStateException.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.ResultStateException.get_ResultState
::NUnit::Framework::Interfaces::ResultState* NUnit::Framework::ResultStateException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ResultStateException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: NUnit.Framework.ActionTargets
#include "NUnit/Framework/ActionTargets.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.ITestAction.get_Targets
::NUnit::Framework::ActionTargets NUnit::Framework::ITestAction::get_Targets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ITestAction::get_Targets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Targets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::ActionTargets, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.ITestAction.BeforeTest
void NUnit::Framework::ITestAction::BeforeTest(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ITestAction::BeforeTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeforeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.ITestAction.AfterTest
void NUnit::Framework::ITestAction::AfterTest(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ITestAction::AfterTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AfterTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.CombinatorialAttribute
#include "NUnit/Framework/CombinatorialAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.NUnitAttribute
#include "NUnit/Framework/NUnitAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.RepeatAttribute/NUnit.Framework.RepeatedTestCommand
#include "NUnit/Framework/RepeatAttribute_RepeatedTestCommand.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 repeatCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::RepeatAttribute::RepeatedTestCommand::dyn_repeatCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::RepeatAttribute::RepeatedTestCommand::dyn_repeatCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repeatCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.RepeatAttribute/NUnit.Framework.RepeatedTestCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::RepeatAttribute::RepeatedTestCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::RepeatAttribute::RepeatedTestCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.TestFixtureAttribute
#include "NUnit/Framework/TestFixtureAttribute.hpp"
// Including type: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48
#include "NUnit/Framework/TestFixtureAttribute_-BuildFrom-d__48.hpp"
// Including type: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestFixtureBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.IPropertyBag
#include "NUnit/Framework/Interfaces/IPropertyBag.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder _builder
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder*& NUnit::Framework::TestFixtureAttribute::dyn__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn__builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_builder"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.RunState <RunState>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::RunState& NUnit::Framework::TestFixtureAttribute::dyn_$RunState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn_$RunState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RunState>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::RunState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <Arguments>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& NUnit::Framework::TestFixtureAttribute::dyn_$Arguments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn_$Arguments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Arguments>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.IPropertyBag <Properties>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::IPropertyBag*& NUnit::Framework::TestFixtureAttribute::dyn_$Properties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn_$Properties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Properties>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::IPropertyBag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] <TypeArgs>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& NUnit::Framework::TestFixtureAttribute::dyn_$TypeArgs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn_$TypeArgs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeArgs>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_RunState
::NUnit::Framework::Interfaces::RunState NUnit::Framework::TestFixtureAttribute::get_RunState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::get_RunState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::RunState, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_Arguments
::ArrayW<::Il2CppObject*> NUnit::Framework::TestFixtureAttribute::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::get_Arguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_Properties
::NUnit::Framework::Interfaces::IPropertyBag* NUnit::Framework::TestFixtureAttribute::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::IPropertyBag*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_TypeArgs
::ArrayW<::System::Type*> NUnit::Framework::TestFixtureAttribute::get_TypeArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::get_TypeArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.BuildFrom
::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestSuite*>* NUnit::Framework::TestFixtureAttribute::BuildFrom(::NUnit::Framework::Interfaces::ITypeInfo* typeInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::BuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestSuite*>*, false>(this, ___internal__method, typeInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48
#include "NUnit/Framework/TestFixtureAttribute_-BuildFrom-d__48.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.TestSuite <>2__current
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestSuite*& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestSuite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ITypeInfo typeInfo
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITypeInfo*& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_typeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_typeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeInfo"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NUnit.Framework.Interfaces.ITypeInfo <>3__typeInfo
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITypeInfo*& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$3__typeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$3__typeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__typeInfo"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NUnit.Framework.TestFixtureAttribute <>4__this
[[deprecated("Use field access instead!")]] ::NUnit::Framework::TestFixtureAttribute*& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NUnit::Framework::TestFixtureAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.Generic.IEnumerator<NUnit.Framework.Internal.TestSuite>.get_Current
::NUnit::Framework::Internal::TestSuite* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_Generic_IEnumerator$NUnit_Framework_Internal_TestSuite$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.Generic.IEnumerator<NUnit.Framework.Internal.TestSuite>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<NUnit.Framework.Internal.TestSuite>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.IEnumerator.get_Current
::Il2CppObject* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.IDisposable.Dispose
void NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.MoveNext
bool NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.IEnumerator.Reset
void NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::NUnit::Framework::Internal::TestSuite*>* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_Generic_IEnumerable$NUnit_Framework_Internal_TestSuite$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::NUnit::Framework::Internal::TestSuite*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.AssertionException
#include "NUnit/Framework/AssertionException.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.AssertionException.get_ResultState
::NUnit::Framework::Interfaces::ResultState* NUnit::Framework::AssertionException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::AssertionException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.IgnoreException
#include "NUnit/Framework/IgnoreException.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.IgnoreException.get_ResultState
::NUnit::Framework::Interfaces::ResultState* NUnit::Framework::IgnoreException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::IgnoreException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.GlobalSettings
#include "NUnit/Framework/GlobalSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Double DefaultFloatingPointTolerance
double NUnit::Framework::GlobalSettings::_get_DefaultFloatingPointTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::GlobalSettings::_get_DefaultFloatingPointTolerance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("NUnit.Framework", "GlobalSettings", "DefaultFloatingPointTolerance"));
}
// Autogenerated static field setter
// Set static field: static public System.Double DefaultFloatingPointTolerance
void NUnit::Framework::GlobalSettings::_set_DefaultFloatingPointTolerance(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::GlobalSettings::_set_DefaultFloatingPointTolerance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "GlobalSettings", "DefaultFloatingPointTolerance", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Is
#include "NUnit/Framework/Is.hpp"
// Including type: NUnit.Framework.Constraints.TrueConstraint
#include "NUnit/Framework/Constraints/TrueConstraint.hpp"
// Including type: NUnit.Framework.Constraints.FalseConstraint
#include "NUnit/Framework/Constraints/FalseConstraint.hpp"
// Including type: NUnit.Framework.Constraints.EqualConstraint
#include "NUnit/Framework/Constraints/EqualConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Is.get_True
::NUnit::Framework::Constraints::TrueConstraint* NUnit::Framework::Is::get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Is::get_True");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "get_True", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Constraints::TrueConstraint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Is.get_False
::NUnit::Framework::Constraints::FalseConstraint* NUnit::Framework::Is::get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Is::get_False");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "get_False", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Constraints::FalseConstraint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Is.EqualTo
::NUnit::Framework::Constraints::EqualConstraint* NUnit::Framework::Is::EqualTo(::Il2CppObject* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Is::EqualTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "EqualTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Constraints::EqualConstraint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expected);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.TestContext
#include "NUnit/Framework/TestContext.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: NUnit.Framework.TestParameters
#include "NUnit/Framework/TestParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.ITestExecutionContext CurrentTestExecutionContext
::NUnit::Framework::Internal::ITestExecutionContext* NUnit::Framework::TestContext::_get_CurrentTestExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_get_CurrentTestExecutionContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::ITestExecutionContext*>("NUnit.Framework", "TestContext", "CurrentTestExecutionContext"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.ITestExecutionContext CurrentTestExecutionContext
void NUnit::Framework::TestContext::_set_CurrentTestExecutionContext(::NUnit::Framework::Internal::ITestExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_set_CurrentTestExecutionContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "CurrentTestExecutionContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.TextWriter Error
::System::IO::TextWriter* NUnit::Framework::TestContext::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextWriter*>("NUnit.Framework", "TestContext", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.TextWriter Error
void NUnit::Framework::TestContext::_set_Error(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter Progress
::System::IO::TextWriter* NUnit::Framework::TestContext::_get_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_get_Progress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextWriter*>("NUnit.Framework", "TestContext", "Progress"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter Progress
void NUnit::Framework::TestContext::_set_Progress(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_set_Progress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "Progress", value));
}
// Autogenerated static field getter
// Get static field: static public readonly NUnit.Framework.TestParameters Parameters
::NUnit::Framework::TestParameters* NUnit::Framework::TestContext::_get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_get_Parameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::TestParameters*>("NUnit.Framework", "TestContext", "Parameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly NUnit.Framework.TestParameters Parameters
void NUnit::Framework::TestContext::_set_Parameters(::NUnit::Framework::TestParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_set_Parameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "Parameters", value));
}
// Autogenerated method: NUnit.Framework.TestContext.get_Out
::System::IO::TextWriter* NUnit::Framework::TestContext::get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::get_Out");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestContext", "get_Out", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestContext..cctor
void NUnit::Framework::TestContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.TestParameters
#include "NUnit/Framework/TestParameters.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IFormatProvider MODIFIED_INVARIANT_CULTURE
::System::IFormatProvider* NUnit::Framework::TestParameters::_get_MODIFIED_INVARIANT_CULTURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::_get_MODIFIED_INVARIANT_CULTURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IFormatProvider*>("NUnit.Framework", "TestParameters", "MODIFIED_INVARIANT_CULTURE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IFormatProvider MODIFIED_INVARIANT_CULTURE
void NUnit::Framework::TestParameters::_set_MODIFIED_INVARIANT_CULTURE(::System::IFormatProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::_set_MODIFIED_INVARIANT_CULTURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestParameters", "MODIFIED_INVARIANT_CULTURE", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& NUnit::Framework::TestParameters::dyn__parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::dyn__parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.TestParameters..cctor
void NUnit::Framework::TestParameters::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestParameters", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestParameters.Add
void NUnit::Framework::TestParameters::Add(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: NUnit.Framework.TestParameters.CreateModifiedInvariantCulture
::System::IFormatProvider* NUnit::Framework::TestParameters::CreateModifiedInvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::CreateModifiedInvariantCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestParameters", "CreateModifiedInvariantCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IFormatProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.AssemblyHelper
#include "NUnit/Framework/Internal/AssemblyHelper.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.AssemblyHelper.GetAssemblyPath
::StringW NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPath(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "AssemblyHelper", "GetAssemblyPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assembly);
}
// Autogenerated method: NUnit.Framework.Internal.AssemblyHelper.IsFileUri
bool NUnit::Framework::Internal::AssemblyHelper::IsFileUri(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::AssemblyHelper::IsFileUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "AssemblyHelper", "IsFileUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: NUnit.Framework.Internal.AssemblyHelper.GetAssemblyPathFromCodeBase
::StringW NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPathFromCodeBase(::StringW codeBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPathFromCodeBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "AssemblyHelper", "GetAssemblyPathFromCodeBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codeBase)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codeBase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InternalTrace
#include "NUnit/Framework/Internal/InternalTrace.hpp"
// Including type: NUnit.Framework.Internal.InternalTraceWriter
#include "NUnit/Framework/Internal/InternalTraceWriter.hpp"
// Including type: NUnit.Framework.Internal.Logger
#include "NUnit/Framework/Internal/Logger.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private NUnit.Framework.Internal.InternalTraceLevel traceLevel
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTrace::_get_traceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::_get_traceLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTrace", "traceLevel"));
}
// Autogenerated static field setter
// Set static field: static private NUnit.Framework.Internal.InternalTraceLevel traceLevel
void NUnit::Framework::Internal::InternalTrace::_set_traceLevel(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::_set_traceLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTrace", "traceLevel", value));
}
// Autogenerated static field getter
// Get static field: static private NUnit.Framework.Internal.InternalTraceWriter traceWriter
::NUnit::Framework::Internal::InternalTraceWriter* NUnit::Framework::Internal::InternalTrace::_get_traceWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::_get_traceWriter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceWriter*>("NUnit.Framework.Internal", "InternalTrace", "traceWriter"));
}
// Autogenerated static field setter
// Set static field: static private NUnit.Framework.Internal.InternalTraceWriter traceWriter
void NUnit::Framework::Internal::InternalTrace::_set_traceWriter(::NUnit::Framework::Internal::InternalTraceWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::_set_traceWriter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTrace", "traceWriter", value));
}
// Autogenerated method: NUnit.Framework.Internal.InternalTrace.GetLogger
::NUnit::Framework::Internal::Logger* NUnit::Framework::Internal::InternalTrace::GetLogger(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::GetLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "InternalTrace", "GetLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Logger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: NUnit.Framework.Internal.InternalTrace.GetLogger
::NUnit::Framework::Internal::Logger* NUnit::Framework::Internal::InternalTrace::GetLogger(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::GetLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "InternalTrace", "GetLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Logger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InternalTraceLevel
#include "NUnit/Framework/Internal/InternalTraceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Default
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Default"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Default
void NUnit::Framework::Internal::InternalTraceLevel::_set_Default(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Off
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Off
void NUnit::Framework::Internal::InternalTraceLevel::_set_Off(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Error
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Error
void NUnit::Framework::Internal::InternalTraceLevel::_set_Error(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Warning
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Warning
void NUnit::Framework::Internal::InternalTraceLevel::_set_Warning(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Info
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Info
void NUnit::Framework::Internal::InternalTraceLevel::_set_Info(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Debug
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Debug
void NUnit::Framework::Internal::InternalTraceLevel::_set_Debug(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Verbose
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Verbose
void NUnit::Framework::Internal::InternalTraceLevel::_set_Verbose(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Verbose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::InternalTraceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InternalTraceWriter
#include "NUnit/Framework/Internal/InternalTraceWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter writer
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& NUnit::Framework::Internal::InternalTraceWriter::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceWriter::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.InternalTraceWriter.get_Encoding
::System::Text::Encoding* NUnit::Framework::Internal::InternalTraceWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Logger
#include "NUnit/Framework/Internal/Logger.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String TIME_FMT
::StringW NUnit::Framework::Internal::Logger::_get_TIME_FMT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::_get_TIME_FMT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "Logger", "TIME_FMT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String TIME_FMT
void NUnit::Framework::Internal::Logger::_set_TIME_FMT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::_set_TIME_FMT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Logger", "TIME_FMT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String TRACE_FMT
::StringW NUnit::Framework::Internal::Logger::_get_TRACE_FMT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::_get_TRACE_FMT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "Logger", "TRACE_FMT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String TRACE_FMT
void NUnit::Framework::Internal::Logger::_set_TRACE_FMT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::_set_TRACE_FMT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Logger", "TRACE_FMT", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::Logger::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fullname
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::Logger::dyn_fullname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::dyn_fullname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.InternalTraceLevel maxLevel
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::InternalTraceLevel& NUnit::Framework::Internal::Logger::dyn_maxLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::dyn_maxLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLevel"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::InternalTraceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter writer
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& NUnit::Framework::Internal::Logger::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Logger..cctor
void NUnit::Framework::Internal::Logger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Logger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Error
void NUnit::Framework::Internal::Logger::Error(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Error");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Debug
void NUnit::Framework::Internal::Logger::Debug(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Debug");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Debug
void NUnit::Framework::Internal::Logger::Debug(::StringW message, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Debug");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, args);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Log
void NUnit::Framework::Internal::Logger::Log(::NUnit::Framework::Internal::InternalTraceLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Log
void NUnit::Framework::Internal::Logger::Log(::NUnit::Framework::Internal::InternalTraceLevel level, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, format, args);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.WriteLog
void NUnit::Framework::Internal::Logger::WriteLog(::NUnit::Framework::Internal::InternalTraceLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::WriteLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.MethodWrapper
#include "NUnit/Framework/Internal/MethodWrapper.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: NUnit.Framework.Interfaces.IParameterInfo
#include "NUnit/Framework/Interfaces/IParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ITypeInfo <TypeInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITypeInfo*& NUnit::Framework::Internal::MethodWrapper::dyn_$TypeInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::dyn_$TypeInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo <MethodInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& NUnit::Framework::Internal::MethodWrapper::dyn_$MethodInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::dyn_$MethodInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MethodInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_TypeInfo
::NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Internal::MethodWrapper::get_TypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_TypeInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.set_TypeInfo
void NUnit::Framework::Internal::MethodWrapper::set_TypeInfo(::NUnit::Framework::Interfaces::ITypeInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::set_TypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_MethodInfo
::System::Reflection::MethodInfo* NUnit::Framework::Internal::MethodWrapper::get_MethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_MethodInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.set_MethodInfo
void NUnit::Framework::Internal::MethodWrapper::set_MethodInfo(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::set_MethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_Name
::StringW NUnit::Framework::Internal::MethodWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_IsAbstract
bool NUnit::Framework::Internal::MethodWrapper::get_IsAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_IsAbstract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_IsPublic
bool NUnit::Framework::Internal::MethodWrapper::get_IsPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_IsPublic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_ContainsGenericParameters
bool NUnit::Framework::Internal::MethodWrapper::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_IsGenericMethodDefinition
bool NUnit::Framework::Internal::MethodWrapper::get_IsGenericMethodDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_IsGenericMethodDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericMethodDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_ReturnType
::NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Internal::MethodWrapper::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.GetParameters
::ArrayW<::NUnit::Framework::Interfaces::IParameterInfo*> NUnit::Framework::Internal::MethodWrapper::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::NUnit::Framework::Interfaces::IParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.MakeGenericMethod
::NUnit::Framework::Interfaces::IMethodInfo* NUnit::Framework::Internal::MethodWrapper::MakeGenericMethod(::ArrayW<::System::Type*> typeArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::MakeGenericMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeArguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::IMethodInfo*, false>(this, ___internal__method, typeArguments);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.Invoke
::Il2CppObject* NUnit::Framework::Internal::MethodWrapper::Invoke(::Il2CppObject* fixture, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixture), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, fixture, args);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.ToString
::StringW NUnit::Framework::Internal::MethodWrapper::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.ParameterWrapper
#include "NUnit/Framework/Internal/ParameterWrapper.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.IMethodInfo <Method>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::IMethodInfo*& NUnit::Framework::Internal::ParameterWrapper::dyn_$Method$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::dyn_$Method$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Method>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::IMethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.ParameterInfo <ParameterInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::ParameterInfo*& NUnit::Framework::Internal::ParameterWrapper::dyn_$ParameterInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::dyn_$ParameterInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParameterInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::ParameterInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.get_IsOptional
bool NUnit::Framework::Internal::ParameterWrapper::get_IsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::get_IsOptional");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.set_Method
void NUnit::Framework::Internal::ParameterWrapper::set_Method(::NUnit::Framework::Interfaces::IMethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.get_ParameterInfo
::System::Reflection::ParameterInfo* NUnit::Framework::Internal::ParameterWrapper::get_ParameterInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::get_ParameterInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ParameterInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.set_ParameterInfo
void NUnit::Framework::Internal::ParameterWrapper::set_ParameterInfo(::System::Reflection::ParameterInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::set_ParameterInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParameterInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.get_ParameterType
::System::Type* NUnit::Framework::Internal::ParameterWrapper::get_ParameterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::get_ParameterType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator
#include "NUnit/Framework/Internal/TestNameGenerator.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.TestIDFragment
#include "NUnit/Framework/Internal/TestNameGenerator_TestIDFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.FixedTextFragment
#include "NUnit/Framework/Internal/TestNameGenerator_FixedTextFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.MethodNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_MethodNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NamespaceFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NamespaceFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.MethodFullNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_MethodFullNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ClassNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ClassNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ClassFullNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ClassFullNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ArgListFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ArgListFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ArgumentFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ArgumentFragment.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DefaultTestNamePattern
::StringW NUnit::Framework::Internal::TestNameGenerator::_get_DefaultTestNamePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::_get_DefaultTestNamePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "TestNameGenerator", "DefaultTestNamePattern"));
}
// Autogenerated static field setter
// Set static field: static public System.String DefaultTestNamePattern
void NUnit::Framework::Internal::TestNameGenerator::_set_DefaultTestNamePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::_set_DefaultTestNamePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestNameGenerator", "DefaultTestNamePattern", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _pattern
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::TestNameGenerator::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::dyn__pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment> _fragments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::TestNameGenerator::NameFragment*>*& NUnit::Framework::Internal::TestNameGenerator::dyn__fragments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::dyn__fragments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fragments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::NUnit::Framework::Internal::TestNameGenerator::NameFragment*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator..cctor
void NUnit::Framework::Internal::TestNameGenerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator.GetDisplayName
::StringW NUnit::Framework::Internal::TestNameGenerator::GetDisplayName(::NUnit::Framework::Internal::TestMethod* testMethod, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, testMethod, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator.BuildFragmentList
::System::Collections::Generic::List_1<::NUnit::Framework::Internal::TestNameGenerator::NameFragment*>* NUnit::Framework::Internal::TestNameGenerator::BuildFragmentList(::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::BuildFragmentList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator", "BuildFragmentList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::NUnit::Framework::Internal::TestNameGenerator::NameFragment*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pattern);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText(::NUnit::Framework::Internal::TestMethod* testMethod, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, testMethod, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.AppendGenericTypeNames
void NUnit::Framework::Internal::TestNameGenerator::NameFragment::AppendGenericTypeNames(::System::Text::StringBuilder* sb, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::AppendGenericTypeNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "AppendGenericTypeNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, method);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.GetDisplayString
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetDisplayString(::Il2CppObject* arg, int stringMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetDisplayString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "GetDisplayString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(stringMax)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg, stringMax);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.EscapeSingleChar
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeSingleChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeSingleChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "EscapeSingleChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.EscapeCharInString
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeCharInString(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeCharInString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "EscapeCharInString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.EscapeControlChar
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeControlChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeControlChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "EscapeControlChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.TestIDFragment
#include "NUnit/Framework/Internal/TestNameGenerator_TestIDFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.TestIDFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.TestIDFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText(::NUnit::Framework::Internal::TestMethod* testMethod, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, testMethod, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.FixedTextFragment
#include "NUnit/Framework/Internal/TestNameGenerator_FixedTextFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _text
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::TestNameGenerator::FixedTextFragment::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::FixedTextFragment::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.FixedTextFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::FixedTextFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::FixedTextFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.MethodNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_MethodNameFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.MethodNameFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::MethodNameFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::MethodNameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NamespaceFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NamespaceFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NamespaceFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::NamespaceFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NamespaceFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.MethodFullNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_MethodFullNameFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.MethodFullNameFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::MethodFullNameFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::MethodFullNameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ClassNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ClassNameFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ClassNameFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::ClassNameFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::ClassNameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ClassFullNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ClassFullNameFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ClassFullNameFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::ClassFullNameFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::ClassFullNameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ArgListFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ArgListFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxStringLength
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestNameGenerator::ArgListFragment::dyn__maxStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::ArgListFragment::dyn__maxStringLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxStringLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ArgListFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::ArgListFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> arglist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::ArgListFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arglist)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, arglist);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ArgumentFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ArgumentFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestNameGenerator::ArgumentFragment::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::ArgumentFragment::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxStringLength
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestNameGenerator::ArgumentFragment::dyn__maxStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::ArgumentFragment::dyn__maxStringLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxStringLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ArgumentFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::ArgumentFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::ArgumentFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TypeWrapper
#include "NUnit/Framework/Internal/TypeWrapper.hpp"
// Including type: NUnit.Framework.Internal.TypeWrapper/NUnit.Framework.Internal.<>c__DisplayClass36_0
#include "NUnit/Framework/Internal/TypeWrapper_--c__DisplayClass36_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& NUnit::Framework::Internal::TypeWrapper::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_Type
::System::Type* NUnit::Framework::Internal::TypeWrapper::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.set_Type
void NUnit::Framework::Internal::TypeWrapper::set_Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_BaseType
::NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Internal::TypeWrapper::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_FullName
::StringW NUnit::Framework::Internal::TypeWrapper::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_Assembly
::System::Reflection::Assembly* NUnit::Framework::Internal::TypeWrapper::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_Namespace
::StringW NUnit::Framework::Internal::TypeWrapper::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_IsAbstract
bool NUnit::Framework::Internal::TypeWrapper::get_IsAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_IsAbstract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_IsGenericType
bool NUnit::Framework::Internal::TypeWrapper::get_IsGenericType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_IsGenericType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_ContainsGenericParameters
bool NUnit::Framework::Internal::TypeWrapper::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_IsGenericTypeDefinition
bool NUnit::Framework::Internal::TypeWrapper::get_IsGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_IsGenericTypeDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_IsSealed
bool NUnit::Framework::Internal::TypeWrapper::get_IsSealed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_IsSealed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSealed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.get_IsStaticClass
bool NUnit::Framework::Internal::TypeWrapper::get_IsStaticClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::get_IsStaticClass");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsStaticClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.IsType
bool NUnit::Framework::Internal::TypeWrapper::IsType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::IsType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.GetDisplayName
::StringW NUnit::Framework::Internal::TypeWrapper::GetDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::GetDisplayName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.GetDisplayName
::StringW NUnit::Framework::Internal::TypeWrapper::GetDisplayName(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::GetDisplayName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, args);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.MakeGenericType
::NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Internal::TypeWrapper::MakeGenericType(::ArrayW<::System::Type*> typeArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::MakeGenericType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeArgs)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method, typeArgs);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.GetGenericTypeDefinition
::System::Type* NUnit::Framework::Internal::TypeWrapper::GetGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::GetGenericTypeDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.HasMethodWithAttribute
bool NUnit::Framework::Internal::TypeWrapper::HasMethodWithAttribute(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::HasMethodWithAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasMethodWithAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.GetMethods
::ArrayW<::NUnit::Framework::Interfaces::IMethodInfo*> NUnit::Framework::Internal::TypeWrapper::GetMethods(::System::Reflection::BindingFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::NUnit::Framework::Interfaces::IMethodInfo*>, false>(this, ___internal__method, flags);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.GetConstructor
::System::Reflection::ConstructorInfo* NUnit::Framework::Internal::TypeWrapper::GetConstructor(::ArrayW<::System::Type*> argTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::GetConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, argTypes);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.HasConstructor
bool NUnit::Framework::Internal::TypeWrapper::HasConstructor(::ArrayW<::System::Type*> argTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::HasConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, argTypes);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.Construct
::Il2CppObject* NUnit::Framework::Internal::TypeWrapper::Construct(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::Construct");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper.ToString
::StringW NUnit::Framework::Internal::TypeWrapper::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TypeWrapper/NUnit.Framework.Internal.<>c__DisplayClass36_0
#include "NUnit/Framework/Internal/TypeWrapper_--c__DisplayClass36_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type[] argTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& NUnit::Framework::Internal::TypeWrapper::$$c__DisplayClass36_0::dyn_argTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::$$c__DisplayClass36_0::dyn_argTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "argTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TypeWrapper/NUnit.Framework.Internal.<>c__DisplayClass36_0.<GetConstructor>b__0
bool NUnit::Framework::Internal::TypeWrapper::$$c__DisplayClass36_0::$GetConstructor$b__0(::System::Reflection::ConstructorInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeWrapper::$$c__DisplayClass36_0::<GetConstructor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetConstructor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.ActionsHelper
#include "NUnit/Framework/Internal/ActionsHelper.hpp"
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: NUnit.Framework.Internal.TestAssembly
#include "NUnit/Framework/Internal/TestAssembly.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: System.Reflection.ICustomAttributeProvider
#include "System/Reflection/ICustomAttributeProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.ActionsHelper.GetActionsFromTestAssembly
::ArrayW<::NUnit::Framework::ITestAction*> NUnit::Framework::Internal::ActionsHelper::GetActionsFromTestAssembly(::NUnit::Framework::Internal::TestAssembly* testAssembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ActionsHelper::GetActionsFromTestAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ActionsHelper", "GetActionsFromTestAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testAssembly)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::NUnit::Framework::ITestAction*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, testAssembly);
}
// Autogenerated method: NUnit.Framework.Internal.ActionsHelper.GetActionsFromTestMethodInfo
::ArrayW<::NUnit::Framework::ITestAction*> NUnit::Framework::Internal::ActionsHelper::GetActionsFromTestMethodInfo(::NUnit::Framework::Interfaces::IMethodInfo* testAssembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ActionsHelper::GetActionsFromTestMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ActionsHelper", "GetActionsFromTestMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testAssembly)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::NUnit::Framework::ITestAction*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, testAssembly);
}
// Autogenerated method: NUnit.Framework.Internal.ActionsHelper.GetActionsFromAttributeProvider
::ArrayW<::NUnit::Framework::ITestAction*> NUnit::Framework::Internal::ActionsHelper::GetActionsFromAttributeProvider(::System::Reflection::ICustomAttributeProvider* attributeProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ActionsHelper::GetActionsFromAttributeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ActionsHelper", "GetActionsFromAttributeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::NUnit::Framework::ITestAction*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributeProvider);
}
// Autogenerated method: NUnit.Framework.Internal.ActionsHelper.GetActionsFromTypesAttributes
::ArrayW<::NUnit::Framework::ITestAction*> NUnit::Framework::Internal::ActionsHelper::GetActionsFromTypesAttributes(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ActionsHelper::GetActionsFromTypesAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ActionsHelper", "GetActionsFromTypesAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::NUnit::Framework::ITestAction*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: NUnit.Framework.Internal.ActionsHelper.GetDeclaredInterfaces
::ArrayW<::System::Type*> NUnit::Framework::Internal::ActionsHelper::GetDeclaredInterfaces(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ActionsHelper::GetDeclaredInterfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ActionsHelper", "GetDeclaredInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: NUnit.Framework.Internal.ActionsHelper.SortByTargetDescending
int NUnit::Framework::Internal::ActionsHelper::SortByTargetDescending(::NUnit::Framework::ITestAction* x, ::NUnit::Framework::ITestAction* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ActionsHelper::SortByTargetDescending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ActionsHelper", "SortByTargetDescending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TextMessageWriter
#include "NUnit/Framework/Internal/TextMessageWriter.hpp"
// Including type: NUnit.Framework.Constraints.ConstraintResult
#include "NUnit/Framework/Constraints/ConstraintResult.hpp"
// Including type: NUnit.Framework.Constraints.Tolerance
#include "NUnit/Framework/Constraints/Tolerance.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 DEFAULT_LINE_LENGTH
int NUnit::Framework::Internal::TextMessageWriter::_get_DEFAULT_LINE_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::_get_DEFAULT_LINE_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("NUnit.Framework.Internal", "TextMessageWriter", "DEFAULT_LINE_LENGTH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 DEFAULT_LINE_LENGTH
void NUnit::Framework::Internal::TextMessageWriter::_set_DEFAULT_LINE_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::_set_DEFAULT_LINE_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TextMessageWriter", "DEFAULT_LINE_LENGTH", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Pfx_Expected
::StringW NUnit::Framework::Internal::TextMessageWriter::_get_Pfx_Expected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::_get_Pfx_Expected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "TextMessageWriter", "Pfx_Expected"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Pfx_Expected
void NUnit::Framework::Internal::TextMessageWriter::_set_Pfx_Expected(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::_set_Pfx_Expected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TextMessageWriter", "Pfx_Expected", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Pfx_Actual
::StringW NUnit::Framework::Internal::TextMessageWriter::_get_Pfx_Actual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::_get_Pfx_Actual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "TextMessageWriter", "Pfx_Actual"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Pfx_Actual
void NUnit::Framework::Internal::TextMessageWriter::_set_Pfx_Actual(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::_set_Pfx_Actual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TextMessageWriter", "Pfx_Actual", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 PrefixLength
int NUnit::Framework::Internal::TextMessageWriter::_get_PrefixLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::_get_PrefixLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("NUnit.Framework.Internal", "TextMessageWriter", "PrefixLength"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 PrefixLength
void NUnit::Framework::Internal::TextMessageWriter::_set_PrefixLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::_set_PrefixLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TextMessageWriter", "PrefixLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxLineLength
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TextMessageWriter::dyn_maxLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::dyn_maxLineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLineLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter..cctor
void NUnit::Framework::Internal::TextMessageWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TextMessageWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteExpectedLine
void NUnit::Framework::Internal::TextMessageWriter::WriteExpectedLine(::NUnit::Framework::Constraints::ConstraintResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteExpectedLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteExpectedLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteExpectedLine
void NUnit::Framework::Internal::TextMessageWriter::WriteExpectedLine(::Il2CppObject* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteExpectedLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteExpectedLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expected);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteExpectedLine
void NUnit::Framework::Internal::TextMessageWriter::WriteExpectedLine(::Il2CppObject* expected, ::NUnit::Framework::Constraints::Tolerance* tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteExpectedLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteExpectedLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(tolerance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expected, tolerance);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteActualLine
void NUnit::Framework::Internal::TextMessageWriter::WriteActualLine(::NUnit::Framework::Constraints::ConstraintResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteActualLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteActualLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteActualLine
void NUnit::Framework::Internal::TextMessageWriter::WriteActualLine(::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteActualLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteActualLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, actual);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteCaretLine
void NUnit::Framework::Internal::TextMessageWriter::WriteCaretLine(int mismatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteCaretLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCaretLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mismatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mismatch);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.get_MaxLineLength
int NUnit::Framework::Internal::TextMessageWriter::get_MaxLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::get_MaxLineLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteMessageLine
void NUnit::Framework::Internal::TextMessageWriter::WriteMessageLine(int level, ::StringW message, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteMessageLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMessageLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message, args);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.DisplayDifferences
void NUnit::Framework::Internal::TextMessageWriter::DisplayDifferences(::NUnit::Framework::Constraints::ConstraintResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::DisplayDifferences");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayDifferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.DisplayDifferences
void NUnit::Framework::Internal::TextMessageWriter::DisplayDifferences(::Il2CppObject* expected, ::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::DisplayDifferences");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayDifferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expected, actual);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.DisplayDifferences
void NUnit::Framework::Internal::TextMessageWriter::DisplayDifferences(::Il2CppObject* expected, ::Il2CppObject* actual, ::NUnit::Framework::Constraints::Tolerance* tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::DisplayDifferences");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayDifferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(tolerance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expected, actual, tolerance);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.DisplayStringDifferences
void NUnit::Framework::Internal::TextMessageWriter::DisplayStringDifferences(::StringW expected, ::StringW actual, int mismatch, bool ignoreCase, bool clipping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::DisplayStringDifferences");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayStringDifferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(mismatch), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(clipping)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expected, actual, mismatch, ignoreCase, clipping);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteActualValue
void NUnit::Framework::Internal::TextMessageWriter::WriteActualValue(::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteActualValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteActualValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, actual);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteValue
void NUnit::Framework::Internal::TextMessageWriter::WriteValue(::Il2CppObject* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: NUnit.Framework.Internal.TextMessageWriter.WriteCollectionElements
void NUnit::Framework::Internal::TextMessageWriter::WriteCollectionElements(::System::Collections::IEnumerable* collection, int64_t start, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TextMessageWriter::WriteCollectionElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCollectionElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collection, start, max);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.GenericMethodHelper
#include "NUnit/Framework/Internal/GenericMethodHelper.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo <Method>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& NUnit::Framework::Internal::GenericMethodHelper::dyn_$Method$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::dyn_$Method$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Method>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] <TypeParms>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& NUnit::Framework::Internal::GenericMethodHelper::dyn_$TypeParms$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::dyn_$TypeParms$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeParms>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] <TypeArgs>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& NUnit::Framework::Internal::GenericMethodHelper::dyn_$TypeArgs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::dyn_$TypeArgs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeArgs>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] <ParmTypes>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& NUnit::Framework::Internal::GenericMethodHelper::dyn_$ParmTypes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::dyn_$ParmTypes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParmTypes>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.get_Method
::System::Reflection::MethodInfo* NUnit::Framework::Internal::GenericMethodHelper::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.set_Method
void NUnit::Framework::Internal::GenericMethodHelper::set_Method(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.get_TypeParms
::ArrayW<::System::Type*> NUnit::Framework::Internal::GenericMethodHelper::get_TypeParms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::get_TypeParms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeParms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.set_TypeParms
void NUnit::Framework::Internal::GenericMethodHelper::set_TypeParms(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::set_TypeParms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeParms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.get_TypeArgs
::ArrayW<::System::Type*> NUnit::Framework::Internal::GenericMethodHelper::get_TypeArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::get_TypeArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.set_TypeArgs
void NUnit::Framework::Internal::GenericMethodHelper::set_TypeArgs(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::set_TypeArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.get_ParmTypes
::ArrayW<::System::Type*> NUnit::Framework::Internal::GenericMethodHelper::get_ParmTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::get_ParmTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParmTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.set_ParmTypes
void NUnit::Framework::Internal::GenericMethodHelper::set_ParmTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::set_ParmTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParmTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.GetTypeArguments
::ArrayW<::System::Type*> NUnit::Framework::Internal::GenericMethodHelper::GetTypeArguments(::ArrayW<::Il2CppObject*> argList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::GetTypeArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argList)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method, argList);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.TryApplyArgType
void NUnit::Framework::Internal::GenericMethodHelper::TryApplyArgType(::System::Type* parmType, ::System::Type* argType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::TryApplyArgType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryApplyArgType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parmType), ::il2cpp_utils::ExtractType(argType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parmType, argType);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.ApplyArgType
void NUnit::Framework::Internal::GenericMethodHelper::ApplyArgType(::System::Type* parmType, ::System::Type* argType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::ApplyArgType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyArgType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parmType), ::il2cpp_utils::ExtractType(argType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parmType, argType);
}
// Autogenerated method: NUnit.Framework.Internal.GenericMethodHelper.IsAssignableToGenericType
bool NUnit::Framework::Internal::GenericMethodHelper::IsAssignableToGenericType(::System::Type* givenType, ::System::Type* genericType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::GenericMethodHelper::IsAssignableToGenericType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAssignableToGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(givenType), ::il2cpp_utils::ExtractType(genericType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, givenType, genericType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InvalidDataSourceException
#include "NUnit/Framework/Internal/InvalidDataSourceException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Randomizer
#include "NUnit/Framework/Internal/Randomizer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Random _seedGenerator
::System::Random* NUnit::Framework::Internal::Randomizer::_get__seedGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_get__seedGenerator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("NUnit.Framework.Internal", "Randomizer", "_seedGenerator"));
}
// Autogenerated static field setter
// Set static field: static private System.Random _seedGenerator
void NUnit::Framework::Internal::Randomizer::_set__seedGenerator(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_set__seedGenerator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Randomizer", "_seedGenerator", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _initialSeed
int NUnit::Framework::Internal::Randomizer::_get__initialSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_get__initialSeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("NUnit.Framework.Internal", "Randomizer", "_initialSeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _initialSeed
void NUnit::Framework::Internal::Randomizer::_set__initialSeed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_set__initialSeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Randomizer", "_initialSeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Reflection.MemberInfo,NUnit.Framework.Internal.Randomizer> Randomizers
::System::Collections::Generic::Dictionary_2<::System::Reflection::MemberInfo*, ::NUnit::Framework::Internal::Randomizer*>* NUnit::Framework::Internal::Randomizer::_get_Randomizers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_get_Randomizers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Reflection::MemberInfo*, ::NUnit::Framework::Internal::Randomizer*>*>("NUnit.Framework.Internal", "Randomizer", "Randomizers")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Reflection.MemberInfo,NUnit.Framework.Internal.Randomizer> Randomizers
void NUnit::Framework::Internal::Randomizer::_set_Randomizers(::System::Collections::Generic::Dictionary_2<::System::Reflection::MemberInfo*, ::NUnit::Framework::Internal::Randomizer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_set_Randomizers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Randomizer", "Randomizers", value));
}
// Autogenerated static field getter
// Get static field: static public System.String DefaultStringChars
::StringW NUnit::Framework::Internal::Randomizer::_get_DefaultStringChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_get_DefaultStringChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "Randomizer", "DefaultStringChars"));
}
// Autogenerated static field setter
// Set static field: static public System.String DefaultStringChars
void NUnit::Framework::Internal::Randomizer::_set_DefaultStringChars(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_set_DefaultStringChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Randomizer", "DefaultStringChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DefaultStringLength
int NUnit::Framework::Internal::Randomizer::_get_DefaultStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_get_DefaultStringLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("NUnit.Framework.Internal", "Randomizer", "DefaultStringLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DefaultStringLength
void NUnit::Framework::Internal::Randomizer::_set_DefaultStringLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::_set_DefaultStringLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Randomizer", "DefaultStringLength", value));
}
// Autogenerated method: NUnit.Framework.Internal.Randomizer.set_InitialSeed
void NUnit::Framework::Internal::Randomizer::set_InitialSeed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::set_InitialSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Randomizer", "set_InitialSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Randomizer..cctor
void NUnit::Framework::Internal::Randomizer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Randomizer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Randomizer.CreateRandomizer
::NUnit::Framework::Internal::Randomizer* NUnit::Framework::Internal::Randomizer::CreateRandomizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Randomizer::CreateRandomizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Randomizer", "CreateRandomizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Randomizer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.StackFilter
#include "NUnit/Framework/Internal/StackFilter.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.Regex assertOrAssumeRegex
::System::Text::RegularExpressions::Regex* NUnit::Framework::Internal::StackFilter::_get_assertOrAssumeRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::StackFilter::_get_assertOrAssumeRegex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("NUnit.Framework.Internal", "StackFilter", "assertOrAssumeRegex"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.Regex assertOrAssumeRegex
void NUnit::Framework::Internal::StackFilter::_set_assertOrAssumeRegex(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::StackFilter::_set_assertOrAssumeRegex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "StackFilter", "assertOrAssumeRegex", value));
}
// Autogenerated method: NUnit.Framework.Internal.StackFilter..cctor
void NUnit::Framework::Internal::StackFilter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::StackFilter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "StackFilter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.StackFilter.Filter
::StringW NUnit::Framework::Internal::StackFilter::Filter(::StringW rawTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::StackFilter::Filter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "StackFilter", "Filter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawTrace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawTrace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.StringUtil
#include "NUnit/Framework/Internal/StringUtil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.StringUtil.Compare
int NUnit::Framework::Internal::StringUtil::Compare(::StringW strA, ::StringW strB, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::StringUtil::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "StringUtil", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB, ignoreCase);
}
// Autogenerated method: NUnit.Framework.Internal.StringUtil.StringsEqual
bool NUnit::Framework::Internal::StringUtil::StringsEqual(::StringW strA, ::StringW strB, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::StringUtil::StringsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "StringUtil", "StringsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB, ignoreCase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestParameters
#include "NUnit/Framework/Internal/TestParameters.hpp"
// Including type: NUnit.Framework.Interfaces.IPropertyBag
#include "NUnit/Framework/Interfaces/IPropertyBag.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.RunState <RunState>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::RunState& NUnit::Framework::Internal::TestParameters::dyn_$RunState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::dyn_$RunState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RunState>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::RunState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <Arguments>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& NUnit::Framework::Internal::TestParameters::dyn_$Arguments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::dyn_$Arguments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Arguments>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <TestName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::TestParameters::dyn_$TestName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::dyn_$TestName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TestName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.IPropertyBag <Properties>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::IPropertyBag*& NUnit::Framework::Internal::TestParameters::dyn_$Properties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::dyn_$Properties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Properties>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::IPropertyBag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <OriginalArguments>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& NUnit::Framework::Internal::TestParameters::dyn_$OriginalArguments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::dyn_$OriginalArguments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OriginalArguments>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.get_RunState
::NUnit::Framework::Interfaces::RunState NUnit::Framework::Internal::TestParameters::get_RunState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::get_RunState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::RunState, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.set_RunState
void NUnit::Framework::Internal::TestParameters::set_RunState(::NUnit::Framework::Interfaces::RunState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::set_RunState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RunState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.get_Arguments
::ArrayW<::Il2CppObject*> NUnit::Framework::Internal::TestParameters::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::get_Arguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.set_Arguments
void NUnit::Framework::Internal::TestParameters::set_Arguments(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::set_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.get_TestName
::StringW NUnit::Framework::Internal::TestParameters::get_TestName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::get_TestName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.get_Properties
::NUnit::Framework::Interfaces::IPropertyBag* NUnit::Framework::Internal::TestParameters::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::IPropertyBag*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.set_Properties
void NUnit::Framework::Internal::TestParameters::set_Properties(::NUnit::Framework::Interfaces::IPropertyBag* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::set_Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.get_OriginalArguments
::ArrayW<::Il2CppObject*> NUnit::Framework::Internal::TestParameters::get_OriginalArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::get_OriginalArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.set_OriginalArguments
void NUnit::Framework::Internal::TestParameters::set_OriginalArguments(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::set_OriginalArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OriginalArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.InitializeAguments
void NUnit::Framework::Internal::TestParameters::InitializeAguments(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::InitializeAguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestParameters.ApplyToTest
void NUnit::Framework::Internal::TestParameters::ApplyToTest(::NUnit::Framework::Internal::Test* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestParameters::ApplyToTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyToTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TestExecutionStatus
#include "NUnit/Framework/Internal/TestExecutionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.TestExecutionStatus Running
::NUnit::Framework::Internal::TestExecutionStatus NUnit::Framework::Internal::TestExecutionStatus::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionStatus::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::TestExecutionStatus>("NUnit.Framework.Internal", "TestExecutionStatus", "Running"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.TestExecutionStatus Running
void NUnit::Framework::Internal::TestExecutionStatus::_set_Running(::NUnit::Framework::Internal::TestExecutionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionStatus::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestExecutionStatus", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.TestExecutionStatus StopRequested
::NUnit::Framework::Internal::TestExecutionStatus NUnit::Framework::Internal::TestExecutionStatus::_get_StopRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionStatus::_get_StopRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::TestExecutionStatus>("NUnit.Framework.Internal", "TestExecutionStatus", "StopRequested"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.TestExecutionStatus StopRequested
void NUnit::Framework::Internal::TestExecutionStatus::_set_StopRequested(::NUnit::Framework::Internal::TestExecutionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionStatus::_set_StopRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestExecutionStatus", "StopRequested", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.TestExecutionStatus AbortRequested
::NUnit::Framework::Internal::TestExecutionStatus NUnit::Framework::Internal::TestExecutionStatus::_get_AbortRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionStatus::_get_AbortRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::TestExecutionStatus>("NUnit.Framework.Internal", "TestExecutionStatus", "AbortRequested"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.TestExecutionStatus AbortRequested
void NUnit::Framework::Internal::TestExecutionStatus::_set_AbortRequested(::NUnit::Framework::Internal::TestExecutionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionStatus::_set_AbortRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestExecutionStatus", "AbortRequested", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestExecutionStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.ExceptionHelper
#include "NUnit/Framework/Internal/ExceptionHelper.hpp"
// Including type: NUnit.Framework.Internal.ExceptionHelper/NUnit.Framework.Internal.<>c
#include "NUnit/Framework/Internal/ExceptionHelper_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Action`1<System.Exception> PreserveStackTrace
::System::Action_1<::System::Exception*>* NUnit::Framework::Internal::ExceptionHelper::_get_PreserveStackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::_get_PreserveStackTrace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::System::Exception*>*>("NUnit.Framework.Internal", "ExceptionHelper", "PreserveStackTrace"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Action`1<System.Exception> PreserveStackTrace
void NUnit::Framework::Internal::ExceptionHelper::_set_PreserveStackTrace(::System::Action_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::_set_PreserveStackTrace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "ExceptionHelper", "PreserveStackTrace", value));
}
// Autogenerated method: NUnit.Framework.Internal.ExceptionHelper..cctor
void NUnit::Framework::Internal::ExceptionHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ExceptionHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ExceptionHelper.BuildMessage
::StringW NUnit::Framework::Internal::ExceptionHelper::BuildMessage(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::BuildMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ExceptionHelper", "BuildMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: NUnit.Framework.Internal.ExceptionHelper.BuildStackTrace
::StringW NUnit::Framework::Internal::ExceptionHelper::BuildStackTrace(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::BuildStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ExceptionHelper", "BuildStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: NUnit.Framework.Internal.ExceptionHelper.GetStackTrace
::StringW NUnit::Framework::Internal::ExceptionHelper::GetStackTrace(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::GetStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ExceptionHelper", "GetStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: NUnit.Framework.Internal.ExceptionHelper.FlattenExceptionHierarchy
::System::Collections::Generic::List_1<::System::Exception*>* NUnit::Framework::Internal::ExceptionHelper::FlattenExceptionHierarchy(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::FlattenExceptionHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ExceptionHelper", "FlattenExceptionHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Exception*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.ExceptionHelper/NUnit.Framework.Internal.<>c
#include "NUnit/Framework/Internal/ExceptionHelper_--c.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly NUnit.Framework.Internal.ExceptionHelper/NUnit.Framework.Internal.<>c <>9
::NUnit::Framework::Internal::ExceptionHelper::$$c* NUnit::Framework::Internal::ExceptionHelper::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::ExceptionHelper::$$c*>("NUnit.Framework.Internal", "ExceptionHelper/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly NUnit.Framework.Internal.ExceptionHelper/NUnit.Framework.Internal.<>c <>9
void NUnit::Framework::Internal::ExceptionHelper::$$c::_set_$$9(::NUnit::Framework::Internal::ExceptionHelper::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "ExceptionHelper/<>c", "<>9", value)));
}
// Autogenerated method: NUnit.Framework.Internal.ExceptionHelper/NUnit.Framework.Internal.<>c..cctor
void NUnit::Framework::Internal::ExceptionHelper::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "ExceptionHelper/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ExceptionHelper/NUnit.Framework.Internal.<>c.<.cctor>b__1_0
void NUnit::Framework::Internal::ExceptionHelper::$$c::$_cctor$b__1_0(::System::Exception* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ExceptionHelper::$$c::<.cctor>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InvalidTestFixtureException
#include "NUnit/Framework/Internal/InvalidTestFixtureException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.NUnitException
#include "NUnit/Framework/Internal/NUnitException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestCaseParameters
#include "NUnit/Framework/Internal/TestCaseParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _expectedResult
[[deprecated("Use field access instead!")]] ::Il2CppObject*& NUnit::Framework::Internal::TestCaseParameters::dyn__expectedResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseParameters::dyn__expectedResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expectedResult"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasExpectedResult>k__BackingField
[[deprecated("Use field access instead!")]] bool& NUnit::Framework::Internal::TestCaseParameters::dyn_$HasExpectedResult$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseParameters::dyn_$HasExpectedResult$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasExpectedResult>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestCaseParameters.get_ExpectedResult
::Il2CppObject* NUnit::Framework::Internal::TestCaseParameters::get_ExpectedResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseParameters::get_ExpectedResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestCaseParameters.get_HasExpectedResult
bool NUnit::Framework::Internal::TestCaseParameters::get_HasExpectedResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseParameters::get_HasExpectedResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasExpectedResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.PropertyBag
#include "NUnit/Framework/Internal/PropertyBag.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Collections.IList> inner
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::IList*>*& NUnit::Framework::Internal::PropertyBag::dyn_inner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::PropertyBag::dyn_inner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inner"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::IList*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.PropertyBag.get_Keys
::System::Collections::Generic::ICollection_1<::StringW>* NUnit::Framework::Internal::PropertyBag::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::PropertyBag::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.PropertyBag.get_Item
::System::Collections::IList* NUnit::Framework::Internal::PropertyBag::get_Item(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::PropertyBag::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method, key);
}
// Autogenerated method: NUnit.Framework.Internal.PropertyBag.Add
void NUnit::Framework::Internal::PropertyBag::Add(::StringW key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::PropertyBag::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: NUnit.Framework.Internal.PropertyBag.Set
void NUnit::Framework::Internal::PropertyBag::Set(::StringW key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::PropertyBag::Set");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: NUnit.Framework.Internal.PropertyBag.Get
::Il2CppObject* NUnit::Framework::Internal::PropertyBag::Get(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::PropertyBag::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: NUnit.Framework.Internal.PropertyBag.ContainsKey
bool NUnit::Framework::Internal::PropertyBag::ContainsKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::PropertyBag::ContainsKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: NUnit.Framework.Internal.PropertyBag.ToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::PropertyBag::ToXml(bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::PropertyBag::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, recursive);
}
// Autogenerated method: NUnit.Framework.Internal.PropertyBag.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::PropertyBag::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::PropertyBag::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Reflect
#include "NUnit/Framework/Internal/Reflect.hpp"
// Including type: NUnit.Framework.Internal.Reflect/NUnit.Framework.Internal.BaseTypesFirstComparer
#include "NUnit/Framework/Internal/Reflect_BaseTypesFirstComparer.hpp"
// Including type: NUnit.Framework.Internal.Reflect/NUnit.Framework.Internal.<>c__DisplayClass9_0
#include "NUnit/Framework/Internal/Reflect_--c__DisplayClass9_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Reflection.BindingFlags AllMembers
::System::Reflection::BindingFlags NUnit::Framework::Internal::Reflect::_get_AllMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::_get_AllMembers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("NUnit.Framework.Internal", "Reflect", "AllMembers"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Reflection.BindingFlags AllMembers
void NUnit::Framework::Internal::Reflect::_set_AllMembers(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::_set_AllMembers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Reflect", "AllMembers", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type[] EmptyTypes
::ArrayW<::System::Type*> NUnit::Framework::Internal::Reflect::_get_EmptyTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::_get_EmptyTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("NUnit.Framework.Internal", "Reflect", "EmptyTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type[] EmptyTypes
void NUnit::Framework::Internal::Reflect::_set_EmptyTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::_set_EmptyTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Reflect", "EmptyTypes", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x1107F04
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Func`1<System.Object>,System.Object> <MethodCallWrapper>k__BackingField
::System::Func_2<::System::Func_1<::Il2CppObject*>*, ::Il2CppObject*>* NUnit::Framework::Internal::Reflect::_get_$MethodCallWrapper$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::_get_$MethodCallWrapper$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Func_1<::Il2CppObject*>*, ::Il2CppObject*>*>("NUnit.Framework.Internal", "Reflect", "<MethodCallWrapper>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Func`1<System.Object>,System.Object> <MethodCallWrapper>k__BackingField
void NUnit::Framework::Internal::Reflect::_set_$MethodCallWrapper$k__BackingField(::System::Func_2<::System::Func_1<::Il2CppObject*>*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::_set_$MethodCallWrapper$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Reflect", "<MethodCallWrapper>k__BackingField", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x1107F40
// Autogenerated static field getter
// Get static field: static private System.Func`3<System.Type,System.Object[],System.Object> <ConstructorCallWrapper>k__BackingField
::System::Func_3<::System::Type*, ::ArrayW<::Il2CppObject*>, ::Il2CppObject*>* NUnit::Framework::Internal::Reflect::_get_$ConstructorCallWrapper$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::_get_$ConstructorCallWrapper$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::Type*, ::ArrayW<::Il2CppObject*>, ::Il2CppObject*>*>("NUnit.Framework.Internal", "Reflect", "<ConstructorCallWrapper>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`3<System.Type,System.Object[],System.Object> <ConstructorCallWrapper>k__BackingField
void NUnit::Framework::Internal::Reflect::_set_$ConstructorCallWrapper$k__BackingField(::System::Func_3<::System::Type*, ::ArrayW<::Il2CppObject*>, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::_set_$ConstructorCallWrapper$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Reflect", "<ConstructorCallWrapper>k__BackingField", value));
}
// Autogenerated method: NUnit.Framework.Internal.Reflect.get_MethodCallWrapper
::System::Func_2<::System::Func_1<::Il2CppObject*>*, ::Il2CppObject*>* NUnit::Framework::Internal::Reflect::get_MethodCallWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::get_MethodCallWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", "get_MethodCallWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::System::Func_1<::Il2CppObject*>*, ::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect.get_ConstructorCallWrapper
::System::Func_3<::System::Type*, ::ArrayW<::Il2CppObject*>, ::Il2CppObject*>* NUnit::Framework::Internal::Reflect::get_ConstructorCallWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::get_ConstructorCallWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", "get_ConstructorCallWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_3<::System::Type*, ::ArrayW<::Il2CppObject*>, ::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect..cctor
void NUnit::Framework::Internal::Reflect::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect.GetMethodsWithAttribute
::ArrayW<::System::Reflection::MethodInfo*> NUnit::Framework::Internal::Reflect::GetMethodsWithAttribute(::System::Type* fixtureType, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::GetMethodsWithAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", "GetMethodsWithAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixtureType), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fixtureType, attributeType, inherit);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect.HasMethodWithAttribute
bool NUnit::Framework::Internal::Reflect::HasMethodWithAttribute(::System::Type* fixtureType, ::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::HasMethodWithAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", "HasMethodWithAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixtureType), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fixtureType, attributeType);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect.Construct
::Il2CppObject* NUnit::Framework::Internal::Reflect::Construct(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect.Construct
::Il2CppObject* NUnit::Framework::Internal::Reflect::Construct(::System::Type* type, ::ArrayW<::Il2CppObject*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, arguments);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect.GetTypeArray
::ArrayW<::System::Type*> NUnit::Framework::Internal::Reflect::GetTypeArray(::ArrayW<::Il2CppObject*> objects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::GetTypeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", "GetTypeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objects)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objects);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect.InvokeMethod
::Il2CppObject* NUnit::Framework::Internal::Reflect::InvokeMethod(::System::Reflection::MethodInfo* method, ::Il2CppObject* fixture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::InvokeMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", "InvokeMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(fixture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, fixture);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect.InvokeMethod
::Il2CppObject* NUnit::Framework::Internal::Reflect::InvokeMethod(::System::Reflection::MethodInfo* method, ::Il2CppObject* fixture, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::InvokeMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Reflect", "InvokeMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(fixture), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, fixture, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Reflect/NUnit.Framework.Internal.BaseTypesFirstComparer
#include "NUnit/Framework/Internal/Reflect_BaseTypesFirstComparer.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Reflect/NUnit.Framework.Internal.BaseTypesFirstComparer.Compare
int NUnit::Framework::Internal::Reflect::BaseTypesFirstComparer::Compare(::System::Reflection::MethodInfo* m1, ::System::Reflection::MethodInfo* m2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::BaseTypesFirstComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m1), ::il2cpp_utils::ExtractType(m2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, m1, m2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Reflect/NUnit.Framework.Internal.<>c__DisplayClass9_0
#include "NUnit/Framework/Internal/Reflect_--c__DisplayClass9_0.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo method
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& NUnit::Framework::Internal::Reflect::$$c__DisplayClass9_0::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::$$c__DisplayClass9_0::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object fixture
[[deprecated("Use field access instead!")]] ::Il2CppObject*& NUnit::Framework::Internal::Reflect::$$c__DisplayClass9_0::dyn_fixture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::$$c__DisplayClass9_0::dyn_fixture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixture"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object[] args
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& NUnit::Framework::Internal::Reflect::$$c__DisplayClass9_0::dyn_args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::$$c__DisplayClass9_0::dyn_args");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "args"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Reflect/NUnit.Framework.Internal.<>c__DisplayClass9_0.<InvokeMethod>b__0
::Il2CppObject* NUnit::Framework::Internal::Reflect::$$c__DisplayClass9_0::$InvokeMethod$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Reflect::$$c__DisplayClass9_0::<InvokeMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: NUnit.Framework.Interfaces.FailureSite
#include "NUnit/Framework/Interfaces/FailureSite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.String CHILD_ERRORS_MESSAGE
::StringW NUnit::Framework::Internal::TestResult::_get_CHILD_ERRORS_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::_get_CHILD_ERRORS_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "TestResult", "CHILD_ERRORS_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String CHILD_ERRORS_MESSAGE
void NUnit::Framework::Internal::TestResult::_set_CHILD_ERRORS_MESSAGE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::_set_CHILD_ERRORS_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestResult", "CHILD_ERRORS_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String CHILD_IGNORE_MESSAGE
::StringW NUnit::Framework::Internal::TestResult::_get_CHILD_IGNORE_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::_get_CHILD_IGNORE_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "TestResult", "CHILD_IGNORE_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String CHILD_IGNORE_MESSAGE
void NUnit::Framework::Internal::TestResult::_set_CHILD_IGNORE_MESSAGE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::_set_CHILD_IGNORE_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestResult", "CHILD_IGNORE_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static System.Double MIN_DURATION
double NUnit::Framework::Internal::TestResult::_get_MIN_DURATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::_get_MIN_DURATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("NUnit.Framework.Internal", "TestResult", "MIN_DURATION"));
}
// Autogenerated static field setter
// Set static field: static System.Double MIN_DURATION
void NUnit::Framework::Internal::TestResult::_set_MIN_DURATION(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::_set_MIN_DURATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestResult", "MIN_DURATION", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _output
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& NUnit::Framework::Internal::TestResult::dyn__output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn__output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_output"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _duration
[[deprecated("Use field access instead!")]] double& NUnit::Framework::Internal::TestResult::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 InternalAssertCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestResult::dyn_InternalAssertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn_InternalAssertCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalAssertCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ResultState _resultState
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ResultState*& NUnit::Framework::Internal::TestResult::dyn__resultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn__resultState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultState"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ResultState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _message
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::TestResult::dyn__message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn__message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _stackTrace
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::TestResult::dyn__stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn__stackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stackTrace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ITest <Test>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITest*& NUnit::Framework::Internal::TestResult::dyn_$Test$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn_$Test$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Test>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime <StartTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::DateTime& NUnit::Framework::Internal::TestResult::dyn_$StartTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn_$StartTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime <EndTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::DateTime& NUnit::Framework::Internal::TestResult::dyn_$EndTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn_$EndTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EndTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter <OutWriter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& NUnit::Framework::Internal::TestResult::dyn_$OutWriter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::dyn_$OutWriter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OutWriter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_Test
::NUnit::Framework::Interfaces::ITest* NUnit::Framework::Internal::TestResult::get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_Test");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITest*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.set_Test
void NUnit::Framework::Internal::TestResult::set_Test(::NUnit::Framework::Interfaces::ITest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::set_Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_ResultState
::NUnit::Framework::Interfaces::ResultState* NUnit::Framework::Internal::TestResult::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.set_ResultState
void NUnit::Framework::Internal::TestResult::set_ResultState(::NUnit::Framework::Interfaces::ResultState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::set_ResultState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_Name
::StringW NUnit::Framework::Internal::TestResult::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_FullName
::StringW NUnit::Framework::Internal::TestResult::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_Duration
double NUnit::Framework::Internal::TestResult::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_Duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.set_Duration
void NUnit::Framework::Internal::TestResult::set_Duration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::set_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_StartTime
::System::DateTime NUnit::Framework::Internal::TestResult::get_StartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_StartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.set_StartTime
void NUnit::Framework::Internal::TestResult::set_StartTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::set_StartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_EndTime
::System::DateTime NUnit::Framework::Internal::TestResult::get_EndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_EndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.set_EndTime
void NUnit::Framework::Internal::TestResult::set_EndTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::set_EndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_Message
::StringW NUnit::Framework::Internal::TestResult::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.set_Message
void NUnit::Framework::Internal::TestResult::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_StackTrace
::StringW NUnit::Framework::Internal::TestResult::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_StackTrace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.set_StackTrace
void NUnit::Framework::Internal::TestResult::set_StackTrace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::set_StackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_AssertCount
int NUnit::Framework::Internal::TestResult::get_AssertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_AssertCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssertCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_FailCount
int NUnit::Framework::Internal::TestResult::get_FailCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_FailCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FailCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_PassCount
int NUnit::Framework::Internal::TestResult::get_PassCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_PassCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PassCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_SkipCount
int NUnit::Framework::Internal::TestResult::get_SkipCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_SkipCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkipCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_InconclusiveCount
int NUnit::Framework::Internal::TestResult::get_InconclusiveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_InconclusiveCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InconclusiveCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_HasChildren
bool NUnit::Framework::Internal::TestResult::get_HasChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_HasChildren");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_Children
::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::ITestResult*>* NUnit::Framework::Internal::TestResult::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::ITestResult*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_OutWriter
::System::IO::TextWriter* NUnit::Framework::Internal::TestResult::get_OutWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_OutWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.set_OutWriter
void NUnit::Framework::Internal::TestResult::set_OutWriter(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::set_OutWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OutWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.get_Output
::StringW NUnit::Framework::Internal::TestResult::get_Output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::get_Output");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Output", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult..cctor
void NUnit::Framework::Internal::TestResult::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestResult", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.ToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestResult::ToXml(bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, recursive);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestResult::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.SetResult
void NUnit::Framework::Internal::TestResult::SetResult(::NUnit::Framework::Interfaces::ResultState* resultState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::SetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultState);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.SetResult
void NUnit::Framework::Internal::TestResult::SetResult(::NUnit::Framework::Interfaces::ResultState* resultState, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::SetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultState), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultState, message);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.SetResult
void NUnit::Framework::Internal::TestResult::SetResult(::NUnit::Framework::Interfaces::ResultState* resultState, ::StringW message, ::StringW stackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::SetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultState), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stackTrace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultState, message, stackTrace);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.RecordException
void NUnit::Framework::Internal::TestResult::RecordException(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::RecordException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.RecordException
void NUnit::Framework::Internal::TestResult::RecordException(::System::Exception* ex, ::NUnit::Framework::Interfaces::FailureSite site) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::RecordException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex), ::il2cpp_utils::ExtractType(site)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex, site);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.RecordTearDownException
void NUnit::Framework::Internal::TestResult::RecordTearDownException(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::RecordTearDownException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTearDownException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.AddReasonElement
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestResult::AddReasonElement(::NUnit::Framework::Interfaces::TNode* targetNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::AddReasonElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddReasonElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, targetNode);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.AddFailureElement
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestResult::AddFailureElement(::NUnit::Framework::Interfaces::TNode* targetNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::AddFailureElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFailureElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, targetNode);
}
// Autogenerated method: NUnit.Framework.Internal.TestResult.AddOutputElement
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestResult::AddOutputElement(::NUnit::Framework::Interfaces::TNode* targetNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestResult::AddOutputElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOutputElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, targetNode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: NUnit.Framework.Constraints.ValueFormatter
#include "NUnit/Framework/Constraints/ValueFormatter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.ITestExecutionContext.get_CurrentResult
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::ITestExecutionContext::get_CurrentResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ITestExecutionContext::get_CurrentResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ITestExecutionContext.set_CurrentResult
void NUnit::Framework::Internal::ITestExecutionContext::set_CurrentResult(::NUnit::Framework::Internal::TestResult* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ITestExecutionContext::set_CurrentResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.ITestExecutionContext.get_OutWriter
::System::IO::TextWriter* NUnit::Framework::Internal::ITestExecutionContext::get_OutWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ITestExecutionContext::get_OutWriter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ITestExecutionContext.get_TestObject
::Il2CppObject* NUnit::Framework::Internal::ITestExecutionContext::get_TestObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ITestExecutionContext::get_TestObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ITestExecutionContext.set_TestObject
void NUnit::Framework::Internal::ITestExecutionContext::set_TestObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ITestExecutionContext::set_TestObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TestObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.ITestExecutionContext.get_TestCaseTimeout
int NUnit::Framework::Internal::ITestExecutionContext::get_TestCaseTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ITestExecutionContext::get_TestCaseTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestCaseTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ITestExecutionContext.get_CurrentValueFormatter
::NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Internal::ITestExecutionContext::get_CurrentValueFormatter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ITestExecutionContext::get_CurrentValueFormatter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentValueFormatter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ITestExecutionContext.IncrementAssertCount
void NUnit::Framework::Internal::ITestExecutionContext::IncrementAssertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ITestExecutionContext::IncrementAssertCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementAssertCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestExecutionContext
#include "NUnit/Framework/Internal/TestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.TestExecutionContext/NUnit.Framework.Internal.<>c
#include "NUnit/Framework/Internal/TestExecutionContext_--c.hpp"
// Including type: NUnit.Framework.Interfaces.ITestListener
#include "NUnit/Framework/Interfaces/ITestListener.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: System.Security.Principal.IPrincipal
#include "System/Security/Principal/IPrincipal.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: NUnit.Framework.Constraints.ValueFormatter
#include "NUnit/Framework/Constraints/ValueFormatter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String CONTEXT_KEY
::StringW NUnit::Framework::Internal::TestExecutionContext::_get_CONTEXT_KEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::_get_CONTEXT_KEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "TestExecutionContext", "CONTEXT_KEY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String CONTEXT_KEY
void NUnit::Framework::Internal::TestExecutionContext::_set_CONTEXT_KEY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::_set_CONTEXT_KEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestExecutionContext", "CONTEXT_KEY", value));
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.TestExecutionContext _priorContext
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestExecutionContext*& NUnit::Framework::Internal::TestExecutionContext::dyn__priorContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn__priorContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_priorContext"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ITestListener _listener
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITestListener*& NUnit::Framework::Internal::TestExecutionContext::dyn__listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn__listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listener"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITestListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _assertCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestExecutionContext::dyn__assertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn__assertCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_assertCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _currentCulture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& NUnit::Framework::Internal::TestExecutionContext::dyn__currentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn__currentCulture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentCulture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _currentUICulture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& NUnit::Framework::Internal::TestExecutionContext::dyn__currentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn__currentUICulture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentUICulture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.TestResult _currentResult
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestResult*& NUnit::Framework::Internal::TestExecutionContext::dyn__currentResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn__currentResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentResult"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.IPrincipal _currentPrincipal
[[deprecated("Use field access instead!")]] ::System::Security::Principal::IPrincipal*& NUnit::Framework::Internal::TestExecutionContext::dyn__currentPrincipal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn__currentPrincipal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPrincipal"))->offset;
  return *reinterpret_cast<::System::Security::Principal::IPrincipal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.Test <CurrentTest>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Test*& NUnit::Framework::Internal::TestExecutionContext::dyn_$CurrentTest$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn_$CurrentTest$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentTest>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Test**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter <OutWriter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& NUnit::Framework::Internal::TestExecutionContext::dyn_$OutWriter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn_$OutWriter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OutWriter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <TestObject>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& NUnit::Framework::Internal::TestExecutionContext::dyn_$TestObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn_$TestObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TestObject>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <TestCaseTimeout>k__BackingField
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestExecutionContext::dyn_$TestCaseTimeout$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn_$TestCaseTimeout$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TestCaseTimeout>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<NUnit.Framework.ITestAction> <UpstreamActions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>*& NUnit::Framework::Internal::TestExecutionContext::dyn_$UpstreamActions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn_$UpstreamActions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UpstreamActions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Constraints.ValueFormatter <CurrentValueFormatter>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Constraints::ValueFormatter*& NUnit::Framework::Internal::TestExecutionContext::dyn_$CurrentValueFormatter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn_$CurrentValueFormatter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentValueFormatter>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Constraints::ValueFormatter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsSingleThreaded>k__BackingField
[[deprecated("Use field access instead!")]] bool& NUnit::Framework::Internal::TestExecutionContext::dyn_$IsSingleThreaded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::dyn_$IsSingleThreaded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsSingleThreaded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.get_CurrentContext
::NUnit::Framework::Internal::ITestExecutionContext* NUnit::Framework::Internal::TestExecutionContext::get_CurrentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::get_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestExecutionContext", "get_CurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::ITestExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.get_CurrentTest
::NUnit::Framework::Internal::Test* NUnit::Framework::Internal::TestExecutionContext::get_CurrentTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::get_CurrentTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Test*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.get_CurrentResult
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::TestExecutionContext::get_CurrentResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::get_CurrentResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.set_CurrentResult
void NUnit::Framework::Internal::TestExecutionContext::set_CurrentResult(::NUnit::Framework::Internal::TestResult* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::set_CurrentResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.get_OutWriter
::System::IO::TextWriter* NUnit::Framework::Internal::TestExecutionContext::get_OutWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::get_OutWriter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.set_OutWriter
void NUnit::Framework::Internal::TestExecutionContext::set_OutWriter(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::set_OutWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OutWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.get_TestObject
::Il2CppObject* NUnit::Framework::Internal::TestExecutionContext::get_TestObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::get_TestObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.set_TestObject
void NUnit::Framework::Internal::TestExecutionContext::set_TestObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::set_TestObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TestObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.get_Listener
::NUnit::Framework::Interfaces::ITestListener* NUnit::Framework::Internal::TestExecutionContext::get_Listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::get_Listener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Listener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITestListener*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.get_TestCaseTimeout
int NUnit::Framework::Internal::TestExecutionContext::get_TestCaseTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::get_TestCaseTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestCaseTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.set_TestCaseTimeout
void NUnit::Framework::Internal::TestExecutionContext::set_TestCaseTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::set_TestCaseTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TestCaseTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.set_UpstreamActions
void NUnit::Framework::Internal::TestExecutionContext::set_UpstreamActions(::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::set_UpstreamActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UpstreamActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.get_CurrentValueFormatter
::NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Internal::TestExecutionContext::get_CurrentValueFormatter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::get_CurrentValueFormatter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentValueFormatter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.set_CurrentValueFormatter
void NUnit::Framework::Internal::TestExecutionContext::set_CurrentValueFormatter(::NUnit::Framework::Constraints::ValueFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::set_CurrentValueFormatter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentValueFormatter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.set_IsSingleThreaded
void NUnit::Framework::Internal::TestExecutionContext::set_IsSingleThreaded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::set_IsSingleThreaded");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsSingleThreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext..cctor
void NUnit::Framework::Internal::TestExecutionContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestExecutionContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.GetTestExecutionContext
::NUnit::Framework::Internal::TestExecutionContext* NUnit::Framework::Internal::TestExecutionContext::GetTestExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::GetTestExecutionContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestExecutionContext", "GetTestExecutionContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.IncrementAssertCount
void NUnit::Framework::Internal::TestExecutionContext::IncrementAssertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::IncrementAssertCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementAssertCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext.InitializeLifetimeService
::Il2CppObject* NUnit::Framework::Internal::TestExecutionContext::InitializeLifetimeService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::InitializeLifetimeService");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLifetimeService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestExecutionContext/NUnit.Framework.Internal.<>c
#include "NUnit/Framework/Internal/TestExecutionContext_--c.hpp"
// Including type: NUnit.Framework.Constraints.ValueFormatter
#include "NUnit/Framework/Constraints/ValueFormatter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly NUnit.Framework.Internal.TestExecutionContext/NUnit.Framework.Internal.<>c <>9
::NUnit::Framework::Internal::TestExecutionContext::$$c* NUnit::Framework::Internal::TestExecutionContext::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::TestExecutionContext::$$c*>("NUnit.Framework.Internal", "TestExecutionContext/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly NUnit.Framework.Internal.TestExecutionContext/NUnit.Framework.Internal.<>c <>9
void NUnit::Framework::Internal::TestExecutionContext::$$c::_set_$$9(::NUnit::Framework::Internal::TestExecutionContext::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestExecutionContext/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Constraints.ValueFormatter <>9__9_0
::NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Internal::TestExecutionContext::$$c::_get_$$9__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::$$c::_get_$$9__9_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::NUnit::Framework::Constraints::ValueFormatter*>("NUnit.Framework.Internal", "TestExecutionContext/<>c", "<>9__9_0")));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Constraints.ValueFormatter <>9__9_0
void NUnit::Framework::Internal::TestExecutionContext::$$c::_set_$$9__9_0(::NUnit::Framework::Constraints::ValueFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::$$c::_set_$$9__9_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestExecutionContext/<>c", "<>9__9_0", value)));
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext/NUnit.Framework.Internal.<>c..cctor
void NUnit::Framework::Internal::TestExecutionContext::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestExecutionContext/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestExecutionContext/NUnit.Framework.Internal.<>c.<.ctor>b__9_0
::StringW NUnit::Framework::Internal::TestExecutionContext::$$c::$_ctor$b__9_0(::Il2CppObject* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestExecutionContext::$$c::<.ctor>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TestFilter
#include "NUnit/Framework/Internal/TestFilter.hpp"
// Including type: NUnit.Framework.Internal.TestFilter/NUnit.Framework.Internal.EmptyFilter
#include "NUnit/Framework/Internal/TestFilter_EmptyFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly NUnit.Framework.Internal.TestFilter Empty
::NUnit::Framework::Internal::TestFilter* NUnit::Framework::Internal::TestFilter::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::TestFilter*>("NUnit.Framework.Internal", "TestFilter", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly NUnit.Framework.Internal.TestFilter Empty
void NUnit::Framework::Internal::TestFilter::_set_Empty(::NUnit::Framework::Internal::TestFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestFilter", "Empty", value));
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter..cctor
void NUnit::Framework::Internal::TestFilter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestFilter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter.Pass
bool NUnit::Framework::Internal::TestFilter::Pass(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::Pass");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter.IsExplicitMatch
bool NUnit::Framework::Internal::TestFilter::IsExplicitMatch(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::IsExplicitMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExplicitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter.Match
bool NUnit::Framework::Internal::TestFilter::Match(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter.MatchParent
bool NUnit::Framework::Internal::TestFilter::MatchParent(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::MatchParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter.MatchDescendant
bool NUnit::Framework::Internal::TestFilter::MatchDescendant(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::MatchDescendant");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchDescendant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter.ToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestFilter::ToXml(bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, recursive);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestFilter::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TestFilter/NUnit.Framework.Internal.EmptyFilter
#include "NUnit/Framework/Internal/TestFilter_EmptyFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestFilter/NUnit.Framework.Internal.EmptyFilter.Match
bool NUnit::Framework::Internal::TestFilter::EmptyFilter::Match(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::EmptyFilter::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter/NUnit.Framework.Internal.EmptyFilter.Pass
bool NUnit::Framework::Internal::TestFilter::EmptyFilter::Pass(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::EmptyFilter::Pass");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter/NUnit.Framework.Internal.EmptyFilter.IsExplicitMatch
bool NUnit::Framework::Internal::TestFilter::EmptyFilter::IsExplicitMatch(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::EmptyFilter::IsExplicitMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExplicitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestFilter/NUnit.Framework.Internal.EmptyFilter.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestFilter::EmptyFilter::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestFilter::EmptyFilter::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TestListener
#include "NUnit/Framework/Internal/TestListener.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: NUnit.Framework.Interfaces.TestOutput
#include "NUnit/Framework/Interfaces/TestOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestListener.get_NULL
::NUnit::Framework::Interfaces::ITestListener* NUnit::Framework::Internal::TestListener::get_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestListener::get_NULL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestListener", "get_NULL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITestListener*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestListener.TestStarted
void NUnit::Framework::Internal::TestListener::TestStarted(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestListener::TestStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestListener.TestFinished
void NUnit::Framework::Internal::TestListener::TestFinished(::NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestListener::TestFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: NUnit.Framework.Internal.TestListener.TestOutput
void NUnit::Framework::Internal::TestListener::TestOutput(::NUnit::Framework::Interfaces::TestOutput* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestListener::TestOutput");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.ParameterizedFixtureSuite
#include "NUnit/Framework/Internal/ParameterizedFixtureSuite.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _genericFixture
[[deprecated("Use field access instead!")]] bool& NUnit::Framework::Internal::ParameterizedFixtureSuite::dyn__genericFixture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterizedFixtureSuite::dyn__genericFixture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericFixture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterizedFixtureSuite.get_TestType
::StringW NUnit::Framework::Internal::ParameterizedFixtureSuite::get_TestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterizedFixtureSuite::get_TestType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.ParameterizedMethodSuite
#include "NUnit/Framework/Internal/ParameterizedMethodSuite.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isTheory
[[deprecated("Use field access instead!")]] bool& NUnit::Framework::Internal::ParameterizedMethodSuite::dyn__isTheory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterizedMethodSuite::dyn__isTheory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isTheory"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterizedMethodSuite.get_TestType
::StringW NUnit::Framework::Internal::ParameterizedMethodSuite::get_TestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterizedMethodSuite::get_TestType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: NUnit.Framework.Interfaces.IPropertyBag
#include "NUnit/Framework/Interfaces/IPropertyBag.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: System.Reflection.ICustomAttributeProvider
#include "System/Reflection/ICustomAttributeProvider.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _nextID
int NUnit::Framework::Internal::Test::_get__nextID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::_get__nextID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("NUnit.Framework.Internal", "Test", "_nextID"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _nextID
void NUnit::Framework::Internal::Test::_set__nextID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::_set__nextID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Test", "_nextID", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x11083F0
// Autogenerated static field getter
// Get static field: static private System.String <IdPrefix>k__BackingField
::StringW NUnit::Framework::Internal::Test::_get_$IdPrefix$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::_get_$IdPrefix$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "Test", "<IdPrefix>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.String <IdPrefix>k__BackingField
void NUnit::Framework::Internal::Test::_set_$IdPrefix$k__BackingField(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::_set_$IdPrefix$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Test", "<IdPrefix>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Reflection.MethodInfo[] setUpMethods
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Reflection::MethodInfo*>& NUnit::Framework::Internal::Test::dyn_setUpMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_setUpMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setUpMethods"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Reflection::MethodInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Reflection.MethodInfo[] tearDownMethods
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Reflection::MethodInfo*>& NUnit::Framework::Internal::Test::dyn_tearDownMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_tearDownMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tearDownMethods"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Reflection::MethodInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected NUnit.Framework.Interfaces.ITypeInfo DeclaringTypeInfo
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITypeInfo*& NUnit::Framework::Internal::Test::dyn_DeclaringTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_DeclaringTypeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeclaringTypeInfo"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.IMethodInfo _method
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::IMethodInfo*& NUnit::Framework::Internal::Test::dyn__method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn__method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_method"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::IMethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::Test::dyn_$Id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$Id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::Test::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <FullName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::Test::dyn_$FullName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$FullName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FullName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ITypeInfo <TypeInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITypeInfo*& NUnit::Framework::Internal::Test::dyn_$TypeInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$TypeInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.RunState <RunState>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::RunState& NUnit::Framework::Internal::Test::dyn_$RunState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$RunState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RunState>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::RunState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.IPropertyBag <Properties>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::IPropertyBag*& NUnit::Framework::Internal::Test::dyn_$Properties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$Properties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Properties>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::IPropertyBag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ITest <Parent>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITest*& NUnit::Framework::Internal::Test::dyn_$Parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$Parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parent>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <Fixture>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& NUnit::Framework::Internal::Test::dyn_$Fixture$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$Fixture$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Fixture>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Seed>k__BackingField
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::Test::dyn_$Seed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$Seed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Seed>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <RequiresThread>k__BackingField
[[deprecated("Use field access instead!")]] bool& NUnit::Framework::Internal::Test::dyn_$RequiresThread$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::dyn_$RequiresThread$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequiresThread>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_Id
::StringW NUnit::Framework::Internal::Test::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_Id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_Id
void NUnit::Framework::Internal::Test::set_Id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_Name
::StringW NUnit::Framework::Internal::Test::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_Name
void NUnit::Framework::Internal::Test::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_FullName
::StringW NUnit::Framework::Internal::Test::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_FullName
void NUnit::Framework::Internal::Test::set_FullName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_FullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_ClassName
::StringW NUnit::Framework::Internal::Test::get_ClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_ClassName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClassName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_MethodName
::StringW NUnit::Framework::Internal::Test::get_MethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_MethodName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_TypeInfo
::NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Internal::Test::get_TypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_TypeInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_TypeInfo
void NUnit::Framework::Internal::Test::set_TypeInfo(::NUnit::Framework::Interfaces::ITypeInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_TypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_Method
::NUnit::Framework::Interfaces::IMethodInfo* NUnit::Framework::Internal::Test::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::IMethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_Method
void NUnit::Framework::Internal::Test::set_Method(::NUnit::Framework::Interfaces::IMethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_RunState
::NUnit::Framework::Interfaces::RunState NUnit::Framework::Internal::Test::get_RunState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_RunState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::RunState, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_RunState
void NUnit::Framework::Internal::Test::set_RunState(::NUnit::Framework::Interfaces::RunState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_RunState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RunState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_XmlElementName
::StringW NUnit::Framework::Internal::Test::get_XmlElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_XmlElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_TestType
::StringW NUnit::Framework::Internal::Test::get_TestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_TestType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_TestCaseCount
int NUnit::Framework::Internal::Test::get_TestCaseCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_TestCaseCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestCaseCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_Properties
::NUnit::Framework::Interfaces::IPropertyBag* NUnit::Framework::Internal::Test::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::IPropertyBag*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_Properties
void NUnit::Framework::Internal::Test::set_Properties(::NUnit::Framework::Interfaces::IPropertyBag* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_IsSuite
bool NUnit::Framework::Internal::Test::get_IsSuite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_IsSuite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSuite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_HasChildren
bool NUnit::Framework::Internal::Test::get_HasChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_HasChildren");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_Parent
::NUnit::Framework::Interfaces::ITest* NUnit::Framework::Internal::Test::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_Parent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITest*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_Parent
void NUnit::Framework::Internal::Test::set_Parent(::NUnit::Framework::Interfaces::ITest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_Tests
::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITest*>* NUnit::Framework::Internal::Test::get_Tests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_Tests");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITest*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_Fixture
::Il2CppObject* NUnit::Framework::Internal::Test::get_Fixture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_Fixture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fixture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_Fixture
void NUnit::Framework::Internal::Test::set_Fixture(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_Fixture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Fixture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_IdPrefix
::StringW NUnit::Framework::Internal::Test::get_IdPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_IdPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Test", "get_IdPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.get_Seed
int NUnit::Framework::Internal::Test::get_Seed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::get_Seed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Seed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.set_Seed
void NUnit::Framework::Internal::Test::set_Seed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::set_Seed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Seed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Test..cctor
void NUnit::Framework::Internal::Test::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Test", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.Initialize
void NUnit::Framework::Internal::Test::Initialize(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: NUnit.Framework.Internal.Test.GetNextId
::StringW NUnit::Framework::Internal::Test::GetNextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::GetNextId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Test", "GetNextId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.MakeTestResult
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::Test::MakeTestResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::MakeTestResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeTestResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Test.ApplyAttributesToTest
void NUnit::Framework::Internal::Test::ApplyAttributesToTest(::System::Reflection::ICustomAttributeProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::ApplyAttributesToTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyAttributesToTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider);
}
// Autogenerated method: NUnit.Framework.Internal.Test.PopulateTestNode
void NUnit::Framework::Internal::Test::PopulateTestNode(::NUnit::Framework::Interfaces::TNode* thisNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::PopulateTestNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateTestNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisNode), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisNode, recursive);
}
// Autogenerated method: NUnit.Framework.Internal.Test.ToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::Test::ToXml(bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, recursive);
}
// Autogenerated method: NUnit.Framework.Internal.Test.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::Test::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated method: NUnit.Framework.Internal.Test.CompareTo
int NUnit::Framework::Internal::Test::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Test::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TestAssembly
#include "NUnit/Framework/Internal/TestAssembly.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Reflection.Assembly <Assembly>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::Assembly*& NUnit::Framework::Internal::TestAssembly::dyn_$Assembly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestAssembly::dyn_$Assembly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Assembly>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::Assembly**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestAssembly.get_Assembly
::System::Reflection::Assembly* NUnit::Framework::Internal::TestAssembly::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestAssembly::get_Assembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestAssembly.set_Assembly
void NUnit::Framework::Internal::TestAssembly::set_Assembly(::System::Reflection::Assembly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestAssembly::set_Assembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestAssembly.get_TestType
::StringW NUnit::Framework::Internal::TestAssembly::get_TestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestAssembly::get_TestType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TestFixture
#include "NUnit/Framework/Internal/TestFixture.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Internal.TestCaseParameters
#include "NUnit/Framework/Internal/TestCaseParameters.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NUnit.Framework.Internal.TestCaseParameters parms
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestCaseParameters*& NUnit::Framework::Internal::TestMethod::dyn_parms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::dyn_parms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parms"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestCaseParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestMethod.get_HasExpectedResult
bool NUnit::Framework::Internal::TestMethod::get_HasExpectedResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::get_HasExpectedResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasExpectedResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestMethod.get_ExpectedResult
::Il2CppObject* NUnit::Framework::Internal::TestMethod::get_ExpectedResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::get_ExpectedResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestMethod.get_Arguments
::ArrayW<::Il2CppObject*> NUnit::Framework::Internal::TestMethod::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::get_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestMethod.get_HasChildren
bool NUnit::Framework::Internal::TestMethod::get_HasChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::get_HasChildren");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestMethod.get_Tests
::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITest*>* NUnit::Framework::Internal::TestMethod::get_Tests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::get_Tests");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITest*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestMethod.get_XmlElementName
::StringW NUnit::Framework::Internal::TestMethod::get_XmlElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::get_XmlElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestMethod.get_MethodName
::StringW NUnit::Framework::Internal::TestMethod::get_MethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::get_MethodName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestMethod.MakeTestResult
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::TestMethod::MakeTestResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::MakeTestResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeTestResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestMethod.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestMethod::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestMethod::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<NUnit.Framework.Interfaces.ITest> tests
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::Interfaces::ITest*>*& NUnit::Framework::Internal::TestSuite::dyn_tests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::dyn_tests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tests"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::NUnit::Framework::Interfaces::ITest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <Arguments>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& NUnit::Framework::Internal::TestSuite::dyn_$Arguments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::dyn_$Arguments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Arguments>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MaintainTestOrder>k__BackingField
[[deprecated("Use field access instead!")]] bool& NUnit::Framework::Internal::TestSuite::dyn_$MaintainTestOrder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::dyn_$MaintainTestOrder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaintainTestOrder>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.get_Arguments
::ArrayW<::Il2CppObject*> NUnit::Framework::Internal::TestSuite::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::get_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.set_Arguments
void NUnit::Framework::Internal::TestSuite::set_Arguments(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::set_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.get_MaintainTestOrder
bool NUnit::Framework::Internal::TestSuite::get_MaintainTestOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::get_MaintainTestOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaintainTestOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.set_MaintainTestOrder
void NUnit::Framework::Internal::TestSuite::set_MaintainTestOrder(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::set_MaintainTestOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaintainTestOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.Sort
void NUnit::Framework::Internal::TestSuite::Sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.Add
void NUnit::Framework::Internal::TestSuite::Add(::NUnit::Framework::Internal::Test* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.CheckSetUpTearDownMethods
void NUnit::Framework::Internal::TestSuite::CheckSetUpTearDownMethods(::System::Type* attrType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::CheckSetUpTearDownMethods");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSetUpTearDownMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrType);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.get_Tests
::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITest*>* NUnit::Framework::Internal::TestSuite::get_Tests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::get_Tests");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITest*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.get_TestCaseCount
int NUnit::Framework::Internal::TestSuite::get_TestCaseCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::get_TestCaseCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestCaseCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.get_HasChildren
bool NUnit::Framework::Internal::TestSuite::get_HasChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::get_HasChildren");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.get_XmlElementName
::StringW NUnit::Framework::Internal::TestSuite::get_XmlElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::get_XmlElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.MakeTestResult
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::TestSuite::MakeTestResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::MakeTestResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeTestResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuite.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::TestSuite::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuite::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TypeHelper
#include "NUnit/Framework/Internal/TypeHelper.hpp"
// Including type: NUnit.Framework.Internal.TypeHelper/NUnit.Framework.Internal.NonmatchingTypeClass
#include "NUnit/Framework/Internal/TypeHelper_NonmatchingTypeClass.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: NUnit.Framework.Interfaces.IParameterInfo
#include "NUnit/Framework/Interfaces/IParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Type NonmatchingType
::System::Type* NUnit::Framework::Internal::TypeHelper::_get_NonmatchingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeHelper::_get_NonmatchingType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("NUnit.Framework.Internal", "TypeHelper", "NonmatchingType"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Type NonmatchingType
void NUnit::Framework::Internal::TypeHelper::_set_NonmatchingType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeHelper::_set_NonmatchingType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TypeHelper", "NonmatchingType", value));
}
// Autogenerated method: NUnit.Framework.Internal.TypeHelper..cctor
void NUnit::Framework::Internal::TypeHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TypeHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TypeHelper.GetDisplayName
::StringW NUnit::Framework::Internal::TypeHelper::GetDisplayName(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeHelper::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TypeHelper", "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: NUnit.Framework.Internal.TypeHelper.GetDisplayName
::StringW NUnit::Framework::Internal::TypeHelper::GetDisplayName(::System::Type* type, ::ArrayW<::Il2CppObject*> arglist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeHelper::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TypeHelper", "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(arglist)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, arglist);
}
// Autogenerated method: NUnit.Framework.Internal.TypeHelper.BestCommonType
::System::Type* NUnit::Framework::Internal::TypeHelper::BestCommonType(::System::Type* type1, ::System::Type* type2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeHelper::BestCommonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TypeHelper", "BestCommonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type1), ::il2cpp_utils::ExtractType(type2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type1, type2);
}
// Autogenerated method: NUnit.Framework.Internal.TypeHelper.IsNumeric
bool NUnit::Framework::Internal::TypeHelper::IsNumeric(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeHelper::IsNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TypeHelper", "IsNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: NUnit.Framework.Internal.TypeHelper.ConvertArgumentList
void NUnit::Framework::Internal::TypeHelper::ConvertArgumentList(::ArrayW<::Il2CppObject*> arglist, ::ArrayW<::NUnit::Framework::Interfaces::IParameterInfo*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeHelper::ConvertArgumentList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TypeHelper", "ConvertArgumentList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arglist), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arglist, parameters);
}
// Autogenerated method: NUnit.Framework.Internal.TypeHelper.CanDeduceTypeArgsFromArgs
bool NUnit::Framework::Internal::TypeHelper::CanDeduceTypeArgsFromArgs(::System::Type* type, ::ArrayW<::Il2CppObject*> arglist, ByRef<::ArrayW<::System::Type*>> typeArgsOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TypeHelper::CanDeduceTypeArgsFromArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TypeHelper", "CanDeduceTypeArgsFromArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(arglist), ::il2cpp_utils::ExtractType(typeArgsOut)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, arglist, byref(typeArgsOut));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TestCaseResult
#include "NUnit/Framework/Internal/TestCaseResult.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestCaseResult.get_FailCount
int NUnit::Framework::Internal::TestCaseResult::get_FailCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseResult::get_FailCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FailCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestCaseResult.get_PassCount
int NUnit::Framework::Internal::TestCaseResult::get_PassCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseResult::get_PassCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PassCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestCaseResult.get_SkipCount
int NUnit::Framework::Internal::TestCaseResult::get_SkipCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseResult::get_SkipCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkipCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestCaseResult.get_InconclusiveCount
int NUnit::Framework::Internal::TestCaseResult::get_InconclusiveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseResult::get_InconclusiveCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InconclusiveCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestCaseResult.get_HasChildren
bool NUnit::Framework::Internal::TestCaseResult::get_HasChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseResult::get_HasChildren");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestCaseResult.get_Children
::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::ITestResult*>* NUnit::Framework::Internal::TestCaseResult::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestCaseResult::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::ITestResult*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.TestSuiteResult
#include "NUnit/Framework/Internal/TestSuiteResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _passCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestSuiteResult::dyn__passCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::dyn__passCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _failCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestSuiteResult::dyn__failCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::dyn__failCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _skipCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestSuiteResult::dyn__skipCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::dyn__skipCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inconclusiveCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::TestSuiteResult::dyn__inconclusiveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::dyn__inconclusiveCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inconclusiveCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<NUnit.Framework.Interfaces.ITestResult> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::Interfaces::ITestResult*>*& NUnit::Framework::Internal::TestSuiteResult::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::NUnit::Framework::Interfaces::ITestResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuiteResult.AddResult
void NUnit::Framework::Internal::TestSuiteResult::AddResult(::NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::AddResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuiteResult.get_FailCount
int NUnit::Framework::Internal::TestSuiteResult::get_FailCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::get_FailCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FailCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuiteResult.get_PassCount
int NUnit::Framework::Internal::TestSuiteResult::get_PassCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::get_PassCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PassCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuiteResult.get_SkipCount
int NUnit::Framework::Internal::TestSuiteResult::get_SkipCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::get_SkipCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkipCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuiteResult.get_InconclusiveCount
int NUnit::Framework::Internal::TestSuiteResult::get_InconclusiveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::get_InconclusiveCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InconclusiveCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuiteResult.get_HasChildren
bool NUnit::Framework::Internal::TestSuiteResult::get_HasChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::get_HasChildren");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestSuiteResult.get_Children
::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::ITestResult*>* NUnit::Framework::Internal::TestSuiteResult::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestSuiteResult::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::ITestResult*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Commands.SetUpTearDownItem
#include "NUnit/Framework/Internal/Commands/SetUpTearDownItem.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<System.Reflection.MethodInfo> _setUpMethods
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::Reflection::MethodInfo*>*& NUnit::Framework::Internal::Commands::SetUpTearDownItem::dyn__setUpMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SetUpTearDownItem::dyn__setUpMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setUpMethods"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::System::Reflection::MethodInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<System.Reflection.MethodInfo> _tearDownMethods
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::Reflection::MethodInfo*>*& NUnit::Framework::Internal::Commands::SetUpTearDownItem::dyn__tearDownMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SetUpTearDownItem::dyn__tearDownMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tearDownMethods"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::System::Reflection::MethodInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _setUpWasRun
[[deprecated("Use field access instead!")]] bool& NUnit::Framework::Internal::Commands::SetUpTearDownItem::dyn__setUpWasRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SetUpTearDownItem::dyn__setUpWasRun");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setUpWasRun"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.SetUpTearDownItem.get_HasMethods
bool NUnit::Framework::Internal::Commands::SetUpTearDownItem::get_HasMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SetUpTearDownItem::get_HasMethods");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.SetUpTearDownItem.RunSetUp
void NUnit::Framework::Internal::Commands::SetUpTearDownItem::RunSetUp(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SetUpTearDownItem::RunSetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunSetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.SetUpTearDownItem.RunTearDown
void NUnit::Framework::Internal::Commands::SetUpTearDownItem::RunTearDown(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SetUpTearDownItem::RunTearDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunTearDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.SetUpTearDownItem.RunSetUpOrTearDownMethod
void NUnit::Framework::Internal::Commands::SetUpTearDownItem::RunSetUpOrTearDownMethod(::NUnit::Framework::Internal::ITestExecutionContext* context, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SetUpTearDownItem::RunSetUpOrTearDownMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunSetUpOrTearDownMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, method);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.SetUpTearDownItem.RunNonAsyncMethod
::Il2CppObject* NUnit::Framework::Internal::Commands::SetUpTearDownItem::RunNonAsyncMethod(::System::Reflection::MethodInfo* method, ::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SetUpTearDownItem::RunNonAsyncMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunNonAsyncMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Commands.TestActionItem
#include "NUnit/Framework/Internal/Commands/TestActionItem.hpp"
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NUnit.Framework.ITestAction _action
[[deprecated("Use field access instead!")]] ::NUnit::Framework::ITestAction*& NUnit::Framework::Internal::Commands::TestActionItem::dyn__action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestActionItem::dyn__action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_action"))->offset;
  return *reinterpret_cast<::NUnit::Framework::ITestAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _beforeTestWasRun
[[deprecated("Use field access instead!")]] bool& NUnit::Framework::Internal::Commands::TestActionItem::dyn__beforeTestWasRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestActionItem::dyn__beforeTestWasRun");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeTestWasRun"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.TestActionItem.BeforeTest
void NUnit::Framework::Internal::Commands::TestActionItem::BeforeTest(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestActionItem::BeforeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeforeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.TestActionItem.AfterTest
void NUnit::Framework::Internal::Commands::TestActionItem::AfterTest(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestActionItem::AfterTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AfterTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Commands.ApplyChangesToContextCommand
#include "NUnit/Framework/Internal/Commands/ApplyChangesToContextCommand.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Interfaces.IApplyToContext
#include "NUnit/Framework/Interfaces/IApplyToContext.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerable`1<NUnit.Framework.Interfaces.IApplyToContext> _changes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::IApplyToContext*>*& NUnit::Framework::Internal::Commands::ApplyChangesToContextCommand::dyn__changes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::ApplyChangesToContextCommand::dyn__changes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::IApplyToContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.ApplyChangesToContextCommand.ApplyChanges
void NUnit::Framework::Internal::Commands::ApplyChangesToContextCommand::ApplyChanges(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::ApplyChangesToContextCommand::ApplyChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.ApplyChangesToContextCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::Commands::ApplyChangesToContextCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::ApplyChangesToContextCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Commands.DelegatingTestCommand
#include "NUnit/Framework/Internal/Commands/DelegatingTestCommand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected NUnit.Framework.Internal.Commands.TestCommand innerCommand
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Commands::TestCommand*& NUnit::Framework::Internal::Commands::DelegatingTestCommand::dyn_innerCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::DelegatingTestCommand::dyn_innerCommand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "innerCommand"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Commands::TestCommand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.DelegatingTestCommand.GetInnerCommand
::NUnit::Framework::Internal::Commands::TestCommand* NUnit::Framework::Internal::Commands::DelegatingTestCommand::GetInnerCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::DelegatingTestCommand::GetInnerCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInnerCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Commands::TestCommand*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Commands.OneTimeSetUpCommand
#include "NUnit/Framework/Internal/Commands/OneTimeSetUpCommand.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Internal.Commands.SetUpTearDownItem
#include "NUnit/Framework/Internal/Commands/SetUpTearDownItem.hpp"
// Including type: NUnit.Framework.Internal.Commands.TestActionItem
#include "NUnit/Framework/Internal/Commands/TestActionItem.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NUnit.Framework.Internal.TestSuite _suite
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestSuite*& NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__suite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__suite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suite"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestSuite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NUnit.Framework.Interfaces.ITypeInfo _typeInfo
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITypeInfo*& NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__typeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__typeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeInfo"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object[] _arguments
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arguments"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<NUnit.Framework.Internal.Commands.SetUpTearDownItem> _setUpTearDown
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::SetUpTearDownItem*>*& NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__setUpTearDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__setUpTearDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setUpTearDown"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::SetUpTearDownItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<NUnit.Framework.Internal.Commands.TestActionItem> _actions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::TestActionItem*>*& NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__actions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::dyn__actions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::TestActionItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.OneTimeSetUpCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeSetUpCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Commands.OneTimeTearDownCommand
#include "NUnit/Framework/Internal/Commands/OneTimeTearDownCommand.hpp"
// Including type: NUnit.Framework.Internal.Commands.OneTimeTearDownCommand/NUnit.Framework.Internal.Commands.<>c__DisplayClass3_0
#include "NUnit/Framework/Internal/Commands/OneTimeTearDownCommand_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Internal.Commands.SetUpTearDownItem
#include "NUnit/Framework/Internal/Commands/SetUpTearDownItem.hpp"
// Including type: NUnit.Framework.Internal.Commands.TestActionItem
#include "NUnit/Framework/Internal/Commands/TestActionItem.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<NUnit.Framework.Internal.Commands.SetUpTearDownItem> _setUpTearDownItems
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::SetUpTearDownItem*>*& NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::dyn__setUpTearDownItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::dyn__setUpTearDownItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setUpTearDownItems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::SetUpTearDownItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<NUnit.Framework.Internal.Commands.TestActionItem> _actions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::TestActionItem*>*& NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::dyn__actions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::dyn__actions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::TestActionItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.OneTimeTearDownCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Commands.OneTimeTearDownCommand/NUnit.Framework.Internal.Commands.<>c__DisplayClass3_0
#include "NUnit/Framework/Internal/Commands/OneTimeTearDownCommand_--c__DisplayClass3_0.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IDisposable disposable
[[deprecated("Use field access instead!")]] ::System::IDisposable*& NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::$$c__DisplayClass3_0::dyn_disposable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::$$c__DisplayClass3_0::dyn_disposable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposable"))->offset;
  return *reinterpret_cast<::System::IDisposable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.OneTimeTearDownCommand/NUnit.Framework.Internal.Commands.<>c__DisplayClass3_0.<Execute>b__0
::Il2CppObject* NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::$$c__DisplayClass3_0::$Execute$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::OneTimeTearDownCommand::$$c__DisplayClass3_0::<Execute>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Execute>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Commands.SkipCommand
#include "NUnit/Framework/Internal/Commands/SkipCommand.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Commands.SkipCommand.GetSkipReason
::StringW NUnit::Framework::Internal::Commands::SkipCommand::GetSkipReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SkipCommand::GetSkipReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkipReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.SkipCommand.GetProviderStackTrace
::StringW NUnit::Framework::Internal::Commands::SkipCommand::GetProviderStackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SkipCommand::GetProviderStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProviderStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.SkipCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::Commands::SkipCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::SkipCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Commands.TestCommand
#include "NUnit/Framework/Internal/Commands/TestCommand.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.Test <Test>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Test*& NUnit::Framework::Internal::Commands::TestCommand::dyn_$Test$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestCommand::dyn_$Test$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Test>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Test**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.TestCommand.get_Test
::NUnit::Framework::Internal::Test* NUnit::Framework::Internal::Commands::TestCommand::get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestCommand::get_Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Test*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.TestCommand.set_Test
void NUnit::Framework::Internal::Commands::TestCommand::set_Test(::NUnit::Framework::Internal::Test* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestCommand::set_Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.TestCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::Commands::TestCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Commands.TestMethodCommand
#include "NUnit/Framework/Internal/Commands/TestMethodCommand.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NUnit.Framework.Internal.TestMethod testMethod
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestMethod*& NUnit::Framework::Internal::Commands::TestMethodCommand::dyn_testMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestMethodCommand::dyn_testMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testMethod"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestMethod**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object[] arguments
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& NUnit::Framework::Internal::Commands::TestMethodCommand::dyn_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestMethodCommand::dyn_arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arguments"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.TestMethodCommand.RunTestMethod
::Il2CppObject* NUnit::Framework::Internal::Commands::TestMethodCommand::RunTestMethod(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestMethodCommand::RunTestMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunTestMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.TestMethodCommand.RunNonAsyncTestMethod
::Il2CppObject* NUnit::Framework::Internal::Commands::TestMethodCommand::RunNonAsyncTestMethod(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestMethodCommand::RunNonAsyncTestMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunNonAsyncTestMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: NUnit.Framework.Internal.Commands.TestMethodCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::Commands::TestMethodCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TestMethodCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Commands.TheoryResultCommand
#include "NUnit/Framework/Internal/Commands/TheoryResultCommand.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Commands.TheoryResultCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::Internal::Commands::TheoryResultCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Commands::TheoryResultCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Filters.CompositeFilter
#include "NUnit/Framework/Internal/Filters/CompositeFilter.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<NUnit.Framework.Interfaces.ITestFilter> <Filters>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITestFilter*>*& NUnit::Framework::Internal::Filters::CompositeFilter::dyn_$Filters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CompositeFilter::dyn_$Filters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Filters>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITestFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.CompositeFilter.get_Filters
::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITestFilter*>* NUnit::Framework::Internal::Filters::CompositeFilter::get_Filters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CompositeFilter::get_Filters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITestFilter*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.CompositeFilter.set_Filters
void NUnit::Framework::Internal::Filters::CompositeFilter::set_Filters(::System::Collections::Generic::IList_1<::NUnit::Framework::Interfaces::ITestFilter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CompositeFilter::set_Filters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Filters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.CompositeFilter.get_ElementName
::StringW NUnit::Framework::Internal::Filters::CompositeFilter::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CompositeFilter::get_ElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.CompositeFilter.Pass
bool NUnit::Framework::Internal::Filters::CompositeFilter::Pass(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CompositeFilter::Pass");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.CompositeFilter.Match
bool NUnit::Framework::Internal::Filters::CompositeFilter::Match(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CompositeFilter::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.CompositeFilter.IsExplicitMatch
bool NUnit::Framework::Internal::Filters::CompositeFilter::IsExplicitMatch(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CompositeFilter::IsExplicitMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExplicitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.CompositeFilter.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::Filters::CompositeFilter::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CompositeFilter::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Filters.ValueMatchFilter
#include "NUnit/Framework/Internal/Filters/ValueMatchFilter.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <ExpectedValue>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::Filters::ValueMatchFilter::dyn_$ExpectedValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::ValueMatchFilter::dyn_$ExpectedValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExpectedValue>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRegex>k__BackingField
[[deprecated("Use field access instead!")]] bool& NUnit::Framework::Internal::Filters::ValueMatchFilter::dyn_$IsRegex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::ValueMatchFilter::dyn_$IsRegex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRegex>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.ValueMatchFilter.get_ExpectedValue
::StringW NUnit::Framework::Internal::Filters::ValueMatchFilter::get_ExpectedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::ValueMatchFilter::get_ExpectedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.ValueMatchFilter.set_ExpectedValue
void NUnit::Framework::Internal::Filters::ValueMatchFilter::set_ExpectedValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::ValueMatchFilter::set_ExpectedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.ValueMatchFilter.get_IsRegex
bool NUnit::Framework::Internal::Filters::ValueMatchFilter::get_IsRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::ValueMatchFilter::get_IsRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.ValueMatchFilter.set_IsRegex
void NUnit::Framework::Internal::Filters::ValueMatchFilter::set_IsRegex(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::ValueMatchFilter::set_IsRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.ValueMatchFilter.get_ElementName
::StringW NUnit::Framework::Internal::Filters::ValueMatchFilter::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::ValueMatchFilter::get_ElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.ValueMatchFilter.Match
bool NUnit::Framework::Internal::Filters::ValueMatchFilter::Match(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::ValueMatchFilter::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.ValueMatchFilter.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::Filters::ValueMatchFilter::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::ValueMatchFilter::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Filters.AndFilter
#include "NUnit/Framework/Internal/Filters/AndFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Filters.AndFilter.get_ElementName
::StringW NUnit::Framework::Internal::Filters::AndFilter::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::AndFilter::get_ElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.AndFilter.Pass
bool NUnit::Framework::Internal::Filters::AndFilter::Pass(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::AndFilter::Pass");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.AndFilter.Match
bool NUnit::Framework::Internal::Filters::AndFilter::Match(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::AndFilter::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.AndFilter.IsExplicitMatch
bool NUnit::Framework::Internal::Filters::AndFilter::IsExplicitMatch(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::AndFilter::IsExplicitMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExplicitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Filters.CategoryFilter
#include "NUnit/Framework/Internal/Filters/CategoryFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Filters.CategoryFilter.get_ElementName
::StringW NUnit::Framework::Internal::Filters::CategoryFilter::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CategoryFilter::get_ElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.CategoryFilter.Match
bool NUnit::Framework::Internal::Filters::CategoryFilter::Match(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::CategoryFilter::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Filters.NotFilter
#include "NUnit/Framework/Internal/Filters/NotFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.TestFilter <BaseFilter>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestFilter*& NUnit::Framework::Internal::Filters::NotFilter::dyn_$BaseFilter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::NotFilter::dyn_$BaseFilter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BaseFilter>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.NotFilter.get_BaseFilter
::NUnit::Framework::Internal::TestFilter* NUnit::Framework::Internal::Filters::NotFilter::get_BaseFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::NotFilter::get_BaseFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestFilter*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.NotFilter.set_BaseFilter
void NUnit::Framework::Internal::Filters::NotFilter::set_BaseFilter(::NUnit::Framework::Internal::TestFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::NotFilter::set_BaseFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.NotFilter.Pass
bool NUnit::Framework::Internal::Filters::NotFilter::Pass(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::NotFilter::Pass");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.NotFilter.Match
bool NUnit::Framework::Internal::Filters::NotFilter::Match(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::NotFilter::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.NotFilter.IsExplicitMatch
bool NUnit::Framework::Internal::Filters::NotFilter::IsExplicitMatch(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::NotFilter::IsExplicitMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExplicitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.NotFilter.AddToXml
::NUnit::Framework::Interfaces::TNode* NUnit::Framework::Internal::Filters::NotFilter::AddToXml(::NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::NotFilter::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Filters.OrFilter
#include "NUnit/Framework/Internal/Filters/OrFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Filters.OrFilter.get_ElementName
::StringW NUnit::Framework::Internal::Filters::OrFilter::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::OrFilter::get_ElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.OrFilter.Pass
bool NUnit::Framework::Internal::Filters::OrFilter::Pass(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::OrFilter::Pass");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.OrFilter.Match
bool NUnit::Framework::Internal::Filters::OrFilter::Match(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::OrFilter::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.OrFilter.IsExplicitMatch
bool NUnit::Framework::Internal::Filters::OrFilter::IsExplicitMatch(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::OrFilter::IsExplicitMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExplicitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Filters.FullNameFilter
#include "NUnit/Framework/Internal/Filters/FullNameFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Filters.FullNameFilter.get_ElementName
::StringW NUnit::Framework::Internal::Filters::FullNameFilter::get_ElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::FullNameFilter::get_ElementName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Filters.FullNameFilter.Match
bool NUnit::Framework::Internal::Filters::FullNameFilter::Match(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Filters::FullNameFilter::Match");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Execution.EventListenerTextWriter
#include "NUnit/Framework/Internal/Execution/EventListenerTextWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter _defaultWriter
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& NUnit::Framework::Internal::Execution::EventListenerTextWriter::dyn__defaultWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::EventListenerTextWriter::dyn__defaultWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultWriter"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _streamName
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::Execution::EventListenerTextWriter::dyn__streamName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::EventListenerTextWriter::dyn__streamName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_streamName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.EventListenerTextWriter.TrySendToListener
bool NUnit::Framework::Internal::Execution::EventListenerTextWriter::TrySendToListener(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::EventListenerTextWriter::TrySendToListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySendToListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.EventListenerTextWriter.get_Encoding
::System::Text::Encoding* NUnit::Framework::Internal::Execution::EventListenerTextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::EventListenerTextWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.EventListenerTextWriter.Write
void NUnit::Framework::Internal::Execution::EventListenerTextWriter::Write(::Il2CppChar aChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::EventListenerTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aChar);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.EventListenerTextWriter.Write
void NUnit::Framework::Internal::Execution::EventListenerTextWriter::Write(::StringW aString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::EventListenerTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aString);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.EventListenerTextWriter.WriteLine
void NUnit::Framework::Internal::Execution::EventListenerTextWriter::WriteLine(::StringW aString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::EventListenerTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aString);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Execution.CommandBuilder
#include "NUnit/Framework/Internal/Execution/CommandBuilder.hpp"
// Including type: NUnit.Framework.Internal.Commands.TestCommand
#include "NUnit/Framework/Internal/Commands/TestCommand.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Internal.Commands.SetUpTearDownItem
#include "NUnit/Framework/Internal/Commands/SetUpTearDownItem.hpp"
// Including type: NUnit.Framework.Internal.Commands.TestActionItem
#include "NUnit/Framework/Internal/Commands/TestActionItem.hpp"
// Including type: NUnit.Framework.Internal.Commands.SkipCommand
#include "NUnit/Framework/Internal/Commands/SkipCommand.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Execution.CommandBuilder.MakeOneTimeSetUpCommand
::NUnit::Framework::Internal::Commands::TestCommand* NUnit::Framework::Internal::Execution::CommandBuilder::MakeOneTimeSetUpCommand(::NUnit::Framework::Internal::TestSuite* suite, ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::SetUpTearDownItem*>* setUpTearDown, ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::TestActionItem*>* actions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::CommandBuilder::MakeOneTimeSetUpCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Execution", "CommandBuilder", "MakeOneTimeSetUpCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suite), ::il2cpp_utils::ExtractType(setUpTearDown), ::il2cpp_utils::ExtractType(actions)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Commands::TestCommand*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, suite, setUpTearDown, actions);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.CommandBuilder.MakeOneTimeTearDownCommand
::NUnit::Framework::Internal::Commands::TestCommand* NUnit::Framework::Internal::Execution::CommandBuilder::MakeOneTimeTearDownCommand(::NUnit::Framework::Internal::TestSuite* suite, ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::SetUpTearDownItem*>* setUpTearDownItems, ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::TestActionItem*>* actions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::CommandBuilder::MakeOneTimeTearDownCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Execution", "CommandBuilder", "MakeOneTimeTearDownCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suite), ::il2cpp_utils::ExtractType(setUpTearDownItems), ::il2cpp_utils::ExtractType(actions)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Commands::TestCommand*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, suite, setUpTearDownItems, actions);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.CommandBuilder.MakeSkipCommand
::NUnit::Framework::Internal::Commands::SkipCommand* NUnit::Framework::Internal::Execution::CommandBuilder::MakeSkipCommand(::NUnit::Framework::Internal::Test* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::CommandBuilder::MakeSkipCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Execution", "CommandBuilder", "MakeSkipCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Commands::SkipCommand*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.CommandBuilder.BuildSetUpTearDownList
::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::SetUpTearDownItem*>* NUnit::Framework::Internal::Execution::CommandBuilder::BuildSetUpTearDownList(::System::Type* fixtureType, ::System::Type* setUpType, ::System::Type* tearDownType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::CommandBuilder::BuildSetUpTearDownList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Execution", "CommandBuilder", "BuildSetUpTearDownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixtureType), ::il2cpp_utils::ExtractType(setUpType), ::il2cpp_utils::ExtractType(tearDownType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::NUnit::Framework::Internal::Commands::SetUpTearDownItem*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fixtureType, setUpType, tearDownType);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.CommandBuilder.BuildNode
::NUnit::Framework::Internal::Commands::SetUpTearDownItem* NUnit::Framework::Internal::Execution::CommandBuilder::BuildNode(::System::Type* fixtureType, ::System::Collections::Generic::IList_1<::System::Reflection::MethodInfo*>* setUpMethods, ::System::Collections::Generic::IList_1<::System::Reflection::MethodInfo*>* tearDownMethods) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::CommandBuilder::BuildNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Execution", "CommandBuilder", "BuildNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixtureType), ::il2cpp_utils::ExtractType(setUpMethods), ::il2cpp_utils::ExtractType(tearDownMethods)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Commands::SetUpTearDownItem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fixtureType, setUpMethods, tearDownMethods);
}
// Autogenerated method: NUnit.Framework.Internal.Execution.CommandBuilder.SelectMethodsByDeclaringType
::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>* NUnit::Framework::Internal::Execution::CommandBuilder::SelectMethodsByDeclaringType(::System::Type* type, ::System::Collections::Generic::IList_1<::System::Reflection::MethodInfo*>* methods) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::CommandBuilder::SelectMethodsByDeclaringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Execution", "CommandBuilder", "SelectMethodsByDeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(methods)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, methods);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Execution.WorkItemState
#include "NUnit/Framework/Internal/Execution/WorkItemState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.Execution.WorkItemState Ready
::NUnit::Framework::Internal::Execution::WorkItemState NUnit::Framework::Internal::Execution::WorkItemState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::WorkItemState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::Execution::WorkItemState>("NUnit.Framework.Internal.Execution", "WorkItemState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.Execution.WorkItemState Ready
void NUnit::Framework::Internal::Execution::WorkItemState::_set_Ready(::NUnit::Framework::Internal::Execution::WorkItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::WorkItemState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal.Execution", "WorkItemState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.Execution.WorkItemState Running
::NUnit::Framework::Internal::Execution::WorkItemState NUnit::Framework::Internal::Execution::WorkItemState::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::WorkItemState::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::Execution::WorkItemState>("NUnit.Framework.Internal.Execution", "WorkItemState", "Running"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.Execution.WorkItemState Running
void NUnit::Framework::Internal::Execution::WorkItemState::_set_Running(::NUnit::Framework::Internal::Execution::WorkItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::WorkItemState::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal.Execution", "WorkItemState", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.Execution.WorkItemState Complete
::NUnit::Framework::Internal::Execution::WorkItemState NUnit::Framework::Internal::Execution::WorkItemState::_get_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::WorkItemState::_get_Complete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::Execution::WorkItemState>("NUnit.Framework.Internal.Execution", "WorkItemState", "Complete"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.Execution.WorkItemState Complete
void NUnit::Framework::Internal::Execution::WorkItemState::_set_Complete(::NUnit::Framework::Internal::Execution::WorkItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::WorkItemState::_set_Complete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal.Execution", "WorkItemState", "Complete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::Execution::WorkItemState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::WorkItemState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Builders.DefaultSuiteBuilder
#include "NUnit/Framework/Internal/Builders/DefaultSuiteBuilder.hpp"
// Including type: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestFixtureBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Interfaces.IFixtureBuilder
#include "NUnit/Framework/Interfaces/IFixtureBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder _defaultBuilder
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder*& NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::dyn__defaultBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::dyn__defaultBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultBuilder"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultSuiteBuilder.CanBuildFrom
bool NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::CanBuildFrom(::NUnit::Framework::Interfaces::ITypeInfo* typeInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::CanBuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, typeInfo);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultSuiteBuilder.BuildFrom
::NUnit::Framework::Internal::TestSuite* NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::BuildFrom(::NUnit::Framework::Interfaces::ITypeInfo* typeInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::BuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method, typeInfo);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultSuiteBuilder.BuildMultipleFixtures
::NUnit::Framework::Internal::TestSuite* NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::BuildMultipleFixtures(::NUnit::Framework::Interfaces::ITypeInfo* typeInfo, ::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestSuite*>* fixtures) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::BuildMultipleFixtures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildMultipleFixtures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInfo), ::il2cpp_utils::ExtractType(fixtures)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method, typeInfo, fixtures);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultSuiteBuilder.GetFixtureBuilderAttributes
::ArrayW<::NUnit::Framework::Interfaces::IFixtureBuilder*> NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::GetFixtureBuilderAttributes(::NUnit::Framework::Interfaces::ITypeInfo* typeInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::GetFixtureBuilderAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFixtureBuilderAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::NUnit::Framework::Interfaces::IFixtureBuilder*>, false>(this, ___internal__method, typeInfo);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultSuiteBuilder.HasArguments
bool NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::HasArguments(::NUnit::Framework::Interfaces::IFixtureBuilder* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultSuiteBuilder::HasArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestCaseBuilder.hpp"
// Including type: NUnit.Framework.Internal.Randomizer
#include "NUnit/Framework/Internal/Randomizer.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator
#include "NUnit/Framework/Internal/TestNameGenerator.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: NUnit.Framework.Internal.TestCaseParameters
#include "NUnit/Framework/Internal/TestCaseParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NUnit.Framework.Internal.Randomizer _randomizer
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Randomizer*& NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::dyn__randomizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::dyn__randomizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizer"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Randomizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NUnit.Framework.Internal.TestNameGenerator _nameGenerator
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestNameGenerator*& NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::dyn__nameGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::dyn__nameGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameGenerator"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestNameGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder.BuildTestMethod
::NUnit::Framework::Internal::TestMethod* NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::BuildTestMethod(::NUnit::Framework::Interfaces::IMethodInfo* method, ::NUnit::Framework::Internal::Test* parentSuite, ::NUnit::Framework::Internal::TestCaseParameters* parms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::BuildTestMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildTestMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(parentSuite), ::il2cpp_utils::ExtractType(parms)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestMethod*, false>(this, ___internal__method, method, parentSuite, parms);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder.CheckTestMethodSignature
bool NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::CheckTestMethodSignature(::NUnit::Framework::Internal::TestMethod* testMethod, ::NUnit::Framework::Internal::TestCaseParameters* parms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::CheckTestMethodSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Builders", "NUnitTestCaseBuilder", "CheckTestMethodSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(parms)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, testMethod, parms);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder.MarkAsNotRunnable
bool NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::MarkAsNotRunnable(::NUnit::Framework::Internal::TestMethod* testMethod, ::StringW reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder::MarkAsNotRunnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Builders", "NUnitTestCaseBuilder", "MarkAsNotRunnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(reason)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, testMethod, reason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Builders.NamespaceTreeBuilder
#include "NUnit/Framework/Internal/Builders/NamespaceTreeBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,NUnit.Framework.Internal.TestSuite> namespaceSuites
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::NUnit::Framework::Internal::TestSuite*>*& NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::dyn_namespaceSuites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::dyn_namespaceSuites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceSuites"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::NUnit::Framework::Internal::TestSuite*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.TestSuite rootSuite
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestSuite*& NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::dyn_rootSuite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::dyn_rootSuite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootSuite"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestSuite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NamespaceTreeBuilder.get_RootSuite
::NUnit::Framework::Internal::TestSuite* NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::get_RootSuite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::get_RootSuite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootSuite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NamespaceTreeBuilder.Add
void NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::Add(::System::Collections::Generic::IList_1<::NUnit::Framework::Internal::Test*>* fixtures) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixtures)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixtures);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NamespaceTreeBuilder.Add
void NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::Add(::NUnit::Framework::Internal::TestSuite* fixture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixture);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NamespaceTreeBuilder.GetNamespaceForFixture
::StringW NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::GetNamespaceForFixture(::NUnit::Framework::Internal::TestSuite* fixture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::GetNamespaceForFixture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Builders", "NamespaceTreeBuilder", "GetNamespaceForFixture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixture)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fixture);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NamespaceTreeBuilder.BuildFromNameSpace
::NUnit::Framework::Internal::TestSuite* NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::BuildFromNameSpace(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::BuildFromNameSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFromNameSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method, ns);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NamespaceTreeBuilder.AddSetUpFixture
void NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::AddSetUpFixture(::NUnit::Framework::Internal::TestSuite* newSetupFixture, ::NUnit::Framework::Internal::TestSuite* containingSuite, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NamespaceTreeBuilder::AddSetUpFixture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSetUpFixture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSetupFixture), ::il2cpp_utils::ExtractType(containingSuite), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSetupFixture, containingSuite, ns);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Builders.CombinatorialStrategy
#include "NUnit/Framework/Internal/Builders/CombinatorialStrategy.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Interfaces.ITestCaseData
#include "NUnit/Framework/Interfaces/ITestCaseData.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Builders.CombinatorialStrategy.GetTestCases
::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::ITestCaseData*>* NUnit::Framework::Internal::Builders::CombinatorialStrategy::GetTestCases(::ArrayW<::System::Collections::IEnumerable*> sources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::CombinatorialStrategy::GetTestCases");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTestCases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sources)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Interfaces::ITestCaseData*>*, false>(this, ___internal__method, sources);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder
#include "NUnit/Framework/Internal/Builders/DefaultTestCaseBuilder.hpp"
// Including type: NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestCaseBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder _nunitTestCaseBuilder
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder*& NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::dyn__nunitTestCaseBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::dyn__nunitTestCaseBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nunitTestCaseBuilder"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder.CanBuildFrom
bool NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::CanBuildFrom(::NUnit::Framework::Interfaces::IMethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::CanBuildFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, method);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder.CanBuildFrom
bool NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::CanBuildFrom(::NUnit::Framework::Interfaces::IMethodInfo* method, ::NUnit::Framework::Internal::Test* parentSuite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::CanBuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(parentSuite)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, method, parentSuite);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder.BuildFrom
::NUnit::Framework::Internal::Test* NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::BuildFrom(::NUnit::Framework::Interfaces::IMethodInfo* method, ::NUnit::Framework::Internal::Test* parentSuite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::BuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(parentSuite)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Test*, false>(this, ___internal__method, method, parentSuite);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder.BuildParameterizedMethodSuite
::NUnit::Framework::Internal::Test* NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::BuildParameterizedMethodSuite(::NUnit::Framework::Interfaces::IMethodInfo* method, ::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestMethod*>* tests) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::BuildParameterizedMethodSuite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildParameterizedMethodSuite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(tests)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Test*, false>(this, ___internal__method, method, tests);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder.BuildSingleTestMethod
::NUnit::Framework::Internal::Test* NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::BuildSingleTestMethod(::NUnit::Framework::Interfaces::IMethodInfo* method, ::NUnit::Framework::Internal::Test* suite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::DefaultTestCaseBuilder::BuildSingleTestMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildSingleTestMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(suite)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Test*, false>(this, ___internal__method, method, suite);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestFixtureBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.ITestCaseBuilder
#include "NUnit/Framework/Interfaces/ITestCaseBuilder.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFixtureData
#include "NUnit/Framework/Interfaces/ITestFixtureData.hpp"
// Including type: NUnit.Framework.Internal.TestFixture
#include "NUnit/Framework/Internal/TestFixture.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String NO_TYPE_ARGS_MSG
::StringW NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::_get_NO_TYPE_ARGS_MSG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::_get_NO_TYPE_ARGS_MSG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal.Builders", "NUnitTestFixtureBuilder", "NO_TYPE_ARGS_MSG"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NO_TYPE_ARGS_MSG
void NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::_set_NO_TYPE_ARGS_MSG(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::_set_NO_TYPE_ARGS_MSG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal.Builders", "NUnitTestFixtureBuilder", "NO_TYPE_ARGS_MSG", value));
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ITestCaseBuilder _testBuilder
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITestCaseBuilder*& NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::dyn__testBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::dyn__testBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_testBuilder"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITestCaseBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder..cctor
void NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Builders", "NUnitTestFixtureBuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder.BuildFrom
::NUnit::Framework::Internal::TestSuite* NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::BuildFrom(::NUnit::Framework::Interfaces::ITypeInfo* typeInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::BuildFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method, typeInfo);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder.BuildFrom
::NUnit::Framework::Internal::TestSuite* NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::BuildFrom(::NUnit::Framework::Interfaces::ITypeInfo* typeInfo, ::NUnit::Framework::Interfaces::ITestFixtureData* testFixtureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::BuildFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInfo), ::il2cpp_utils::ExtractType(testFixtureData)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method, typeInfo, testFixtureData);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder.AddTestCasesToFixture
void NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::AddTestCasesToFixture(::NUnit::Framework::Internal::TestFixture* fixture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::AddTestCasesToFixture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTestCasesToFixture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixture);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder.BuildTestCase
::NUnit::Framework::Internal::Test* NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::BuildTestCase(::NUnit::Framework::Interfaces::IMethodInfo* method, ::NUnit::Framework::Internal::TestSuite* suite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::BuildTestCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildTestCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(suite)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Test*, false>(this, ___internal__method, method, suite);
}
// Autogenerated method: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder.CheckTestFixtureIsValid
void NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::CheckTestFixtureIsValid(::NUnit::Framework::Internal::TestFixture* fixture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder::CheckTestFixtureIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal.Builders", "NUnitTestFixtureBuilder", "CheckTestFixtureIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fixture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.Builders.ParameterDataSourceProvider
#include "NUnit/Framework/Internal/Builders/ParameterDataSourceProvider.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Interfaces.IParameterInfo
#include "NUnit/Framework/Interfaces/IParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.Builders.ParameterDataSourceProvider.GetDataFor
::System::Collections::IEnumerable* NUnit::Framework::Internal::Builders::ParameterDataSourceProvider::GetDataFor(::NUnit::Framework::Interfaces::IParameterInfo* parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Builders::ParameterDataSourceProvider::GetDataFor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerable*, false>(this, ___internal__method, parameter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: NUnit.Framework.Interfaces.IParameterInfo
#include "NUnit/Framework/Interfaces/IParameterInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.get_TypeInfo
::NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Interfaces::IMethodInfo::get_TypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::get_TypeInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.get_MethodInfo
::System::Reflection::MethodInfo* NUnit::Framework::Interfaces::IMethodInfo::get_MethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::get_MethodInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.get_Name
::StringW NUnit::Framework::Interfaces::IMethodInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.get_IsAbstract
bool NUnit::Framework::Interfaces::IMethodInfo::get_IsAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::get_IsAbstract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.get_IsPublic
bool NUnit::Framework::Interfaces::IMethodInfo::get_IsPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::get_IsPublic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.get_ContainsGenericParameters
bool NUnit::Framework::Interfaces::IMethodInfo::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.get_IsGenericMethodDefinition
bool NUnit::Framework::Interfaces::IMethodInfo::get_IsGenericMethodDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::get_IsGenericMethodDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericMethodDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.get_ReturnType
::NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Interfaces::IMethodInfo::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.GetParameters
::ArrayW<::NUnit::Framework::Interfaces::IParameterInfo*> NUnit::Framework::Interfaces::IMethodInfo::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::NUnit::Framework::Interfaces::IParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.MakeGenericMethod
::NUnit::Framework::Interfaces::IMethodInfo* NUnit::Framework::Interfaces::IMethodInfo::MakeGenericMethod(::ArrayW<::System::Type*> typeArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::MakeGenericMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeArguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::IMethodInfo*, false>(this, ___internal__method, typeArguments);
}
// Autogenerated method: NUnit.Framework.Interfaces.IMethodInfo.Invoke
::Il2CppObject* NUnit::Framework::Interfaces::IMethodInfo::Invoke(::Il2CppObject* fixture, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IMethodInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixture), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, fixture, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Interfaces.IParameterInfo
#include "NUnit/Framework/Interfaces/IParameterInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Interfaces.IParameterInfo.get_IsOptional
bool NUnit::Framework::Interfaces::IParameterInfo::get_IsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IParameterInfo::get_IsOptional");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Interfaces.IParameterInfo.get_ParameterType
::System::Type* NUnit::Framework::Interfaces::IParameterInfo::get_ParameterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Interfaces::IParameterInfo::get_ParameterType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
