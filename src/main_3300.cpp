// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEaseArcadeFlowCoordinator/<LogoutAsync>d__22
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator_-LogoutAsync-d__22.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEaseArcadeFlowCoordinator/<LogoutAsync>d__22.MoveNext
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator/<LogoutAsync>d__22.SetStateMachine
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEaseArcadeFlowCoordinator/<>c__DisplayClass27_0
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator_--c__DisplayClass27_0.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEaseArcadeFlowCoordinator/<>c__DisplayClass27_0.<HandleResultsViewControllerRestartButtonPressed>b__0
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$$c__DisplayClass27_0::$HandleResultsViewControllerRestartButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$$c__DisplayClass27_0::<HandleResultsViewControllerRestartButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResultsViewControllerRestartButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyFreePlayFlowCoordinator
#include "GlobalNamespace/PartyFreePlayFlowCoordinator.hpp"
// Including type: PartyFreePlayFlowCoordinator/<>c__DisplayClass19_0
#include "GlobalNamespace/PartyFreePlayFlowCoordinator_--c__DisplayClass19_0.hpp"
// Including type: PartyFreePlayFlowCoordinator/<>c__DisplayClass24_0
#include "GlobalNamespace/PartyFreePlayFlowCoordinator_--c__DisplayClass24_0.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: LocalLeaderboardViewController
#include "GlobalNamespace/LocalLeaderboardViewController.hpp"
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyFreePlayFlowCoordinator.WillScoreGoToLeaderboard
bool GlobalNamespace::PartyFreePlayFlowCoordinator::WillScoreGoToLeaderboard(GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::Il2CppString* leaderboardId, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::WillScoreGoToLeaderboard");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WillScoreGoToLeaderboard", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, leaderboardId, practice)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelCompletionResults, leaderboardId, practice);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.IsNewHighScore
bool GlobalNamespace::PartyFreePlayFlowCoordinator::IsNewHighScore(GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::Il2CppString* leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::IsNewHighScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsNewHighScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, leaderboardId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelCompletionResults, leaderboardId);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.ProcessScore
void GlobalNamespace::PartyFreePlayFlowCoordinator::ProcessScore(GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::Il2CppString* leaderboardId, ::Il2CppString* playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::ProcessScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, leaderboardId, playerName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, leaderboardId, playerName);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::PartyFreePlayFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::HandleResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resultsViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::PartyFreePlayFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::HandleResultsViewControllerRestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerRestartButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resultsViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.get_gameMode
::Il2CppString* GlobalNamespace::PartyFreePlayFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::get_gameMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.get_leaderboardViewController
GlobalNamespace::LeaderboardViewController* GlobalNamespace::PartyFreePlayFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::get_leaderboardViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LeaderboardViewController*, false>(this, ___internal__method);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.get_showPlayerStatsInDetailView
bool GlobalNamespace::PartyFreePlayFlowCoordinator::get_showPlayerStatsInDetailView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::get_showPlayerStatsInDetailView");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_showPlayerStatsInDetailView", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.get_showBackButtonForMainViewController
bool GlobalNamespace::PartyFreePlayFlowCoordinator::get_showBackButtonForMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::get_showBackButtonForMainViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_showBackButtonForMainViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.get_mainTitle
::Il2CppString* GlobalNamespace::PartyFreePlayFlowCoordinator::get_mainTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::get_mainTitle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mainTitle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::PartyFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::PartyFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::PartyFreePlayFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyFreePlayFlowCoordinator/<>c__DisplayClass19_0
#include "GlobalNamespace/PartyFreePlayFlowCoordinator_--c__DisplayClass19_0.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyFreePlayFlowCoordinator/<>c__DisplayClass19_0.<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0
void GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass19_0::$ProcessLevelCompletionResultsAfterLevelDidFinish$b__0(GlobalNamespace::EnterPlayerGuestNameViewController* viewController, ::Il2CppString* playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass19_0::<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(viewController, playerName))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, playerName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyFreePlayFlowCoordinator/<>c__DisplayClass24_0
#include "GlobalNamespace/PartyFreePlayFlowCoordinator_--c__DisplayClass24_0.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyFreePlayFlowCoordinator/<>c__DisplayClass24_0.<HandleResultsViewControllerRestartButtonPressed>b__0
void GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass24_0::$HandleResultsViewControllerRestartButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass24_0::<HandleResultsViewControllerRestartButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResultsViewControllerRestartButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsFlowCoordinator
#include "GlobalNamespace/SettingsFlowCoordinator.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: MainSettingsMenuViewController
#include "GlobalNamespace/MainSettingsMenuViewController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: SettingsSubMenuInfo
#include "GlobalNamespace/SettingsSubMenuInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDCDFE4
// Autogenerated static field getter
// Get static field: static private System.Int32 _selectedSettingsSubMenuInfoIdx
int GlobalNamespace::SettingsFlowCoordinator::_get__selectedSettingsSubMenuInfoIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::_get__selectedSettingsSubMenuInfoIdx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SettingsFlowCoordinator", "_selectedSettingsSubMenuInfoIdx"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _selectedSettingsSubMenuInfoIdx
void GlobalNamespace::SettingsFlowCoordinator::_set__selectedSettingsSubMenuInfoIdx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::_set__selectedSettingsSubMenuInfoIdx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsFlowCoordinator", "_selectedSettingsSubMenuInfoIdx", value));
}
// Autogenerated method: SettingsFlowCoordinator.add_didFinishEvent
void GlobalNamespace::SettingsFlowCoordinator::add_didFinishEvent(System::Action_2<GlobalNamespace::SettingsFlowCoordinator*, GlobalNamespace::SettingsFlowCoordinator::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::SettingsFlowCoordinator::remove_didFinishEvent(System::Action_2<GlobalNamespace::SettingsFlowCoordinator*, GlobalNamespace::SettingsFlowCoordinator::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsFlowCoordinator.ShowSecretViewController
void GlobalNamespace::SettingsFlowCoordinator::ShowSecretViewController(HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::ShowSecretViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShowSecretViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(viewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: SettingsFlowCoordinator.HandleDidSelectSettingsSubMenu
void GlobalNamespace::SettingsFlowCoordinator::HandleDidSelectSettingsSubMenu(GlobalNamespace::SettingsSubMenuInfo* settingsSubMenuInfo, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::HandleDidSelectSettingsSubMenu");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDidSelectSettingsSubMenu", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(settingsSubMenuInfo, idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, settingsSubMenuInfo, idx);
}
// Autogenerated method: SettingsFlowCoordinator.ReplaceViewController
void GlobalNamespace::SettingsFlowCoordinator::ReplaceViewController(HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::ReplaceViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(viewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: SettingsFlowCoordinator.HandleSettingsNavigationControllerDidFinish
void GlobalNamespace::SettingsFlowCoordinator::HandleSettingsNavigationControllerDidFinish(GlobalNamespace::SettingsNavigationController::FinishAction finishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::HandleSettingsNavigationControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSettingsNavigationControllerDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(finishAction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, finishAction);
}
// Autogenerated method: SettingsFlowCoordinator.ApplySettings
void GlobalNamespace::SettingsFlowCoordinator::ApplySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::ApplySettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplySettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsFlowCoordinator.CancelSettings
void GlobalNamespace::SettingsFlowCoordinator::CancelSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::CancelSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancelSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsFlowCoordinator.DidActivate
void GlobalNamespace::SettingsFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::DidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy, screenSystemEnabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SettingsFlowCoordinator.DidDeactivate
void GlobalNamespace::SettingsFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::DidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy, screenSystemDisabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: SettingsFlowCoordinator..cctor
void GlobalNamespace::SettingsFlowCoordinator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SettingsFlowCoordinator", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsFlowCoordinator/FinishAction
#include "GlobalNamespace/SettingsFlowCoordinator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SettingsFlowCoordinator/FinishAction Cancel
GlobalNamespace::SettingsFlowCoordinator::FinishAction GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SettingsFlowCoordinator::FinishAction>("", "SettingsFlowCoordinator/FinishAction", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public SettingsFlowCoordinator/FinishAction Cancel
void GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Cancel(GlobalNamespace::SettingsFlowCoordinator::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsFlowCoordinator/FinishAction", "Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsFlowCoordinator/FinishAction Ok
GlobalNamespace::SettingsFlowCoordinator::FinishAction GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SettingsFlowCoordinator::FinishAction>("", "SettingsFlowCoordinator/FinishAction", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public SettingsFlowCoordinator/FinishAction Ok
void GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Ok(GlobalNamespace::SettingsFlowCoordinator::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsFlowCoordinator/FinishAction", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsFlowCoordinator/FinishAction Apply
GlobalNamespace::SettingsFlowCoordinator::FinishAction GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Apply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SettingsFlowCoordinator::FinishAction>("", "SettingsFlowCoordinator/FinishAction", "Apply"));
}
// Autogenerated static field setter
// Set static field: static public SettingsFlowCoordinator/FinishAction Apply
void GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Apply(GlobalNamespace::SettingsFlowCoordinator::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Apply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsFlowCoordinator/FinishAction", "Apply", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ShowcaseFlowCoordinator
#include "GlobalNamespace/ShowcaseFlowCoordinator.hpp"
// Including type: ShowcaseFlowCoordinator/<>c__DisplayClass26_0
#include "GlobalNamespace/ShowcaseFlowCoordinator_--c__DisplayClass26_0.hpp"
// Including type: ShowcaseFlowCoordinator/<>c__DisplayClass30_0
#include "GlobalNamespace/ShowcaseFlowCoordinator_--c__DisplayClass30_0.hpp"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: LocalLeaderboardViewController
#include "GlobalNamespace/LocalLeaderboardViewController.hpp"
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShowcaseFlowCoordinator.WillScoreGoToLeaderboard
bool GlobalNamespace::ShowcaseFlowCoordinator::WillScoreGoToLeaderboard(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::WillScoreGoToLeaderboard");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WillScoreGoToLeaderboard", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, difficultyBeatmap, practice)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, practice);
}
// Autogenerated method: ShowcaseFlowCoordinator.ProcessScore
bool GlobalNamespace::ShowcaseFlowCoordinator::ProcessScore(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool practice, ::Il2CppString* playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::ProcessScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, difficultyBeatmap, practice, playerName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, practice, playerName);
}
// Autogenerated method: ShowcaseFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::ShowcaseFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::HandleResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resultsViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: ShowcaseFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::ShowcaseFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::HandleResultsViewControllerRestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerRestartButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resultsViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: ShowcaseFlowCoordinator.HandleHowToPlayViewControllerDidFinish
void GlobalNamespace::ShowcaseFlowCoordinator::HandleHowToPlayViewControllerDidFinish(GlobalNamespace::HowToPlayViewController::HowToPlayOptions howToPlayOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::HandleHowToPlayViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleHowToPlayViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(howToPlayOptions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, howToPlayOptions);
}
// Autogenerated method: ShowcaseFlowCoordinator.HandleHowToPlayTabSelected
void GlobalNamespace::ShowcaseFlowCoordinator::HandleHowToPlayTabSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::HandleHowToPlayTabSelected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleHowToPlayTabSelected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__24_0
void GlobalNamespace::ShowcaseFlowCoordinator::$SinglePlayerLevelSelectionFlowCoordinatorDidActivate$b__24_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__24_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.<HandleHowToPlayTabSelected>b__32_0
void GlobalNamespace::ShowcaseFlowCoordinator::$HandleHowToPlayTabSelected$b__32_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::<HandleHowToPlayTabSelected>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleHowToPlayTabSelected>b__32_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.get_gameMode
::Il2CppString* GlobalNamespace::ShowcaseFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::get_gameMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.get_leaderboardViewController
GlobalNamespace::LeaderboardViewController* GlobalNamespace::ShowcaseFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::get_leaderboardViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LeaderboardViewController*, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.get_initialTopScreenViewController
HMUI::ViewController* GlobalNamespace::ShowcaseFlowCoordinator::get_initialTopScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::get_initialTopScreenViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_initialTopScreenViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.get_showPlayerStatsInDetailView
bool GlobalNamespace::ShowcaseFlowCoordinator::get_showPlayerStatsInDetailView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::get_showPlayerStatsInDetailView");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_showPlayerStatsInDetailView", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.get_hidePacksIfOneOrNone
bool GlobalNamespace::ShowcaseFlowCoordinator::get_hidePacksIfOneOrNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::get_hidePacksIfOneOrNone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hidePacksIfOneOrNone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.get_hideGameplaySetup
bool GlobalNamespace::ShowcaseFlowCoordinator::get_hideGameplaySetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::get_hideGameplaySetup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hideGameplaySetup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.get_hidePracticeButton
bool GlobalNamespace::ShowcaseFlowCoordinator::get_hidePracticeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::get_hidePracticeButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hidePracticeButton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ShowcaseFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::ShowcaseFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: ShowcaseFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::ShowcaseFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: ShowcaseFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::ShowcaseFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ShowcaseFlowCoordinator/<>c__DisplayClass26_0
#include "GlobalNamespace/ShowcaseFlowCoordinator_--c__DisplayClass26_0.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShowcaseFlowCoordinator/<>c__DisplayClass26_0.<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0
void GlobalNamespace::ShowcaseFlowCoordinator::$$c__DisplayClass26_0::$ProcessLevelCompletionResultsAfterLevelDidFinish$b__0(GlobalNamespace::EnterPlayerGuestNameViewController* viewController, ::Il2CppString* playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::$$c__DisplayClass26_0::<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(viewController, playerName))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, playerName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShowcaseFlowCoordinator/<>c__DisplayClass30_0
#include "GlobalNamespace/ShowcaseFlowCoordinator_--c__DisplayClass30_0.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShowcaseFlowCoordinator/<>c__DisplayClass30_0.<HandleResultsViewControllerRestartButtonPressed>b__0
void GlobalNamespace::ShowcaseFlowCoordinator::$$c__DisplayClass30_0::$HandleResultsViewControllerRestartButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowcaseFlowCoordinator::$$c__DisplayClass30_0::<HandleResultsViewControllerRestartButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResultsViewControllerRestartButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleRetailDemoFlowCoordinator
#include "GlobalNamespace/SimpleRetailDemoFlowCoordinator.hpp"
// Including type: SimpleRetailDemoFlowCoordinator/<QuitApplicationCoroutine>d__22
#include "GlobalNamespace/SimpleRetailDemoFlowCoordinator_-QuitApplicationCoroutine-d__22.hpp"
// Including type: SimpleRetailDemoFlowCoordinator/<>c__DisplayClass23_0
#include "GlobalNamespace/SimpleRetailDemoFlowCoordinator_--c__DisplayClass23_0.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: HowToPlayViewController
#include "GlobalNamespace/HowToPlayViewController.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleRetailDemoFlowCoordinator.HandleSimpleDemoViewControllerDidFinish
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::HandleSimpleDemoViewControllerDidFinish(GlobalNamespace::SimpleRetailDemoViewController* viewController, GlobalNamespace::SimpleRetailDemoViewController::MenuButton menuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::HandleSimpleDemoViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSimpleDemoViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(viewController, menuButton)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, menuButton);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::HandleResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resultsViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator.QuitApplicationCoroutine
System::Collections::IEnumerator* GlobalNamespace::SimpleRetailDemoFlowCoordinator::QuitApplicationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::QuitApplicationCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "QuitApplicationCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::HandleResultsViewControllerRestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerRestartButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resultsViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator.StartLevel
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::StartLevel(System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::StartLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beforeSceneSwitchCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator.HandleLevelDidFinish
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::HandleLevelDidFinish(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelSceneSetupData, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::HandleLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(standardLevelSceneSetupData, levelCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standardLevelSceneSetupData, levelCompletionResults);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator.DidActivate
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::DidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy, screenSystemEnabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator.DidDeactivate
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::DidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy, screenSystemDisabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleRetailDemoFlowCoordinator/<QuitApplicationCoroutine>d__22
#include "GlobalNamespace/SimpleRetailDemoFlowCoordinator_-QuitApplicationCoroutine-d__22.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleRetailDemoFlowCoordinator/<QuitApplicationCoroutine>d__22.System.IDisposable.Dispose
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator/<QuitApplicationCoroutine>d__22.MoveNext
bool GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::MoveNext();
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator/<QuitApplicationCoroutine>d__22.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator/<QuitApplicationCoroutine>d__22.System.Collections.IEnumerator.Reset
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleRetailDemoFlowCoordinator/<QuitApplicationCoroutine>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::$QuitApplicationCoroutine$d__22::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleRetailDemoFlowCoordinator/<>c__DisplayClass23_0
#include "GlobalNamespace/SimpleRetailDemoFlowCoordinator_--c__DisplayClass23_0.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleRetailDemoFlowCoordinator/<>c__DisplayClass23_0.<HandleResultsViewControllerRestartButtonPressed>b__0
void GlobalNamespace::SimpleRetailDemoFlowCoordinator::$$c__DisplayClass23_0::$HandleResultsViewControllerRestartButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoFlowCoordinator::$$c__DisplayClass23_0::<HandleResultsViewControllerRestartButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResultsViewControllerRestartButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SinglePlayerLevelSelectionFlowCoordinator
#include "GlobalNamespace/SinglePlayerLevelSelectionFlowCoordinator.hpp"
// Including type: SinglePlayerLevelSelectionFlowCoordinator/<>c__DisplayClass37_0
#include "GlobalNamespace/SinglePlayerLevelSelectionFlowCoordinator_--c__DisplayClass37_0.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: PracticeViewController
#include "GlobalNamespace/PracticeViewController.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ViewController/AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_gameMode
::Il2CppString* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_isInPracticeView
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_isInPracticeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_isInPracticeView");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isInPracticeView", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_playerSettings
GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_playerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_playerSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playerSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettings*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_hideGameplaySetup
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_hideGameplaySetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_hideGameplaySetup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hideGameplaySetup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_leaderboardViewController
GlobalNamespace::LeaderboardViewController* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_leaderboardViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LeaderboardViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.add_didFinishEvent
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::add_didFinishEvent(System::Action_1<GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::remove_didFinishEvent(System::Action_1<GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.StartLevelOrShow360Prompt
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevelOrShow360Prompt(System::Action* beforeSceneSwitchCallback, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevelOrShow360Prompt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartLevelOrShow360Prompt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beforeSceneSwitchCallback, practice)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.StartLevel
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevel(System::Action* beforeSceneSwitchCallback, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beforeSceneSwitchCallback, practice)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.HandlePracticeViewControllerDidPressPlayButton
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandlePracticeViewControllerDidPressPlayButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandlePracticeViewControllerDidPressPlayButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePracticeViewControllerDidPressPlayButton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.HandleStandardLevelDidFinish
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleStandardLevelDidFinish(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleStandardLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleStandardLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(standardLevelScenesTransitionSetupData, levelCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SetupGameplaySetupViewController
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SetupGameplaySetupViewController(bool showModifiers, bool showEnvironmentOverrideSettings, bool showColorSchemesSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SetupGameplaySetupViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetupGameplaySetupViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(showModifiers, showEnvironmentOverrideSettings, showColorSchemesSettings)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showModifiers, showEnvironmentOverrideSettings, showColorSchemesSettings);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.HandleBasicLevelCompletionResults
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleBasicLevelCompletionResults(GlobalNamespace::LevelCompletionResults* levelCompletionResults, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleBasicLevelCompletionResults");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBasicLevelCompletionResults", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, practice)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelCompletionResults, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.DismissPracticeViewController
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::DismissPracticeViewController(System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::DismissPracticeViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DismissPracticeViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(finishedCallback, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, finishedCallback, immediately);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_enableCustomLevels
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_enableCustomLevels");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableCustomLevels", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_initialTopScreenViewController
HMUI::ViewController* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialTopScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialTopScreenViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_initialTopScreenViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_initialLeftScreenViewController
HMUI::ViewController* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialLeftScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialLeftScreenViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_initialLeftScreenViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorTopViewControllerWillChange
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorTopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldViewController, newViewController, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.ActionButtonWasPressed
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ActionButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ActionButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ActionButtonWasPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.PracticeButtonWasPressed
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::PracticeButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::PracticeButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PracticeButtonWasPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SelectionDidChange
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SelectionDidChange(GlobalNamespace::IBeatmapLevelPack* pack, GlobalNamespace::IDifficultyBeatmap* beatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pack, beatmap)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pack, beatmap);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::BackButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(topViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SinglePlayerLevelSelectionFlowCoordinator/<>c__DisplayClass37_0
#include "GlobalNamespace/SinglePlayerLevelSelectionFlowCoordinator_--c__DisplayClass37_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator/<>c__DisplayClass37_0.<StartLevelOrShow360Prompt>b__0
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::$StartLevelOrShow360Prompt$b__0(int buttonNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::<StartLevelOrShow360Prompt>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartLevelOrShow360Prompt>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buttonNumber))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buttonNumber);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator/<>c__DisplayClass37_0.<StartLevelOrShow360Prompt>b__1
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::$StartLevelOrShow360Prompt$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::<StartLevelOrShow360Prompt>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartLevelOrShow360Prompt>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SoloFreePlayFlowCoordinator
#include "GlobalNamespace/SoloFreePlayFlowCoordinator.hpp"
// Including type: SoloFreePlayFlowCoordinator/<>c__DisplayClass23_0
#include "GlobalNamespace/SoloFreePlayFlowCoordinator_--c__DisplayClass23_0.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: PlatformLeaderboardViewController
#include "GlobalNamespace/PlatformLeaderboardViewController.hpp"
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
// Including type: PlayerLevelStatsData
#include "GlobalNamespace/PlayerLevelStatsData.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SoloFreePlayFlowCoordinator.IsNewHighScore
bool GlobalNamespace::SoloFreePlayFlowCoordinator::IsNewHighScore(GlobalNamespace::PlayerLevelStatsData* playerLevelStats, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::IsNewHighScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsNewHighScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playerLevelStats, levelCompletionResults)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, playerLevelStats, levelCompletionResults);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::SoloFreePlayFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(GlobalNamespace::ResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::HandleResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(viewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::SoloFreePlayFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::HandleResultsViewControllerRestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerRestartButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resultsViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.get_gameMode
::Il2CppString* GlobalNamespace::SoloFreePlayFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::get_gameMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.get_leaderboardViewController
GlobalNamespace::LeaderboardViewController* GlobalNamespace::SoloFreePlayFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::get_leaderboardViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LeaderboardViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.get_showPlayerStatsInDetailView
bool GlobalNamespace::SoloFreePlayFlowCoordinator::get_showPlayerStatsInDetailView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::get_showPlayerStatsInDetailView");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_showPlayerStatsInDetailView", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.get_showBackButtonForMainViewController
bool GlobalNamespace::SoloFreePlayFlowCoordinator::get_showBackButtonForMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::get_showBackButtonForMainViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_showBackButtonForMainViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.get_mainTitle
::Il2CppString* GlobalNamespace::SoloFreePlayFlowCoordinator::get_mainTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::get_mainTitle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mainTitle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::SoloFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::SoloFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::SoloFreePlayFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.Refresh
void GlobalNamespace::SoloFreePlayFlowCoordinator::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::Refresh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoloFreePlayFlowCoordinator/<>c__DisplayClass23_0
#include "GlobalNamespace/SoloFreePlayFlowCoordinator_--c__DisplayClass23_0.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SoloFreePlayFlowCoordinator/<>c__DisplayClass23_0.<HandleResultsViewControllerRestartButtonPressed>b__0
void GlobalNamespace::SoloFreePlayFlowCoordinator::$$c__DisplayClass23_0::$HandleResultsViewControllerRestartButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloFreePlayFlowCoordinator::$$c__DisplayClass23_0::<HandleResultsViewControllerRestartButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResultsViewControllerRestartButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestFlowCoordinator
#include "GlobalNamespace/TestFlowCoordinator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestFlowCoordinator.DidActivate
void GlobalNamespace::TestFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestFlowCoordinator::DidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy, screenSystemEnabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierToggle
#include "GlobalNamespace/GameplayModifierToggle.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifierToggle.get_toggle
UnityEngine::UI::Toggle* GlobalNamespace::GameplayModifierToggle::get_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierToggle::get_toggle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_toggle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Toggle*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierToggle.get_gameplayModifier
GlobalNamespace::GameplayModifierParamsSO* GlobalNamespace::GameplayModifierToggle::get_gameplayModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierToggle::get_gameplayModifier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameplayModifier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifierParamsSO*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierToggle.Start
void GlobalNamespace::GameplayModifierToggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierToggle::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GuestNameButtonsListItem
#include "GlobalNamespace/GuestNameButtonsListItem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GuestNameButtonsListItem.set_nameText
void GlobalNamespace::GuestNameButtonsListItem::set_nameText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GuestNameButtonsListItem::set_nameText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_nameText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GuestNameButtonsListItem.set_buttonPressed
void GlobalNamespace::GuestNameButtonsListItem::set_buttonPressed(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GuestNameButtonsListItem::set_buttonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_buttonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GuestNameButtonsListItem.Awake
void GlobalNamespace::GuestNameButtonsListItem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GuestNameButtonsListItem::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GuestNameButtonsListItem.<Awake>b__7_0
void GlobalNamespace::GuestNameButtonsListItem::$Awake$b__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GuestNameButtonsListItem::<Awake>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__7_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GuestNameButtonsListItemsList
#include "GlobalNamespace/GuestNameButtonsListItemsList.hpp"
// Including type: GuestNameButtonsListItem
#include "GlobalNamespace/GuestNameButtonsListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardEntry
#include "GlobalNamespace/LeaderboardEntry.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardEntry.SetScore
void GlobalNamespace::LeaderboardEntry::SetScore(int score, ::Il2CppString* playerName, int rank, bool highlighted, bool showSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardEntry::SetScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(score, playerName, rank, highlighted, showSeparator)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, score, playerName, rank, highlighted, showSeparator);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalizedHoverHint
#include "GlobalNamespace/LocalizedHoverHint.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalizedHoverHint.SetText
void GlobalNamespace::LocalizedHoverHint::SetText(HMUI::HoverHint* hoverHint, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedHoverHint::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hoverHint, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hoverHint, value);
}
// Autogenerated method: LocalizedHoverHint.UpdateAlignment
void GlobalNamespace::LocalizedHoverHint::UpdateAlignment(HMUI::HoverHint* hoverHint, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedHoverHint::UpdateAlignment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hoverHint, direction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hoverHint, direction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuPlayerController
#include "GlobalNamespace/MenuPlayerController.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuPlayerController.get_leftController
GlobalNamespace::VRController* GlobalNamespace::MenuPlayerController::get_leftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuPlayerController::get_leftController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRController*, false>(this, ___internal__method);
}
// Autogenerated method: MenuPlayerController.get_rightController
GlobalNamespace::VRController* GlobalNamespace::MenuPlayerController::get_rightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuPlayerController::get_rightController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRController*, false>(this, ___internal__method);
}
// Autogenerated method: MenuPlayerController.get_headPos
UnityEngine::Vector3 GlobalNamespace::MenuPlayerController::get_headPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuPlayerController::get_headPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_headPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: MenuPlayerController.get_headRot
UnityEngine::Quaternion GlobalNamespace::MenuPlayerController::get_headRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuPlayerController::get_headRot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_headRot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionConnectionsGenerator
#include "GlobalNamespace/MissionConnectionsGenerator.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionConnectionsGenerator.get__rootMissionNode
GlobalNamespace::MissionNode* GlobalNamespace::MissionConnectionsGenerator::get__rootMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionConnectionsGenerator::get__rootMissionNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get__rootMissionNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionConnectionsGenerator.CreateNodeConnections
void GlobalNamespace::MissionConnectionsGenerator::CreateNodeConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionConnectionsGenerator::CreateNodeConnections");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateNodeConnections", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionConnectionsGenerator.RemoveOldConnections
void GlobalNamespace::MissionConnectionsGenerator::RemoveOldConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionConnectionsGenerator::RemoveOldConnections");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveOldConnections", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionConnectionsGenerator.CreateConnections
void GlobalNamespace::MissionConnectionsGenerator::CreateConnections(GlobalNamespace::MissionNode* missionNode, System::Collections::Generic::List_1<GlobalNamespace::MissionNode*>* visitedNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionConnectionsGenerator::CreateConnections");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateConnections", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionNode, visitedNodes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionNode, visitedNodes);
}
// Autogenerated method: MissionConnectionsGenerator.CreateConnectionBetweenNodes
GlobalNamespace::MissionNodeConnection* GlobalNamespace::MissionConnectionsGenerator::CreateConnectionBetweenNodes(GlobalNamespace::MissionNode* parentMissionNode, GlobalNamespace::MissionNode* childMissionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionConnectionsGenerator::CreateConnectionBetweenNodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateConnectionBetweenNodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentMissionNode, childMissionNode)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNodeConnection*, false>(this, ___internal__method, parentMissionNode, childMissionNode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionMapAnimationController
#include "GlobalNamespace/MissionMapAnimationController.hpp"
// Including type: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12
#include "GlobalNamespace/MissionMapAnimationController_-UpdateMissionMapCoroutine-d__12.hpp"
// Including type: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13
#include "GlobalNamespace/MissionMapAnimationController_-UpdateClearedNodeStateCoroutine-d__13.hpp"
// Including type: MissionMapAnimationController/<UpdateStageCoroutine>d__14
#include "GlobalNamespace/MissionMapAnimationController_-UpdateStageCoroutine-d__14.hpp"
// Including type: MissionMapAnimationController/<>c
#include "GlobalNamespace/MissionMapAnimationController_--c.hpp"
// Including type: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15
#include "GlobalNamespace/MissionMapAnimationController_-UpdateNodesAndConnectionCoroutine-d__15.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
// Including type: MenuShockwave
#include "GlobalNamespace/MenuShockwave.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionMapAnimationController.get_animatedUpdateIsRequired
bool GlobalNamespace::MissionMapAnimationController::get_animatedUpdateIsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::get_animatedUpdateIsRequired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_animatedUpdateIsRequired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController.ScrollToTopMostNotClearedMission
void GlobalNamespace::MissionMapAnimationController::ScrollToTopMostNotClearedMission() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::ScrollToTopMostNotClearedMission");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScrollToTopMostNotClearedMission", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController.UpdateMissionMapAfterMissionWasCleared
void GlobalNamespace::MissionMapAnimationController::UpdateMissionMapAfterMissionWasCleared(bool animated, System::Action* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::UpdateMissionMapAfterMissionWasCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMissionMapAfterMissionWasCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animated, finishCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animated, finishCallback);
}
// Autogenerated method: MissionMapAnimationController.UpdateMissionMapCoroutine
System::Collections::IEnumerator* GlobalNamespace::MissionMapAnimationController::UpdateMissionMapCoroutine(GlobalNamespace::MissionNode* lastClearedMissionNode, System::Action* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::UpdateMissionMapCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMissionMapCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lastClearedMissionNode, finishCallback)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, lastClearedMissionNode, finishCallback);
}
// Autogenerated method: MissionMapAnimationController.UpdateClearedNodeStateCoroutine
System::Collections::IEnumerator* GlobalNamespace::MissionMapAnimationController::UpdateClearedNodeStateCoroutine(GlobalNamespace::MissionNode* lastClearedMissionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::UpdateClearedNodeStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateClearedNodeStateCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lastClearedMissionNode)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, lastClearedMissionNode);
}
// Autogenerated method: MissionMapAnimationController.UpdateStageCoroutine
System::Collections::IEnumerator* GlobalNamespace::MissionMapAnimationController::UpdateStageCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::UpdateStageCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStageCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController.UpdateNodesAndConnectionCoroutine
System::Collections::IEnumerator* GlobalNamespace::MissionMapAnimationController::UpdateNodesAndConnectionCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::UpdateNodesAndConnectionCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateNodesAndConnectionCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12
#include "GlobalNamespace/MissionMapAnimationController_-UpdateMissionMapCoroutine-d__12.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.System.IDisposable.Dispose
void GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.MoveNext
bool GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::MoveNext();
}
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13
#include "GlobalNamespace/MissionMapAnimationController_-UpdateClearedNodeStateCoroutine-d__13.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.MoveNext
bool GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::MoveNext();
}
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionMapAnimationController/<UpdateStageCoroutine>d__14
#include "GlobalNamespace/MissionMapAnimationController_-UpdateStageCoroutine-d__14.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.System.IDisposable.Dispose
void GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.MoveNext
bool GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::MoveNext();
}
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionMapAnimationController/<>c
#include "GlobalNamespace/MissionMapAnimationController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MissionMapAnimationController/<>c <>9
GlobalNamespace::MissionMapAnimationController::$$c* GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MissionMapAnimationController::$$c*>("", "MissionMapAnimationController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MissionMapAnimationController/<>c <>9
void GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9(GlobalNamespace::MissionMapAnimationController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionMapAnimationController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_0
System::Func_2<GlobalNamespace::MissionNodeConnection*, float>* GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::MissionNodeConnection*, float>*>("", "MissionMapAnimationController/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_0
void GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_0(System::Func_2<GlobalNamespace::MissionNodeConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionMapAnimationController/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_1
System::Func_2<GlobalNamespace::MissionNodeConnection*, float>* GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::MissionNodeConnection*, float>*>("", "MissionMapAnimationController/<>c", "<>9__15_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_1
void GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_1(System::Func_2<GlobalNamespace::MissionNodeConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionMapAnimationController/<>c", "<>9__15_1", value)));
}
// Autogenerated method: MissionMapAnimationController/<>c..cctor
void GlobalNamespace::MissionMapAnimationController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionMapAnimationController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<>c.<UpdateNodesAndConnectionCoroutine>b__15_0
float GlobalNamespace::MissionMapAnimationController::$$c::$UpdateNodesAndConnectionCoroutine$b__15_0(GlobalNamespace::MissionNodeConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$$c::<UpdateNodesAndConnectionCoroutine>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateNodesAndConnectionCoroutine>b__15_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection))));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, connection);
}
// Autogenerated method: MissionMapAnimationController/<>c.<UpdateNodesAndConnectionCoroutine>b__15_1
float GlobalNamespace::MissionMapAnimationController::$$c::$UpdateNodesAndConnectionCoroutine$b__15_1(GlobalNamespace::MissionNodeConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$$c::<UpdateNodesAndConnectionCoroutine>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateNodesAndConnectionCoroutine>b__15_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection))));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, connection);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15
#include "GlobalNamespace/MissionMapAnimationController_-UpdateNodesAndConnectionCoroutine-d__15.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.IDisposable.Dispose
void GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.MoveNext
bool GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::MoveNext();
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionDataSO
#include "GlobalNamespace/MissionDataSO.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionNode.get_missionData
GlobalNamespace::MissionDataSO* GlobalNamespace::MissionNode::get_missionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNode::get_missionData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_childNodes
::Array<GlobalNamespace::MissionNode*>* GlobalNamespace::MissionNode::get_childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNode::get_childNodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_childNodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MissionNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_missionNodeVisualController
GlobalNamespace::MissionNodeVisualController* GlobalNamespace::MissionNode::get_missionNodeVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNode::get_missionNodeVisualController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionNodeVisualController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNodeVisualController*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_letterPartName
::Il2CppString* GlobalNamespace::MissionNode::get_letterPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNode::get_letterPartName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_letterPartName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_numberPartName
int GlobalNamespace::MissionNode::get_numberPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNode::get_numberPartName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_numberPartName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_missionId
::Il2CppString* GlobalNamespace::MissionNode::get_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNode::get_missionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_formattedMissionNodeName
::Il2CppString* GlobalNamespace::MissionNode::get_formattedMissionNodeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNode::get_formattedMissionNodeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_formattedMissionNodeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_position
UnityEngine::Vector2 GlobalNamespace::MissionNode::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNode::get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_radius
float GlobalNamespace::MissionNode::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNode::get_radius");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionNodeConnection.get_parentMissionNode
GlobalNamespace::MissionNodeVisualController* GlobalNamespace::MissionNodeConnection::get_parentMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeConnection::get_parentMissionNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parentMissionNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNodeVisualController*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.get_childMissionNode
GlobalNamespace::MissionNodeVisualController* GlobalNamespace::MissionNodeConnection::get_childMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeConnection::get_childMissionNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_childMissionNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNodeVisualController*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.get_isActive
bool GlobalNamespace::MissionNodeConnection::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeConnection::get_isActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.Setup
void GlobalNamespace::MissionNodeConnection::Setup(GlobalNamespace::MissionNodeVisualController* parentMissionNode, GlobalNamespace::MissionNodeVisualController* childMissionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeConnection::Setup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentMissionNode, childMissionNode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentMissionNode, childMissionNode);
}
// Autogenerated method: MissionNodeConnection.UpdateConnectionRectTransform
void GlobalNamespace::MissionNodeConnection::UpdateConnectionRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeConnection::UpdateConnectionRectTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateConnectionRectTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.SetActive
void GlobalNamespace::MissionNodeConnection::SetActive(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeConnection::SetActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animated)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: MissionNodeConnection.MissionConnectionEnabledDidFinish
void GlobalNamespace::MissionNodeConnection::MissionConnectionEnabledDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeConnection::MissionConnectionEnabledDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MissionConnectionEnabledDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeGizmos
#include "GlobalNamespace/MissionNodeGizmos.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeNameGenerator
#include "GlobalNamespace/MissionNodeNameGenerator.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionNodeSelectionManager
#include "GlobalNamespace/MissionNodeSelectionManager.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionNodeSelectionManager.add_didSelectMissionNodeEvent
void GlobalNamespace::MissionNodeSelectionManager::add_didSelectMissionNodeEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeSelectionManager::add_didSelectMissionNodeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didSelectMissionNodeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeSelectionManager.remove_didSelectMissionNodeEvent
void GlobalNamespace::MissionNodeSelectionManager::remove_didSelectMissionNodeEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeSelectionManager::remove_didSelectMissionNodeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didSelectMissionNodeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeSelectionManager.DeselectSelectedNode
void GlobalNamespace::MissionNodeSelectionManager::DeselectSelectedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeSelectionManager::DeselectSelectedNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeselectSelectedNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeSelectionManager.Start
void GlobalNamespace::MissionNodeSelectionManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeSelectionManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeSelectionManager.OnDestroy
void GlobalNamespace::MissionNodeSelectionManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeSelectionManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeSelectionManager.HandleNodeWasSelect
void GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasSelect(GlobalNamespace::MissionNodeVisualController* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasSelect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNodeWasSelect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionNode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionNode);
}
// Autogenerated method: MissionNodeSelectionManager.HandleNodeWasDisplayed
void GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasDisplayed(GlobalNamespace::MissionNodeVisualController* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasDisplayed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNodeWasDisplayed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionNode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionNode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeUpdatePositionInEditMode
#include "GlobalNamespace/MissionNodeUpdatePositionInEditMode.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: MissionToggle
#include "GlobalNamespace/MissionToggle.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionNodeVisualController.add_nodeWasSelectEvent
void GlobalNamespace::MissionNodeVisualController::add_nodeWasSelectEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::add_nodeWasSelectEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_nodeWasSelectEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.remove_nodeWasSelectEvent
void GlobalNamespace::MissionNodeVisualController::remove_nodeWasSelectEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::remove_nodeWasSelectEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_nodeWasSelectEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.add_nodeWasDisplayedEvent
void GlobalNamespace::MissionNodeVisualController::add_nodeWasDisplayedEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::add_nodeWasDisplayedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_nodeWasDisplayedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.remove_nodeWasDisplayedEvent
void GlobalNamespace::MissionNodeVisualController::remove_nodeWasDisplayedEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::remove_nodeWasDisplayedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_nodeWasDisplayedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.get_missionNode
GlobalNamespace::MissionNode* GlobalNamespace::MissionNodeVisualController::get_missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::get_missionNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_selected
bool GlobalNamespace::MissionNodeVisualController::get_selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::get_selected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_selected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_isInitialized
bool GlobalNamespace::MissionNodeVisualController::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_cleared
bool GlobalNamespace::MissionNodeVisualController::get_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::get_cleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_cleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_interactable
bool GlobalNamespace::MissionNodeVisualController::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::get_interactable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.SetSelected
void GlobalNamespace::MissionNodeVisualController::SetSelected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::SetSelected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.OnEnable
void GlobalNamespace::MissionNodeVisualController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Awake
void GlobalNamespace::MissionNodeVisualController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Start
void GlobalNamespace::MissionNodeVisualController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Reset
void GlobalNamespace::MissionNodeVisualController::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.OnDestroy
void GlobalNamespace::MissionNodeVisualController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Init
void GlobalNamespace::MissionNodeVisualController::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Setup
void GlobalNamespace::MissionNodeVisualController::Setup(bool cleared, bool interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::Setup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cleared, interactable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cleared, interactable);
}
// Autogenerated method: MissionNodeVisualController.SetupToggle
void GlobalNamespace::MissionNodeVisualController::SetupToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::SetupToggle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetupToggle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.SetMissionCleared
void GlobalNamespace::MissionNodeVisualController::SetMissionCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMissionCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.SetInteractable
void GlobalNamespace::MissionNodeVisualController::SetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::SetInteractable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetInteractable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.ChangeNodeSelection
void GlobalNamespace::MissionNodeVisualController::ChangeNodeSelection(bool selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::ChangeNodeSelection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ChangeNodeSelection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(selected)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: MissionNodeVisualController.HandleMissionToggleSelectionDidChange
void GlobalNamespace::MissionNodeVisualController::HandleMissionToggleSelectionDidChange(GlobalNamespace::MissionToggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodeVisualController::HandleMissionToggleSelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMissionToggleSelectionDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(toggle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodesHelper
#include "GlobalNamespace/MissionNodesHelper.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionNodesHelper.GetAllNodesFromRoot
System::Collections::Generic::HashSet_1<GlobalNamespace::MissionNode*>* GlobalNamespace::MissionNodesHelper::GetAllNodesFromRoot(GlobalNamespace::MissionNode* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesHelper::GetAllNodesFromRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionNodesHelper", "GetAllNodesFromRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<GlobalNamespace::MissionNode*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root);
}
// Autogenerated method: MissionNodesHelper.VisitAllTree
void GlobalNamespace::MissionNodesHelper::VisitAllTree(GlobalNamespace::MissionNode* node, System::Collections::Generic::HashSet_1<GlobalNamespace::MissionNode*>* visitedNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesHelper::VisitAllTree");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionNodesHelper", "VisitAllTree", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node, visitedNodes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, node, visitedNodes);
}
// Autogenerated method: MissionNodesHelper.CycleDetection
bool GlobalNamespace::MissionNodesHelper::CycleDetection(GlobalNamespace::MissionNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesHelper::CycleDetection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionNodesHelper", "CycleDetection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, node);
}
// Autogenerated method: MissionNodesHelper.CycleDetection
bool GlobalNamespace::MissionNodesHelper::CycleDetection(GlobalNamespace::MissionNode* node, int layer, System::Collections::Generic::Dictionary_2<GlobalNamespace::MissionNode*, int>* layers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesHelper::CycleDetection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionNodesHelper", "CycleDetection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node, layer, layers)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, node, layer, layers);
}
// Autogenerated method: MissionNodesHelper.FinalNodeIsFinal
bool GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal(GlobalNamespace::MissionNode* finalNode, GlobalNamespace::MissionNode* rootNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionNodesHelper", "FinalNodeIsFinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(finalNode, rootNode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, finalNode, rootNode);
}
// Autogenerated method: MissionNodesHelper.FinalNodeIsFinal
bool GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal(GlobalNamespace::MissionNode* finalNode, GlobalNamespace::MissionNode* node, System::Collections::Generic::HashSet_1<GlobalNamespace::MissionNode*>* visitedNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionNodesHelper", "FinalNodeIsFinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(finalNode, node, visitedNodes)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, finalNode, node, visitedNodes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionStagesManager
#include "GlobalNamespace/MissionStagesManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionNodesManager.get_rootMissionNode
GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::get_rootMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::get_rootMissionNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rootMissionNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_finalMissionNode
GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::get_finalMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::get_finalMissionNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_finalMissionNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_missionStagesManager
GlobalNamespace::MissionStagesManager* GlobalNamespace::MissionNodesManager::get_missionStagesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::get_missionStagesManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionStagesManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionStagesManager*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_missionProgressModel
GlobalNamespace::CampaignProgressModel* GlobalNamespace::MissionNodesManager::get_missionProgressModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::get_missionProgressModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionProgressModel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::CampaignProgressModel*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_allMissionNodes
::Array<GlobalNamespace::MissionNode*>* GlobalNamespace::MissionNodesManager::get_allMissionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::get_allMissionNodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allMissionNodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MissionNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_IsInitialized
bool GlobalNamespace::MissionNodesManager::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.Awake
void GlobalNamespace::MissionNodesManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.SetupNodeMap
void GlobalNamespace::MissionNodesManager::SetupNodeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::SetupNodeMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetupNodeMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.MissionWasCleared
bool GlobalNamespace::MissionNodesManager::MissionWasCleared(GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::MissionWasCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MissionWasCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionNode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionNode);
}
// Autogenerated method: MissionNodesManager.GetMissionNodeWithModelClearedStateInconsistency
GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::GetMissionNodeWithModelClearedStateInconsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::GetMissionNodeWithModelClearedStateInconsistency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMissionNodeWithModelClearedStateInconsistency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.DidFirstLockedMissionStageChange
bool GlobalNamespace::MissionNodesManager::DidFirstLockedMissionStageChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::DidFirstLockedMissionStageChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidFirstLockedMissionStageChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.UpdateStageLockText
void GlobalNamespace::MissionNodesManager::UpdateStageLockText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::UpdateStageLockText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStageLockText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.GetTopMostNotClearedMissionNode
GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::GetTopMostNotClearedMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::GetTopMostNotClearedMissionNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTopMostNotClearedMissionNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.GetAllMissionNodes
void GlobalNamespace::MissionNodesManager::GetAllMissionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::GetAllMissionNodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllMissionNodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.GetAllMissionNodes
System::Collections::Generic::HashSet_1<GlobalNamespace::MissionNode*>* GlobalNamespace::MissionNodesManager::GetAllMissionNodes(GlobalNamespace::MissionNode* node, System::Collections::Generic::HashSet_1<GlobalNamespace::MissionNode*>* visited) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::GetAllMissionNodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllMissionNodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node, visited)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<GlobalNamespace::MissionNode*>*, false>(this, ___internal__method, node, visited);
}
// Autogenerated method: MissionNodesManager.GetNewEnabledConnection
::Array<GlobalNamespace::MissionNodeConnection*>* GlobalNamespace::MissionNodesManager::GetNewEnabledConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::GetNewEnabledConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNewEnabledConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MissionNodeConnection*>*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.ResetAllNodes
void GlobalNamespace::MissionNodesManager::ResetAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::ResetAllNodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetAllNodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.SetupStages
void GlobalNamespace::MissionNodesManager::SetupStages() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::SetupStages");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetupStages", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.RegisterAllNodes
void GlobalNamespace::MissionNodesManager::RegisterAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::RegisterAllNodes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterAllNodes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.SetupNodeTree
void GlobalNamespace::MissionNodesManager::SetupNodeTree(GlobalNamespace::MissionNodeVisualController* node, bool parentCleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::SetupNodeTree");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetupNodeTree", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node, parentCleared)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, parentCleared);
}
// Autogenerated method: MissionNodesManager.IsNodeInteractable
bool GlobalNamespace::MissionNodesManager::IsNodeInteractable(GlobalNamespace::MissionNodeVisualController* node, bool parentCleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::IsNodeInteractable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsNodeInteractable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node, parentCleared)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, node, parentCleared);
}
// Autogenerated method: MissionNodesManager.SetupNodeConnections
void GlobalNamespace::MissionNodesManager::SetupNodeConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionNodesManager::SetupNodeConnections");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetupNodeConnections", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionStageLockView
#include "GlobalNamespace/MissionStageLockView.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionStageLockView.UpdateLocalPositionY
void GlobalNamespace::MissionStageLockView::UpdateLocalPositionY(float dstPosY, bool animated, float animationDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStageLockView::UpdateLocalPositionY");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateLocalPositionY", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dstPosY, animated, animationDuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dstPosY, animated, animationDuration);
}
// Autogenerated method: MissionStageLockView.Update
void GlobalNamespace::MissionStageLockView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStageLockView::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionStageLockView.UpdateStageLockText
void GlobalNamespace::MissionStageLockView::UpdateStageLockText(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStageLockView::UpdateStageLockText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStageLockText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionStagesManager
#include "GlobalNamespace/MissionStagesManager.hpp"
// Including type: MissionStagesManager/<>c
#include "GlobalNamespace/MissionStagesManager_--c.hpp"
// Including type: MissionStageLockView
#include "GlobalNamespace/MissionStageLockView.hpp"
// Including type: MissionStage
#include "GlobalNamespace/MissionStage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionStagesManager.get_firstLockedMissionStage
GlobalNamespace::MissionStage* GlobalNamespace::MissionStagesManager::get_firstLockedMissionStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::get_firstLockedMissionStage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_firstLockedMissionStage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionStage*, false>(this, ___internal__method);
}
// Autogenerated method: MissionStagesManager.UpdateFirtsLockedMissionStage
void GlobalNamespace::MissionStagesManager::UpdateFirtsLockedMissionStage(int numberOfClearedMissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::UpdateFirtsLockedMissionStage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateFirtsLockedMissionStage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numberOfClearedMissions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, numberOfClearedMissions);
}
// Autogenerated method: MissionStagesManager.InitStages
void GlobalNamespace::MissionStagesManager::InitStages() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::InitStages");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitStages", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionStagesManager.UpdateStageLockPosition
void GlobalNamespace::MissionStagesManager::UpdateStageLockPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::UpdateStageLockPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStageLockPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionStagesManager.UpdateStageLockPositionAnimated
void GlobalNamespace::MissionStagesManager::UpdateStageLockPositionAnimated(bool animated, float animationDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::UpdateStageLockPositionAnimated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStageLockPositionAnimated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animated, animationDuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animated, animationDuration);
}
// Autogenerated method: MissionStagesManager.UpdateStageLockText
void GlobalNamespace::MissionStagesManager::UpdateStageLockText(int numberOfClearedMissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::UpdateStageLockText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStageLockText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numberOfClearedMissions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, numberOfClearedMissions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStagesManager/<>c
#include "GlobalNamespace/MissionStagesManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MissionStage
#include "GlobalNamespace/MissionStage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MissionStagesManager/<>c <>9
GlobalNamespace::MissionStagesManager::$$c* GlobalNamespace::MissionStagesManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MissionStagesManager::$$c*>("", "MissionStagesManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MissionStagesManager/<>c <>9
void GlobalNamespace::MissionStagesManager::$$c::_set_$$9(GlobalNamespace::MissionStagesManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionStagesManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MissionStage,System.Int32> <>9__6_0
System::Func_2<GlobalNamespace::MissionStage*, int>* GlobalNamespace::MissionStagesManager::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::MissionStage*, int>*>("", "MissionStagesManager/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MissionStage,System.Int32> <>9__6_0
void GlobalNamespace::MissionStagesManager::$$c::_set_$$9__6_0(System::Func_2<GlobalNamespace::MissionStage*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionStagesManager/<>c", "<>9__6_0", value)));
}
// Autogenerated method: MissionStagesManager/<>c..cctor
void GlobalNamespace::MissionStagesManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionStagesManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MissionStagesManager/<>c.<InitStages>b__6_0
int GlobalNamespace::MissionStagesManager::$$c::$InitStages$b__6_0(GlobalNamespace::MissionStage* stage) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStagesManager::$$c::<InitStages>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitStages>b__6_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stage))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, stage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionToggle
#include "GlobalNamespace/MissionToggle.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.Interactable
#include "HMUI/Interactable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionToggle.add_selectionDidChangeEvent
void GlobalNamespace::MissionToggle::add_selectionDidChangeEvent(System::Action_1<GlobalNamespace::MissionToggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::add_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.remove_selectionDidChangeEvent
void GlobalNamespace::MissionToggle::remove_selectionDidChangeEvent(System::Action_1<GlobalNamespace::MissionToggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::remove_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.set_missionCleared
void GlobalNamespace::MissionToggle::set_missionCleared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::set_missionCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_missionCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.get_selected
bool GlobalNamespace::MissionToggle::get_selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::get_selected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_selected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.set_selected
void GlobalNamespace::MissionToggle::set_selected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::set_selected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_selected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.get_interactable
bool GlobalNamespace::MissionToggle::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::get_interactable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.set_interactable
void GlobalNamespace::MissionToggle::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::set_interactable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.get_highlighted
bool GlobalNamespace::MissionToggle::get_highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::get_highlighted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_highlighted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.ChangeSelection
void GlobalNamespace::MissionToggle::ChangeSelection(bool value, bool callSelectionDidChange, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::ChangeSelection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ChangeSelection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, callSelectionDidChange, ignoreCurrentValue)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, callSelectionDidChange, ignoreCurrentValue);
}
// Autogenerated method: MissionToggle.ChangeHighlight
void GlobalNamespace::MissionToggle::ChangeHighlight(bool value, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::ChangeHighlight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ChangeHighlight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, ignoreCurrentValue)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, ignoreCurrentValue);
}
// Autogenerated method: MissionToggle.SetText
void GlobalNamespace::MissionToggle::SetText(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: MissionToggle.InternalToggle
void GlobalNamespace::MissionToggle::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::InternalToggle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.RefreshUI
void GlobalNamespace::MissionToggle::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.Start
void GlobalNamespace::MissionToggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.OnPointerClick
void GlobalNamespace::MissionToggle::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::OnPointerClick");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.OnSubmit
void GlobalNamespace::MissionToggle::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::OnSubmit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.OnPointerEnter
void GlobalNamespace::MissionToggle::OnPointerEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::OnPointerEnter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.OnPointerExit
void GlobalNamespace::MissionToggle::OnPointerExit(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionToggle::OnPointerExit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AutoSetupController
#include "GlobalNamespace/AutoSetupController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: AutoSetupData
#include "GlobalNamespace/AutoSetupData.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AutoSetupController.add_didFinishEvent
void GlobalNamespace::AutoSetupController::add_didFinishEvent(System::Action_1<GlobalNamespace::AutoSetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AutoSetupController.remove_didFinishEvent
void GlobalNamespace::AutoSetupController::remove_didFinishEvent(System::Action_1<GlobalNamespace::AutoSetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AutoSetupController.Setup
void GlobalNamespace::AutoSetupController::Setup(GlobalNamespace::AutoSetupData* autoSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::Setup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(autoSetupData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, autoSetupData);
}
// Autogenerated method: AutoSetupController.OnEnable
void GlobalNamespace::AutoSetupController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoSetupController.OnDisable
void GlobalNamespace::AutoSetupController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_0
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::<OnEnable>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_1
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_1(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::<OnEnable>b__12_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isOn))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_2
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_2(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::<OnEnable>b__12_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isOn))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_3
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_3(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::<OnEnable>b__12_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isOn))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_4
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_4(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AutoSetupController::<OnEnable>b__12_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isOn))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AutoSetupData
#include "GlobalNamespace/AutoSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CountdownController
#include "GlobalNamespace/CountdownController.hpp"
// Including type: CountdownElementController
#include "GlobalNamespace/CountdownElementController.hpp"
// Including type: ITimeProvider
#include "GlobalNamespace/ITimeProvider.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CountdownController.Awake
void GlobalNamespace::CountdownController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CountdownController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CountdownController.Update
void GlobalNamespace::CountdownController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CountdownController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CountdownController.StartCountdown
void GlobalNamespace::CountdownController::StartCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CountdownController::StartCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(countdownEndTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CountdownController.UpdateCountdown
void GlobalNamespace::CountdownController::UpdateCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CountdownController::UpdateCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(countdownEndTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CountdownController.StopCountdown
void GlobalNamespace::CountdownController::StopCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CountdownController::StopCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CountdownElementController
#include "GlobalNamespace/CountdownElementController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CountdownElementController.SetTextAndRunAnimation
void GlobalNamespace::CountdownElementController::SetTextAndRunAnimation(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CountdownElementController::SetTextAndRunAnimation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTextAndRunAnimation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: CountdownElementController.StopAndHide
void GlobalNamespace::CountdownElementController::StopAndHide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CountdownElementController::StopAndHide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopAndHide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterScreenLayoutAnimator
#include "GlobalNamespace/MultiplayerLobbyCenterScreenLayoutAnimator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.StartCountdown
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StartCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StartCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.StopCountdown
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StopCountdown(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StopCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instant)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.Move
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::Move(UnityEngine::Vector3 from, UnityEngine::Vector3 to, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::Move");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(from, to, duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, from, to, duration);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.<Move>b__7_0
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::$Move$b__7_0(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::<Move>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Move>b__7_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterScreenSystem
#include "GlobalNamespace/MultiplayerLobbyCenterScreenSystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterStageLayoutAnimator
#include "GlobalNamespace/MultiplayerLobbyCenterStageLayoutAnimator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.StartCountdown
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StartCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StartCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.StopCountdown
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StopCountdown(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StopCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instant)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.Move
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::Move(UnityEngine::Vector3 from, UnityEngine::Vector3 to, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::Move");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(from, to, duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, from, to, duration);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.<Move>b__7_0
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::$Move$b__7_0(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::<Move>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Move>b__7_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterStageManager
#include "GlobalNamespace/MultiplayerLobbyCenterStageManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: CenterStageScreenController
#include "GlobalNamespace/CenterStageScreenController.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLobbyCenterStageManager.Init
void GlobalNamespace::MultiplayerLobbyCenterStageManager::Init(float innerCircleRadius, float minOuterCircleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterStageManager::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(innerCircleRadius, minOuterCircleRadius)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, innerCircleRadius, minOuterCircleRadius);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.ActivateCenterStageManager
void GlobalNamespace::MultiplayerLobbyCenterStageManager::ActivateCenterStageManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterStageManager::ActivateCenterStageManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ActivateCenterStageManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.DeactivateCenterStageManager
void GlobalNamespace::MultiplayerLobbyCenterStageManager::DeactivateCenterStageManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterStageManager::DeactivateCenterStageManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeactivateCenterStageManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.RecalculateCenterPosition
void GlobalNamespace::MultiplayerLobbyCenterStageManager::RecalculateCenterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyCenterStageManager::RecalculateCenterPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecalculateCenterPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreateServerFormController
#include "GlobalNamespace/CreateServerFormController.hpp"
// Including type: FormattedFloatListSettingsController
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
// Including type: CreateServerFormData
#include "GlobalNamespace/CreateServerFormData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMinPlayers
int GlobalNamespace::CreateServerFormController::_get_kMinPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerFormController::_get_kMinPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CreateServerFormController", "kMinPlayers"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMinPlayers
void GlobalNamespace::CreateServerFormController::_set_kMinPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerFormController::_set_kMinPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreateServerFormController", "kMinPlayers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPlayers
int GlobalNamespace::CreateServerFormController::_get_kMaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerFormController::_get_kMaxPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CreateServerFormController", "kMaxPlayers"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPlayers
void GlobalNamespace::CreateServerFormController::_set_kMaxPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerFormController::_set_kMaxPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreateServerFormController", "kMaxPlayers", value));
}
// Autogenerated method: CreateServerFormController.get_formData
GlobalNamespace::CreateServerFormData GlobalNamespace::CreateServerFormController::get_formData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerFormController::get_formData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_formData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::CreateServerFormData, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerFormController.Setup
void GlobalNamespace::CreateServerFormController::Setup(int selectedNumberOfPlayers, bool netDiscoverable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerFormController::Setup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(selectedNumberOfPlayers, netDiscoverable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selectedNumberOfPlayers, netDiscoverable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicsDropdown
#include "GlobalNamespace/BeatmapCharacteristicsDropdown.hpp"
// Including type: BeatmapCharacteristicsDropdown/<>c
#include "GlobalNamespace/BeatmapCharacteristicsDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCharacteristicsDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapCharacteristicsDropdown::add_didSelectCellWithIdxEvent(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapCharacteristicsDropdown::remove_didSelectCellWithIdxEvent(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.Start
void GlobalNamespace::BeatmapCharacteristicsDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.OnDestroy
void GlobalNamespace::BeatmapCharacteristicsDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.GetSelectedBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicsDropdown::GetSelectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::GetSelectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.SelectCellWithBeatmapCharacteristic
void GlobalNamespace::BeatmapCharacteristicsDropdown::SelectCellWithBeatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::SelectCellWithBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectCellWithBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapCharacteristic)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::BeatmapCharacteristicsDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dropdownWithTableView, idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCharacteristicsDropdown/<>c
#include "GlobalNamespace/BeatmapCharacteristicsDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapCharacteristicsDropdown/<>c <>9
GlobalNamespace::BeatmapCharacteristicsDropdown::$$c* GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapCharacteristicsDropdown::$$c*>("", "BeatmapCharacteristicsDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapCharacteristicsDropdown/<>c <>9
void GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_set_$$9(GlobalNamespace::BeatmapCharacteristicsDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicsDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapCharacteristicSO,System.String> <>9__5_0
System::Func_2<GlobalNamespace::BeatmapCharacteristicSO*, ::Il2CppString*>* GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::BeatmapCharacteristicSO*, ::Il2CppString*>*>("", "BeatmapCharacteristicsDropdown/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapCharacteristicSO,System.String> <>9__5_0
void GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_set_$$9__5_0(System::Func_2<GlobalNamespace::BeatmapCharacteristicSO*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicsDropdown/<>c", "<>9__5_0", value)));
}
// Autogenerated method: BeatmapCharacteristicsDropdown/<>c..cctor
void GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapCharacteristicsDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown/<>c.<Start>b__5_0
::Il2CppString* GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::$Start$b__5_0(GlobalNamespace::BeatmapCharacteristicSO* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::<Start>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__5_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapDifficultyDropdown
#include "GlobalNamespace/BeatmapDifficultyDropdown.hpp"
// Including type: BeatmapDifficultyDropdown/<>c
#include "GlobalNamespace/BeatmapDifficultyDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDifficultyDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapDifficultyDropdown::add_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultyDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapDifficultyDropdown::remove_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultyDropdown.get_beatmapDifficultyData
System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::BeatmapDifficultyMask, ::Il2CppString*>*>* GlobalNamespace::BeatmapDifficultyDropdown::get_beatmapDifficultyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::get_beatmapDifficultyData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapDifficultyData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::BeatmapDifficultyMask, ::Il2CppString*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.get_includeAllDifficulties
bool GlobalNamespace::BeatmapDifficultyDropdown::get_includeAllDifficulties() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::get_includeAllDifficulties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_includeAllDifficulties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.set_includeAllDifficulties
void GlobalNamespace::BeatmapDifficultyDropdown::set_includeAllDifficulties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::set_includeAllDifficulties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_includeAllDifficulties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultyDropdown.Start
void GlobalNamespace::BeatmapDifficultyDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.OnDestroy
void GlobalNamespace::BeatmapDifficultyDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.GetSelectedBeatmapDifficultyMask
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyDropdown::GetSelectedBeatmapDifficultyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::GetSelectedBeatmapDifficultyMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSelectedBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficultyMask, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.SelectCellWithBeatmapDifficultyMask
void GlobalNamespace::BeatmapDifficultyDropdown::SelectCellWithBeatmapDifficultyMask(GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::SelectCellWithBeatmapDifficultyMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectCellWithBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapDifficultyMask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapDifficultyMask);
}
// Autogenerated method: BeatmapDifficultyDropdown.GetIdxForBeatmapDifficultyMask
int GlobalNamespace::BeatmapDifficultyDropdown::GetIdxForBeatmapDifficultyMask(GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::GetIdxForBeatmapDifficultyMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIdxForBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapDifficultyMask)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, beatmapDifficultyMask);
}
// Autogenerated method: BeatmapDifficultyDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::BeatmapDifficultyDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dropdownWithTableView, idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapDifficultyDropdown/<>c
#include "GlobalNamespace/BeatmapDifficultyDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapDifficultyDropdown/<>c <>9
GlobalNamespace::BeatmapDifficultyDropdown::$$c* GlobalNamespace::BeatmapDifficultyDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficultyDropdown::$$c*>("", "BeatmapDifficultyDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapDifficultyDropdown/<>c <>9
void GlobalNamespace::BeatmapDifficultyDropdown::$$c::_set_$$9(GlobalNamespace::BeatmapDifficultyDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapDifficultyDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<BeatmapDifficultyMask,System.String>,System.String> <>9__11_0
System::Func_2<System::Tuple_2<GlobalNamespace::BeatmapDifficultyMask, ::Il2CppString*>*, ::Il2CppString*>* GlobalNamespace::BeatmapDifficultyDropdown::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Tuple_2<GlobalNamespace::BeatmapDifficultyMask, ::Il2CppString*>*, ::Il2CppString*>*>("", "BeatmapDifficultyDropdown/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<BeatmapDifficultyMask,System.String>,System.String> <>9__11_0
void GlobalNamespace::BeatmapDifficultyDropdown::$$c::_set_$$9__11_0(System::Func_2<System::Tuple_2<GlobalNamespace::BeatmapDifficultyMask, ::Il2CppString*>*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapDifficultyDropdown/<>c", "<>9__11_0", value)));
}
// Autogenerated method: BeatmapDifficultyDropdown/<>c..cctor
void GlobalNamespace::BeatmapDifficultyDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown/<>c.<Start>b__11_0
::Il2CppString* GlobalNamespace::BeatmapDifficultyDropdown::$$c::$Start$b__11_0(System::Tuple_2<GlobalNamespace::BeatmapDifficultyMask, ::Il2CppString*>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultyDropdown::$$c::<Start>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServersFilter
#include "GlobalNamespace/GameServersFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayModifiersDropdown
#include "GlobalNamespace/GameplayModifiersDropdown.hpp"
// Including type: GameplayModifiersDropdown/<>c
#include "GlobalNamespace/GameplayModifiersDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifiersDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::GameplayModifiersDropdown::add_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayModifiersDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::GameplayModifiersDropdown::remove_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayModifiersDropdown.get_gameplayModifiersData
System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::GameplayModifierMask, ::Il2CppString*>*>* GlobalNamespace::GameplayModifiersDropdown::get_gameplayModifiersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::get_gameplayModifiersData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameplayModifiersData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::GameplayModifierMask, ::Il2CppString*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown.Start
void GlobalNamespace::GameplayModifiersDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown.OnDestroy
void GlobalNamespace::GameplayModifiersDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown.GetSelectedGameplayModifierMask
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifiersDropdown::GetSelectedGameplayModifierMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::GetSelectedGameplayModifierMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSelectedGameplayModifierMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifierMask, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown.SelectCellWithGameplayModifierMask
void GlobalNamespace::GameplayModifiersDropdown::SelectCellWithGameplayModifierMask(GlobalNamespace::GameplayModifierMask gameplayModifierMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::SelectCellWithGameplayModifierMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectCellWithGameplayModifierMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameplayModifierMask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameplayModifierMask);
}
// Autogenerated method: GameplayModifiersDropdown.GetIdxForGameplayModifierMask
int GlobalNamespace::GameplayModifiersDropdown::GetIdxForGameplayModifierMask(GlobalNamespace::GameplayModifierMask gameplayModifierMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::GetIdxForGameplayModifierMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIdxForGameplayModifierMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameplayModifierMask)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, gameplayModifierMask);
}
// Autogenerated method: GameplayModifiersDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::GameplayModifiersDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dropdownWithTableView, idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: GameplayModifiersDropdown.<get_gameplayModifiersData>b__7_0
System::Tuple_2<GlobalNamespace::GameplayModifierMask, ::Il2CppString*>* GlobalNamespace::GameplayModifiersDropdown::$get_gameplayModifiersData$b__7_0(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::<get_gameplayModifiersData>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_gameplayModifiersData>b__7_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value))));
  return ::il2cpp_utils::RunMethodThrow<System::Tuple_2<GlobalNamespace::GameplayModifierMask, ::Il2CppString*>*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayModifiersDropdown/<>c
#include "GlobalNamespace/GameplayModifiersDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GameplayModifiersDropdown/<>c <>9
GlobalNamespace::GameplayModifiersDropdown::$$c* GlobalNamespace::GameplayModifiersDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersDropdown::$$c*>("", "GameplayModifiersDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GameplayModifiersDropdown/<>c <>9
void GlobalNamespace::GameplayModifiersDropdown::$$c::_set_$$9(GlobalNamespace::GameplayModifiersDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<GameplayModifierMask,System.String>,System.String> <>9__8_0
System::Func_2<System::Tuple_2<GlobalNamespace::GameplayModifierMask, ::Il2CppString*>*, ::Il2CppString*>* GlobalNamespace::GameplayModifiersDropdown::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Tuple_2<GlobalNamespace::GameplayModifierMask, ::Il2CppString*>*, ::Il2CppString*>*>("", "GameplayModifiersDropdown/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<GameplayModifierMask,System.String>,System.String> <>9__8_0
void GlobalNamespace::GameplayModifiersDropdown::$$c::_set_$$9__8_0(System::Func_2<System::Tuple_2<GlobalNamespace::GameplayModifierMask, ::Il2CppString*>*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersDropdown/<>c", "<>9__8_0", value)));
}
// Autogenerated method: GameplayModifiersDropdown/<>c..cctor
void GlobalNamespace::GameplayModifiersDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayModifiersDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown/<>c.<Start>b__8_0
::Il2CppString* GlobalNamespace::GameplayModifiersDropdown::$$c::$Start$b__8_0(System::Tuple_2<GlobalNamespace::GameplayModifierMask, ::Il2CppString*>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersDropdown::$$c::<Start>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__8_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPacksDropdown
#include "GlobalNamespace/SongPacksDropdown.hpp"
// Including type: SongPacksDropdown/<>c
#include "GlobalNamespace/SongPacksDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SongPacksDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::SongPacksDropdown::add_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongPacksDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::SongPacksDropdown::remove_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongPacksDropdown.get_songPacks
System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*>* GlobalNamespace::SongPacksDropdown::get_songPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::get_songPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.Start
void GlobalNamespace::SongPacksDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.OnDestroy
void GlobalNamespace::SongPacksDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.GetSelectedSongPackMask
GlobalNamespace::SongPackMask GlobalNamespace::SongPacksDropdown::GetSelectedSongPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::GetSelectedSongPackMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSelectedSongPackMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.SelectCellWithSongPackMask
void GlobalNamespace::SongPacksDropdown::SelectCellWithSongPackMask(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::SelectCellWithSongPackMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectCellWithSongPackMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songPackMask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPacksDropdown.GetIdxForSongPackMask
int GlobalNamespace::SongPacksDropdown::GetIdxForSongPackMask(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::GetIdxForSongPackMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIdxForSongPackMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songPackMask)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPacksDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dropdownWithTableView, idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPacksDropdown/<>c
#include "GlobalNamespace/SongPacksDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly SongPacksDropdown/<>c <>9
GlobalNamespace::SongPacksDropdown::$$c* GlobalNamespace::SongPacksDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SongPacksDropdown::$$c*>("", "SongPacksDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly SongPacksDropdown/<>c <>9
void GlobalNamespace::SongPacksDropdown::$$c::_set_$$9(GlobalNamespace::SongPacksDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPacksDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<SongPackMask,System.String>,System.String> <>9__7_0
System::Func_2<System::Tuple_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*, ::Il2CppString*>* GlobalNamespace::SongPacksDropdown::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Tuple_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*, ::Il2CppString*>*>("", "SongPacksDropdown/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<SongPackMask,System.String>,System.String> <>9__7_0
void GlobalNamespace::SongPacksDropdown::$$c::_set_$$9__7_0(System::Func_2<System::Tuple_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPacksDropdown/<>c", "<>9__7_0", value)));
}
// Autogenerated method: SongPacksDropdown/<>c..cctor
void GlobalNamespace::SongPacksDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPacksDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPacksDropdown/<>c.<Start>b__7_0
::Il2CppString* GlobalNamespace::SongPacksDropdown::$$c::$Start$b__7_0(System::Tuple_2<GlobalNamespace::SongPackMask, ::Il2CppString*>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::<Start>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__7_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelLoader
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`5
#include "System/Action_5.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLevelLoader.add_stillDownloadingSongEvent
void GlobalNamespace::MultiplayerLevelLoader::add_stillDownloadingSongEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::add_stillDownloadingSongEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_stillDownloadingSongEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.remove_stillDownloadingSongEvent
void GlobalNamespace::MultiplayerLevelLoader::remove_stillDownloadingSongEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::remove_stillDownloadingSongEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_stillDownloadingSongEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.add_countdownFinishedEvent
void GlobalNamespace::MultiplayerLevelLoader::add_countdownFinishedEvent(System::Action_5<GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::add_countdownFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_countdownFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.remove_countdownFinishedEvent
void GlobalNamespace::MultiplayerLevelLoader::remove_countdownFinishedEvent(System::Action_5<GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::remove_countdownFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_countdownFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.LoadLevel
void GlobalNamespace::MultiplayerLevelLoader::LoadLevel(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float initialStartTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::LoadLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapId, gameplayModifiers, initialStartTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapId, gameplayModifiers, initialStartTime);
}
// Autogenerated method: MultiplayerLevelLoader.SetNewStartTime
void GlobalNamespace::MultiplayerLevelLoader::SetNewStartTime(float newStartTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::SetNewStartTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetNewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newStartTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newStartTime);
}
// Autogenerated method: MultiplayerLevelLoader.ClearLoading
void GlobalNamespace::MultiplayerLevelLoader::ClearLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::ClearLoading");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearLoading", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelLoader.<LoadLevel>b__19_0
bool GlobalNamespace::MultiplayerLevelLoader::$LoadLevel$b__19_0(GlobalNamespace::PreviewDifficultyBeatmapSet* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::<LoadLevel>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadLevel>b__19_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, set);
}
// Autogenerated method: MultiplayerLevelLoader.Tick
void GlobalNamespace::MultiplayerLevelLoader::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::Tick");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelLoader/MultiplayerBeatmapLoaderState
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState NotLoading
GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_NotLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_NotLoading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "NotLoading"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState NotLoading
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_NotLoading(GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_NotLoading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "NotLoading", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState LoadingBeatmap
GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_LoadingBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_LoadingBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "LoadingBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState LoadingBeatmap
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_LoadingBeatmap(GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_LoadingBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "LoadingBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState WaitingForCountdown
GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_WaitingForCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_WaitingForCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "WaitingForCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState WaitingForCountdown
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_WaitingForCountdown(GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_WaitingForCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "WaitingForCountdown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyController
#include "GlobalNamespace/MultiplayerLobbyController.hpp"
// Including type: MultiplayerLobbyAvatarManager
#include "GlobalNamespace/MultiplayerLobbyAvatarManager.hpp"
// Including type: MultiplayerLobbyCenterStageManager
#include "GlobalNamespace/MultiplayerLobbyCenterStageManager.hpp"
// Including type: MultiplayerLobbyAvatarPlaceManager
#include "GlobalNamespace/MultiplayerLobbyAvatarPlaceManager.hpp"
// Including type: MenuEnvironmentManager
#include "GlobalNamespace/MenuEnvironmentManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLobbyController.get_lobbyActivated
bool GlobalNamespace::MultiplayerLobbyController::get_lobbyActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyController::get_lobbyActivated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lobbyActivated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyController.set_lobbyActivated
void GlobalNamespace::MultiplayerLobbyController::set_lobbyActivated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyController::set_lobbyActivated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_lobbyActivated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyController.ActivateMultiplayerLobby
void GlobalNamespace::MultiplayerLobbyController::ActivateMultiplayerLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyController::ActivateMultiplayerLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ActivateMultiplayerLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyController.DeactivateMultiplayerLobby
void GlobalNamespace::MultiplayerLobbyController::DeactivateMultiplayerLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyController::DeactivateMultiplayerLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeactivateMultiplayerLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerMenuClient
#include "GlobalNamespace/MultiplayerMenuClient.hpp"
// Including type: MenuPlayerController
#include "GlobalNamespace/MenuPlayerController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerMenuClient.LateUpdate
void GlobalNamespace::MultiplayerMenuClient::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerMenuClient::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayerOptionsTableCell
#include "GlobalNamespace/NetworkPlayerOptionsTableCell.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetworkPlayerOptionsTableCell.get_player
GlobalNamespace::INetworkPlayer* GlobalNamespace::NetworkPlayerOptionsTableCell::get_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::get_player");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_player", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.set_player
void GlobalNamespace::NetworkPlayerOptionsTableCell::set_player(GlobalNamespace::INetworkPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::set_player");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_player", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Refresh
void GlobalNamespace::NetworkPlayerOptionsTableCell::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Refresh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Block
void GlobalNamespace::NetworkPlayerOptionsTableCell::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Block");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Unblock
void GlobalNamespace::NetworkPlayerOptionsTableCell::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Unblock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Join
void GlobalNamespace::NetworkPlayerOptionsTableCell::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Join");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Invite
void GlobalNamespace::NetworkPlayerOptionsTableCell::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Invite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Kick
void GlobalNamespace::NetworkPlayerOptionsTableCell::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Kick");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Leave
void GlobalNamespace::NetworkPlayerOptionsTableCell::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Leave");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayerTableCell
#include "GlobalNamespace/NetworkPlayerTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetworkPlayerTableCell.get_showSeparator
bool GlobalNamespace::NetworkPlayerTableCell::get_showSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::get_showSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_showSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerTableCell.set_showSeparator
void GlobalNamespace::NetworkPlayerTableCell::set_showSeparator(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::set_showSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_showSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayerTableCell.SetData
void GlobalNamespace::NetworkPlayerTableCell::SetData(::Il2CppString* userName, bool isOpenParty, bool wantsToPlayNextLevel, bool isMyPartyOwner, bool isMe) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userName, isOpenParty, wantsToPlayNextLevel, isMyPartyOwner, isMe)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userName, isOpenParty, wantsToPlayNextLevel, isMyPartyOwner, isMe);
}
// Autogenerated method: NetworkPlayerTableCell.RefreshVisuals
void GlobalNamespace::NetworkPlayerTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerTableCell.get_activeColor
UnityEngine::Color GlobalNamespace::NetworkPlayerTableCell::get_activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::get_activeColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_activeColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerTableCell.SelectionDidChange
void GlobalNamespace::NetworkPlayerTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::SelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transitionType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: NetworkPlayerTableCell.HighlightDidChange
void GlobalNamespace::NetworkPlayerTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::HighlightDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transitionType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayersTableView
#include "GlobalNamespace/NetworkPlayersTableView.hpp"
// Including type: NetworkPlayersTableView/CellInfo
#include "GlobalNamespace/NetworkPlayersTableView_CellInfo.hpp"
// Including type: NetworkPlayerTableCell
#include "GlobalNamespace/NetworkPlayerTableCell.hpp"
// Including type: NetworkPlayerOptionsTableCell
#include "GlobalNamespace/NetworkPlayerOptionsTableCell.hpp"
// Including type: LevelPackHeaderTableCell
#include "GlobalNamespace/LevelPackHeaderTableCell.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kPlayerCellIdentifier
::Il2CppString* GlobalNamespace::NetworkPlayersTableView::_get_kPlayerCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_get_kPlayerCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkPlayersTableView", "kPlayerCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayerCellIdentifier
void GlobalNamespace::NetworkPlayersTableView::_set_kPlayerCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_set_kPlayerCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView", "kPlayerCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kHeaderCellIdentifier
::Il2CppString* GlobalNamespace::NetworkPlayersTableView::_get_kHeaderCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_get_kHeaderCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkPlayersTableView", "kHeaderCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kHeaderCellIdentifier
void GlobalNamespace::NetworkPlayersTableView::_set_kHeaderCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_set_kHeaderCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView", "kHeaderCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kOptionsCellIdentifier
::Il2CppString* GlobalNamespace::NetworkPlayersTableView::_get_kOptionsCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_get_kOptionsCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkPlayersTableView", "kOptionsCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kOptionsCellIdentifier
void GlobalNamespace::NetworkPlayersTableView::_set_kOptionsCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_set_kOptionsCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView", "kOptionsCellIdentifier", value));
}
// Autogenerated method: NetworkPlayersTableView.AddPlayers
void GlobalNamespace::NetworkPlayersTableView::AddPlayers(System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* players, ::Il2CppString* title) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::AddPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(players, title)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, players, title);
}
// Autogenerated method: NetworkPlayersTableView.SetParties
void GlobalNamespace::NetworkPlayersTableView::SetParties(System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* partyPlayers, System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* otherPlayers, ::Il2CppString* myPartyTitle, ::Il2CppString* otherPlayersTitle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::SetParties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetParties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(partyPlayers, otherPlayers, myPartyTitle, otherPlayersTitle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, partyPlayers, otherPlayers, myPartyTitle, otherPlayersTitle);
}
// Autogenerated method: NetworkPlayersTableView.HandleCellWasPressed
void GlobalNamespace::NetworkPlayersTableView::HandleCellWasPressed(HMUI::TableView* tableView, HMUI::TableCell* tableCell) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::HandleCellWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleCellWasPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tableView, tableCell)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tableView, tableCell);
}
// Autogenerated method: NetworkPlayersTableView.HasVisibleOptions
bool GlobalNamespace::NetworkPlayersTableView::HasVisibleOptions(GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::HasVisibleOptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NetworkPlayersTableView", "HasVisibleOptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, player);
}
// Autogenerated method: NetworkPlayersTableView.CellSize
float GlobalNamespace::NetworkPlayersTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersTableView.NumberOfCells
int GlobalNamespace::NetworkPlayersTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::NumberOfCells");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::NetworkPlayersTableView::CellForIdx(HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellForIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tableView, row)));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayersTableView/CellInfo
#include "GlobalNamespace/NetworkPlayersTableView_CellInfo.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayersTableView/CellInfo/CellType
#include "GlobalNamespace/NetworkPlayersTableView_CellInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NetworkPlayersTableView/CellInfo/CellType Header
GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Header");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType>("", "NetworkPlayersTableView/CellInfo/CellType", "Header"));
}
// Autogenerated static field setter
// Set static field: static public NetworkPlayersTableView/CellInfo/CellType Header
void GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Header(GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Header");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView/CellInfo/CellType", "Header", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkPlayersTableView/CellInfo/CellType Player
GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Player");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType>("", "NetworkPlayersTableView/CellInfo/CellType", "Player"));
}
// Autogenerated static field setter
// Set static field: static public NetworkPlayersTableView/CellInfo/CellType Player
void GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Player(GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Player");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView/CellInfo/CellType", "Player", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkPlayersTableView/CellInfo/CellType Options
GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Options");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType>("", "NetworkPlayersTableView/CellInfo/CellType", "Options"));
}
// Autogenerated static field setter
// Set static field: static public NetworkPlayersTableView/CellInfo/CellType Options
void GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Options(GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Options");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView/CellInfo/CellType", "Options", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BoolSettingsController
#include "GlobalNamespace/BoolSettingsController.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoolSettingsController.GetInitValue
bool GlobalNamespace::BoolSettingsController::GetInitValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoolSettingsController::GetInitValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BoolSettingsController.ApplyValue
void GlobalNamespace::BoolSettingsController::ApplyValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoolSettingsController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FormattedFloatListSettingsController
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FormattedFloatListSettingsController.add_valueDidChangeEvent
void GlobalNamespace::FormattedFloatListSettingsController::add_valueDidChangeEvent(System::Action_2<GlobalNamespace::FormattedFloatListSettingsController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::add_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FormattedFloatListSettingsController.remove_valueDidChangeEvent
void GlobalNamespace::FormattedFloatListSettingsController::remove_valueDidChangeEvent(System::Action_2<GlobalNamespace::FormattedFloatListSettingsController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::remove_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FormattedFloatListSettingsController.get_value
float GlobalNamespace::FormattedFloatListSettingsController::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::get_value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FormattedFloatListSettingsController.get_values
::Array<float>* GlobalNamespace::FormattedFloatListSettingsController::get_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::get_values");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_values", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method);
}
// Autogenerated method: FormattedFloatListSettingsController.set_values
void GlobalNamespace::FormattedFloatListSettingsController::set_values(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::set_values");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_values", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FormattedFloatListSettingsController.SetValue
void GlobalNamespace::FormattedFloatListSettingsController::SetValue(float value, bool callCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::SetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, callCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, callCallback);
}
// Autogenerated method: FormattedFloatListSettingsController.GetInitValues
bool GlobalNamespace::FormattedFloatListSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::GetInitValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, numberOfElements)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: FormattedFloatListSettingsController.ApplyValue
void GlobalNamespace::FormattedFloatListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: FormattedFloatListSettingsController.TextForValue
::Il2CppString* GlobalNamespace::FormattedFloatListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::TextForValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FormattedFloatListSettingsController/ValueType
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsController/ValueType Normal
GlobalNamespace::FormattedFloatListSettingsController::ValueType GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsController::ValueType>("", "FormattedFloatListSettingsController/ValueType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsController/ValueType Normal
void GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normal(GlobalNamespace::FormattedFloatListSettingsController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsController/ValueType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsController/ValueType Normalized
GlobalNamespace::FormattedFloatListSettingsController::ValueType GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsController::ValueType>("", "FormattedFloatListSettingsController/ValueType", "Normalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsController/ValueType Normalized
void GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normalized(GlobalNamespace::FormattedFloatListSettingsController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsController/ValueType", "Normalized", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsController/ValueType InvertedNormalized
GlobalNamespace::FormattedFloatListSettingsController::ValueType GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_InvertedNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_InvertedNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsController::ValueType>("", "FormattedFloatListSettingsController/ValueType", "InvertedNormalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsController/ValueType InvertedNormalized
void GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_InvertedNormalized(GlobalNamespace::FormattedFloatListSettingsController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_InvertedNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsController/ValueType", "InvertedNormalized", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FormattedFloatListSettingsValueController
#include "GlobalNamespace/FormattedFloatListSettingsValueController.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FormattedFloatListSettingsValueController.GetInitValues
bool GlobalNamespace::FormattedFloatListSettingsValueController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::GetInitValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, numberOfElements)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: FormattedFloatListSettingsValueController.ApplyValue
void GlobalNamespace::FormattedFloatListSettingsValueController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: FormattedFloatListSettingsValueController.TextForValue
::Il2CppString* GlobalNamespace::FormattedFloatListSettingsValueController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::TextForValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FormattedFloatListSettingsValueController/ValueType
#include "GlobalNamespace/FormattedFloatListSettingsValueController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsValueController/ValueType Normal
GlobalNamespace::FormattedFloatListSettingsValueController::ValueType GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsValueController::ValueType>("", "FormattedFloatListSettingsValueController/ValueType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsValueController/ValueType Normal
void GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normal(GlobalNamespace::FormattedFloatListSettingsValueController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsValueController/ValueType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsValueController/ValueType Normalized
GlobalNamespace::FormattedFloatListSettingsValueController::ValueType GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsValueController::ValueType>("", "FormattedFloatListSettingsValueController/ValueType", "Normalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsValueController/ValueType Normalized
void GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normalized(GlobalNamespace::FormattedFloatListSettingsValueController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsValueController/ValueType", "Normalized", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsValueController/ValueType InvertedNormalized
GlobalNamespace::FormattedFloatListSettingsValueController::ValueType GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_InvertedNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_InvertedNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsValueController::ValueType>("", "FormattedFloatListSettingsValueController/ValueType", "InvertedNormalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsValueController/ValueType InvertedNormalized
void GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_InvertedNormalized(GlobalNamespace::FormattedFloatListSettingsValueController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_InvertedNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsValueController/ValueType", "InvertedNormalized", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IncDecSettingsController
#include "GlobalNamespace/IncDecSettingsController.hpp"
// Including type: StepValuePicker
#include "GlobalNamespace/StepValuePicker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IncDecSettingsController.set_enableDec
void GlobalNamespace::IncDecSettingsController::set_enableDec(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::set_enableDec");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableDec", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecSettingsController.set_enableInc
void GlobalNamespace::IncDecSettingsController::set_enableInc(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::set_enableInc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableInc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecSettingsController.set_text
void GlobalNamespace::IncDecSettingsController::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::set_text");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecSettingsController.Awake
void GlobalNamespace::IncDecSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecSettingsController.OnDestroy
void GlobalNamespace::IncDecSettingsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecSettingsController.IncButtonPressed
void GlobalNamespace::IncDecSettingsController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::IncButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecSettingsController.DecButtonPressed
void GlobalNamespace::IncDecSettingsController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::DecButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InputFieldSettingsController
#include "GlobalNamespace/InputFieldSettingsController.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: StringSO
#include "GlobalNamespace/StringSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InputFieldSettingsController.Awake
void GlobalNamespace::InputFieldSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InputFieldSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InputFieldSettingsController.OnDestroy
void GlobalNamespace::InputFieldSettingsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InputFieldSettingsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InputFieldSettingsController.OnEnable
void GlobalNamespace::InputFieldSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InputFieldSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InputFieldSettingsController.HandleInputFieldDidChange
void GlobalNamespace::InputFieldSettingsController::HandleInputFieldDidChange(HMUI::InputFieldView* inputFieldView) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InputFieldSettingsController::HandleInputFieldDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleInputFieldDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputFieldView)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputFieldView);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IntListSettingsController
#include "GlobalNamespace/IntListSettingsController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IntListSettingsController.add_valueChangedEvent
void GlobalNamespace::IntListSettingsController::add_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::add_valueChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_valueChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntListSettingsController.remove_valueChangedEvent
void GlobalNamespace::IntListSettingsController::remove_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::remove_valueChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_valueChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntListSettingsController.InitValues
void GlobalNamespace::IntListSettingsController::InitValues(int numberOfElements, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::InitValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numberOfElements, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, numberOfElements, index);
}
// Autogenerated method: IntListSettingsController.GetInitValues
bool GlobalNamespace::IntListSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::GetInitValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, numberOfElements)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: IntListSettingsController.ApplyValue
void GlobalNamespace::IntListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: IntListSettingsController.TextForValue
::Il2CppString* GlobalNamespace::IntListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::TextForValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ListSettingsController
#include "GlobalNamespace/ListSettingsController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ListSettingsController.GetInitValues
bool GlobalNamespace::ListSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::GetInitValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, numberOfElements)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: ListSettingsController.ApplyValue
void GlobalNamespace::ListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: ListSettingsController.TextForValue
::Il2CppString* GlobalNamespace::ListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::TextForValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated method: ListSettingsController.OnEnable
void GlobalNamespace::ListSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListSettingsController.RefreshUI
void GlobalNamespace::ListSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListSettingsController.Refresh
void GlobalNamespace::ListSettingsController::Refresh(bool applyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::Refresh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(applyValue)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, applyValue);
}
// Autogenerated method: ListSettingsController.IncButtonPressed
void GlobalNamespace::ListSettingsController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::IncButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListSettingsController.DecButtonPressed
void GlobalNamespace::ListSettingsController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::DecButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListSettingsController
#include "GlobalNamespace/NamedIntListSettingsController.hpp"
// Including type: NamedIntListSettingsController/TextValuePair
#include "GlobalNamespace/NamedIntListSettingsController_TextValuePair.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedIntListSettingsController.GetInitValues
bool GlobalNamespace::NamedIntListSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListSettingsController::GetInitValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, numberOfElements)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: NamedIntListSettingsController.ApplyValue
void GlobalNamespace::NamedIntListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListSettingsController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: NamedIntListSettingsController.TextForValue
::Il2CppString* GlobalNamespace::NamedIntListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListSettingsController::TextForValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListSettingsController/TextValuePair
#include "GlobalNamespace/NamedIntListSettingsController_TextValuePair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedIntListSettingsController/TextValuePair.get_localizedText
::Il2CppString* GlobalNamespace::NamedIntListSettingsController::TextValuePair::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListSettingsController::TextValuePair::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PresetsSettingsController
#include "GlobalNamespace/PresetsSettingsController.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: NamedPresetsSO
#include "GlobalNamespace/NamedPresetsSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PresetsSettingsController.GetInitValues
bool GlobalNamespace::PresetsSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PresetsSettingsController::GetInitValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, numberOfElements)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: PresetsSettingsController.ApplyValue
void GlobalNamespace::PresetsSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PresetsSettingsController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: PresetsSettingsController.TextForValue
::Il2CppString* GlobalNamespace::PresetsSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PresetsSettingsController::TextForValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SwitchSettingsController
#include "GlobalNamespace/SwitchSettingsController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SwitchSettingsController.GetInitValue
bool GlobalNamespace::SwitchSettingsController::GetInitValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::GetInitValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.ApplyValue
void GlobalNamespace::SwitchSettingsController::ApplyValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SwitchSettingsController.Awake
void GlobalNamespace::SwitchSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.OnDestroy
void GlobalNamespace::SwitchSettingsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.OnEnable
void GlobalNamespace::SwitchSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.RefreshUI
void GlobalNamespace::SwitchSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.HandleToggleValueDidChange
void GlobalNamespace::SwitchSettingsController::HandleToggleValueDidChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::HandleToggleValueDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleToggleValueDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UrlInputFieldSettingsController
#include "GlobalNamespace/UrlInputFieldSettingsController.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UrlInputFieldSettingsController.HandleInputFieldDidChange
void GlobalNamespace::UrlInputFieldSettingsController::HandleInputFieldDidChange(HMUI::InputFieldView* inputFieldView) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UrlInputFieldSettingsController::HandleInputFieldDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleInputFieldDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputFieldView)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputFieldView);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteJumpStartBeatOffsetDropdown
#include "GlobalNamespace/NoteJumpStartBeatOffsetDropdown.hpp"
// Including type: NoteJumpStartBeatOffsetDropdown/<>c
#include "GlobalNamespace/NoteJumpStartBeatOffsetDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::add_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::remove_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.get_noteJumpStartBeatOffsetData
System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<float, ::Il2CppString*>*>* GlobalNamespace::NoteJumpStartBeatOffsetDropdown::get_noteJumpStartBeatOffsetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::get_noteJumpStartBeatOffsetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffsetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<float, ::Il2CppString*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.Start
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.OnDestroy
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.GetSelectedOffset
float GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetSelectedOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetSelectedOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSelectedOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.SelectCellWithOffset
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::SelectCellWithOffset(float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::SelectCellWithOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectCellWithOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.GetIdxForOffset
int GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetIdxForOffset(float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetIdxForOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetIdxForOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, offset);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dropdownWithTableView, idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteJumpStartBeatOffsetDropdown/<>c
#include "GlobalNamespace/NoteJumpStartBeatOffsetDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly NoteJumpStartBeatOffsetDropdown/<>c <>9
GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c* GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c*>("", "NoteJumpStartBeatOffsetDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly NoteJumpStartBeatOffsetDropdown/<>c <>9
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_set_$$9(GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "NoteJumpStartBeatOffsetDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<System.Single,System.String>,System.String> <>9__7_0
System::Func_2<System::Tuple_2<float, ::Il2CppString*>*, ::Il2CppString*>* GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Tuple_2<float, ::Il2CppString*>*, ::Il2CppString*>*>("", "NoteJumpStartBeatOffsetDropdown/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<System.Single,System.String>,System.String> <>9__7_0
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_set_$$9__7_0(System::Func_2<System::Tuple_2<float, ::Il2CppString*>*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "NoteJumpStartBeatOffsetDropdown/<>c", "<>9__7_0", value)));
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown/<>c..cctor
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteJumpStartBeatOffsetDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown/<>c.<Start>b__7_0
::Il2CppString* GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::$Start$b__7_0(System::Tuple_2<float, ::Il2CppString*>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::<Start>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__7_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerHeightSettingsController
#include "GlobalNamespace/PlayerHeightSettingsController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerHeightSettingsController.add_valueDidChangeEvent
void GlobalNamespace::PlayerHeightSettingsController::add_valueDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::add_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerHeightSettingsController.remove_valueDidChangeEvent
void GlobalNamespace::PlayerHeightSettingsController::remove_valueDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::remove_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerHeightSettingsController.get_value
float GlobalNamespace::PlayerHeightSettingsController::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::get_value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightSettingsController.Awake
void GlobalNamespace::PlayerHeightSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightSettingsController.Init
void GlobalNamespace::PlayerHeightSettingsController::Init(float playerHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playerHeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerHeight);
}
// Autogenerated method: PlayerHeightSettingsController.AutoSetHeight
void GlobalNamespace::PlayerHeightSettingsController::AutoSetHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::AutoSetHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AutoSetHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightSettingsController.RefreshUI
void GlobalNamespace::PlayerHeightSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ServerSettingsController
#include "GlobalNamespace/ServerSettingsController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: SettingsFlowCoordinator
#include "GlobalNamespace/SettingsFlowCoordinator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ServerSettingsController.OnEnable
void GlobalNamespace::ServerSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerSettingsController.OnDisable
void GlobalNamespace::ServerSettingsController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerSettingsController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerSettingsController.SecretServerSettingsButtonPressed
void GlobalNamespace::ServerSettingsController::SecretServerSettingsButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerSettingsController::SecretServerSettingsButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SecretServerSettingsButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SmoothCameraSmoothnessSettingsController
#include "GlobalNamespace/SmoothCameraSmoothnessSettingsController.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SmoothCameraSmoothnessSettingsController.GetInitValues
bool GlobalNamespace::SmoothCameraSmoothnessSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraSmoothnessSettingsController::GetInitValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, numberOfElements)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: SmoothCameraSmoothnessSettingsController.ApplyValue
void GlobalNamespace::SmoothCameraSmoothnessSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraSmoothnessSettingsController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: SmoothCameraSmoothnessSettingsController.TextForValue
::Il2CppString* GlobalNamespace::SmoothCameraSmoothnessSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraSmoothnessSettingsController::TextForValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: WindowResolutionSettingsController
#include "GlobalNamespace/WindowResolutionSettingsController.hpp"
// Including type: Vector2IntSO
#include "GlobalNamespace/Vector2IntSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: WindowResolutionSettingsController.GetInitValues
bool GlobalNamespace::WindowResolutionSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WindowResolutionSettingsController::GetInitValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, numberOfElements)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: WindowResolutionSettingsController.ApplyValue
void GlobalNamespace::WindowResolutionSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WindowResolutionSettingsController::ApplyValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: WindowResolutionSettingsController.TextForValue
::Il2CppString* GlobalNamespace::WindowResolutionSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WindowResolutionSettingsController::TextForValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioLatencyViewController
#include "GlobalNamespace/AudioLatencyViewController.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: HMUI.RangeValuesTextSlider
#include "HMUI/RangeValuesTextSlider.hpp"
// Including type: VisualMetronome
#include "GlobalNamespace/VisualMetronome.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioLatencyViewController.SliderValueDidChange
void GlobalNamespace::AudioLatencyViewController::SliderValueDidChange(HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::SliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SliderValueDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(slider, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: AudioLatencyViewController.HandleOverrideAudioLatencyToggleValueChanged
void GlobalNamespace::AudioLatencyViewController::HandleOverrideAudioLatencyToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::HandleOverrideAudioLatencyToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleOverrideAudioLatencyToggleValueChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isOn)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AudioLatencyViewController.RefreshVisuals
void GlobalNamespace::AudioLatencyViewController::RefreshVisuals(bool overrideAudioLatencyIsEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(overrideAudioLatencyIsEnabled)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, overrideAudioLatencyIsEnabled);
}
// Autogenerated method: AudioLatencyViewController.DidActivate
void GlobalNamespace::AudioLatencyViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::DidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy, screenSystemEnabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: AudioLatencyViewController.OnDestroy
void GlobalNamespace::AudioLatencyViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarEditHistory
#include "GlobalNamespace/AvatarEditHistory.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Menu.ViewControllers.EditAvatarHistorySnapshot
#include "Menu/ViewControllers/EditAvatarHistorySnapshot.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarEditHistory.get_undoAvailable
bool GlobalNamespace::AvatarEditHistory::get_undoAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::get_undoAvailable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_undoAvailable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.get_redoAvailable
bool GlobalNamespace::AvatarEditHistory::get_redoAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::get_redoAvailable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_redoAvailable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.get_currentSnapShot
Menu::ViewControllers::EditAvatarHistorySnapshot* GlobalNamespace::AvatarEditHistory::get_currentSnapShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::get_currentSnapShot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_currentSnapShot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Menu::ViewControllers::EditAvatarHistorySnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.get_lastEditedPart
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::AvatarEditHistory::get_lastEditedPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::get_lastEditedPart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lastEditedPart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EditAvatarViewController::AvatarEditPart, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.Clear
void GlobalNamespace::AvatarEditHistory::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.Undo
void GlobalNamespace::AvatarEditHistory::Undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::Undo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Undo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.Redo
void GlobalNamespace::AvatarEditHistory::Redo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::Redo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Redo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.UpdateEditHistory
void GlobalNamespace::AvatarEditHistory::UpdateEditHistory(GlobalNamespace::AvatarData* avatarData, GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::UpdateEditHistory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateEditHistory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(avatarData, avatarEditPart)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, avatarData, avatarEditPart);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCharacteristicSegmentedControlController
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController.hpp"
// Including type: BeatmapCharacteristicSegmentedControlController/<>c
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController_--c.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.add_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::add_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::add_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.remove_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::remove_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::remove_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.get_selectedBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::get_selectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::get_selectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.Awake
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.OnDestroy
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.SetData
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::SetData(::Array<GlobalNamespace::IDifficultyBeatmapSet*>* difficultyBeatmapSets, GlobalNamespace::BeatmapCharacteristicSO* selectedBeatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::SetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(difficultyBeatmapSets, selectedBeatmapCharacteristic)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmapSets, selectedBeatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.HandleDifficultySegmentedControlDidSelectCell
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::HandleDifficultySegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::HandleDifficultySegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDifficultySegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(segmentedControl, cellIdx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicSegmentedControlController/<>c
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapCharacteristicSegmentedControlController/<>c <>9
GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c*>("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapCharacteristicSegmentedControlController/<>c <>9
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9(GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<IDifficultyBeatmapSet> <>9__10_0
System::Comparison_1<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<GlobalNamespace::IDifficultyBeatmapSet*>*>("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<IDifficultyBeatmapSet> <>9__10_0
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9__10_0(System::Comparison_1<GlobalNamespace::IDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9__10_0", value)));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController/<>c..cctor
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapCharacteristicSegmentedControlController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController/<>c.<SetData>b__10_0
int GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::$SetData$b__10_0(GlobalNamespace::IDifficultyBeatmapSet* a, GlobalNamespace::IDifficultyBeatmapSet* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::<SetData>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__10_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicSelectionViewController
#include "GlobalNamespace/BeatmapCharacteristicSelectionViewController.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCharacteristicSelectionViewController.add_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::add_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSelectionViewController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::add_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.remove_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::remove_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSelectionViewController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::remove_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.get_selectedBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicSelectionViewController::get_selectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::get_selectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.Init
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.HandleBeatmapCharacteristicSegmentedControlDidSelectCell
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::HandleBeatmapCharacteristicSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::HandleBeatmapCharacteristicSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapCharacteristicSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(segmentedControl, cellNumber)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.DidActivate
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy, screenSystemEnabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.DidDeactivate
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy, screenSystemDisabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapDifficultySegmentedControlController
#include "GlobalNamespace/BeatmapDifficultySegmentedControlController.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDifficultySegmentedControlController.add_didSelectDifficultyEvent
void GlobalNamespace::BeatmapDifficultySegmentedControlController::add_didSelectDifficultyEvent(System::Action_2<GlobalNamespace::BeatmapDifficultySegmentedControlController*, GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::add_didSelectDifficultyEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didSelectDifficultyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.remove_didSelectDifficultyEvent
void GlobalNamespace::BeatmapDifficultySegmentedControlController::remove_didSelectDifficultyEvent(System::Action_2<GlobalNamespace::BeatmapDifficultySegmentedControlController*, GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::remove_didSelectDifficultyEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didSelectDifficultyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.get_selectedDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficultySegmentedControlController::get_selectedDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::get_selectedDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_selectedDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.Awake
void GlobalNamespace::BeatmapDifficultySegmentedControlController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.OnDestroy
void GlobalNamespace::BeatmapDifficultySegmentedControlController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.GetClosestDifficultyIndex
int GlobalNamespace::BeatmapDifficultySegmentedControlController::GetClosestDifficultyIndex(GlobalNamespace::BeatmapDifficulty searchDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::GetClosestDifficultyIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClosestDifficultyIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(searchDifficulty)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, searchDifficulty);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.HandleDifficultySegmentedControlDidSelectCell
void GlobalNamespace::BeatmapDifficultySegmentedControlController::HandleDifficultySegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::HandleDifficultySegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDifficultySegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(segmentedControl, cellIdx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.SetData
void GlobalNamespace::BeatmapDifficultySegmentedControlController::SetData(::Array<GlobalNamespace::IDifficultyBeatmap*>* difficultyBeatmaps, GlobalNamespace::BeatmapDifficulty selectedDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::SetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(difficultyBeatmaps, selectedDifficulty)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmaps, selectedDifficulty);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CentralLeaderboardViewController
#include "GlobalNamespace/CentralLeaderboardViewController.hpp"
// Including type: CentralLeaderboardViewController/LeaderboardPanel
#include "GlobalNamespace/CentralLeaderboardViewController_LeaderboardPanel.hpp"
// Including type: CentralLeaderboardViewController/ScoreScopeInfo
#include "GlobalNamespace/CentralLeaderboardViewController_ScoreScopeInfo.hpp"
// Including type: CentralLeaderboardViewController/<>c
#include "GlobalNamespace/CentralLeaderboardViewController_--c.hpp"
// Including type: CentralLeaderboardViewController/<RefreshDelayed>d__36
#include "GlobalNamespace/CentralLeaderboardViewController_-RefreshDelayed-d__36.hpp"
// Including type: CentralLeaderboardViewController/<LoadScoresAsync>d__37
#include "GlobalNamespace/CentralLeaderboardViewController_-LoadScoresAsync-d__37.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: OnlineServices.ServerManager
#include "OnlineServices/ServerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CentralLeaderboardViewController.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::CentralLeaderboardViewController::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.get_hasScoresData
bool GlobalNamespace::CentralLeaderboardViewController::get_hasScoresData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::get_hasScoresData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasScoresData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.HandleDidPressRefreshButton
void GlobalNamespace::CentralLeaderboardViewController::HandleDidPressRefreshButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandleDidPressRefreshButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDidPressRefreshButton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.HandleGameplaySetupViewControllerDidChangeGameplayModifiers
void GlobalNamespace::CentralLeaderboardViewController::HandleGameplaySetupViewControllerDidChangeGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandleGameplaySetupViewControllerDidChangeGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameplaySetupViewControllerDidChangeGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.HandlelatformServicesAvailabilityInfoChanged
void GlobalNamespace::CentralLeaderboardViewController::HandlelatformServicesAvailabilityInfoChanged(OnlineServices::PlatformServicesAvailabilityInfo* availabilityInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandlelatformServicesAvailabilityInfoChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlelatformServicesAvailabilityInfoChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(availabilityInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, availabilityInfo);
}
// Autogenerated method: CentralLeaderboardViewController.HanldeLeaderboardTypeSegmentedControlDidSelectCell
void GlobalNamespace::CentralLeaderboardViewController::HanldeLeaderboardTypeSegmentedControlDidSelectCell(HMUI::SegmentedControl* control, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HanldeLeaderboardTypeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HanldeLeaderboardTypeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(control, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, control, index);
}
// Autogenerated method: CentralLeaderboardViewController.HandleScopeSegmentedControlDidSelectCell
void GlobalNamespace::CentralLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(segmentedControl, cellNumber)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: CentralLeaderboardViewController.HandleScoreForLeaderboardDidUpload
void GlobalNamespace::CentralLeaderboardViewController::HandleScoreForLeaderboardDidUpload(::Il2CppString* leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandleScoreForLeaderboardDidUpload");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleScoreForLeaderboardDidUpload", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leaderboardId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardId);
}
// Autogenerated method: CentralLeaderboardViewController.Refresh
void GlobalNamespace::CentralLeaderboardViewController::Refresh(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(showLoadingIndicator, clear)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: CentralLeaderboardViewController.RefreshDelayed
System::Collections::IEnumerator* GlobalNamespace::CentralLeaderboardViewController::RefreshDelayed(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::RefreshDelayed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshDelayed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(showLoadingIndicator, clear)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: CentralLeaderboardViewController.LoadScoresAsync
void GlobalNamespace::CentralLeaderboardViewController::LoadScoresAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::LoadScoresAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScoresAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.ClearContent
void GlobalNamespace::CentralLeaderboardViewController::ClearContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::ClearContent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearContent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.<DidActivate>b__26_0
void GlobalNamespace::CentralLeaderboardViewController::$DidActivate$b__26_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::<DidActivate>b__26_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__26_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.SetData
void GlobalNamespace::CentralLeaderboardViewController::SetData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::SetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(difficultyBeatmap)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: CentralLeaderboardViewController.DidActivate
void GlobalNamespace::CentralLeaderboardViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::DidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy, screenSystemEnabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: CentralLeaderboardViewController.DidDeactivate
void GlobalNamespace::CentralLeaderboardViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::DidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy, screenSystemDisabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: CentralLeaderboardViewController.OnDestroy
void GlobalNamespace::CentralLeaderboardViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CentralLeaderboardViewController/LeaderboardPanel
#include "GlobalNamespace/CentralLeaderboardViewController_LeaderboardPanel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
