// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnMovementData/NoteJumpValueType
#include "GlobalNamespace/BeatmapObjectSpawnMovementData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapObjectSpawnMovementData/NoteJumpValueType BeatOffset
GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_get_BeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_get_BeatOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType>("", "BeatmapObjectSpawnMovementData/NoteJumpValueType", "BeatOffset"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapObjectSpawnMovementData/NoteJumpValueType BeatOffset
void GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_set_BeatOffset(GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_set_BeatOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectSpawnMovementData/NoteJumpValueType", "BeatOffset", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapObjectSpawnMovementData/NoteJumpValueType JumpDuration
GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_get_JumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_get_JumpDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType>("", "BeatmapObjectSpawnMovementData/NoteJumpValueType", "JumpDuration"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapObjectSpawnMovementData/NoteJumpValueType JumpDuration
void GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_set_JumpDuration(GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_set_JumpDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectSpawnMovementData/NoteJumpValueType", "JumpDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectCallback
#include "GlobalNamespace/BeatmapObjectCallback.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectCallback.Invoke
void GlobalNamespace::BeatmapObjectCallback::Invoke(GlobalNamespace::BeatmapObjectData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteData);
}
// Autogenerated method: BeatmapObjectCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapObjectCallback::BeginInvoke(GlobalNamespace::BeatmapObjectData* noteData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, noteData, callback, object);
}
// Autogenerated method: BeatmapObjectCallback.EndInvoke
void GlobalNamespace::BeatmapObjectCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapEventCallback
#include "GlobalNamespace/BeatmapEventCallback.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEventCallback.Invoke
void GlobalNamespace::BeatmapEventCallback::Invoke(GlobalNamespace::BeatmapEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEventCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: BeatmapEventCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapEventCallback::BeginInvoke(GlobalNamespace::BeatmapEventData* eventData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEventCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, eventData, callback, object);
}
// Autogenerated method: BeatmapEventCallback.EndInvoke
void GlobalNamespace::BeatmapEventCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEventCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackData.hpp"
// Including type: BeatmapObjectCallback
#include "GlobalNamespace/BeatmapObjectCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single aheadTime
float& GlobalNamespace::BeatmapObjectCallbackData::dyn_aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackData::dyn_aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] nextObjectIndexInLine
::Array<int>*& GlobalNamespace::BeatmapObjectCallbackData::dyn_nextObjectIndexInLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackData::dyn_nextObjectIndexInLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextObjectIndexInLine"))->offset;
  return *reinterpret_cast<::Array<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapObjectCallback callback
GlobalNamespace::BeatmapObjectCallback*& GlobalNamespace::BeatmapObjectCallbackData::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackData::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: BeatmapEventCallback
#include "GlobalNamespace/BeatmapEventCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapEventCallback callback
GlobalNamespace::BeatmapEventCallback*& GlobalNamespace::BeatmapEventCallbackData::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEventCallbackData::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapEventCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single aheadTime
float& GlobalNamespace::BeatmapEventCallbackData::dyn_aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEventCallbackData::dyn_aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 nextEventIndex
int& GlobalNamespace::BeatmapEventCallbackData::dyn_nextEventIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEventCallbackData::dyn_nextEventIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextEventIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackData.hpp"
// Including type: BeatmapObjectCallback
#include "GlobalNamespace/BeatmapObjectCallback.hpp"
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: BeatmapEventCallback
#include "GlobalNamespace/BeatmapEventCallback.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapObjectCallbackController.get_isPaused
bool GlobalNamespace::IBeatmapObjectCallbackController::get_isPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::get_isPaused");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectCallbackController.add_beatmapEventDidTriggerEvent
void GlobalNamespace::IBeatmapObjectCallbackController::add_beatmapEventDidTriggerEvent(System::Action_1<GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::add_beatmapEventDidTriggerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDidTriggerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IBeatmapObjectCallbackController.remove_beatmapEventDidTriggerEvent
void GlobalNamespace::IBeatmapObjectCallbackController::remove_beatmapEventDidTriggerEvent(System::Action_1<GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::remove_beatmapEventDidTriggerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDidTriggerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IBeatmapObjectCallbackController.add_callbacksForThisFrameWereProcessedEvent
void GlobalNamespace::IBeatmapObjectCallbackController::add_callbacksForThisFrameWereProcessedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::add_callbacksForThisFrameWereProcessedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_callbacksForThisFrameWereProcessedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IBeatmapObjectCallbackController.remove_callbacksForThisFrameWereProcessedEvent
void GlobalNamespace::IBeatmapObjectCallbackController::remove_callbacksForThisFrameWereProcessedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::remove_callbacksForThisFrameWereProcessedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_callbacksForThisFrameWereProcessedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IBeatmapObjectCallbackController.AddBeatmapObjectCallback
GlobalNamespace::BeatmapObjectCallbackData* GlobalNamespace::IBeatmapObjectCallbackController::AddBeatmapObjectCallback(GlobalNamespace::BeatmapObjectCallback* callback, float aheadTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::AddBeatmapObjectCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(aheadTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectCallbackData*, false>(___instance_arg, ___internal__method, callback, aheadTime);
}
// Autogenerated method: IBeatmapObjectCallbackController.RemoveBeatmapObjectCallback
void GlobalNamespace::IBeatmapObjectCallbackController::RemoveBeatmapObjectCallback(GlobalNamespace::BeatmapObjectCallbackData* callbackData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::RemoveBeatmapObjectCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, callbackData);
}
// Autogenerated method: IBeatmapObjectCallbackController.AddBeatmapEventCallback
GlobalNamespace::BeatmapEventCallbackData* GlobalNamespace::IBeatmapObjectCallbackController::AddBeatmapEventCallback(GlobalNamespace::BeatmapEventCallback* callback, float aheadTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::AddBeatmapEventCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBeatmapEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(aheadTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapEventCallbackData*, false>(___instance_arg, ___internal__method, callback, aheadTime);
}
// Autogenerated method: IBeatmapObjectCallbackController.RemoveBeatmapEventCallback
void GlobalNamespace::IBeatmapObjectCallbackController::RemoveBeatmapEventCallback(GlobalNamespace::BeatmapEventCallbackData* callbackData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::RemoveBeatmapEventCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBeatmapEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, callbackData);
}
// Autogenerated method: IBeatmapObjectCallbackController.SendBeatmapEventDidTriggerEvent
void GlobalNamespace::IBeatmapObjectCallbackController::SendBeatmapEventDidTriggerEvent(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::SendBeatmapEventDidTriggerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendBeatmapEventDidTriggerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapEventData);
}
// Autogenerated method: IBeatmapObjectCallbackController.SetNewBeatmapData
void GlobalNamespace::IBeatmapObjectCallbackController::SetNewBeatmapData(GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::SetNewBeatmapData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNewBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapData);
}
// Autogenerated method: IBeatmapObjectCallbackController.Pause
void GlobalNamespace::IBeatmapObjectCallbackController::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectCallbackController.Resume
void GlobalNamespace::IBeatmapObjectCallbackController::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectCallbackController::Resume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapObjectSpawnController
#include "GlobalNamespace/IBeatmapObjectSpawnController.hpp"
// Including type: BeatmapObjectSpawnMovementData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapObjectSpawnController.get_noteLinesCount
int GlobalNamespace::IBeatmapObjectSpawnController::get_noteLinesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_noteLinesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLinesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_jumpOffsetY
float GlobalNamespace::IBeatmapObjectSpawnController::get_jumpOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_jumpOffsetY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpOffsetY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.set_jumpOffsetY
void GlobalNamespace::IBeatmapObjectSpawnController::set_jumpOffsetY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::set_jumpOffsetY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_jumpOffsetY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_currentBpm
float GlobalNamespace::IBeatmapObjectSpawnController::get_currentBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_currentBpm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_moveDuration
float GlobalNamespace::IBeatmapObjectSpawnController::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_moveDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_jumpDuration
float GlobalNamespace::IBeatmapObjectSpawnController::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_jumpDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_jumpDistance
float GlobalNamespace::IBeatmapObjectSpawnController::get_jumpDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_jumpDistance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_verticalLayerDistance
float GlobalNamespace::IBeatmapObjectSpawnController::get_verticalLayerDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_verticalLayerDistance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalLayerDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_noteJumpMovementSpeed
float GlobalNamespace::IBeatmapObjectSpawnController::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_noteLinesDistance
float GlobalNamespace::IBeatmapObjectSpawnController::get_noteLinesDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_noteLinesDistance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLinesDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_beatmapObjectSpawnMovementData
GlobalNamespace::BeatmapObjectSpawnMovementData* GlobalNamespace::IBeatmapObjectSpawnController::get_beatmapObjectSpawnMovementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_beatmapObjectSpawnMovementData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapObjectSpawnMovementData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectSpawnMovementData*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_isInitialized
bool GlobalNamespace::IBeatmapObjectSpawnController::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::get_isInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.add_didInitEvent
void GlobalNamespace::IBeatmapObjectSpawnController::add_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::add_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IBeatmapObjectSpawnController.remove_didInitEvent
void GlobalNamespace::IBeatmapObjectSpawnController::remove_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::remove_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IBeatmapObjectSpawnController.Get2DNoteOffset
UnityEngine::Vector2 GlobalNamespace::IBeatmapObjectSpawnController::Get2DNoteOffset(int noteLineIndex, GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::Get2DNoteOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get2DNoteOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(noteLineLayer)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method, noteLineIndex, noteLineLayer);
}
// Autogenerated method: IBeatmapObjectSpawnController.JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset
float GlobalNamespace::IBeatmapObjectSpawnController::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset(GlobalNamespace::NoteLineLayer lineLayer, float distanceFromPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawnController::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer), ::il2cpp_utils::ExtractType(distanceFromPlayer)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, lineLayer, distanceFromPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapObjectSpawner
#include "GlobalNamespace/IBeatmapObjectSpawner.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapObjectSpawner.SpawnObstacle
GlobalNamespace::ObstacleController* GlobalNamespace::IBeatmapObjectSpawner::SpawnObstacle(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawner::SpawnObstacle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData), ::il2cpp_utils::ExtractType(obstacleSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleController*, false>(___instance_arg, ___internal__method, obstacleData, obstacleSpawnData, rotation);
}
// Autogenerated method: IBeatmapObjectSpawner.SpawnBombNote
GlobalNamespace::NoteController* GlobalNamespace::IBeatmapObjectSpawner::SpawnBombNote(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawner::SpawnBombNote");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBombNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(___instance_arg, ___internal__method, noteData, noteSpawnData, rotation);
}
// Autogenerated method: IBeatmapObjectSpawner.SpawnBasicNote
GlobalNamespace::NoteController* GlobalNamespace::IBeatmapObjectSpawner::SpawnBasicNote(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawner::SpawnBasicNote");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBasicNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(cutDirectionAngleOffset)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(___instance_arg, ___internal__method, noteData, noteSpawnData, rotation, cutDirectionAngleOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirroredBeatmapObjectManager
#include "GlobalNamespace/MirroredBeatmapObjectManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: MemoryPoolContainer`1
#include "GlobalNamespace/MemoryPoolContainer_1.hpp"
// Including type: MirroredBombNoteController/Pool
#include "GlobalNamespace/MirroredBombNoteController_Pool.hpp"
// Including type: MirroredCubeNoteController/Pool
#include "GlobalNamespace/MirroredCubeNoteController_Pool.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ICubeNoteMirrorable
#include "GlobalNamespace/ICubeNoteMirrorable.hpp"
// Including type: INoteMirrorable
#include "GlobalNamespace/INoteMirrorable.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: MirroredObstacleController/Pool
#include "GlobalNamespace/MirroredObstacleController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MemoryPoolContainer`1<MirroredCubeNoteController> _mirroredCubeNotePoolContainer
GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::MirroredCubeNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredCubeNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredCubeNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredCubeNotePoolContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::MirroredCubeNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MemoryPoolContainer`1<MirroredBombNoteController> _mirroredBombNotePoolContainer
GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::MirroredBombNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBombNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBombNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBombNotePoolContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::MirroredBombNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MemoryPoolContainer`1<MirroredObstacleController> _mirroredObstaclePoolContainer
GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::MirroredObstacleController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredObstaclePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredObstaclePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredObstaclePoolContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::MirroredObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<ICubeNoteMirrorable,MirroredCubeNoteController> _cubeNoteControllersToMirroredCubeNoteControllers
System::Collections::Generic::Dictionary_2<GlobalNamespace::ICubeNoteMirrorable*, GlobalNamespace::MirroredCubeNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__cubeNoteControllersToMirroredCubeNoteControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::dyn__cubeNoteControllersToMirroredCubeNoteControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubeNoteControllersToMirroredCubeNoteControllers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<GlobalNamespace::ICubeNoteMirrorable*, GlobalNamespace::MirroredCubeNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<INoteMirrorable,MirroredBombNoteController> _bombNoteControllersToMirroredBombNoteControllers
System::Collections::Generic::Dictionary_2<GlobalNamespace::INoteMirrorable*, GlobalNamespace::MirroredBombNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__bombNoteControllersToMirroredBombNoteControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::dyn__bombNoteControllersToMirroredBombNoteControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombNoteControllersToMirroredBombNoteControllers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<GlobalNamespace::INoteMirrorable*, GlobalNamespace::MirroredBombNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<ObstacleController,MirroredObstacleController> _obstacleControllersToMirroredObstacleControllers
System::Collections::Generic::Dictionary_2<GlobalNamespace::ObstacleController*, GlobalNamespace::MirroredObstacleController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__obstacleControllersToMirroredObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::dyn__obstacleControllersToMirroredObstacleControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleControllersToMirroredObstacleControllers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<GlobalNamespace::ObstacleController*, GlobalNamespace::MirroredObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleNoteWasSpawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleNoteWasSpawned(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::HandleNoteWasSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleNoteWasDespawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleNoteWasDespawned(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::HandleNoteWasDespawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasDespawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleObstacleWasSpawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleObstacleWasSpawned(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::HandleObstacleWasSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleWasSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleObstacleWasDespawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleObstacleWasDespawned(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::HandleObstacleWasDespawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleWasDespawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleDidHideAllBeatmapObjects
void GlobalNamespace::MirroredBeatmapObjectManager::HandleDidHideAllBeatmapObjects(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::HandleDidHideAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidHideAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hide);
}
// Autogenerated method: MirroredBeatmapObjectManager.Finalize
void GlobalNamespace::MirroredBeatmapObjectManager::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredBeatmapObjectManager::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockBeatmapObjectManager
#include "GlobalNamespace/MockBeatmapObjectManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<ObstacleController> <activeObstacleControllers>k__BackingField
System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>*& GlobalNamespace::MockBeatmapObjectManager::dyn_$activeObstacleControllers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::dyn_$activeObstacleControllers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<activeObstacleControllers>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MockBeatmapObjectManager.get_activeObstacleControllers
System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>* GlobalNamespace::MockBeatmapObjectManager::get_activeObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::get_activeObstacleControllers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeObstacleControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MockBeatmapObjectManager.SpawnObstacleInternal
GlobalNamespace::ObstacleController* GlobalNamespace::MockBeatmapObjectManager::SpawnObstacleInternal(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::SpawnObstacleInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnObstacleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData), ::il2cpp_utils::ExtractType(obstacleSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleController*, false>(___instance_arg, ___internal__method, obstacleData, obstacleSpawnData, rotation);
}
// Autogenerated method: MockBeatmapObjectManager.SpawnBombNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::MockBeatmapObjectManager::SpawnBombNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::SpawnBombNoteInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBombNoteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(___instance_arg, ___internal__method, noteData, noteSpawnData, rotation);
}
// Autogenerated method: MockBeatmapObjectManager.SpawnBasicNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::MockBeatmapObjectManager::SpawnBasicNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::SpawnBasicNoteInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBasicNoteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(cutDirectionAngleOffset)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(___instance_arg, ___internal__method, noteData, noteSpawnData, rotation, cutDirectionAngleOffset);
}
// Autogenerated method: MockBeatmapObjectManager.DespawnInternal
void GlobalNamespace::MockBeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: MockBeatmapObjectManager.DespawnInternal
void GlobalNamespace::MockBeatmapObjectManager::DespawnInternal(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController);
}
// Autogenerated method: MockBeatmapObjectManager.DissolveAllObjects
void GlobalNamespace::MockBeatmapObjectManager::DissolveAllObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::DissolveAllObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DissolveAllObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MockBeatmapObjectManager.HideAllBeatmapObjects
void GlobalNamespace::MockBeatmapObjectManager::HideAllBeatmapObjects(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::HideAllBeatmapObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hide);
}
// Autogenerated method: MockBeatmapObjectManager.PauseAllBeatmapObjects
void GlobalNamespace::MockBeatmapObjectManager::PauseAllBeatmapObjects(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapObjectManager::PauseAllBeatmapObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pause);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNoteVisuals
#include "GlobalNamespace/BaseNoteVisuals.hpp"
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
// Including type: CutoutAnimateEffect
#include "GlobalNamespace/CutoutAnimateEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NoteControllerBase _noteController
GlobalNamespace::NoteControllerBase*& GlobalNamespace::BaseNoteVisuals::dyn__noteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::dyn__noteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteControllerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CutoutAnimateEffect _cutoutAnimateEffect
GlobalNamespace::CutoutAnimateEffect*& GlobalNamespace::BaseNoteVisuals::dyn__cutoutAnimateEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::dyn__cutoutAnimateEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutoutAnimateEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::CutoutAnimateEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseNoteVisuals.Awake
void GlobalNamespace::BaseNoteVisuals::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseNoteVisuals.OnDestroy
void GlobalNamespace::BaseNoteVisuals::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseNoteVisuals.HandleNoteControllerDidInit
void GlobalNamespace::BaseNoteVisuals::HandleNoteControllerDidInit(GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::HandleNoteControllerDidInit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: BaseNoteVisuals.HandleNoteControllerNoteDidStartDissolving
void GlobalNamespace::BaseNoteVisuals::HandleNoteControllerNoteDidStartDissolving(GlobalNamespace::NoteControllerBase* noteController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::HandleNoteControllerNoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController, duration);
}
// Autogenerated method: BaseNoteVisuals.AnimateCutout
void GlobalNamespace::BaseNoteVisuals::AnimateCutout(float cutoutStart, float cutoutEnd, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::AnimateCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutoutStart), ::il2cpp_utils::ExtractType(cutoutEnd), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cutoutStart, cutoutEnd, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombNoteController
#include "GlobalNamespace/BombNoteController.hpp"
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
// Including type: CuttableBySaber
#include "GlobalNamespace/CuttableBySaber.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CuttableBySaber _cuttableBySaber
GlobalNamespace::CuttableBySaber*& GlobalNamespace::BombNoteController::dyn__cuttableBySaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::dyn__cuttableBySaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cuttableBySaber"))->offset;
  return *reinterpret_cast<GlobalNamespace::CuttableBySaber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _wrapperGO
UnityEngine::GameObject*& GlobalNamespace::BombNoteController::dyn__wrapperGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::dyn__wrapperGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wrapperGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hidden
bool& GlobalNamespace::BombNoteController::dyn__hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::dyn__hidden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hidden"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BombNoteController.Init
void GlobalNamespace::BombNoteController::Init(GlobalNamespace::NoteData* noteData, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(jumpGravity)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity);
}
// Autogenerated method: BombNoteController.HandleDidPassHalfJump
void GlobalNamespace::BombNoteController::HandleDidPassHalfJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::HandleDidPassHalfJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidPassHalfJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BombNoteController.HandleWasCutBySaber
void GlobalNamespace::BombNoteController::HandleWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::HandleWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: BombNoteController.get_hide
bool GlobalNamespace::BombNoteController::get_hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::get_hide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BombNoteController.set_hide
void GlobalNamespace::BombNoteController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::set_hide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: BombNoteController.set_pause
void GlobalNamespace::BombNoteController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::set_pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: BombNoteController.Awake
void GlobalNamespace::BombNoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BombNoteController.OnDestroy
void GlobalNamespace::BombNoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BombNoteController.NoteDidPassMissedMarker
void GlobalNamespace::BombNoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::NoteDidPassMissedMarker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BombNoteController.NoteDidStartDissolving
void GlobalNamespace::BombNoteController::NoteDidStartDissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::NoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorNoteVisuals
#include "GlobalNamespace/ColorNoteVisuals.hpp"
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39714
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorId
int GlobalNamespace::ColorNoteVisuals::_get__colorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::_get__colorId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ColorNoteVisuals", "_colorId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorId
void GlobalNamespace::ColorNoteVisuals::_set__colorId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::_set__colorId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ColorNoteVisuals", "_colorId", value));
}
// Autogenerated instance field getter
// Get instance field: private NoteControllerBase _noteController
GlobalNamespace::NoteControllerBase*& GlobalNamespace::ColorNoteVisuals::dyn__noteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::dyn__noteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteControllerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController[] _materialPropertyBlockControllers
::Array<GlobalNamespace::MaterialPropertyBlockController*>*& GlobalNamespace::ColorNoteVisuals::dyn__materialPropertyBlockControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::dyn__materialPropertyBlockControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockControllers"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MaterialPropertyBlockController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _arrowMeshRenderers
::Array<UnityEngine::MeshRenderer*>*& GlobalNamespace::ColorNoteVisuals::dyn__arrowMeshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::dyn__arrowMeshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrowMeshRenderers"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::MeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _circleMeshRenderers
::Array<UnityEngine::MeshRenderer*>*& GlobalNamespace::ColorNoteVisuals::dyn__circleMeshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::dyn__circleMeshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_circleMeshRenderers"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::MeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::ColorNoteVisuals::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<ColorNoteVisuals,NoteControllerBase> didInitEvent
System::Action_2<GlobalNamespace::ColorNoteVisuals*, GlobalNamespace::NoteControllerBase*>*& GlobalNamespace::ColorNoteVisuals::dyn_didInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::dyn_didInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInitEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::ColorNoteVisuals*, GlobalNamespace::NoteControllerBase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _noteColor
UnityEngine::Color& GlobalNamespace::ColorNoteVisuals::dyn__noteColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::dyn__noteColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorNoteVisuals.set_showArrow
void GlobalNamespace::ColorNoteVisuals::set_showArrow(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::set_showArrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showArrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.set_showCircle
void GlobalNamespace::ColorNoteVisuals::set_showCircle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::set_showCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.add_didInitEvent
void GlobalNamespace::ColorNoteVisuals::add_didInitEvent(System::Action_2<GlobalNamespace::ColorNoteVisuals*, GlobalNamespace::NoteControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.remove_didInitEvent
void GlobalNamespace::ColorNoteVisuals::remove_didInitEvent(System::Action_2<GlobalNamespace::ColorNoteVisuals*, GlobalNamespace::NoteControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.Awake
void GlobalNamespace::ColorNoteVisuals::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorNoteVisuals.OnDestroy
void GlobalNamespace::ColorNoteVisuals::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorNoteVisuals.HandleNoteControllerDidInit
void GlobalNamespace::ColorNoteVisuals::HandleNoteControllerDidInit(GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::HandleNoteControllerDidInit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: ColorNoteVisuals.HandleNoteControllerNoteDidPassJumpThreeQuarters
void GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidPassJumpThreeQuarters(GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidPassJumpThreeQuarters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidPassJumpThreeQuarters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: ColorNoteVisuals.HandleNoteControllerNoteDidStartDissolving
void GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidStartDissolving(GlobalNamespace::NoteControllerBase* noteController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController, duration);
}
// Autogenerated method: ColorNoteVisuals..cctor
void GlobalNamespace::ColorNoteVisuals::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorNoteVisuals", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisappearingArrowController
#include "GlobalNamespace/DisappearingArrowController.hpp"
// Including type: GameNoteController
#include "GlobalNamespace/GameNoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameNoteController _gameNoteController
GlobalNamespace::GameNoteController*& GlobalNamespace::DisappearingArrowController::dyn__gameNoteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisappearingArrowController::dyn__gameNoteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameNoteController"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisappearingArrowController.get_gameNoteController
GlobalNamespace::GameNoteController* GlobalNamespace::DisappearingArrowController::get_gameNoteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisappearingArrowController::get_gameNoteController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameNoteController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameNoteController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameNoteController
#include "GlobalNamespace/GameNoteController.hpp"
// Including type: GameNoteController/Pool
#include "GlobalNamespace/GameNoteController_Pool.hpp"
// Including type: SaberSwingRatingCounter/Pool
#include "GlobalNamespace/SaberSwingRatingCounter_Pool.hpp"
// Including type: BoxCuttableBySaber
#include "GlobalNamespace/BoxCuttableBySaber.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber[] _bigCuttableBySaberList
::Array<GlobalNamespace::BoxCuttableBySaber*>*& GlobalNamespace::GameNoteController::dyn__bigCuttableBySaberList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::dyn__bigCuttableBySaberList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bigCuttableBySaberList"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::BoxCuttableBySaber*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber[] _smallCuttableBySaberList
::Array<GlobalNamespace::BoxCuttableBySaber*>*& GlobalNamespace::GameNoteController::dyn__smallCuttableBySaberList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::dyn__smallCuttableBySaberList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallCuttableBySaberList"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::BoxCuttableBySaber*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _wrapperGO
UnityEngine::GameObject*& GlobalNamespace::GameNoteController::dyn__wrapperGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::dyn__wrapperGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wrapperGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::GameNoteController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberSwingRatingCounter/Pool _saberSwingRatingCounterPool
GlobalNamespace::SaberSwingRatingCounter::Pool*& GlobalNamespace::GameNoteController::dyn__saberSwingRatingCounterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::dyn__saberSwingRatingCounterPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberSwingRatingCounterPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberSwingRatingCounter::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<GameNoteController> cubeNoteControllerDidInitEvent
System::Action_1<GlobalNamespace::GameNoteController*>*& GlobalNamespace::GameNoteController::dyn_cubeNoteControllerDidInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::dyn_cubeNoteControllerDidInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cubeNoteControllerDidInitEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::GameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameNoteController/GameNoteType _gameNoteType
GlobalNamespace::GameNoteController_GameNoteType& GlobalNamespace::GameNoteController::dyn__gameNoteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::dyn__gameNoteType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameNoteType"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameNoteController_GameNoteType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hidden
bool& GlobalNamespace::GameNoteController::dyn__hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::dyn__hidden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hidden"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutAngleTolerance
float& GlobalNamespace::GameNoteController::dyn__cutAngleTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::dyn__cutAngleTolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutAngleTolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameNoteController.get_noteMovement
GlobalNamespace::NoteMovement* GlobalNamespace::GameNoteController::get_noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::get_noteMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteMovement*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameNoteController.get_gameNoteType
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::GameNoteController::get_gameNoteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::get_gameNoteType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameNoteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameNoteController_GameNoteType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameNoteController.INoteMirrorable.get_transform
UnityEngine::Transform* GlobalNamespace::GameNoteController::INoteMirrorable_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::INoteMirrorable.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INoteMirrorable.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameNoteController.add_cubeNoteControllerDidInitEvent
void GlobalNamespace::GameNoteController::add_cubeNoteControllerDidInitEvent(System::Action_1<GlobalNamespace::GameNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::add_cubeNoteControllerDidInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cubeNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameNoteController.remove_cubeNoteControllerDidInitEvent
void GlobalNamespace::GameNoteController::remove_cubeNoteControllerDidInitEvent(System::Action_1<GlobalNamespace::GameNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::remove_cubeNoteControllerDidInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cubeNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameNoteController.Init
void GlobalNamespace::GameNoteController::Init(GlobalNamespace::NoteData* noteData, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, GlobalNamespace::GameNoteController_GameNoteType gameNoteType, float cutDirectionAngleOffset, float cutAngleTolerance, float uniformScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(jumpGravity), ::il2cpp_utils::ExtractType(gameNoteType), ::il2cpp_utils::ExtractType(cutDirectionAngleOffset), ::il2cpp_utils::ExtractType(cutAngleTolerance), ::il2cpp_utils::ExtractType(uniformScale)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, gameNoteType, cutDirectionAngleOffset, cutAngleTolerance, uniformScale);
}
// Autogenerated method: GameNoteController.HandleBigWasCutBySaber
void GlobalNamespace::GameNoteController::HandleBigWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::HandleBigWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBigWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: GameNoteController.HandleSmallWasCutBySaber
void GlobalNamespace::GameNoteController::HandleSmallWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::HandleSmallWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSmallWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: GameNoteController.HandleCut
void GlobalNamespace::GameNoteController::HandleCut(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec, bool allowBadCut) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::HandleCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec), ::il2cpp_utils::ExtractType(allowBadCut)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saber, cutPoint, orientation, cutDirVec, allowBadCut);
}
// Autogenerated method: GameNoteController.HandleSaberSwingRatingCounterDidFinish
void GlobalNamespace::GameNoteController::HandleSaberSwingRatingCounterDidFinish(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::HandleSaberSwingRatingCounterDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberSwingRatingCounter)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saberSwingRatingCounter);
}
// Autogenerated method: GameNoteController.get_hide
bool GlobalNamespace::GameNoteController::get_hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::get_hide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameNoteController.set_hide
void GlobalNamespace::GameNoteController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::set_hide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameNoteController.set_pause
void GlobalNamespace::GameNoteController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::set_pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameNoteController.Awake
void GlobalNamespace::GameNoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameNoteController.OnDestroy
void GlobalNamespace::GameNoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameNoteController.NoteDidPassMissedMarker
void GlobalNamespace::GameNoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::NoteDidPassMissedMarker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameNoteController.NoteDidStartDissolving
void GlobalNamespace::GameNoteController::NoteDidStartDissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::NoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameNoteController.NoteDidStartJump
void GlobalNamespace::GameNoteController::NoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::NoteDidStartJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameNoteController/Pool
#include "GlobalNamespace/GameNoteController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ICubeNoteMirrorable
#include "GlobalNamespace/ICubeNoteMirrorable.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: GameNoteController/GameNoteType
#include "GlobalNamespace/GameNoteController_GameNoteType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICubeNoteMirrorable.get_noteMovement
GlobalNamespace::NoteMovement* GlobalNamespace::ICubeNoteMirrorable::get_noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ICubeNoteMirrorable::get_noteMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteMovement*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ICubeNoteMirrorable.get_gameNoteType
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::ICubeNoteMirrorable::get_gameNoteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ICubeNoteMirrorable::get_gameNoteType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameNoteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameNoteController_GameNoteType, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ICubeNoteTypeProvider
#include "GlobalNamespace/ICubeNoteTypeProvider.hpp"
// Including type: GameNoteController/GameNoteType
#include "GlobalNamespace/GameNoteController_GameNoteType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICubeNoteTypeProvider.get_gameNoteType
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::ICubeNoteTypeProvider::get_gameNoteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ICubeNoteTypeProvider::get_gameNoteType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameNoteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameNoteController_GameNoteType, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteMirrorable
#include "GlobalNamespace/INoteMirrorable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
// Including type: INoteControllerNoteDidStartDissolvingEvent
#include "GlobalNamespace/INoteControllerNoteDidStartDissolvingEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteMirrorable.get_transform
UnityEngine::Transform* GlobalNamespace::INoteMirrorable::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteMirrorable::get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INoteMirrorable.get_noteTransform
UnityEngine::Transform* GlobalNamespace::INoteMirrorable::get_noteTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteMirrorable::get_noteTransform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INoteMirrorable.get_noteData
GlobalNamespace::NoteData* GlobalNamespace::INoteMirrorable::get_noteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteMirrorable::get_noteData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteData*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INoteMirrorable.get_noteDidStartDissolvingEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>* GlobalNamespace::INoteMirrorable::get_noteDidStartDissolvingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteMirrorable::get_noteDidStartDissolvingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteDidStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteMovementProvider
#include "GlobalNamespace/INoteMovementProvider.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteMovementProvider.get_noteMovement
GlobalNamespace::NoteMovement* GlobalNamespace::INoteMovementProvider::get_noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteMovementProvider::get_noteMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteMovement*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirroredBombNoteController
#include "GlobalNamespace/MirroredBombNoteController.hpp"
// Including type: MirroredBombNoteController/Pool
#include "GlobalNamespace/MirroredBombNoteController_Pool.hpp"
// Including type: INoteMirrorable
#include "GlobalNamespace/INoteMirrorable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirroredBombNoteController/Pool
#include "GlobalNamespace/MirroredBombNoteController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirroredCubeNoteController
#include "GlobalNamespace/MirroredCubeNoteController.hpp"
// Including type: MirroredCubeNoteController/Pool
#include "GlobalNamespace/MirroredCubeNoteController_Pool.hpp"
// Including type: ICubeNoteMirrorable
#include "GlobalNamespace/ICubeNoteMirrorable.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: GameNoteController/GameNoteType
#include "GlobalNamespace/GameNoteController_GameNoteType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3986C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorId
int GlobalNamespace::MirroredCubeNoteController::_get__colorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::_get__colorId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MirroredCubeNoteController", "_colorId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorId
void GlobalNamespace::MirroredCubeNoteController::_set__colorId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::_set__colorId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MirroredCubeNoteController", "_colorId", value));
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::MirroredCubeNoteController::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::MirroredCubeNoteController::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MirroredCubeNoteController> cubeNoteControllerDidInitEvent
System::Action_1<GlobalNamespace::MirroredCubeNoteController*>*& GlobalNamespace::MirroredCubeNoteController::dyn_cubeNoteControllerDidInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::dyn_cubeNoteControllerDidInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cubeNoteControllerDidInitEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::MirroredCubeNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirroredCubeNoteController.get_noteMovement
GlobalNamespace::NoteMovement* GlobalNamespace::MirroredCubeNoteController::get_noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::get_noteMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteMovement*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MirroredCubeNoteController.get_gameNoteType
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::MirroredCubeNoteController::get_gameNoteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::get_gameNoteType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameNoteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameNoteController_GameNoteType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MirroredCubeNoteController.add_cubeNoteControllerDidInitEvent
void GlobalNamespace::MirroredCubeNoteController::add_cubeNoteControllerDidInitEvent(System::Action_1<GlobalNamespace::MirroredCubeNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::add_cubeNoteControllerDidInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cubeNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MirroredCubeNoteController.remove_cubeNoteControllerDidInitEvent
void GlobalNamespace::MirroredCubeNoteController::remove_cubeNoteControllerDidInitEvent(System::Action_1<GlobalNamespace::MirroredCubeNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::remove_cubeNoteControllerDidInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cubeNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MirroredCubeNoteController.Mirror
void GlobalNamespace::MirroredCubeNoteController::Mirror(GlobalNamespace::ICubeNoteMirrorable* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::Mirror");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: MirroredCubeNoteController..cctor
void GlobalNamespace::MirroredCubeNoteController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredCubeNoteController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MirroredCubeNoteController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirroredCubeNoteController/Pool
#include "GlobalNamespace/MirroredCubeNoteController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirroredDisappearingArrowController
#include "GlobalNamespace/MirroredDisappearingArrowController.hpp"
// Including type: MirroredCubeNoteController
#include "GlobalNamespace/MirroredCubeNoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MirroredCubeNoteController _mirroredGameNoteController
GlobalNamespace::MirroredCubeNoteController*& GlobalNamespace::MirroredDisappearingArrowController::dyn__mirroredGameNoteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredDisappearingArrowController::dyn__mirroredGameNoteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredGameNoteController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MirroredCubeNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirroredDisappearingArrowController.get_gameNoteController
GlobalNamespace::MirroredCubeNoteController* GlobalNamespace::MirroredDisappearingArrowController::get_gameNoteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredDisappearingArrowController::get_gameNoteController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameNoteController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MirroredCubeNoteController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteController/<DissolveCoroutine>d__74
#include "GlobalNamespace/NoteController_-DissolveCoroutine-d__74.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: INoteControllerDidInitEvent
#include "GlobalNamespace/INoteControllerDidInitEvent.hpp"
// Including type: INoteControllerNoteDidStartJumpEvent
#include "GlobalNamespace/INoteControllerNoteDidStartJumpEvent.hpp"
// Including type: INoteControllerNoteDidFinishJumpEvent
#include "GlobalNamespace/INoteControllerNoteDidFinishJumpEvent.hpp"
// Including type: INoteControllerNoteDidPassJumpThreeQuartersEvent
#include "GlobalNamespace/INoteControllerNoteDidPassJumpThreeQuartersEvent.hpp"
// Including type: INoteControllerNoteWasCutEvent
#include "GlobalNamespace/INoteControllerNoteWasCutEvent.hpp"
// Including type: INoteControllerNoteWasMissedEvent
#include "GlobalNamespace/INoteControllerNoteWasMissedEvent.hpp"
// Including type: INoteControllerNoteDidStartDissolvingEvent
#include "GlobalNamespace/INoteControllerNoteDidStartDissolvingEvent.hpp"
// Including type: INoteControllerNoteDidDissolveEvent
#include "GlobalNamespace/INoteControllerNoteDidDissolveEvent.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected NoteMovement _noteMovement
GlobalNamespace::NoteMovement*& GlobalNamespace::NoteController::dyn__noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteMovement"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _noteTransform
UnityEngine::Transform*& GlobalNamespace::NoteController::dyn__noteTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteControllerDidInitEvent> _didInitEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerDidInitEvent*>*& GlobalNamespace::NoteController::dyn__didInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__didInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didInitEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerDidInitEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteControllerNoteDidStartJumpEvent> _noteDidStartJumpEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartJumpEvent*>*& GlobalNamespace::NoteController::dyn__noteDidStartJumpEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteDidStartJumpEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDidStartJumpEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartJumpEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteControllerNoteDidFinishJumpEvent> _noteDidFinishJumpEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidFinishJumpEvent*>*& GlobalNamespace::NoteController::dyn__noteDidFinishJumpEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteDidFinishJumpEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDidFinishJumpEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidFinishJumpEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteControllerNoteDidPassJumpThreeQuartersEvent> _noteDidPassJumpThreeQuartersEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidPassJumpThreeQuartersEvent*>*& GlobalNamespace::NoteController::dyn__noteDidPassJumpThreeQuartersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteDidPassJumpThreeQuartersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDidPassJumpThreeQuartersEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidPassJumpThreeQuartersEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteControllerNoteWasCutEvent> _noteWasCutEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteWasCutEvent*>*& GlobalNamespace::NoteController::dyn__noteWasCutEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteWasCutEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteWasCutEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteControllerNoteWasMissedEvent> _noteWasMissedEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteWasMissedEvent*>*& GlobalNamespace::NoteController::dyn__noteWasMissedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteWasMissedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasMissedEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteWasMissedEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteControllerNoteDidStartDissolvingEvent> _noteDidStartDissolvingEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>*& GlobalNamespace::NoteController::dyn__noteDidStartDissolvingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteDidStartDissolvingEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDidStartDissolvingEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteControllerNoteDidDissolveEvent> _noteDidDissolveEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidDissolveEvent*>*& GlobalNamespace::NoteController::dyn__noteDidDissolveEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteDidDissolveEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDidDissolveEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidDissolveEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteData _noteData
GlobalNamespace::NoteData*& GlobalNamespace::NoteController::dyn__noteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__noteData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteData"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dissolving
bool& GlobalNamespace::NoteController::dyn__dissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__dissolving");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dissolving"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _uniformScale
float& GlobalNamespace::NoteController::dyn__uniformScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::dyn__uniformScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uniformScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteController.get_noteDidStartJumpEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartJumpEvent*>* GlobalNamespace::NoteController::get_noteDidStartJumpEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartJumpEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_noteDidFinishJumpEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidFinishJumpEvent*>* GlobalNamespace::NoteController::get_noteDidFinishJumpEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteDidFinishJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteDidFinishJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidFinishJumpEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_noteWasCutEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteWasCutEvent*>* GlobalNamespace::NoteController::get_noteWasCutEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteWasCutEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteWasCutEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_noteWasMissedEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteWasMissedEvent*>* GlobalNamespace::NoteController::get_noteWasMissedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteWasMissedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteWasMissedEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_noteDidDissolveEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidDissolveEvent*>* GlobalNamespace::NoteController::get_noteDidDissolveEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteDidDissolveEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteDidDissolveEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidDissolveEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_noteTransform
UnityEngine::Transform* GlobalNamespace::NoteController::get_noteTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteTransform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_worldRotation
UnityEngine::Quaternion GlobalNamespace::NoteController::get_worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_worldRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_inverseWorldRotation
UnityEngine::Quaternion GlobalNamespace::NoteController::get_inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_inverseWorldRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inverseWorldRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_moveStartTime
float GlobalNamespace::NoteController::get_moveStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_moveStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_moveDuration
float GlobalNamespace::NoteController::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_jumpDuration
float GlobalNamespace::NoteController::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_jumpMoveVec
UnityEngine::Vector3 GlobalNamespace::NoteController::get_jumpMoveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_jumpMoveVec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpMoveVec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_beatPos
UnityEngine::Vector3 GlobalNamespace::NoteController::get_beatPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_beatPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_jumpStartPos
UnityEngine::Vector3 GlobalNamespace::NoteController::get_jumpStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_jumpStartPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpStartPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_moveVec
UnityEngine::Vector3 GlobalNamespace::NoteController::get_moveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_moveVec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveVec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_uniformScale
float GlobalNamespace::NoteController::get_uniformScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_uniformScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uniformScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_hide
bool GlobalNamespace::NoteController::get_hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_hide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.set_hide
void GlobalNamespace::NoteController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::set_hide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteController.set_pause
void GlobalNamespace::NoteController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::set_pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteController.INoteMirrorable.get_transform
UnityEngine::Transform* GlobalNamespace::NoteController::INoteMirrorable_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::INoteMirrorable.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INoteMirrorable.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.Awake
void GlobalNamespace::NoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.OnDestroy
void GlobalNamespace::NoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.Update
void GlobalNamespace::NoteController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.ManualUpdate
void GlobalNamespace::NoteController::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::ManualUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.HandleNoteDidStartJump
void GlobalNamespace::NoteController::HandleNoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::HandleNoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.HandleNoteDidFinishJump
void GlobalNamespace::NoteController::HandleNoteDidFinishJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::HandleNoteDidFinishJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDidFinishJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.HandleNoteDidPassJumpThreeQuarters
void GlobalNamespace::NoteController::HandleNoteDidPassJumpThreeQuarters(GlobalNamespace::NoteMovement* noteMovement) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::HandleNoteDidPassJumpThreeQuarters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDidPassJumpThreeQuarters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteMovement)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteMovement);
}
// Autogenerated method: NoteController.HandleNoteDidPassMissedMarkerEvent
void GlobalNamespace::NoteController::HandleNoteDidPassMissedMarkerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::HandleNoteDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.NoteDidStartJump
void GlobalNamespace::NoteController::NoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidStartJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.NoteDidFinishJump
void GlobalNamespace::NoteController::NoteDidFinishJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidFinishJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidFinishJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.NoteDidPassJumpThreeQuarters
void GlobalNamespace::NoteController::NoteDidPassJumpThreeQuarters(GlobalNamespace::NoteMovement* noteMovement) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidPassJumpThreeQuarters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidPassJumpThreeQuarters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteMovement)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteMovement);
}
// Autogenerated method: NoteController.NoteDidPassMissedMarker
void GlobalNamespace::NoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidPassMissedMarker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.NoteDidStartDissolving
void GlobalNamespace::NoteController::NoteDidStartDissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.SendNoteWasMissedEvent
void GlobalNamespace::NoteController::SendNoteWasMissedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::SendNoteWasMissedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNoteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.SendNoteWasCutEvent
void GlobalNamespace::NoteController::SendNoteWasCutEvent(ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::SendNoteWasCutEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNoteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(noteCutInfo));
}
// Autogenerated method: NoteController.Init
void GlobalNamespace::NoteController::Init(GlobalNamespace::NoteData* noteData, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, float endRotation, float uniformScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(jumpGravity), ::il2cpp_utils::ExtractType(endRotation), ::il2cpp_utils::ExtractType(uniformScale)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, endRotation, uniformScale);
}
// Autogenerated method: NoteController.DissolveCoroutine
System::Collections::IEnumerator* GlobalNamespace::NoteController::DissolveCoroutine(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::DissolveCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DissolveCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, duration);
}
// Autogenerated method: NoteController.Dissolve
void GlobalNamespace::NoteController::Dissolve(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::Dissolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dissolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, duration);
}
// Autogenerated method: NoteController.get_didInitEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerDidInitEvent*>* GlobalNamespace::NoteController::get_didInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerDidInitEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_noteDidPassJumpThreeQuartersEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidPassJumpThreeQuartersEvent*>* GlobalNamespace::NoteController::get_noteDidPassJumpThreeQuartersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteDidPassJumpThreeQuartersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteDidPassJumpThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidPassJumpThreeQuartersEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_noteDidStartDissolvingEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>* GlobalNamespace::NoteController::get_noteDidStartDissolvingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteDidStartDissolvingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteDidStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController.get_noteData
GlobalNamespace::NoteData* GlobalNamespace::NoteController::get_noteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteData*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteController/<DissolveCoroutine>d__74
#include "GlobalNamespace/NoteController_-DissolveCoroutine-d__74.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::NoteController::$DissolveCoroutine$d__74::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__74::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::NoteController::$DissolveCoroutine$d__74::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__74::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteController <>4__this
GlobalNamespace::NoteController*& GlobalNamespace::NoteController::$DissolveCoroutine$d__74::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__74::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
float& GlobalNamespace::NoteController::$DissolveCoroutine$d__74::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__74::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteController/<DissolveCoroutine>d__74.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::NoteController::$DissolveCoroutine$d__74::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__74::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController/<DissolveCoroutine>d__74.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::NoteController::$DissolveCoroutine$d__74::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__74::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController/<DissolveCoroutine>d__74.System.IDisposable.Dispose
void GlobalNamespace::NoteController::$DissolveCoroutine$d__74::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__74::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController/<DissolveCoroutine>d__74.MoveNext
bool GlobalNamespace::NoteController::$DissolveCoroutine$d__74::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__74::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteController/<DissolveCoroutine>d__74.System.Collections.IEnumerator.Reset
void GlobalNamespace::NoteController::$DissolveCoroutine$d__74::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__74::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteControllerDidInitEvent
#include "GlobalNamespace/INoteControllerDidInitEvent.hpp"
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteControllerDidInitEvent.HandleNoteControllerDidInit
void GlobalNamespace::INoteControllerDidInitEvent::HandleNoteControllerDidInit(GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteControllerDidInitEvent::HandleNoteControllerDidInit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteControllerNoteDidStartJumpEvent
#include "GlobalNamespace/INoteControllerNoteDidStartJumpEvent.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteControllerNoteDidStartJumpEvent.HandleNoteControllerNoteDidStartJump
void GlobalNamespace::INoteControllerNoteDidStartJumpEvent::HandleNoteControllerNoteDidStartJump(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteControllerNoteDidStartJumpEvent::HandleNoteControllerNoteDidStartJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteControllerNoteDidFinishJumpEvent
#include "GlobalNamespace/INoteControllerNoteDidFinishJumpEvent.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteControllerNoteDidFinishJumpEvent.HandleNoteControllerNoteDidFinishJump
void GlobalNamespace::INoteControllerNoteDidFinishJumpEvent::HandleNoteControllerNoteDidFinishJump(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteControllerNoteDidFinishJumpEvent::HandleNoteControllerNoteDidFinishJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidFinishJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteControllerNoteDidPassJumpThreeQuartersEvent
#include "GlobalNamespace/INoteControllerNoteDidPassJumpThreeQuartersEvent.hpp"
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteControllerNoteDidPassJumpThreeQuartersEvent.HandleNoteControllerNoteDidPassJumpThreeQuarters
void GlobalNamespace::INoteControllerNoteDidPassJumpThreeQuartersEvent::HandleNoteControllerNoteDidPassJumpThreeQuarters(GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteControllerNoteDidPassJumpThreeQuartersEvent::HandleNoteControllerNoteDidPassJumpThreeQuarters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidPassJumpThreeQuarters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteControllerNoteWasCutEvent
#include "GlobalNamespace/INoteControllerNoteWasCutEvent.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteControllerNoteWasCutEvent.HandleNoteControllerNoteWasCut
void GlobalNamespace::INoteControllerNoteWasCutEvent::HandleNoteControllerNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteControllerNoteWasCutEvent::HandleNoteControllerNoteWasCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteControllerNoteWasMissedEvent
#include "GlobalNamespace/INoteControllerNoteWasMissedEvent.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteControllerNoteWasMissedEvent.HandleNoteControllerNoteWasMissed
void GlobalNamespace::INoteControllerNoteWasMissedEvent::HandleNoteControllerNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteControllerNoteWasMissedEvent::HandleNoteControllerNoteWasMissed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteWasMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteControllerNoteDidStartDissolvingEvent
#include "GlobalNamespace/INoteControllerNoteDidStartDissolvingEvent.hpp"
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteControllerNoteDidStartDissolvingEvent.HandleNoteControllerNoteDidStartDissolving
void GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent::HandleNoteControllerNoteDidStartDissolving(GlobalNamespace::NoteControllerBase* noteController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent::HandleNoteControllerNoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteControllerNoteDidDissolveEvent
#include "GlobalNamespace/INoteControllerNoteDidDissolveEvent.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteControllerNoteDidDissolveEvent.HandleNoteControllerNoteDidDissolve
void GlobalNamespace::INoteControllerNoteDidDissolveEvent::HandleNoteControllerNoteDidDissolve(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteControllerNoteDidDissolveEvent::HandleNoteControllerNoteDidDissolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidDissolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
// Including type: INoteControllerDidInitEvent
#include "GlobalNamespace/INoteControllerDidInitEvent.hpp"
// Including type: INoteControllerNoteDidPassJumpThreeQuartersEvent
#include "GlobalNamespace/INoteControllerNoteDidPassJumpThreeQuartersEvent.hpp"
// Including type: INoteControllerNoteDidStartDissolvingEvent
#include "GlobalNamespace/INoteControllerNoteDidStartDissolvingEvent.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteControllerBase.get_didInitEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerDidInitEvent*>* GlobalNamespace::NoteControllerBase::get_didInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteControllerBase::get_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerDidInitEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteControllerBase.get_noteDidPassJumpThreeQuartersEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidPassJumpThreeQuartersEvent*>* GlobalNamespace::NoteControllerBase::get_noteDidPassJumpThreeQuartersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteControllerBase::get_noteDidPassJumpThreeQuartersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteDidPassJumpThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidPassJumpThreeQuartersEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteControllerBase.get_noteDidStartDissolvingEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>* GlobalNamespace::NoteControllerBase::get_noteDidStartDissolvingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteControllerBase::get_noteDidStartDissolvingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteDidStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteControllerBase.get_noteData
GlobalNamespace::NoteData* GlobalNamespace::NoteControllerBase::get_noteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteControllerBase::get_noteData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteData*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteDebrisDidFinishEvent
#include "GlobalNamespace/INoteDebrisDidFinishEvent.hpp"
// Including type: NoteDebris
#include "GlobalNamespace/NoteDebris.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteDebrisDidFinishEvent.HandleNoteDebrisDidFinish
void GlobalNamespace::INoteDebrisDidFinishEvent::HandleNoteDebrisDidFinish(GlobalNamespace::NoteDebris* noteDebris) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteDebrisDidFinishEvent::HandleNoteDebrisDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDebrisDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteDebris)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteDebris);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteDebris
#include "GlobalNamespace/NoteDebris.hpp"
// Including type: NoteDebris/Pool
#include "GlobalNamespace/NoteDebris_Pool.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: NoteDebrisPhysics
#include "GlobalNamespace/NoteDebrisPhysics.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: INoteDebrisDidFinishEvent
#include "GlobalNamespace/INoteDebrisDidFinishEvent.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3997C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutoutPropertyID
int GlobalNamespace::NoteDebris::_get__cutoutPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__cutoutPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteDebris", "_cutoutPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutoutPropertyID
void GlobalNamespace::NoteDebris::_set__cutoutPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__cutoutPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_cutoutPropertyID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3998C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::NoteDebris::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteDebris", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::NoteDebris::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3999C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutPlaneID
int GlobalNamespace::NoteDebris::_get__cutPlaneID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__cutPlaneID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteDebris", "_cutPlaneID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutPlaneID
void GlobalNamespace::NoteDebris::_set__cutPlaneID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__cutPlaneID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_cutPlaneID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF399AC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutoutTexOffsetID
int GlobalNamespace::NoteDebris::_get__cutoutTexOffsetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__cutoutTexOffsetID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteDebris", "_cutoutTexOffsetID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutoutTexOffsetID
void GlobalNamespace::NoteDebris::_set__cutoutTexOffsetID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__cutoutTexOffsetID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_cutoutTexOffsetID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF399BC
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] _meshVertices
::Array<UnityEngine::Vector3>* GlobalNamespace::NoteDebris::_get__meshVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__meshVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("", "NoteDebris", "_meshVertices"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] _meshVertices
void GlobalNamespace::NoteDebris::_set__meshVertices(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__meshVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_meshVertices", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _meshTransform
UnityEngine::Transform*& GlobalNamespace::NoteDebris::dyn__meshTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__meshTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebrisPhysics _physics
GlobalNamespace::NoteDebrisPhysics*& GlobalNamespace::NoteDebris::dyn__physics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__physics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physics"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteDebrisPhysics**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::NoteDebris::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _cutoutCurve
UnityEngine::AnimationCurve*& GlobalNamespace::NoteDebris::dyn__cutoutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__cutoutCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutoutCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxCutPointCenterDistance
float& GlobalNamespace::NoteDebris::dyn__maxCutPointCenterDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__maxCutPointCenterDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCutPointCenterDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _centroidComputationMesh
UnityEngine::Mesh*& GlobalNamespace::NoteDebris::dyn__centroidComputationMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__centroidComputationMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centroidComputationMesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::NoteDebris::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _elapsedTime
float& GlobalNamespace::NoteDebris::dyn__elapsedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__elapsedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elapsedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lifeTime
float& GlobalNamespace::NoteDebris::dyn__lifeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__lifeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lifeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteDebrisDidFinishEvent> _didFinishEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteDebrisDidFinishEvent*>*& GlobalNamespace::NoteDebris::dyn__didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::dyn__didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteDebrisDidFinishEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteDebris.get_didFinishEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteDebrisDidFinishEvent*>* GlobalNamespace::NoteDebris::get_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::get_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteDebrisDidFinishEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteDebris.Awake
void GlobalNamespace::NoteDebris::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteDebris.Update
void GlobalNamespace::NoteDebris::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteDebris.Init
void GlobalNamespace::NoteDebris::Init(GlobalNamespace::ColorType colorType, UnityEngine::Vector3 notePos, UnityEngine::Quaternion noteRot, UnityEngine::Vector3 noteMoveVec, UnityEngine::Vector3 noteScale, UnityEngine::Vector3 positionOffset, UnityEngine::Quaternion rotationOffset, UnityEngine::Vector3 cutPoint, UnityEngine::Vector3 cutNormal, UnityEngine::Vector3 force, UnityEngine::Vector3 torque, float lifeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(notePos), ::il2cpp_utils::ExtractType(noteRot), ::il2cpp_utils::ExtractType(noteMoveVec), ::il2cpp_utils::ExtractType(noteScale), ::il2cpp_utils::ExtractType(positionOffset), ::il2cpp_utils::ExtractType(rotationOffset), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(cutNormal), ::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(torque), ::il2cpp_utils::ExtractType(lifeTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colorType, notePos, noteRot, noteMoveVec, noteScale, positionOffset, rotationOffset, cutPoint, cutNormal, force, torque, lifeTime);
}
// Autogenerated method: NoteDebris..cctor
void GlobalNamespace::NoteDebris::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteDebris", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebris/Pool
#include "GlobalNamespace/NoteDebris_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebrisPhysics
#include "GlobalNamespace/NoteDebrisPhysics.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteDebrisPhysics.get_position
UnityEngine::Vector3 GlobalNamespace::NoteDebrisPhysics::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisPhysics::get_position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteDebrisPhysics.Init
void GlobalNamespace::NoteDebrisPhysics::Init(UnityEngine::Vector3 force, UnityEngine::Vector3 torque) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisPhysics::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(torque)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, force, torque);
}
// Autogenerated method: NoteDebrisPhysics.AddVelocity
void GlobalNamespace::NoteDebrisPhysics::AddVelocity(UnityEngine::Vector3 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisPhysics::AddVelocity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, force);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebrisRigidbodyPhysics
#include "GlobalNamespace/NoteDebrisRigidbodyPhysics.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: NoteDebrisSimplePhysics
#include "GlobalNamespace/NoteDebrisSimplePhysics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
UnityEngine::Rigidbody*& GlobalNamespace::NoteDebrisRigidbodyPhysics::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebrisSimplePhysics _simplePhysics
GlobalNamespace::NoteDebrisSimplePhysics*& GlobalNamespace::NoteDebrisRigidbodyPhysics::dyn__simplePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::dyn__simplePhysics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simplePhysics"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteDebrisSimplePhysics**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstUpdate
bool& GlobalNamespace::NoteDebrisRigidbodyPhysics::dyn__firstUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::dyn__firstUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteDebrisRigidbodyPhysics.FixedUpdate
void GlobalNamespace::NoteDebrisRigidbodyPhysics::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteDebrisRigidbodyPhysics.get_position
UnityEngine::Vector3 GlobalNamespace::NoteDebrisRigidbodyPhysics::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::get_position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteDebrisRigidbodyPhysics.Init
void GlobalNamespace::NoteDebrisRigidbodyPhysics::Init(UnityEngine::Vector3 force, UnityEngine::Vector3 torque) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(torque)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, force, torque);
}
// Autogenerated method: NoteDebrisRigidbodyPhysics.AddVelocity
void GlobalNamespace::NoteDebrisRigidbodyPhysics::AddVelocity(UnityEngine::Vector3 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::AddVelocity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, force);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebrisSimplePhysics
#include "GlobalNamespace/NoteDebrisSimplePhysics.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _currentForce
UnityEngine::Vector3& GlobalNamespace::NoteDebrisSimplePhysics::dyn__currentForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::dyn__currentForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentForce"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _currentTorque
UnityEngine::Vector3& GlobalNamespace::NoteDebrisSimplePhysics::dyn__currentTorque() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::dyn__currentTorque");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentTorque"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform*& GlobalNamespace::NoteDebrisSimplePhysics::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _gravity
UnityEngine::Vector3& GlobalNamespace::NoteDebrisSimplePhysics::dyn__gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::dyn__gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gravity"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstUpdate
bool& GlobalNamespace::NoteDebrisSimplePhysics::dyn__firstUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::dyn__firstUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteDebrisSimplePhysics.Start
void GlobalNamespace::NoteDebrisSimplePhysics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteDebrisSimplePhysics.LateUpdate
void GlobalNamespace::NoteDebrisSimplePhysics::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteDebrisSimplePhysics.get_position
UnityEngine::Vector3 GlobalNamespace::NoteDebrisSimplePhysics::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::get_position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteDebrisSimplePhysics.Init
void GlobalNamespace::NoteDebrisSimplePhysics::Init(UnityEngine::Vector3 force, UnityEngine::Vector3 torque) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(torque)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, force, torque);
}
// Autogenerated method: NoteDebrisSimplePhysics.AddVelocity
void GlobalNamespace::NoteDebrisSimplePhysics::AddVelocity(UnityEngine::Vector3 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::AddVelocity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, force);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteFloorMovement
#include "GlobalNamespace/NoteFloorMovement.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rotatedObject
UnityEngine::Transform*& GlobalNamespace::NoteFloorMovement::dyn__rotatedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__rotatedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotatedObject"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerTransforms _playerTransforms
GlobalNamespace::PlayerTransforms*& GlobalNamespace::NoteFloorMovement::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IAudioTimeSource _audioTimeSyncController
GlobalNamespace::IAudioTimeSource*& GlobalNamespace::NoteFloorMovement::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action floorMovementDidFinishEvent
System::Action*& GlobalNamespace::NoteFloorMovement::dyn_floorMovementDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn_floorMovementDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floorMovementDidFinishEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPos
UnityEngine::Vector3& GlobalNamespace::NoteFloorMovement::dyn__startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _endPos
UnityEngine::Vector3& GlobalNamespace::NoteFloorMovement::dyn__endPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__endPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveDuration
float& GlobalNamespace::NoteFloorMovement::dyn__moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
float& GlobalNamespace::NoteFloorMovement::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _worldRotation
UnityEngine::Quaternion& GlobalNamespace::NoteFloorMovement::dyn__worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__worldRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_worldRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _inverseWorldRotation
UnityEngine::Quaternion& GlobalNamespace::NoteFloorMovement::dyn__inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__inverseWorldRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inverseWorldRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localPosition
UnityEngine::Vector3& GlobalNamespace::NoteFloorMovement::dyn__localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::dyn__localPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteFloorMovement.get_distanceToPlayer
float GlobalNamespace::NoteFloorMovement::get_distanceToPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_distanceToPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_distanceToPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_startPos
UnityEngine::Vector3 GlobalNamespace::NoteFloorMovement::get_startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_startPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_endPos
UnityEngine::Vector3 GlobalNamespace::NoteFloorMovement::get_endPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_endPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_startTime
float GlobalNamespace::NoteFloorMovement::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_startTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_moveDuration
float GlobalNamespace::NoteFloorMovement::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_worldRotation
UnityEngine::Quaternion GlobalNamespace::NoteFloorMovement::get_worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_worldRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_inverseWorldRotation
UnityEngine::Quaternion GlobalNamespace::NoteFloorMovement::get_inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_inverseWorldRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inverseWorldRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_localPosition
UnityEngine::Vector3 GlobalNamespace::NoteFloorMovement::get_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.add_floorMovementDidFinishEvent
void GlobalNamespace::NoteFloorMovement::add_floorMovementDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::add_floorMovementDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_floorMovementDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteFloorMovement.remove_floorMovementDidFinishEvent
void GlobalNamespace::NoteFloorMovement::remove_floorMovementDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::remove_floorMovementDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_floorMovementDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteFloorMovement.Init
void GlobalNamespace::NoteFloorMovement::Init(float worldRotation, UnityEngine::Vector3 startPos, UnityEngine::Vector3 endPos, float moveDuration, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(endPos), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(startTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, worldRotation, startPos, endPos, moveDuration, startTime);
}
// Autogenerated method: NoteFloorMovement.SetToStart
UnityEngine::Vector3 GlobalNamespace::NoteFloorMovement::SetToStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::SetToStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.ManualUpdate
UnityEngine::Vector3 GlobalNamespace::NoteFloorMovement::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteJump
#include "GlobalNamespace/NoteJump.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: PlayerSpaceConvertor
#include "GlobalNamespace/PlayerSpaceConvertor.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kMissedTimeOffset
float GlobalNamespace::NoteJump::_get_kMissedTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::_get_kMissedTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteJump", "kMissedTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMissedTimeOffset
void GlobalNamespace::NoteJump::_set_kMissedTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::_set_kMissedTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteJump", "kMissedTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rotatedObject
UnityEngine::Transform*& GlobalNamespace::NoteJump::dyn__rotatedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__rotatedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotatedObject"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rotateTowardsPlayer
bool& GlobalNamespace::NoteJump::dyn__rotateTowardsPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__rotateTowardsPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotateTowardsPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _yAvoidanceUp
float& GlobalNamespace::NoteJump::dyn__yAvoidanceUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__yAvoidanceUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yAvoidanceUp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _yAvoidanceDown
float& GlobalNamespace::NoteJump::dyn__yAvoidanceDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__yAvoidanceDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yAvoidanceDown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _endDistanceOffset
float& GlobalNamespace::NoteJump::dyn__endDistanceOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__endDistanceOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endDistanceOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
GlobalNamespace::PlayerTransforms*& GlobalNamespace::NoteJump::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerSpaceConvertor _playerSpaceConvertor
GlobalNamespace::PlayerSpaceConvertor*& GlobalNamespace::NoteJump::dyn__playerSpaceConvertor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__playerSpaceConvertor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpaceConvertor"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerSpaceConvertor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSyncController
GlobalNamespace::IAudioTimeSource*& GlobalNamespace::NoteJump::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action noteJumpDidFinishEvent
System::Action*& GlobalNamespace::NoteJump::dyn_noteJumpDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn_noteJumpDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpDidFinishEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action noteJumpDidPassMissedMarkerEvent
System::Action*& GlobalNamespace::NoteJump::dyn_noteJumpDidPassMissedMarkerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn_noteJumpDidPassMissedMarkerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpDidPassMissedMarkerEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<NoteJump> noteJumpDidPassThreeQuartersEvent
System::Action_1<GlobalNamespace::NoteJump*>*& GlobalNamespace::NoteJump::dyn_noteJumpDidPassThreeQuartersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn_noteJumpDidPassThreeQuartersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpDidPassThreeQuartersEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::NoteJump*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action noteJumpDidPassHalfEvent
System::Action*& GlobalNamespace::NoteJump::dyn_noteJumpDidPassHalfEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn_noteJumpDidPassHalfEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpDidPassHalfEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> noteJumpDidUpdateProgressEvent
System::Action_1<float>*& GlobalNamespace::NoteJump::dyn_noteJumpDidUpdateProgressEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn_noteJumpDidUpdateProgressEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpDidUpdateProgressEvent"))->offset;
  return *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPos
UnityEngine::Vector3& GlobalNamespace::NoteJump::dyn__startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _endPos
UnityEngine::Vector3& GlobalNamespace::NoteJump::dyn__endPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__endPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _jumpDuration
float& GlobalNamespace::NoteJump::dyn__jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__jumpDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _moveVec
UnityEngine::Vector3& GlobalNamespace::NoteJump::dyn__moveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__moveVec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveVec"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatTime
float& GlobalNamespace::NoteJump::dyn__beatTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__beatTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startVerticalVelocity
float& GlobalNamespace::NoteJump::dyn__startVerticalVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__startVerticalVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startVerticalVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _startRotation
UnityEngine::Quaternion& GlobalNamespace::NoteJump::dyn__startRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__startRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _middleRotation
UnityEngine::Quaternion& GlobalNamespace::NoteJump::dyn__middleRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__middleRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_middleRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _endRotation
UnityEngine::Quaternion& GlobalNamespace::NoteJump::dyn__endRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__endRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _gravity
float& GlobalNamespace::NoteJump::dyn__gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _yAvoidance
float& GlobalNamespace::NoteJump::dyn__yAvoidance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__yAvoidance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yAvoidance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _missedTime
float& GlobalNamespace::NoteJump::dyn__missedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__missedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _missedMarkReported
bool& GlobalNamespace::NoteJump::dyn__missedMarkReported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__missedMarkReported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missedMarkReported"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _threeQuartersMarkReported
bool& GlobalNamespace::NoteJump::dyn__threeQuartersMarkReported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__threeQuartersMarkReported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_threeQuartersMarkReported"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _halfJumpMarkReported
bool& GlobalNamespace::NoteJump::dyn__halfJumpMarkReported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__halfJumpMarkReported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_halfJumpMarkReported"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localPosition
UnityEngine::Vector3& GlobalNamespace::NoteJump::dyn__localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__localPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] _randomRotations
::Array<UnityEngine::Vector3>*& GlobalNamespace::NoteJump::dyn__randomRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__randomRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomRotations"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _randomRotationIdx
int& GlobalNamespace::NoteJump::dyn__randomRotationIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__randomRotationIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomRotationIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _worldRotation
UnityEngine::Quaternion& GlobalNamespace::NoteJump::dyn__worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__worldRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_worldRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _inverseWorldRotation
UnityEngine::Quaternion& GlobalNamespace::NoteJump::dyn__inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::dyn__inverseWorldRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inverseWorldRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteJump.get_distanceToPlayer
float GlobalNamespace::NoteJump::get_distanceToPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::get_distanceToPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_distanceToPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteJump.get_beatPos
UnityEngine::Vector3 GlobalNamespace::NoteJump::get_beatPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::get_beatPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteJump.get_jumpDuration
float GlobalNamespace::NoteJump::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteJump.get_moveVec
UnityEngine::Vector3 GlobalNamespace::NoteJump::get_moveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::get_moveVec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveVec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteJump.get_localPosition
UnityEngine::Vector3 GlobalNamespace::NoteJump::get_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::get_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteJump.add_noteJumpDidFinishEvent
void GlobalNamespace::NoteJump::add_noteJumpDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteJumpDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidFinishEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteJumpDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.add_noteJumpDidPassMissedMarkerEvent
void GlobalNamespace::NoteJump::add_noteJumpDidPassMissedMarkerEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteJumpDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidPassMissedMarkerEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidPassMissedMarkerEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteJumpDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.add_noteJumpDidPassThreeQuartersEvent
void GlobalNamespace::NoteJump::add_noteJumpDidPassThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteJump*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidPassThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteJumpDidPassThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidPassThreeQuartersEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidPassThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteJump*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidPassThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteJumpDidPassThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.add_noteJumpDidPassHalfEvent
void GlobalNamespace::NoteJump::add_noteJumpDidPassHalfEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidPassHalfEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteJumpDidPassHalfEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidPassHalfEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidPassHalfEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidPassHalfEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteJumpDidPassHalfEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.add_noteJumpDidUpdateProgressEvent
void GlobalNamespace::NoteJump::add_noteJumpDidUpdateProgressEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidUpdateProgressEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteJumpDidUpdateProgressEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidUpdateProgressEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidUpdateProgressEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidUpdateProgressEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteJumpDidUpdateProgressEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteJump.Init
void GlobalNamespace::NoteJump::Init(float beatTime, float worldRotation, UnityEngine::Vector3 startPos, UnityEngine::Vector3 endPos, float jumpDuration, float gravity, float flipYSide, float endRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatTime), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(endPos), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(gravity), ::il2cpp_utils::ExtractType(flipYSide), ::il2cpp_utils::ExtractType(endRotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatTime, worldRotation, startPos, endPos, jumpDuration, gravity, flipYSide, endRotation);
}
// Autogenerated method: NoteJump.ManualUpdate
UnityEngine::Vector3 GlobalNamespace::NoteJump::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteJumpStartScaleUp
#include "GlobalNamespace/NoteJumpStartScaleUp.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteJump
#include "GlobalNamespace/NoteJump.hpp"
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _fullScaleJumpPart
float& GlobalNamespace::NoteJumpStartScaleUp::dyn__fullScaleJumpPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::dyn__fullScaleJumpPart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullScaleJumpPart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
UnityEngine::Transform*& GlobalNamespace::NoteJumpStartScaleUp::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteController _noteController
GlobalNamespace::NoteController*& GlobalNamespace::NoteJumpStartScaleUp::dyn__noteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::dyn__noteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteJump _noteJump
GlobalNamespace::NoteJump*& GlobalNamespace::NoteJumpStartScaleUp::dyn__noteJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::dyn__noteJump");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJump"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteJump**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteJumpStartScaleUp.Awake
void GlobalNamespace::NoteJumpStartScaleUp::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteJumpStartScaleUp.OnDestroy
void GlobalNamespace::NoteJumpStartScaleUp::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteJumpStartScaleUp.UpdateScale
void GlobalNamespace::NoteJumpStartScaleUp::UpdateScale(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::UpdateScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, progress);
}
// Autogenerated method: NoteJumpStartScaleUp.HandleNoteJumpDidUpdateProgress
void GlobalNamespace::NoteJumpStartScaleUp::HandleNoteJumpDidUpdateProgress(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::HandleNoteJumpDidUpdateProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteJumpDidUpdateProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, progress);
}
// Autogenerated method: NoteJumpStartScaleUp.HandleNoteControllerDidInit
void GlobalNamespace::NoteJumpStartScaleUp::HandleNoteControllerDidInit(GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::HandleNoteControllerDidInit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteLineConnectionController
#include "GlobalNamespace/NoteLineConnectionController.hpp"
// Including type: NoteLineConnectionController/Pool
#include "GlobalNamespace/NoteLineConnectionController_Pool.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
UnityEngine::LineRenderer*& GlobalNamespace::NoteLineConnectionController::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
GlobalNamespace::PlayerTransforms*& GlobalNamespace::NoteLineConnectionController::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::NoteLineConnectionController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::NoteLineConnectionController::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<NoteLineConnectionController> didFinishEvent
System::Action_1<GlobalNamespace::NoteLineConnectionController*>*& GlobalNamespace::NoteLineConnectionController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::NoteLineConnectionController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteController _noteController0
GlobalNamespace::NoteController*& GlobalNamespace::NoteLineConnectionController::dyn__noteController0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__noteController0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController0"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteController _noteController1
GlobalNamespace::NoteController*& GlobalNamespace::NoteLineConnectionController::dyn__noteController1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__noteController1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController1"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color0
UnityEngine::Color& GlobalNamespace::NoteLineConnectionController::dyn__color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__color0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color0"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color1
UnityEngine::Color& GlobalNamespace::NoteLineConnectionController::dyn__color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__color1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color1"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeOutStartDistance
float& GlobalNamespace::NoteLineConnectionController::dyn__fadeOutStartDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__fadeOutStartDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutStartDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeOutEndDistance
float& GlobalNamespace::NoteLineConnectionController::dyn__fadeOutEndDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__fadeOutEndDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutEndDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteTime
float& GlobalNamespace::NoteLineConnectionController::dyn__noteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__noteTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didFinish
bool& GlobalNamespace::NoteLineConnectionController::dyn__didFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::dyn__didFinish");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinish"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteLineConnectionController.add_didFinishEvent
void GlobalNamespace::NoteLineConnectionController::add_didFinishEvent(System::Action_1<GlobalNamespace::NoteLineConnectionController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteLineConnectionController.remove_didFinishEvent
void GlobalNamespace::NoteLineConnectionController::remove_didFinishEvent(System::Action_1<GlobalNamespace::NoteLineConnectionController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteLineConnectionController.Setup
void GlobalNamespace::NoteLineConnectionController::Setup(GlobalNamespace::NoteController* noteController0, GlobalNamespace::NoteController* noteController1, float fadeOutStartDistance, float fadeOutEndDistance, float noteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController0), ::il2cpp_utils::ExtractType(noteController1), ::il2cpp_utils::ExtractType(fadeOutStartDistance), ::il2cpp_utils::ExtractType(fadeOutEndDistance), ::il2cpp_utils::ExtractType(noteTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController0, noteController1, fadeOutStartDistance, fadeOutEndDistance, noteTime);
}
// Autogenerated method: NoteLineConnectionController.Update
void GlobalNamespace::NoteLineConnectionController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteLineConnectionController.UpdatePositionsAndColors
void GlobalNamespace::NoteLineConnectionController::UpdatePositionsAndColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::UpdatePositionsAndColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePositionsAndColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteLineConnectionController/Pool
#include "GlobalNamespace/NoteLineConnectionController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: NoteFloorMovement
#include "GlobalNamespace/NoteFloorMovement.hpp"
// Including type: NoteJump
#include "GlobalNamespace/NoteJump.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NoteFloorMovement _floorMovement
GlobalNamespace::NoteFloorMovement*& GlobalNamespace::NoteMovement::dyn__floorMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn__floorMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floorMovement"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteFloorMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteJump _jump
GlobalNamespace::NoteJump*& GlobalNamespace::NoteMovement::dyn__jump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn__jump");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jump"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteJump**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _zOffset
float& GlobalNamespace::NoteMovement::dyn__zOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn__zOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didInitEvent
System::Action*& GlobalNamespace::NoteMovement::dyn_didInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn_didInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInitEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action noteDidStartJumpEvent
System::Action*& GlobalNamespace::NoteMovement::dyn_noteDidStartJumpEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn_noteDidStartJumpEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteDidStartJumpEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action noteDidFinishJumpEvent
System::Action*& GlobalNamespace::NoteMovement::dyn_noteDidFinishJumpEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn_noteDidFinishJumpEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteDidFinishJumpEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action noteDidPassMissedMarkerEvent
System::Action*& GlobalNamespace::NoteMovement::dyn_noteDidPassMissedMarkerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn_noteDidPassMissedMarkerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteDidPassMissedMarkerEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action noteDidPassHalfJumpEvent
System::Action*& GlobalNamespace::NoteMovement::dyn_noteDidPassHalfJumpEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn_noteDidPassHalfJumpEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteDidPassHalfJumpEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<NoteMovement> noteDidPassJumpThreeQuartersEvent
System::Action_1<GlobalNamespace::NoteMovement*>*& GlobalNamespace::NoteMovement::dyn_noteDidPassJumpThreeQuartersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn_noteDidPassJumpThreeQuartersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteDidPassJumpThreeQuartersEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::NoteMovement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action noteDidMoveInJumpPhaseEvent
System::Action*& GlobalNamespace::NoteMovement::dyn_noteDidMoveInJumpPhaseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn_noteDidMoveInJumpPhaseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteDidMoveInJumpPhaseEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteMovement/MovementPhase <movementPhase>k__BackingField
GlobalNamespace::NoteMovement::MovementPhase& GlobalNamespace::NoteMovement::dyn_$movementPhase$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn_$movementPhase$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<movementPhase>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteMovement::MovementPhase*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
UnityEngine::Vector3& GlobalNamespace::NoteMovement::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPosition
UnityEngine::Vector3& GlobalNamespace::NoteMovement::dyn__prevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn__prevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localPosition
UnityEngine::Vector3& GlobalNamespace::NoteMovement::dyn__localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn__localPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevLocalPosition
UnityEngine::Vector3& GlobalNamespace::NoteMovement::dyn__prevLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::dyn__prevLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevLocalPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteMovement.get_movementPhase
GlobalNamespace::NoteMovement::MovementPhase GlobalNamespace::NoteMovement::get_movementPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_movementPhase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_movementPhase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteMovement::MovementPhase, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.set_movementPhase
void GlobalNamespace::NoteMovement::set_movementPhase(GlobalNamespace::NoteMovement::MovementPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::set_movementPhase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movementPhase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.get_position
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_prevPosition
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_prevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_prevPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_localPosition
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_prevLocalPosition
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_prevLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_prevLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_worldRotation
UnityEngine::Quaternion GlobalNamespace::NoteMovement::get_worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_worldRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_inverseWorldRotation
UnityEngine::Quaternion GlobalNamespace::NoteMovement::get_inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_inverseWorldRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inverseWorldRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_moveEndPos
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_moveEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_moveEndPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveEndPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_moveStartTime
float GlobalNamespace::NoteMovement::get_moveStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_moveStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_moveDuration
float GlobalNamespace::NoteMovement::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_beatPos
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_beatPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_beatPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_jumpDuration
float GlobalNamespace::NoteMovement::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_jumpMoveVec
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_jumpMoveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_jumpMoveVec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpMoveVec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.get_distanceToPlayer
float GlobalNamespace::NoteMovement::get_distanceToPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_distanceToPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_distanceToPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.add_didInitEvent
void GlobalNamespace::NoteMovement::add_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_didInitEvent
void GlobalNamespace::NoteMovement::remove_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidStartJumpEvent
void GlobalNamespace::NoteMovement::add_noteDidStartJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidStartJumpEvent
void GlobalNamespace::NoteMovement::remove_noteDidStartJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidFinishJumpEvent
void GlobalNamespace::NoteMovement::add_noteDidFinishJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidFinishJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteDidFinishJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidFinishJumpEvent
void GlobalNamespace::NoteMovement::remove_noteDidFinishJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidFinishJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteDidFinishJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidPassMissedMarkerEvent
void GlobalNamespace::NoteMovement::add_noteDidPassMissedMarkerEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidPassMissedMarkerEvent
void GlobalNamespace::NoteMovement::remove_noteDidPassMissedMarkerEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidPassHalfJumpEvent
void GlobalNamespace::NoteMovement::add_noteDidPassHalfJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidPassHalfJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteDidPassHalfJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidPassHalfJumpEvent
void GlobalNamespace::NoteMovement::remove_noteDidPassHalfJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidPassHalfJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteDidPassHalfJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidPassJumpThreeQuartersEvent
void GlobalNamespace::NoteMovement::add_noteDidPassJumpThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteMovement*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidPassJumpThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteDidPassJumpThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidPassJumpThreeQuartersEvent
void GlobalNamespace::NoteMovement::remove_noteDidPassJumpThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteMovement*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidPassJumpThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteDidPassJumpThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidMoveInJumpPhaseEvent
void GlobalNamespace::NoteMovement::add_noteDidMoveInJumpPhaseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidMoveInJumpPhaseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteDidMoveInJumpPhaseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidMoveInJumpPhaseEvent
void GlobalNamespace::NoteMovement::remove_noteDidMoveInJumpPhaseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidMoveInJumpPhaseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteDidMoveInJumpPhaseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteMovement.Init
void GlobalNamespace::NoteMovement::Init(float beatTime, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, float flipYSide, float endRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatTime), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(jumpGravity), ::il2cpp_utils::ExtractType(flipYSide), ::il2cpp_utils::ExtractType(endRotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatTime, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, flipYSide, endRotation);
}
// Autogenerated method: NoteMovement.Awake
void GlobalNamespace::NoteMovement::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.OnDestroy
void GlobalNamespace::NoteMovement::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.HandleFloorMovementDidFinish
void GlobalNamespace::NoteMovement::HandleFloorMovementDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleFloorMovementDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFloorMovementDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.HandleNoteJumpDidFinish
void GlobalNamespace::NoteMovement::HandleNoteJumpDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleNoteJumpDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteJumpDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.HandleNoteJumpDidPassMissedMark
void GlobalNamespace::NoteMovement::HandleNoteJumpDidPassMissedMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleNoteJumpDidPassMissedMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteJumpDidPassMissedMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.HandleNoteJumpDidPassThreeQuarters
void GlobalNamespace::NoteMovement::HandleNoteJumpDidPassThreeQuarters(GlobalNamespace::NoteJump* noteJump) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleNoteJumpDidPassThreeQuarters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteJumpDidPassThreeQuarters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteJump)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteJump);
}
// Autogenerated method: NoteMovement.HandleNoteJumpNoteJumpDidPassHalf
void GlobalNamespace::NoteMovement::HandleNoteJumpNoteJumpDidPassHalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleNoteJumpNoteJumpDidPassHalf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteJumpNoteJumpDidPassHalf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteMovement.ManualUpdate
void GlobalNamespace::NoteMovement::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteMovement/MovementPhase
#include "GlobalNamespace/NoteMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteMovement/MovementPhase None
GlobalNamespace::NoteMovement::MovementPhase GlobalNamespace::NoteMovement::MovementPhase::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NoteMovement::MovementPhase>("", "NoteMovement/MovementPhase", "None"));
}
// Autogenerated static field setter
// Set static field: static public NoteMovement/MovementPhase None
void GlobalNamespace::NoteMovement::MovementPhase::_set_None(GlobalNamespace::NoteMovement::MovementPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteMovement/MovementPhase", "None", value));
}
// Autogenerated static field getter
// Get static field: static public NoteMovement/MovementPhase MovingOnTheFloor
GlobalNamespace::NoteMovement::MovementPhase GlobalNamespace::NoteMovement::MovementPhase::_get_MovingOnTheFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_get_MovingOnTheFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NoteMovement::MovementPhase>("", "NoteMovement/MovementPhase", "MovingOnTheFloor"));
}
// Autogenerated static field setter
// Set static field: static public NoteMovement/MovementPhase MovingOnTheFloor
void GlobalNamespace::NoteMovement::MovementPhase::_set_MovingOnTheFloor(GlobalNamespace::NoteMovement::MovementPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_set_MovingOnTheFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteMovement/MovementPhase", "MovingOnTheFloor", value));
}
// Autogenerated static field getter
// Get static field: static public NoteMovement/MovementPhase Jumping
GlobalNamespace::NoteMovement::MovementPhase GlobalNamespace::NoteMovement::MovementPhase::_get_Jumping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_get_Jumping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NoteMovement::MovementPhase>("", "NoteMovement/MovementPhase", "Jumping"));
}
// Autogenerated static field setter
// Set static field: static public NoteMovement/MovementPhase Jumping
void GlobalNamespace::NoteMovement::MovementPhase::_set_Jumping(GlobalNamespace::NoteMovement::MovementPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_set_Jumping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteMovement/MovementPhase", "Jumping", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::NoteMovement::MovementPhase::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProModeTrailingCollidersController
#include "GlobalNamespace/ProModeTrailingCollidersController.hpp"
// Including type: BoxCuttableBySaber
#include "GlobalNamespace/BoxCuttableBySaber.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber _mainSmallCuttableBySaber
GlobalNamespace::BoxCuttableBySaber*& GlobalNamespace::ProModeTrailingCollidersController::dyn__mainSmallCuttableBySaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProModeTrailingCollidersController::dyn__mainSmallCuttableBySaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSmallCuttableBySaber"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoxCuttableBySaber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber[] _trailingSmallCuttableBySaberList
::Array<GlobalNamespace::BoxCuttableBySaber*>*& GlobalNamespace::ProModeTrailingCollidersController::dyn__trailingSmallCuttableBySaberList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProModeTrailingCollidersController::dyn__trailingSmallCuttableBySaberList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trailingSmallCuttableBySaberList"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::BoxCuttableBySaber*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteMovement _noteMovement
GlobalNamespace::NoteMovement*& GlobalNamespace::ProModeTrailingCollidersController::dyn__noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProModeTrailingCollidersController::dyn__noteMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteMovement"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform*& GlobalNamespace::ProModeTrailingCollidersController::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProModeTrailingCollidersController::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProModeTrailingCollidersController.Start
void GlobalNamespace::ProModeTrailingCollidersController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProModeTrailingCollidersController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ProModeTrailingCollidersController.OnDestroy
void GlobalNamespace::ProModeTrailingCollidersController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProModeTrailingCollidersController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ProModeTrailingCollidersController.HandleNoteDidMoveInJumpPhase
void GlobalNamespace::ProModeTrailingCollidersController::HandleNoteDidMoveInJumpPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProModeTrailingCollidersController::HandleNoteDidMoveInJumpPhase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDidMoveInJumpPhase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RandomNoteRotation
#include "GlobalNamespace/RandomNoteRotation.hpp"
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NoteControllerBase _noteController
GlobalNamespace::NoteControllerBase*& GlobalNamespace::RandomNoteRotation::dyn__noteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomNoteRotation::dyn__noteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteControllerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform*& GlobalNamespace::RandomNoteRotation::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomNoteRotation::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RandomNoteRotation.Awake
void GlobalNamespace::RandomNoteRotation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomNoteRotation::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RandomNoteRotation.OnDestroy
void GlobalNamespace::RandomNoteRotation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomNoteRotation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RandomNoteRotation.HandleNoteControllerDidInit
void GlobalNamespace::RandomNoteRotation::HandleNoteControllerDidInit(GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomNoteRotation::HandleNoteControllerDidInit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoteController
#include "GlobalNamespace/TutorialNoteController.hpp"
// Including type: TutorialNoteController/Pool
#include "GlobalNamespace/TutorialNoteController_Pool.hpp"
// Including type: BoxCuttableBySaber
#include "GlobalNamespace/BoxCuttableBySaber.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: GameNoteController/GameNoteType
#include "GlobalNamespace/GameNoteController_GameNoteType.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber _cuttableBySaberCore
GlobalNamespace::BoxCuttableBySaber*& GlobalNamespace::TutorialNoteController::dyn__cuttableBySaberCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::dyn__cuttableBySaberCore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cuttableBySaberCore"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoxCuttableBySaber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber _cuttableBySaberBeforeNote
GlobalNamespace::BoxCuttableBySaber*& GlobalNamespace::TutorialNoteController::dyn__cuttableBySaberBeforeNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::dyn__cuttableBySaberBeforeNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cuttableBySaberBeforeNote"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoxCuttableBySaber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _wrapperGO
UnityEngine::GameObject*& GlobalNamespace::TutorialNoteController::dyn__wrapperGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::dyn__wrapperGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wrapperGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _beforeNoteCutWasOk
bool& GlobalNamespace::TutorialNoteController::dyn__beforeNoteCutWasOk() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::dyn__beforeNoteCutWasOk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeNoteCutWasOk"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hidden
bool& GlobalNamespace::TutorialNoteController::dyn__hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::dyn__hidden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hidden"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutAngleTolerance
float& GlobalNamespace::TutorialNoteController::dyn__cutAngleTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::dyn__cutAngleTolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutAngleTolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialNoteController.get_noteMovement
GlobalNamespace::NoteMovement* GlobalNamespace::TutorialNoteController::get_noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::get_noteMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteMovement*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TutorialNoteController.get_gameNoteType
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::TutorialNoteController::get_gameNoteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::get_gameNoteType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameNoteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameNoteController_GameNoteType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TutorialNoteController.INoteMirrorable.get_transform
UnityEngine::Transform* GlobalNamespace::TutorialNoteController::INoteMirrorable_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::INoteMirrorable.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INoteMirrorable.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TutorialNoteController.Init
void GlobalNamespace::TutorialNoteController::Init(GlobalNamespace::NoteData* noteData, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, float cutDirectionAngleOffset, float cutAngleTolerance, float uniformScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(jumpGravity), ::il2cpp_utils::ExtractType(cutDirectionAngleOffset), ::il2cpp_utils::ExtractType(cutAngleTolerance), ::il2cpp_utils::ExtractType(uniformScale)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, cutDirectionAngleOffset, cutAngleTolerance, uniformScale);
}
// Autogenerated method: TutorialNoteController.HandleBeforeNoteWasCutBySaber
void GlobalNamespace::TutorialNoteController::HandleBeforeNoteWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::HandleBeforeNoteWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeforeNoteWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: TutorialNoteController.HandleCoreWasCutBySaber
void GlobalNamespace::TutorialNoteController::HandleCoreWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::HandleCoreWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCoreWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: TutorialNoteController.get_hide
bool GlobalNamespace::TutorialNoteController::get_hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::get_hide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TutorialNoteController.set_hide
void GlobalNamespace::TutorialNoteController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::set_hide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TutorialNoteController.set_pause
void GlobalNamespace::TutorialNoteController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::set_pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TutorialNoteController.Awake
void GlobalNamespace::TutorialNoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TutorialNoteController.OnDestroy
void GlobalNamespace::TutorialNoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TutorialNoteController.NoteDidPassMissedMarker
void GlobalNamespace::TutorialNoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::NoteDidPassMissedMarker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoteController/Pool
#include "GlobalNamespace/TutorialNoteController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirroredObstacleController
#include "GlobalNamespace/MirroredObstacleController.hpp"
// Including type: MirroredObstacleController/Pool
#include "GlobalNamespace/MirroredObstacleController_Pool.hpp"
// Including type: StretchableObstacle
#include "GlobalNamespace/StretchableObstacle.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StretchableObstacle _stretchableObstacle
GlobalNamespace::StretchableObstacle*& GlobalNamespace::MirroredObstacleController::dyn__stretchableObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::dyn__stretchableObstacle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stretchableObstacle"))->offset;
  return *reinterpret_cast<GlobalNamespace::StretchableObstacle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObstacleController _followedObstacle
GlobalNamespace::ObstacleController*& GlobalNamespace::MirroredObstacleController::dyn__followedObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::dyn__followedObstacle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_followedObstacle"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform*& GlobalNamespace::MirroredObstacleController::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _followedTransform
UnityEngine::Transform*& GlobalNamespace::MirroredObstacleController::dyn__followedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::dyn__followedTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_followedTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirroredObstacleController.set_hide
void GlobalNamespace::MirroredObstacleController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::set_hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MirroredObstacleController.Awake
void GlobalNamespace::MirroredObstacleController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MirroredObstacleController.OnDestroy
void GlobalNamespace::MirroredObstacleController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MirroredObstacleController.Update
void GlobalNamespace::MirroredObstacleController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MirroredObstacleController.RemoveListeners
void GlobalNamespace::MirroredObstacleController::RemoveListeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::RemoveListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MirroredObstacleController.UpdatePositionAndRotation
void GlobalNamespace::MirroredObstacleController::UpdatePositionAndRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::UpdatePositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MirroredObstacleController.Mirror
void GlobalNamespace::MirroredObstacleController::Mirror(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::Mirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController);
}
// Autogenerated method: MirroredObstacleController.HandleDidStartDissolving
void GlobalNamespace::MirroredObstacleController::HandleDidStartDissolving(GlobalNamespace::ObstacleControllerBase* obstacleController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirroredObstacleController::HandleDidStartDissolving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirroredObstacleController/Pool
#include "GlobalNamespace/MirroredObstacleController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
// Including type: ObstacleController/<DissolveCoroutine>d__69
#include "GlobalNamespace/ObstacleController_-DissolveCoroutine-d__69.hpp"
// Including type: StretchableObstacle
#include "GlobalNamespace/StretchableObstacle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kAvoidMarkTimeOffset
float GlobalNamespace::ObstacleController::_get_kAvoidMarkTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::_get_kAvoidMarkTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ObstacleController", "kAvoidMarkTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kAvoidMarkTimeOffset
void GlobalNamespace::ObstacleController::_set_kAvoidMarkTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::_set_kAvoidMarkTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObstacleController", "kAvoidMarkTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private StretchableObstacle _stretchableObstacle
GlobalNamespace::StretchableObstacle*& GlobalNamespace::ObstacleController::dyn__stretchableObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__stretchableObstacle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stretchableObstacle"))->offset;
  return *reinterpret_cast<GlobalNamespace::StretchableObstacle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _endDistanceOffset
float& GlobalNamespace::ObstacleController::dyn__endDistanceOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__endDistanceOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endDistanceOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _visualWrappers
::Array<UnityEngine::GameObject*>*& GlobalNamespace::ObstacleController::dyn__visualWrappers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__visualWrappers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visualWrappers"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
GlobalNamespace::PlayerTransforms*& GlobalNamespace::ObstacleController::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSyncController
GlobalNamespace::IAudioTimeSource*& GlobalNamespace::ObstacleController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::ObstacleController::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ObstacleController> finishedMovementEvent
System::Action_1<GlobalNamespace::ObstacleController*>*& GlobalNamespace::ObstacleController::dyn_finishedMovementEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn_finishedMovementEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedMovementEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ObstacleController> passedThreeQuartersOfMove2Event
System::Action_1<GlobalNamespace::ObstacleController*>*& GlobalNamespace::ObstacleController::dyn_passedThreeQuartersOfMove2Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn_passedThreeQuartersOfMove2Event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passedThreeQuartersOfMove2Event"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ObstacleController> passedAvoidedMarkEvent
System::Action_1<GlobalNamespace::ObstacleController*>*& GlobalNamespace::ObstacleController::dyn_passedAvoidedMarkEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn_passedAvoidedMarkEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passedAvoidedMarkEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ObstacleController> didDissolveEvent
System::Action_1<GlobalNamespace::ObstacleController*>*& GlobalNamespace::ObstacleController::dyn_didDissolveEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn_didDissolveEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDissolveEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<ObstacleController,System.Single> didUpdateProgress
System::Action_2<GlobalNamespace::ObstacleController*, float>*& GlobalNamespace::ObstacleController::dyn_didUpdateProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn_didUpdateProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didUpdateProgress"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::ObstacleController*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _width
float& GlobalNamespace::ObstacleController::dyn__width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _height
float& GlobalNamespace::ObstacleController::dyn__height() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _length
float& GlobalNamespace::ObstacleController::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPos
UnityEngine::Vector3& GlobalNamespace::ObstacleController::dyn__startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _midPos
UnityEngine::Vector3& GlobalNamespace::ObstacleController::dyn__midPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__midPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_midPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _endPos
UnityEngine::Vector3& GlobalNamespace::ObstacleController::dyn__endPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__endPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _move1Duration
float& GlobalNamespace::ObstacleController::dyn__move1Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__move1Duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_move1Duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _move2Duration
float& GlobalNamespace::ObstacleController::dyn__move2Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__move2Duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_move2Duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTimeOffset
float& GlobalNamespace::ObstacleController::dyn__startTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__startTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _obstacleDuration
float& GlobalNamespace::ObstacleController::dyn__obstacleDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__obstacleDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _passedThreeQuartersOfMove2Reported
bool& GlobalNamespace::ObstacleController::dyn__passedThreeQuartersOfMove2Reported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__passedThreeQuartersOfMove2Reported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passedThreeQuartersOfMove2Reported"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _passedAvoidedMarkReported
bool& GlobalNamespace::ObstacleController::dyn__passedAvoidedMarkReported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__passedAvoidedMarkReported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passedAvoidedMarkReported"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _passedAvoidedMarkTime
float& GlobalNamespace::ObstacleController::dyn__passedAvoidedMarkTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__passedAvoidedMarkTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passedAvoidedMarkTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _finishMovementTime
float& GlobalNamespace::ObstacleController::dyn__finishMovementTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__finishMovementTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finishMovementTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds _bounds
UnityEngine::Bounds& GlobalNamespace::ObstacleController::dyn__bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bounds"))->offset;
  return *reinterpret_cast<UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dissolving
bool& GlobalNamespace::ObstacleController::dyn__dissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__dissolving");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dissolving"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObstacleData _obstacleData
GlobalNamespace::ObstacleData*& GlobalNamespace::ObstacleController::dyn__obstacleData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__obstacleData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleData"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::ObstacleController::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _worldRotation
UnityEngine::Quaternion& GlobalNamespace::ObstacleController::dyn__worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__worldRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_worldRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _inverseWorldRotation
UnityEngine::Quaternion& GlobalNamespace::ObstacleController::dyn__inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::dyn__inverseWorldRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inverseWorldRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleController.set_hide
void GlobalNamespace::ObstacleController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::set_hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.set_pause
void GlobalNamespace::ObstacleController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::set_pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.get_bounds
UnityEngine::Bounds GlobalNamespace::ObstacleController::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.get_obstacleData
GlobalNamespace::ObstacleData* GlobalNamespace::ObstacleController::get_obstacleData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_obstacleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstacleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleData*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.get_hasPassedAvoidedMark
bool GlobalNamespace::ObstacleController::get_hasPassedAvoidedMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_hasPassedAvoidedMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPassedAvoidedMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.get_move1Duration
float GlobalNamespace::ObstacleController::get_move1Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_move1Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_move1Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.get_move2Duration
float GlobalNamespace::ObstacleController::get_move2Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_move2Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_move2Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.get_width
float GlobalNamespace::ObstacleController::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.get_height
float GlobalNamespace::ObstacleController::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.get_length
float GlobalNamespace::ObstacleController::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.get_color
UnityEngine::Color GlobalNamespace::ObstacleController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.add_finishedMovementEvent
void GlobalNamespace::ObstacleController::add_finishedMovementEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_finishedMovementEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_finishedMovementEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_finishedMovementEvent
void GlobalNamespace::ObstacleController::remove_finishedMovementEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_finishedMovementEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_finishedMovementEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.add_passedThreeQuartersOfMove2Event
void GlobalNamespace::ObstacleController::add_passedThreeQuartersOfMove2Event(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_passedThreeQuartersOfMove2Event");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_passedThreeQuartersOfMove2Event", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_passedThreeQuartersOfMove2Event
void GlobalNamespace::ObstacleController::remove_passedThreeQuartersOfMove2Event(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_passedThreeQuartersOfMove2Event");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_passedThreeQuartersOfMove2Event", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.add_passedAvoidedMarkEvent
void GlobalNamespace::ObstacleController::add_passedAvoidedMarkEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_passedAvoidedMarkEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_passedAvoidedMarkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_passedAvoidedMarkEvent
void GlobalNamespace::ObstacleController::remove_passedAvoidedMarkEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_passedAvoidedMarkEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_passedAvoidedMarkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.add_didDissolveEvent
void GlobalNamespace::ObstacleController::add_didDissolveEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_didDissolveEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didDissolveEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_didDissolveEvent
void GlobalNamespace::ObstacleController::remove_didDissolveEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_didDissolveEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didDissolveEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.add_didUpdateProgress
void GlobalNamespace::ObstacleController::add_didUpdateProgress(System::Action_2<GlobalNamespace::ObstacleController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_didUpdateProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdateProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_didUpdateProgress
void GlobalNamespace::ObstacleController::remove_didUpdateProgress(System::Action_2<GlobalNamespace::ObstacleController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_didUpdateProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdateProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleController.Init
void GlobalNamespace::ObstacleController::Init(GlobalNamespace::ObstacleData* obstacleData, float worldRotation, UnityEngine::Vector3 startPos, UnityEngine::Vector3 midPos, UnityEngine::Vector3 endPos, float move1Duration, float move2Duration, float singleLineWidth, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(midPos), ::il2cpp_utils::ExtractType(endPos), ::il2cpp_utils::ExtractType(move1Duration), ::il2cpp_utils::ExtractType(move2Duration), ::il2cpp_utils::ExtractType(singleLineWidth), ::il2cpp_utils::ExtractType(height)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleData, worldRotation, startPos, midPos, endPos, move1Duration, move2Duration, singleLineWidth, height);
}
// Autogenerated method: ObstacleController.Update
void GlobalNamespace::ObstacleController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.ManualUpdate
void GlobalNamespace::ObstacleController::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::ManualUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController.GetPosForTime
UnityEngine::Vector3 GlobalNamespace::ObstacleController::GetPosForTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::GetPosForTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPosForTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: ObstacleController.DissolveCoroutine
System::Collections::IEnumerator* GlobalNamespace::ObstacleController::DissolveCoroutine(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::DissolveCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DissolveCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, duration);
}
// Autogenerated method: ObstacleController.Dissolve
void GlobalNamespace::ObstacleController::Dissolve(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::Dissolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dissolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObstacleController/<DissolveCoroutine>d__69
#include "GlobalNamespace/ObstacleController_-DissolveCoroutine-d__69.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ObstacleController <>4__this
GlobalNamespace::ObstacleController*& GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
float& GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__69.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__69.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__69.System.IDisposable.Dispose
void GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__69.MoveNext
bool GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__69.System.Collections.IEnumerator.Reset
void GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__69::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleControllerBase
#include "GlobalNamespace/ObstacleControllerBase.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ObstacleControllerBase> didInitEvent
System::Action_1<GlobalNamespace::ObstacleControllerBase*>*& GlobalNamespace::ObstacleControllerBase::dyn_didInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleControllerBase::dyn_didInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInitEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ObstacleControllerBase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<ObstacleControllerBase,System.Single> didStartDissolvingEvent
System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>*& GlobalNamespace::ObstacleControllerBase::dyn_didStartDissolvingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleControllerBase::dyn_didStartDissolvingEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didStartDissolvingEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleControllerBase.add_didInitEvent
void GlobalNamespace::ObstacleControllerBase::add_didInitEvent(System::Action_1<GlobalNamespace::ObstacleControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleControllerBase::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleControllerBase.remove_didInitEvent
void GlobalNamespace::ObstacleControllerBase::remove_didInitEvent(System::Action_1<GlobalNamespace::ObstacleControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleControllerBase::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleControllerBase.add_didStartDissolvingEvent
void GlobalNamespace::ObstacleControllerBase::add_didStartDissolvingEvent(System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleControllerBase::add_didStartDissolvingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleControllerBase.remove_didStartDissolvingEvent
void GlobalNamespace::ObstacleControllerBase::remove_didStartDissolvingEvent(System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleControllerBase::remove_didStartDissolvingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleControllerBase.InvokeDidInitEvent
void GlobalNamespace::ObstacleControllerBase::InvokeDidInitEvent(GlobalNamespace::ObstacleControllerBase* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleControllerBase::InvokeDidInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController);
}
// Autogenerated method: ObstacleControllerBase.InvokeDidStartDissolvingEvent
void GlobalNamespace::ObstacleControllerBase::InvokeDidStartDissolvingEvent(GlobalNamespace::ObstacleControllerBase* obstacleController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleControllerBase::InvokeDidStartDissolvingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeDidStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleDissolve
#include "GlobalNamespace/ObstacleDissolve.hpp"
// Including type: ObstacleControllerBase
#include "GlobalNamespace/ObstacleControllerBase.hpp"
// Including type: CutoutAnimateEffect
#include "GlobalNamespace/CutoutAnimateEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ObstacleControllerBase _obstacleController
GlobalNamespace::ObstacleControllerBase*& GlobalNamespace::ObstacleDissolve::dyn__obstacleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::dyn__obstacleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleControllerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CutoutAnimateEffect _cutoutAnimateEffect
GlobalNamespace::CutoutAnimateEffect*& GlobalNamespace::ObstacleDissolve::dyn__cutoutAnimateEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::dyn__cutoutAnimateEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutoutAnimateEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::CutoutAnimateEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleDissolve.Awake
void GlobalNamespace::ObstacleDissolve::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleDissolve.OnDestroy
void GlobalNamespace::ObstacleDissolve::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleDissolve.HandleObstacleDidInitEvent
void GlobalNamespace::ObstacleDissolve::HandleObstacleDidInitEvent(GlobalNamespace::ObstacleControllerBase* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::HandleObstacleDidInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController);
}
// Autogenerated method: ObstacleDissolve.HandleObcstacleDidStartDissolvingEvent
void GlobalNamespace::ObstacleDissolve::HandleObcstacleDidStartDissolvingEvent(GlobalNamespace::ObstacleControllerBase* obstacleController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::HandleObcstacleDidStartDissolvingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObcstacleDidStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleScaleUp
#include "GlobalNamespace/ObstacleScaleUp.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleControllerBase
#include "GlobalNamespace/ObstacleControllerBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _fullScalePart
float& GlobalNamespace::ObstacleScaleUp::dyn__fullScalePart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleScaleUp::dyn__fullScalePart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullScalePart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
UnityEngine::Transform*& GlobalNamespace::ObstacleScaleUp::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleScaleUp::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObstacleController _obstacleController
GlobalNamespace::ObstacleController*& GlobalNamespace::ObstacleScaleUp::dyn__obstacleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleScaleUp::dyn__obstacleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleScaleUp.Awake
void GlobalNamespace::ObstacleScaleUp::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleScaleUp::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleScaleUp.OnDestroy
void GlobalNamespace::ObstacleScaleUp::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleScaleUp::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleScaleUp.UpdateScale
void GlobalNamespace::ObstacleScaleUp::UpdateScale(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleScaleUp::UpdateScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, progress);
}
// Autogenerated method: ObstacleScaleUp.HandleObstacleControllerDidUpdateProgress
void GlobalNamespace::ObstacleScaleUp::HandleObstacleControllerDidUpdateProgress(GlobalNamespace::ObstacleController* obstacleController, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleScaleUp::HandleObstacleControllerDidUpdateProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleControllerDidUpdateProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController), ::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController, time);
}
// Autogenerated method: ObstacleScaleUp.HandleObstacleControllerDidInit
void GlobalNamespace::ObstacleScaleUp::HandleObstacleControllerDidInit(GlobalNamespace::ObstacleControllerBase* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleScaleUp::HandleObstacleControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: StretchableCube
#include "GlobalNamespace/StretchableCube.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kLength
float GlobalNamespace::StretchableCube::_get_kLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_kLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StretchableCube", "kLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLength
void GlobalNamespace::StretchableCube::_set_kLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_kLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "kLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kWidth
float GlobalNamespace::StretchableCube::_get_kWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_kWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StretchableCube", "kWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kWidth
void GlobalNamespace::StretchableCube::_set_kWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_kWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "kWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kHeight
float GlobalNamespace::StretchableCube::_get_kHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_kHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StretchableCube", "kHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHeight
void GlobalNamespace::StretchableCube::_set_kHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_kHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "kHeight", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39EDC
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p0
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p0"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p0
void GlobalNamespace::StretchableCube::_set_p0(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p0", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39EEC
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p1
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p1"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p1
void GlobalNamespace::StretchableCube::_set_p1(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p1", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39EFC
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p2
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p2"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p2
void GlobalNamespace::StretchableCube::_set_p2(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p2", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F0C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p3
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p3"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p3
void GlobalNamespace::StretchableCube::_set_p3(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p3", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F1C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p4
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p4"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p4
void GlobalNamespace::StretchableCube::_set_p4(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p4", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F2C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p5
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p5"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p5
void GlobalNamespace::StretchableCube::_set_p5(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p5", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F3C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p6
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p6"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p6
void GlobalNamespace::StretchableCube::_set_p6(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p6", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F4C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p7
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p7"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p7
void GlobalNamespace::StretchableCube::_set_p7(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p7", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F5C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] vertices
::Array<UnityEngine::Vector3>* GlobalNamespace::StretchableCube::_get_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_vertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("", "StretchableCube", "vertices"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] vertices
void GlobalNamespace::StretchableCube::_set_vertices(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_vertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "vertices", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F6C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 up
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "up"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 up
void GlobalNamespace::StretchableCube::_set_up(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "up", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F7C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 down
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_down() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "down"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 down
void GlobalNamespace::StretchableCube::_set_down(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "down", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F8C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 front
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_front() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_front");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "front"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 front
void GlobalNamespace::StretchableCube::_set_front(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_front");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "front", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39F9C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 back
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_back() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "back"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 back
void GlobalNamespace::StretchableCube::_set_back(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "back", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39FAC
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 left
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "left"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 left
void GlobalNamespace::StretchableCube::_set_left(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "left", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39FBC
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 right
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "right"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 right
void GlobalNamespace::StretchableCube::_set_right(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "right", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39FCC
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] normals
::Array<UnityEngine::Vector3>* GlobalNamespace::StretchableCube::_get_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_normals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("", "StretchableCube", "normals"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] normals
void GlobalNamespace::StretchableCube::_set_normals(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_normals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "normals", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF39FDC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] triangles
::Array<int>* GlobalNamespace::StretchableCube::_get_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_triangles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("", "StretchableCube", "triangles"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] triangles
void GlobalNamespace::StretchableCube::_set_triangles(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_triangles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "triangles", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] _uvs
::Array<UnityEngine::Vector2>*& GlobalNamespace::StretchableCube::dyn__uvs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::dyn__uvs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uvs"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
UnityEngine::Mesh*& GlobalNamespace::StretchableCube::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StretchableCube.Awake
void GlobalNamespace::StretchableCube::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StretchableCube.OnDestroy
void GlobalNamespace::StretchableCube::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StretchableCube.CreateBox
UnityEngine::Mesh* GlobalNamespace::StretchableCube::CreateBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::CreateBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StretchableCube.RecalculateUVs
void GlobalNamespace::StretchableCube::RecalculateUVs(::Array<UnityEngine::Vector2>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::RecalculateUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uvs)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, uvs);
}
// Autogenerated method: StretchableCube.RefreshUVs
void GlobalNamespace::StretchableCube::RefreshUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::RefreshUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StretchableCube..cctor
void GlobalNamespace::StretchableCube::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StretchableCube", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: StretchableObstacle
#include "GlobalNamespace/StretchableObstacle.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: ParametricBoxFrameController
#include "GlobalNamespace/ParametricBoxFrameController.hpp"
// Including type: ParametricBoxFakeGlowController
#include "GlobalNamespace/ParametricBoxFakeGlowController.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3A0DC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _uvScaleID
int GlobalNamespace::StretchableObstacle::_get__uvScaleID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_get__uvScaleID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "StretchableObstacle", "_uvScaleID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _uvScaleID
void GlobalNamespace::StretchableObstacle::_set__uvScaleID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_set__uvScaleID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableObstacle", "_uvScaleID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3A0EC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _tintColorID
int GlobalNamespace::StretchableObstacle::_get__tintColorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_get__tintColorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "StretchableObstacle", "_tintColorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _tintColorID
void GlobalNamespace::StretchableObstacle::_set__tintColorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_set__tintColorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableObstacle", "_tintColorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3A0FC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _addColorID
int GlobalNamespace::StretchableObstacle::_get__addColorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_get__addColorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "StretchableObstacle", "_addColorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _addColorID
void GlobalNamespace::StretchableObstacle::_set__addColorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_set__addColorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableObstacle", "_addColorID", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _edgeSize
float& GlobalNamespace::StretchableObstacle::dyn__edgeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__edgeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_edgeSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _coreOffset
float& GlobalNamespace::StretchableObstacle::dyn__coreOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__coreOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coreOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _addColorMultiplier
float& GlobalNamespace::StretchableObstacle::dyn__addColorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__addColorMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addColorMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _obstacleCoreLerpToWhiteFactor
float& GlobalNamespace::StretchableObstacle::dyn__obstacleCoreLerpToWhiteFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__obstacleCoreLerpToWhiteFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleCoreLerpToWhiteFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _fakeGlowOffset
UnityEngine::Vector3& GlobalNamespace::StretchableObstacle::dyn__fakeGlowOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__fakeGlowOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeGlowOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _obstacleCore
UnityEngine::Transform*& GlobalNamespace::StretchableObstacle::dyn__obstacleCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__obstacleCore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleCore"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController[] _materialPropertyBlockControllers
::Array<GlobalNamespace::MaterialPropertyBlockController*>*& GlobalNamespace::StretchableObstacle::dyn__materialPropertyBlockControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__materialPropertyBlockControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockControllers"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MaterialPropertyBlockController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ParametricBoxFrameController _obstacleFrame
GlobalNamespace::ParametricBoxFrameController*& GlobalNamespace::StretchableObstacle::dyn__obstacleFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__obstacleFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleFrame"))->offset;
  return *reinterpret_cast<GlobalNamespace::ParametricBoxFrameController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ParametricBoxFakeGlowController _obstacleFakeGlow
GlobalNamespace::ParametricBoxFakeGlowController*& GlobalNamespace::StretchableObstacle::dyn__obstacleFakeGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__obstacleFakeGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleFakeGlow"))->offset;
  return *reinterpret_cast<GlobalNamespace::ParametricBoxFakeGlowController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds _bounds
UnityEngine::Bounds& GlobalNamespace::StretchableObstacle::dyn__bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::dyn__bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bounds"))->offset;
  return *reinterpret_cast<UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StretchableObstacle.get_bounds
UnityEngine::Bounds GlobalNamespace::StretchableObstacle::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StretchableObstacle.SetSizeAndColor
void GlobalNamespace::StretchableObstacle::SetSizeAndColor(float width, float height, float length, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::SetSizeAndColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSizeAndColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, width, height, length, color);
}
// Autogenerated method: StretchableObstacle.OnValidate
void GlobalNamespace::StretchableObstacle::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StretchableObstacle..cctor
void GlobalNamespace::StretchableObstacle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StretchableObstacle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialBeatmapObjectManager
#include "GlobalNamespace/TutorialBeatmapObjectManager.hpp"
// Including type: TutorialBeatmapObjectManager/InitData
#include "GlobalNamespace/TutorialBeatmapObjectManager_InitData.hpp"
// Including type: MemoryPoolContainer`1
#include "GlobalNamespace/MemoryPoolContainer_1.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: TutorialNoteController/Pool
#include "GlobalNamespace/TutorialNoteController_Pool.hpp"
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<TutorialNoteController> _tutorialNotePoolContainer
GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::TutorialNoteController*>*& GlobalNamespace::TutorialBeatmapObjectManager::dyn__tutorialNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::dyn__tutorialNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialNotePoolContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::TutorialNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<BombNoteController> _bombNotePoolContainer
GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::BombNoteController*>*& GlobalNamespace::TutorialBeatmapObjectManager::dyn__bombNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::dyn__bombNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombNotePoolContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::BombNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<ObstacleController> _obstaclePoolContainer
GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::ObstacleController*>*& GlobalNamespace::TutorialBeatmapObjectManager::dyn__obstaclePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::dyn__obstaclePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclePoolContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TutorialBeatmapObjectManager/InitData _initData
GlobalNamespace::TutorialBeatmapObjectManager::InitData*& GlobalNamespace::TutorialBeatmapObjectManager::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::TutorialBeatmapObjectManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialBeatmapObjectManager.Init
void GlobalNamespace::TutorialBeatmapObjectManager::Init(GlobalNamespace::TutorialBeatmapObjectManager::InitData* initData, GlobalNamespace::TutorialNoteController::Pool* tutorialNotePool, GlobalNamespace::BombNoteController::Pool* bombNotePool, GlobalNamespace::ObstacleController::Pool* obstaclePool) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initData), ::il2cpp_utils::ExtractType(tutorialNotePool), ::il2cpp_utils::ExtractType(bombNotePool), ::il2cpp_utils::ExtractType(obstaclePool)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, initData, tutorialNotePool, bombNotePool, obstaclePool);
}
// Autogenerated method: TutorialBeatmapObjectManager.get_activeObstacleControllers
System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>* GlobalNamespace::TutorialBeatmapObjectManager::get_activeObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::get_activeObstacleControllers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeObstacleControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TutorialBeatmapObjectManager.SpawnObstacleInternal
GlobalNamespace::ObstacleController* GlobalNamespace::TutorialBeatmapObjectManager::SpawnObstacleInternal(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::SpawnObstacleInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnObstacleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData), ::il2cpp_utils::ExtractType(obstacleSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleController*, false>(___instance_arg, ___internal__method, obstacleData, obstacleSpawnData, rotation);
}
// Autogenerated method: TutorialBeatmapObjectManager.SpawnBombNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::TutorialBeatmapObjectManager::SpawnBombNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::SpawnBombNoteInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBombNoteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(___instance_arg, ___internal__method, noteData, noteSpawnData, rotation);
}
// Autogenerated method: TutorialBeatmapObjectManager.SpawnBasicNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::TutorialBeatmapObjectManager::SpawnBasicNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::SpawnBasicNoteInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBasicNoteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(cutDirectionAngleOffset)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(___instance_arg, ___internal__method, noteData, noteSpawnData, rotation, cutDirectionAngleOffset);
}
// Autogenerated method: TutorialBeatmapObjectManager.DespawnInternal
void GlobalNamespace::TutorialBeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: TutorialBeatmapObjectManager.DespawnInternal
void GlobalNamespace::TutorialBeatmapObjectManager::DespawnInternal(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obstacleController);
}
// Autogenerated method: TutorialBeatmapObjectManager.DissolveAllObjects
void GlobalNamespace::TutorialBeatmapObjectManager::DissolveAllObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::DissolveAllObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DissolveAllObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TutorialBeatmapObjectManager.HideAllBeatmapObjects
void GlobalNamespace::TutorialBeatmapObjectManager::HideAllBeatmapObjects(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::HideAllBeatmapObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hide);
}
// Autogenerated method: TutorialBeatmapObjectManager.PauseAllBeatmapObjects
void GlobalNamespace::TutorialBeatmapObjectManager::PauseAllBeatmapObjects(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::PauseAllBeatmapObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pause);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialBeatmapObjectManager/InitData
#include "GlobalNamespace/TutorialBeatmapObjectManager_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single cutAngleTolerance
float& GlobalNamespace::TutorialBeatmapObjectManager::InitData::dyn_cutAngleTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::InitData::dyn_cutAngleTolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutAngleTolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BadNoteCutEffectSpawner
#include "GlobalNamespace/BadNoteCutEffectSpawner.hpp"
// Including type: FlyingSpriteSpawner
#include "GlobalNamespace/FlyingSpriteSpawner.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: CoreGameHUDController/InitData
#include "GlobalNamespace/CoreGameHUDController_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FlyingSpriteSpawner _failFlyingSpriteSpawner
GlobalNamespace::FlyingSpriteSpawner*& GlobalNamespace::BadNoteCutEffectSpawner::dyn__failFlyingSpriteSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::dyn__failFlyingSpriteSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failFlyingSpriteSpawner"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingSpriteSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::BadNoteCutEffectSpawner::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::BadNoteCutEffectSpawner::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CoreGameHUDController/InitData _initData
GlobalNamespace::CoreGameHUDController::InitData*& GlobalNamespace::BadNoteCutEffectSpawner::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::CoreGameHUDController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BadNoteCutEffectSpawner.Start
void GlobalNamespace::BadNoteCutEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BadNoteCutEffectSpawner.OnDestroy
void GlobalNamespace::BadNoteCutEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BadNoteCutEffectSpawner.HandleNoteWasCut
void GlobalNamespace::BadNoteCutEffectSpawner::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatEffectSpawner
#include "GlobalNamespace/BeatEffectSpawner.hpp"
// Including type: BeatEffectSpawner/InitData
#include "GlobalNamespace/BeatEffectSpawner_InitData.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: SongController
#include "GlobalNamespace/SongController.hpp"
// Including type: MemoryPoolContainer`1
#include "GlobalNamespace/MemoryPoolContainer_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: BeatEffect/Pool
#include "GlobalNamespace/BeatEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _effectDuration
float& GlobalNamespace::BeatEffectSpawner::dyn__effectDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::dyn__effectDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _bombColorEffect
UnityEngine::Color& GlobalNamespace::BeatEffectSpawner::dyn__bombColorEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::dyn__bombColorEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombColorEffect"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::BeatEffectSpawner::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::BeatEffectSpawner::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::BeatEffectSpawner::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatEffectSpawner/InitData _initData
GlobalNamespace::BeatEffectSpawner::InitData*& GlobalNamespace::BeatEffectSpawner::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatEffectSpawner::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongController _songController
GlobalNamespace::SongController*& GlobalNamespace::BeatEffectSpawner::dyn__songController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::dyn__songController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<BeatEffect> _beatEffectPoolContainer
GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::BeatEffect*>*& GlobalNamespace::BeatEffectSpawner::dyn__beatEffectPoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::dyn__beatEffectPoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatEffectPoolContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::BeatEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatEffectSpawner.Init
void GlobalNamespace::BeatEffectSpawner::Init(GlobalNamespace::BeatEffect::Pool* beatEffectPool) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatEffectPool)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatEffectPool);
}
// Autogenerated method: BeatEffectSpawner.Start
void GlobalNamespace::BeatEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BeatEffectSpawner.OnDestroy
void GlobalNamespace::BeatEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BeatEffectSpawner.Update
void GlobalNamespace::BeatEffectSpawner::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BeatEffectSpawner.HandleNoteDidStartJump
void GlobalNamespace::BeatEffectSpawner::HandleNoteDidStartJump(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::HandleNoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: BeatEffectSpawner.HandleBeatEffectDidFinish
void GlobalNamespace::BeatEffectSpawner::HandleBeatEffectDidFinish(GlobalNamespace::BeatEffect* beatEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::HandleBeatEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatEffectSpawner/InitData
#include "GlobalNamespace/BeatEffectSpawner_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hideNoteSpawnEffect
bool& GlobalNamespace::BeatEffectSpawner::InitData::dyn_hideNoteSpawnEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffectSpawner::InitData::dyn_hideNoteSpawnEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hideNoteSpawnEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingScoreSpawner
#include "GlobalNamespace/FlyingScoreSpawner.hpp"
// Including type: FlyingScoreSpawner/SpawnPosition
#include "GlobalNamespace/FlyingScoreSpawner_SpawnPosition.hpp"
// Including type: FlyingScoreSpawner/InitData
#include "GlobalNamespace/FlyingScoreSpawner_InitData.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: FlyingScoreEffect/Pool
#include "GlobalNamespace/FlyingScoreEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly FlyingScoreEffect/Pool _flyingScoreEffectPool
GlobalNamespace::FlyingScoreEffect::Pool*& GlobalNamespace::FlyingScoreSpawner::dyn__flyingScoreEffectPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::dyn__flyingScoreEffectPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingScoreEffectPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingScoreEffect::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FlyingScoreSpawner/InitData _initData
GlobalNamespace::FlyingScoreSpawner::InitData*& GlobalNamespace::FlyingScoreSpawner::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingScoreSpawner::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingScoreSpawner.SpawnFlyingScore
void GlobalNamespace::FlyingScoreSpawner::SpawnFlyingScore(ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo, int noteLineIndex, int multiplier, UnityEngine::Vector3 pos, UnityEngine::Quaternion rotation, UnityEngine::Quaternion inverseRotation, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::SpawnFlyingScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnFlyingScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(multiplier), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(inverseRotation), ::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(noteCutInfo), noteLineIndex, multiplier, pos, rotation, inverseRotation, color);
}
// Autogenerated method: FlyingScoreSpawner.HandleFlyingObjectEffectDidFinish
void GlobalNamespace::FlyingScoreSpawner::HandleFlyingObjectEffectDidFinish(GlobalNamespace::FlyingObjectEffect* flyingObjectEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::HandleFlyingObjectEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFlyingObjectEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flyingObjectEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flyingObjectEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingScoreSpawner/SpawnPosition
#include "GlobalNamespace/FlyingScoreSpawner_SpawnPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FlyingScoreSpawner/SpawnPosition Underground
GlobalNamespace::FlyingScoreSpawner::SpawnPosition GlobalNamespace::FlyingScoreSpawner::SpawnPosition::_get_Underground() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::SpawnPosition::_get_Underground");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FlyingScoreSpawner::SpawnPosition>("", "FlyingScoreSpawner/SpawnPosition", "Underground"));
}
// Autogenerated static field setter
// Set static field: static public FlyingScoreSpawner/SpawnPosition Underground
void GlobalNamespace::FlyingScoreSpawner::SpawnPosition::_set_Underground(GlobalNamespace::FlyingScoreSpawner::SpawnPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::SpawnPosition::_set_Underground");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlyingScoreSpawner/SpawnPosition", "Underground", value));
}
// Autogenerated static field getter
// Get static field: static public FlyingScoreSpawner/SpawnPosition AboveGround
GlobalNamespace::FlyingScoreSpawner::SpawnPosition GlobalNamespace::FlyingScoreSpawner::SpawnPosition::_get_AboveGround() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::SpawnPosition::_get_AboveGround");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FlyingScoreSpawner::SpawnPosition>("", "FlyingScoreSpawner/SpawnPosition", "AboveGround"));
}
// Autogenerated static field setter
// Set static field: static public FlyingScoreSpawner/SpawnPosition AboveGround
void GlobalNamespace::FlyingScoreSpawner::SpawnPosition::_set_AboveGround(GlobalNamespace::FlyingScoreSpawner::SpawnPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::SpawnPosition::_set_AboveGround");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlyingScoreSpawner/SpawnPosition", "AboveGround", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::FlyingScoreSpawner::SpawnPosition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::SpawnPosition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingScoreSpawner/InitData
#include "GlobalNamespace/FlyingScoreSpawner_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly FlyingScoreSpawner/SpawnPosition spawnPosition
GlobalNamespace::FlyingScoreSpawner::SpawnPosition& GlobalNamespace::FlyingScoreSpawner::InitData::dyn_spawnPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreSpawner::InitData::dyn_spawnPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnPosition"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingScoreSpawner::SpawnPosition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingSpriteSpawner
#include "GlobalNamespace/FlyingSpriteSpawner.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: FlyingObjectEffect
#include "GlobalNamespace/FlyingObjectEffect.hpp"
// Including type: FlyingSpriteEffect/Pool
#include "GlobalNamespace/FlyingSpriteEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _sprite
UnityEngine::Sprite*& GlobalNamespace::FlyingSpriteSpawner::dyn__sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::dyn__sprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
UnityEngine::Material*& GlobalNamespace::FlyingSpriteSpawner::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float& GlobalNamespace::FlyingSpriteSpawner::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _xSpread
float& GlobalNamespace::FlyingSpriteSpawner::dyn__xSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::dyn__xSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xSpread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetYPos
float& GlobalNamespace::FlyingSpriteSpawner::dyn__targetYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::dyn__targetYPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetYPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetZPos
float& GlobalNamespace::FlyingSpriteSpawner::dyn__targetZPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::dyn__targetZPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetZPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::FlyingSpriteSpawner::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shake
bool& GlobalNamespace::FlyingSpriteSpawner::dyn__shake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::dyn__shake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FlyingSpriteEffect/Pool _flyingSpriteEffectPool
GlobalNamespace::FlyingSpriteEffect::Pool*& GlobalNamespace::FlyingSpriteSpawner::dyn__flyingSpriteEffectPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::dyn__flyingSpriteEffectPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingSpriteEffectPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingSpriteEffect::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingSpriteSpawner.SpawnFlyingSprite
void GlobalNamespace::FlyingSpriteSpawner::SpawnFlyingSprite(UnityEngine::Vector3 pos, UnityEngine::Quaternion rotation, UnityEngine::Quaternion inverseRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::SpawnFlyingSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnFlyingSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(inverseRotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pos, rotation, inverseRotation);
}
// Autogenerated method: FlyingSpriteSpawner.HandleFlyingObjectEffectDidFinish
void GlobalNamespace::FlyingSpriteSpawner::HandleFlyingObjectEffectDidFinish(GlobalNamespace::FlyingObjectEffect* flyingObjectEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingSpriteSpawner::HandleFlyingObjectEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFlyingObjectEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flyingObjectEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flyingObjectEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlyingTextSpawner
#include "GlobalNamespace/FlyingTextSpawner.hpp"
// Including type: FlyingTextEffect/Pool
#include "GlobalNamespace/FlyingTextEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float& GlobalNamespace::FlyingTextSpawner::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _xSpread
float& GlobalNamespace::FlyingTextSpawner::dyn__xSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::dyn__xSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xSpread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetYPos
float& GlobalNamespace::FlyingTextSpawner::dyn__targetYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::dyn__targetYPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetYPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetZPos
float& GlobalNamespace::FlyingTextSpawner::dyn__targetZPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::dyn__targetZPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetZPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::FlyingTextSpawner::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fontSize
float& GlobalNamespace::FlyingTextSpawner::dyn__fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::dyn__fontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shake
bool& GlobalNamespace::FlyingTextSpawner::dyn__shake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::dyn__shake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FlyingTextEffect/Pool _flyingTextEffectPool
GlobalNamespace::FlyingTextEffect::Pool*& GlobalNamespace::FlyingTextSpawner::dyn__flyingTextEffectPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::dyn__flyingTextEffectPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingTextEffectPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingTextEffect::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingTextSpawner.SpawnText
void GlobalNamespace::FlyingTextSpawner::SpawnText(UnityEngine::Vector3 pos, UnityEngine::Quaternion rotation, UnityEngine::Quaternion inverseRotation, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::SpawnText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(inverseRotation), ::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pos, rotation, inverseRotation, text);
}
// Autogenerated method: FlyingTextSpawner.HandleFlyingObjectEffectDidFinish
void GlobalNamespace::FlyingTextSpawner::HandleFlyingObjectEffectDidFinish(GlobalNamespace::FlyingObjectEffect* flyingObjectEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingTextSpawner::HandleFlyingObjectEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFlyingObjectEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flyingObjectEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flyingObjectEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissedNoteEffectSpawner
#include "GlobalNamespace/MissedNoteEffectSpawner.hpp"
// Including type: FlyingSpriteSpawner
#include "GlobalNamespace/FlyingSpriteSpawner.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: CoreGameHUDController/InitData
#include "GlobalNamespace/CoreGameHUDController_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FlyingSpriteSpawner _missedNoteFlyingSpriteSpawner
GlobalNamespace::FlyingSpriteSpawner*& GlobalNamespace::MissedNoteEffectSpawner::dyn__missedNoteFlyingSpriteSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissedNoteEffectSpawner::dyn__missedNoteFlyingSpriteSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missedNoteFlyingSpriteSpawner"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingSpriteSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::MissedNoteEffectSpawner::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissedNoteEffectSpawner::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::MissedNoteEffectSpawner::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissedNoteEffectSpawner::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CoreGameHUDController/InitData _initData
GlobalNamespace::CoreGameHUDController::InitData*& GlobalNamespace::MissedNoteEffectSpawner::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissedNoteEffectSpawner::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::CoreGameHUDController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spawnPosZ
float& GlobalNamespace::MissedNoteEffectSpawner::dyn__spawnPosZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissedNoteEffectSpawner::dyn__spawnPosZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnPosZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissedNoteEffectSpawner.Start
void GlobalNamespace::MissedNoteEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissedNoteEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissedNoteEffectSpawner.OnDestroy
void GlobalNamespace::MissedNoteEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissedNoteEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MissedNoteEffectSpawner.HandleNoteWasMissed
void GlobalNamespace::MissedNoteEffectSpawner::HandleNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissedNoteEffectSpawner::HandleNoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutCoreEffectsSpawner
#include "GlobalNamespace/NoteCutCoreEffectsSpawner.hpp"
// Including type: NoteCutParticlesEffect
#include "GlobalNamespace/NoteCutParticlesEffect.hpp"
// Including type: NoteDebrisSpawner
#include "GlobalNamespace/NoteDebrisSpawner.hpp"
// Including type: NoteCutHapticEffect
#include "GlobalNamespace/NoteCutHapticEffect.hpp"
// Including type: ShockwaveEffect
#include "GlobalNamespace/ShockwaveEffect.hpp"
// Including type: BombExplosionEffect
#include "GlobalNamespace/BombExplosionEffect.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _shockWaveYPos
float& GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__shockWaveYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__shockWaveYPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockWaveYPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutParticlesEffect _noteCutParticlesEffect
GlobalNamespace::NoteCutParticlesEffect*& GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__noteCutParticlesEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__noteCutParticlesEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutParticlesEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutParticlesEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebrisSpawner _noteDebrisSpawner
GlobalNamespace::NoteDebrisSpawner*& GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__noteDebrisSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__noteDebrisSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDebrisSpawner"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteDebrisSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutHapticEffect _noteCutHapticEffect
GlobalNamespace::NoteCutHapticEffect*& GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__noteCutHapticEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__noteCutHapticEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutHapticEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutHapticEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShockwaveEffect _shockwaveEffect
GlobalNamespace::ShockwaveEffect*& GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__shockwaveEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__shockwaveEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockwaveEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::ShockwaveEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BombExplosionEffect _bombExplosionEffect
GlobalNamespace::BombExplosionEffect*& GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__bombExplosionEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__bombExplosionEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombExplosionEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::BombExplosionEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutCoreEffectsSpawner.Start
void GlobalNamespace::NoteCutCoreEffectsSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutCoreEffectsSpawner.OnDestroy
void GlobalNamespace::NoteCutCoreEffectsSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutCoreEffectsSpawner.HandleNoteWasCut
void GlobalNamespace::NoteCutCoreEffectsSpawner::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: NoteCutCoreEffectsSpawner.SpawnNoteCutEffect
void GlobalNamespace::NoteCutCoreEffectsSpawner::SpawnNoteCutEffect(ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo, GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::SpawnNoteCutEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnNoteCutEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(noteCutInfo), noteController);
}
// Autogenerated method: NoteCutCoreEffectsSpawner.SpawnBombCutEffect
void GlobalNamespace::NoteCutCoreEffectsSpawner::SpawnBombCutEffect(ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo, GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutCoreEffectsSpawner::SpawnBombCutEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBombCutEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(noteCutInfo), noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutScoreSpawner
#include "GlobalNamespace/NoteCutScoreSpawner.hpp"
// Including type: FlyingScoreSpawner
#include "GlobalNamespace/FlyingScoreSpawner.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FlyingScoreSpawner _flyingScoreSpawner
GlobalNamespace::FlyingScoreSpawner*& GlobalNamespace::NoteCutScoreSpawner::dyn__flyingScoreSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutScoreSpawner::dyn__flyingScoreSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingScoreSpawner"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingScoreSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::NoteCutScoreSpawner::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutScoreSpawner::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IScoreController _scoreController
GlobalNamespace::IScoreController*& GlobalNamespace::NoteCutScoreSpawner::dyn__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutScoreSpawner::dyn__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutScoreSpawner.Start
void GlobalNamespace::NoteCutScoreSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutScoreSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutScoreSpawner.OnDestroy
void GlobalNamespace::NoteCutScoreSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutScoreSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutScoreSpawner.HandleNoteWasCut
void GlobalNamespace::NoteCutScoreSpawner::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutScoreSpawner::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebrisSpawner
#include "GlobalNamespace/NoteDebrisSpawner.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: NoteDebris/Pool
#include "GlobalNamespace/NoteDebris_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMinLifeTime
float GlobalNamespace::NoteDebrisSpawner::_get_kMinLifeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::_get_kMinLifeTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteDebrisSpawner", "kMinLifeTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinLifeTime
void GlobalNamespace::NoteDebrisSpawner::_set_kMinLifeTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::_set_kMinLifeTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebrisSpawner", "kMinLifeTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMaxLifeTime
float GlobalNamespace::NoteDebrisSpawner::_get_kMaxLifeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::_get_kMaxLifeTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteDebrisSpawner", "kMaxLifeTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxLifeTime
void GlobalNamespace::NoteDebrisSpawner::_set_kMaxLifeTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::_set_kMaxLifeTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebrisSpawner", "kMaxLifeTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kLifeTimeOffset
float GlobalNamespace::NoteDebrisSpawner::_get_kLifeTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::_get_kLifeTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteDebrisSpawner", "kLifeTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLifeTimeOffset
void GlobalNamespace::NoteDebrisSpawner::_set_kLifeTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::_set_kLifeTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebrisSpawner", "kLifeTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotation
float& GlobalNamespace::NoteDebrisSpawner::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutDirMultiplier
float& GlobalNamespace::NoteDebrisSpawner::dyn__cutDirMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::dyn__cutDirMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutDirMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fromCenterSpeed
float& GlobalNamespace::NoteDebrisSpawner::dyn__fromCenterSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::dyn__fromCenterSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fromCenterSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveSpeedMultiplier
float& GlobalNamespace::NoteDebrisSpawner::dyn__moveSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::dyn__moveSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NoteDebris/Pool _noteDebrisPool
GlobalNamespace::NoteDebris::Pool*& GlobalNamespace::NoteDebrisSpawner::dyn__noteDebrisPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::dyn__noteDebrisPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDebrisPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteDebris::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteDebrisSpawner.SpawnDebris
void GlobalNamespace::NoteDebrisSpawner::SpawnDebris(UnityEngine::Vector3 cutPoint, UnityEngine::Vector3 cutNormal, float saberSpeed, UnityEngine::Vector3 saberDir, UnityEngine::Vector3 notePos, UnityEngine::Quaternion noteRotation, UnityEngine::Vector3 noteScale, GlobalNamespace::ColorType colorType, float timeToNextColorNote, UnityEngine::Vector3 moveVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::SpawnDebris");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnDebris", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(cutNormal), ::il2cpp_utils::ExtractType(saberSpeed), ::il2cpp_utils::ExtractType(saberDir), ::il2cpp_utils::ExtractType(notePos), ::il2cpp_utils::ExtractType(noteRotation), ::il2cpp_utils::ExtractType(noteScale), ::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(timeToNextColorNote), ::il2cpp_utils::ExtractType(moveVec)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cutPoint, cutNormal, saberSpeed, saberDir, notePos, noteRotation, noteScale, colorType, timeToNextColorNote, moveVec);
}
// Autogenerated method: NoteDebrisSpawner.HandleNoteDebrisDidFinish
void GlobalNamespace::NoteDebrisSpawner::HandleNoteDebrisDidFinish(GlobalNamespace::NoteDebris* noteDebris) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSpawner::HandleNoteDebrisDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDebrisDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteDebris)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteDebris);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObstacleSaberSparkleEffectManager
#include "GlobalNamespace/ObstacleSaberSparkleEffectManager.hpp"
// Including type: ObstacleSaberSparkleEffect
#include "GlobalNamespace/ObstacleSaberSparkleEffect.hpp"
// Including type: Libraries.HM.HMLib.VR.HapticPresetSO
#include "Libraries/HM/HMLib/VR/HapticPresetSO.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ObstacleSaberSparkleEffect _obstacleSaberSparkleEffectPrefab
GlobalNamespace::ObstacleSaberSparkleEffect*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__obstacleSaberSparkleEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__obstacleSaberSparkleEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleSaberSparkleEffectPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleSaberSparkleEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Libraries.HM.HMLib.VR.HapticPresetSO _rumblePreset
Libraries::HM::HMLib::VR::HapticPresetSO*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__rumblePreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__rumblePreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rumblePreset"))->offset;
  return *reinterpret_cast<Libraries::HM::HMLib::VR::HapticPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
GlobalNamespace::SaberManager*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HapticFeedbackController _hapticFeedbackController
GlobalNamespace::HapticFeedbackController*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__hapticFeedbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__hapticFeedbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticFeedbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::HapticFeedbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<SaberType> sparkleEffectDidStartEvent
System::Action_1<GlobalNamespace::SaberType>*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn_sparkleEffectDidStartEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn_sparkleEffectDidStartEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sparkleEffectDidStartEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::SaberType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<SaberType> sparkleEffectDidEndEvent
System::Action_1<GlobalNamespace::SaberType>*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn_sparkleEffectDidEndEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn_sparkleEffectDidEndEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sparkleEffectDidEndEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::SaberType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber[] _sabers
::Array<GlobalNamespace::Saber*>*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__sabers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__sabers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabers"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::Saber*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObstacleSaberSparkleEffect[] _effects
::Array<GlobalNamespace::ObstacleSaberSparkleEffect*>*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__effects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__effects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effects"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::ObstacleSaberSparkleEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _effectsTransforms
::Array<UnityEngine::Transform*>*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__effectsTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__effectsTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectsTransforms"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] _isSystemActive
::Array<bool>*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__isSystemActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__isSystemActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSystemActive"))->offset;
  return *reinterpret_cast<::Array<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] _wasSystemActive
::Array<bool>*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__wasSystemActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__wasSystemActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasSystemActive"))->offset;
  return *reinterpret_cast<::Array<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _burnMarkPositions
::Array<UnityEngine::Vector3>*& GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__burnMarkPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::dyn__burnMarkPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnMarkPositions"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.add_sparkleEffectDidStartEvent
void GlobalNamespace::ObstacleSaberSparkleEffectManager::add_sparkleEffectDidStartEvent(System::Action_1<GlobalNamespace::SaberType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::add_sparkleEffectDidStartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sparkleEffectDidStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.remove_sparkleEffectDidStartEvent
void GlobalNamespace::ObstacleSaberSparkleEffectManager::remove_sparkleEffectDidStartEvent(System::Action_1<GlobalNamespace::SaberType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::remove_sparkleEffectDidStartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sparkleEffectDidStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.add_sparkleEffectDidEndEvent
void GlobalNamespace::ObstacleSaberSparkleEffectManager::add_sparkleEffectDidEndEvent(System::Action_1<GlobalNamespace::SaberType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::add_sparkleEffectDidEndEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sparkleEffectDidEndEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.remove_sparkleEffectDidEndEvent
void GlobalNamespace::ObstacleSaberSparkleEffectManager::remove_sparkleEffectDidEndEvent(System::Action_1<GlobalNamespace::SaberType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::remove_sparkleEffectDidEndEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sparkleEffectDidEndEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.Start
void GlobalNamespace::ObstacleSaberSparkleEffectManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.OnDisable
void GlobalNamespace::ObstacleSaberSparkleEffectManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.Update
void GlobalNamespace::ObstacleSaberSparkleEffectManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.GetEffectRotation
UnityEngine::Quaternion GlobalNamespace::ObstacleSaberSparkleEffectManager::GetEffectRotation(UnityEngine::Vector3 pos, UnityEngine::Transform* transform, UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::GetEffectRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEffectRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(bounds)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method, pos, transform, bounds);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.BurnMarkPosForSaberType
UnityEngine::Vector3 GlobalNamespace::ObstacleSaberSparkleEffectManager::BurnMarkPosForSaberType(GlobalNamespace::SaberType saberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::BurnMarkPosForSaberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BurnMarkPosForSaberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberType)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method, saberType);
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.GetBurnMarkPos
bool GlobalNamespace::ObstacleSaberSparkleEffectManager::GetBurnMarkPos(UnityEngine::Bounds bounds, UnityEngine::Transform* transform, UnityEngine::Vector3 bladeBottomPos, UnityEngine::Vector3 bladeTopPos, ByRef<UnityEngine::Vector3> burnMarkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSparkleEffectManager::GetBurnMarkPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBurnMarkPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(bladeBottomPos), ::il2cpp_utils::ExtractType(bladeTopPos), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, bounds, transform, bladeBottomPos, bladeTopPos, byref(burnMarkPos));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatEffectDidFinishEvent
#include "GlobalNamespace/IBeatEffectDidFinishEvent.hpp"
// Including type: BeatEffect
#include "GlobalNamespace/BeatEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatEffectDidFinishEvent.HandleBeatEffectDidFinish
void GlobalNamespace::IBeatEffectDidFinishEvent::HandleBeatEffectDidFinish(GlobalNamespace::BeatEffect* beatEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatEffectDidFinishEvent::HandleBeatEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatEffect
#include "GlobalNamespace/BeatEffect.hpp"
// Including type: BeatEffect/Pool
#include "GlobalNamespace/BeatEffect_Pool.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: IBeatEffectDidFinishEvent
#include "GlobalNamespace/IBeatEffectDidFinishEvent.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _spriteRenderer
UnityEngine::SpriteRenderer*& GlobalNamespace::BeatEffect::dyn__spriteRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__spriteRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _spriteTransform
UnityEngine::Transform*& GlobalNamespace::BeatEffect::dyn__spriteTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__spriteTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _tubeBloomPrePassLight
GlobalNamespace::TubeBloomPrePassLight*& GlobalNamespace::BeatEffect::dyn__tubeBloomPrePassLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__tubeBloomPrePassLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeBloomPrePassLight"))->offset;
  return *reinterpret_cast<GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _lightIntensityCurve
UnityEngine::AnimationCurve*& GlobalNamespace::BeatEffect::dyn__lightIntensityCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__lightIntensityCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIntensityCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _spriteXScaleCurve
UnityEngine::AnimationCurve*& GlobalNamespace::BeatEffect::dyn__spriteXScaleCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__spriteXScaleCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteXScaleCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _spriteYScaleCurve
UnityEngine::AnimationCurve*& GlobalNamespace::BeatEffect::dyn__spriteYScaleCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__spriteYScaleCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteYScaleCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _transparencyCurve
UnityEngine::AnimationCurve*& GlobalNamespace::BeatEffect::dyn__transparencyCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__transparencyCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transparencyCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<IBeatEffectDidFinishEvent> _didFinishEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::IBeatEffectDidFinishEvent*>*& GlobalNamespace::BeatEffect::dyn__didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::IBeatEffectDidFinishEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationDuration
float& GlobalNamespace::BeatEffect::dyn__animationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__animationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _elapsedTime
float& GlobalNamespace::BeatEffect::dyn__elapsedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__elapsedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elapsedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::BeatEffect::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatEffect.get_didFinishEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::IBeatEffectDidFinishEvent*>* GlobalNamespace::BeatEffect::get_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::get_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::IBeatEffectDidFinishEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BeatEffect.Init
void GlobalNamespace::BeatEffect::Init(UnityEngine::Color color, float animationDuration, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(animationDuration), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color, animationDuration, rotation);
}
// Autogenerated method: BeatEffect.ManualUpdate
void GlobalNamespace::BeatEffect::ManualUpdate(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatEffect::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, deltaTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatEffect/Pool
#include "GlobalNamespace/BeatEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombExplosionEffect
#include "GlobalNamespace/BombExplosionEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _debrisPS
UnityEngine::ParticleSystem*& GlobalNamespace::BombExplosionEffect::dyn__debrisPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExplosionEffect::dyn__debrisPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_debrisPS"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _explosionPS
UnityEngine::ParticleSystem*& GlobalNamespace::BombExplosionEffect::dyn__explosionPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExplosionEffect::dyn__explosionPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionPS"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _debrisCount
int& GlobalNamespace::BombExplosionEffect::dyn__debrisCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExplosionEffect::dyn__debrisCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_debrisCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _explosionParticlesCount
int& GlobalNamespace::BombExplosionEffect::dyn__explosionParticlesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExplosionEffect::dyn__explosionParticlesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionParticlesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _emitParams
UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::BombExplosionEffect::dyn__emitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExplosionEffect::dyn__emitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitParams"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _explosionPSEmitParams
UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::BombExplosionEffect::dyn__explosionPSEmitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExplosionEffect::dyn__explosionPSEmitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionPSEmitParams"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BombExplosionEffect.Awake
void GlobalNamespace::BombExplosionEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExplosionEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BombExplosionEffect.SpawnExplosion
void GlobalNamespace::BombExplosionEffect::SpawnExplosion(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExplosionEffect::SpawnExplosion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnExplosion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CutoutAnimateEffect
#include "GlobalNamespace/CutoutAnimateEffect.hpp"
// Including type: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7
#include "GlobalNamespace/CutoutAnimateEffect_-AnimateToCutoutCoroutine-d__7.hpp"
// Including type: CutoutEffect
#include "GlobalNamespace/CutoutEffect.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CutoutEffect[] _cuttoutEffects
::Array<GlobalNamespace::CutoutEffect*>*& GlobalNamespace::CutoutAnimateEffect::dyn__cuttoutEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::dyn__cuttoutEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cuttoutEffects"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::CutoutEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _transitionCurve
UnityEngine::AnimationCurve*& GlobalNamespace::CutoutAnimateEffect::dyn__transitionCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::dyn__transitionCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <animating>k__BackingField
bool& GlobalNamespace::CutoutAnimateEffect::dyn_$animating$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::dyn_$animating$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<animating>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CutoutAnimateEffect.get_animating
bool GlobalNamespace::CutoutAnimateEffect::get_animating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::get_animating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect.set_animating
void GlobalNamespace::CutoutAnimateEffect::set_animating(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::set_animating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: CutoutAnimateEffect.Start
void GlobalNamespace::CutoutAnimateEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect.AnimateToCutoutCoroutine
System::Collections::IEnumerator* GlobalNamespace::CutoutAnimateEffect::AnimateToCutoutCoroutine(float cutoutStart, float cutoutEnd, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::AnimateToCutoutCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateToCutoutCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutoutStart), ::il2cpp_utils::ExtractType(cutoutEnd), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, cutoutStart, cutoutEnd, duration);
}
// Autogenerated method: CutoutAnimateEffect.SetCutout
void GlobalNamespace::CutoutAnimateEffect::SetCutout(float cutout) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::SetCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutout)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cutout);
}
// Autogenerated method: CutoutAnimateEffect.ResetEffect
void GlobalNamespace::CutoutAnimateEffect::ResetEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::ResetEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect.AnimateCutout
void GlobalNamespace::CutoutAnimateEffect::AnimateCutout(float cutoutStart, float cutoutEnd, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::AnimateCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutoutStart), ::il2cpp_utils::ExtractType(cutoutEnd), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cutoutStart, cutoutEnd, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7
#include "GlobalNamespace/CutoutAnimateEffect_-AnimateToCutoutCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CutoutAnimateEffect <>4__this
GlobalNamespace::CutoutAnimateEffect*& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::CutoutAnimateEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
float& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cutoutStart
float& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_cutoutStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_cutoutStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutoutStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cutoutEnd
float& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_cutoutEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_cutoutEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutoutEnd"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
float& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.MoveNext
bool GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CutoutEffect
#include "GlobalNamespace/CutoutEffect.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3A634
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutoutPropertyID
int GlobalNamespace::CutoutEffect::_get__cutoutPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::_get__cutoutPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CutoutEffect", "_cutoutPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutoutPropertyID
void GlobalNamespace::CutoutEffect::_set__cutoutPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::_set__cutoutPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CutoutEffect", "_cutoutPropertyID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3A644
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutoutTexOffsetPropertyID
int GlobalNamespace::CutoutEffect::_get__cutoutTexOffsetPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::_get__cutoutTexOffsetPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CutoutEffect", "_cutoutTexOffsetPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutoutTexOffsetPropertyID
void GlobalNamespace::CutoutEffect::_set__cutoutTexOffsetPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::_set__cutoutTexOffsetPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CutoutEffect", "_cutoutTexOffsetPropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::CutoutEffect::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _useRandomCutoutOffset
GlobalNamespace::BoolSO*& GlobalNamespace::CutoutEffect::dyn__useRandomCutoutOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::dyn__useRandomCutoutOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useRandomCutoutOffset"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cutoutOffset
UnityEngine::Vector3& GlobalNamespace::CutoutEffect::dyn__cutoutOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::dyn__cutoutOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutoutOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _randomNoiseTexOffset
UnityEngine::Vector3& GlobalNamespace::CutoutEffect::dyn__randomNoiseTexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::dyn__randomNoiseTexOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomNoiseTexOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutout
float& GlobalNamespace::CutoutEffect::dyn__cutout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::dyn__cutout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CutoutEffect.get_useRandomCutoutOffset
bool GlobalNamespace::CutoutEffect::get_useRandomCutoutOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::get_useRandomCutoutOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useRandomCutoutOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CutoutEffect.Start
void GlobalNamespace::CutoutEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CutoutEffect.SetCutout
void GlobalNamespace::CutoutEffect::SetCutout(float cutout) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::SetCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutout)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cutout);
}
// Autogenerated method: CutoutEffect.SetCutout
void GlobalNamespace::CutoutEffect::SetCutout(float cutout, UnityEngine::Vector3 cutoutOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::SetCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutout), ::il2cpp_utils::ExtractType(cutoutOffset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cutout, cutoutOffset);
}
// Autogenerated method: CutoutEffect..cctor
void GlobalNamespace::CutoutEffect::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutoutEffect::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CutoutEffect", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmitParticles
#include "GlobalNamespace/EmitParticles.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
UnityEngine::ParticleSystem*& GlobalNamespace::EmitParticles::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmitParticles::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EmitParticles.Emit
void GlobalNamespace::EmitParticles::Emit(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmitParticles::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FireworkItemController
#include "GlobalNamespace/FireworkItemController.hpp"
// Including type: FireworkItemController/FireworkItemParticleSystem
#include "GlobalNamespace/FireworkItemController_FireworkItemParticleSystem.hpp"
// Including type: FireworkItemController/Pool
#include "GlobalNamespace/FireworkItemController_Pool.hpp"
// Including type: FireworkItemController/<FireCoroutine>d__29
#include "GlobalNamespace/FireworkItemController_-FireCoroutine-d__29.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FireworkItemController/FireworkItemParticleSystem[] _particleSystems
::Array<GlobalNamespace::FireworkItemController::FireworkItemParticleSystem*>*& GlobalNamespace::FireworkItemController::dyn__particleSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__particleSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystems"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::FireworkItemController::FireworkItemParticleSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _lights
::Array<GlobalNamespace::TubeBloomPrePassLight*>*& GlobalNamespace::FireworkItemController::dyn__lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lights"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::TubeBloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
UnityEngine::AudioSource*& GlobalNamespace::FireworkItemController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lightFlashDuration
float& GlobalNamespace::FireworkItemController::dyn__lightFlashDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__lightFlashDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightFlashDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _lightIntensityCurve
UnityEngine::AnimationCurve*& GlobalNamespace::FireworkItemController::dyn__lightIntensityCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__lightIntensityCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIntensityCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lightIntensityMultiplier
float& GlobalNamespace::FireworkItemController::dyn__lightIntensityMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__lightIntensityMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIntensityMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _randomizeColor
bool& GlobalNamespace::FireworkItemController::dyn__randomizeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__randomizeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightsColor
UnityEngine::Color& GlobalNamespace::FireworkItemController::dyn__lightsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__lightsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _lightsColorGradient
UnityEngine::Gradient*& GlobalNamespace::FireworkItemController::dyn__lightsColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__lightsColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsColorGradient"))->offset;
  return *reinterpret_cast<UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _randomizeSpeed
bool& GlobalNamespace::FireworkItemController::dyn__randomizeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__randomizeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeSpeed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minSpeedMultiplier
float& GlobalNamespace::FireworkItemController::dyn__minSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__minSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxSpeedMultiplier
float& GlobalNamespace::FireworkItemController::dyn__maxSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__maxSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _explosionClips
::Array<UnityEngine::AudioClip*>*& GlobalNamespace::FireworkItemController::dyn__explosionClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__explosionClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionClips"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _randomAudioPicker
GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>*& GlobalNamespace::FireworkItemController::dyn__randomAudioPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__randomAudioPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomAudioPicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight _directionalLight
GlobalNamespace::DirectionalLight*& GlobalNamespace::FireworkItemController::dyn__directionalLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__directionalLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLight"))->offset;
  return *reinterpret_cast<GlobalNamespace::DirectionalLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _directionalLightIntensity
float& GlobalNamespace::FireworkItemController::dyn__directionalLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__directionalLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::FireworkItemController::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<FireworkItemController> didFinishEvent
System::Action_1<GlobalNamespace::FireworkItemController*>*& GlobalNamespace::FireworkItemController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::FireworkItemController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworkItemController.set_directionalLight
void GlobalNamespace::FireworkItemController::set_directionalLight(GlobalNamespace::DirectionalLight* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::set_directionalLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionalLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: FireworkItemController.set_directionalLightIntensity
void GlobalNamespace::FireworkItemController::set_directionalLightIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::set_directionalLightIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionalLightIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: FireworkItemController.add_didFinishEvent
void GlobalNamespace::FireworkItemController::add_didFinishEvent(System::Action_1<GlobalNamespace::FireworkItemController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: FireworkItemController.remove_didFinishEvent
void GlobalNamespace::FireworkItemController::remove_didFinishEvent(System::Action_1<GlobalNamespace::FireworkItemController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: FireworkItemController.Awake
void GlobalNamespace::FireworkItemController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworkItemController.OnDisable
void GlobalNamespace::FireworkItemController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworkItemController.Fire
void GlobalNamespace::FireworkItemController::Fire() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::Fire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworkItemController.FireCoroutine
System::Collections::IEnumerator* GlobalNamespace::FireworkItemController::FireCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::FireCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworkItemController.SetLightsColor
void GlobalNamespace::FireworkItemController::SetLightsColor(float intensity) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::SetLightsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLightsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intensity)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, intensity);
}
// Autogenerated method: FireworkItemController.PlayExplosionSound
void GlobalNamespace::FireworkItemController::PlayExplosionSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::PlayExplosionSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayExplosionSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworkItemController.InitializeParticleSystem
void GlobalNamespace::FireworkItemController::InitializeParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::InitializeParticleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeParticleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FireworkItemController/FireworkItemParticleSystem
#include "GlobalNamespace/FireworkItemController_FireworkItemParticleSystem.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem _particleSystem
UnityEngine::ParticleSystem*& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _isSubemitter
bool& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__isSubemitter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__isSubemitter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSubemitter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useMainColor
bool& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__useMainColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__useMainColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useMainColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useOwnGradient
bool& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__useOwnGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__useOwnGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useOwnGradient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Gradient _particleColorGradient
UnityEngine::Gradient*& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__particleColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__particleColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleColorGradient"))->offset;
  return *reinterpret_cast<UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _randomizeSpeed
bool& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__randomizeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__randomizeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeSpeed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FireworkItemController/Pool
#include "GlobalNamespace/FireworkItemController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FireworkItemController/<FireCoroutine>d__29
#include "GlobalNamespace/FireworkItemController_-FireCoroutine-d__29.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FireworkItemController <>4__this
GlobalNamespace::FireworkItemController*& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::FireworkItemController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <soundTimeToCenter>5__2
float& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$soundTimeToCenter$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$soundTimeToCenter$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<soundTimeToCenter>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__3
float& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$elapsedTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$elapsedTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <explosionSoundFired>5__4
bool& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$explosionSoundFired$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$explosionSoundFired$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<explosionSoundFired>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.System.IDisposable.Dispose
void GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.MoveNext
bool GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.System.Collections.IEnumerator.Reset
void GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FireworksController
#include "GlobalNamespace/FireworksController.hpp"
// Including type: FireworksController/<SpawningCoroutine>d__8
#include "GlobalNamespace/FireworksController_-SpawningCoroutine-d__8.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: FireworkItemController/Pool
#include "GlobalNamespace/FireworkItemController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _spawnSize
UnityEngine::Vector3& GlobalNamespace::FireworksController::dyn__spawnSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::dyn__spawnSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnSize"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minSpawnInterval
float& GlobalNamespace::FireworksController::dyn__minSpawnInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::dyn__minSpawnInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minSpawnInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxSpawnInterval
float& GlobalNamespace::FireworksController::dyn__maxSpawnInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::dyn__maxSpawnInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSpawnInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight[] _directionalLights
::Array<GlobalNamespace::DirectionalLight*>*& GlobalNamespace::FireworksController::dyn__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::dyn__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::DirectionalLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lightsIntensity
float& GlobalNamespace::FireworksController::dyn__lightsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::dyn__lightsIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentLightId
int& GlobalNamespace::FireworksController::dyn__currentLightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::dyn__currentLightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentLightId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FireworkItemController/Pool _fireworkItemPool
GlobalNamespace::FireworkItemController::Pool*& GlobalNamespace::FireworksController::dyn__fireworkItemPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::dyn__fireworkItemPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireworkItemPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::FireworkItemController::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworksController.OnEnable
void GlobalNamespace::FireworksController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworksController.SpawningCoroutine
System::Collections::IEnumerator* GlobalNamespace::FireworksController::SpawningCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::SpawningCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawningCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworksController.HandleFireworkItemControllerDidFinish
void GlobalNamespace::FireworksController::HandleFireworkItemControllerDidFinish(GlobalNamespace::FireworkItemController* fireworkItemController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::HandleFireworkItemControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFireworkItemControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fireworkItemController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, fireworkItemController);
}
// Autogenerated method: FireworksController.OnDrawGizmosSelected
void GlobalNamespace::FireworksController::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FireworksController/<SpawningCoroutine>d__8
#include "GlobalNamespace/FireworksController_-SpawningCoroutine-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FireworksController <>4__this
GlobalNamespace::FireworksController*& GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::FireworksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.System.IDisposable.Dispose
void GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.MoveNext
bool GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FireworksItemPoolInstaller
#include "GlobalNamespace/FireworksItemPoolInstaller.hpp"
// Including type: FireworksController
#include "GlobalNamespace/FireworksController.hpp"
// Including type: FireworkItemController
#include "GlobalNamespace/FireworkItemController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FireworksController _fireworksController
GlobalNamespace::FireworksController*& GlobalNamespace::FireworksItemPoolInstaller::dyn__fireworksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksItemPoolInstaller::dyn__fireworksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireworksController"))->offset;
  return *reinterpret_cast<GlobalNamespace::FireworksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FireworkItemController _fireworkItemControllerPrefab
GlobalNamespace::FireworkItemController*& GlobalNamespace::FireworksItemPoolInstaller::dyn__fireworkItemControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksItemPoolInstaller::dyn__fireworkItemControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireworkItemControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::FireworkItemController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworksItemPoolInstaller.InstallBindings
void GlobalNamespace::FireworksItemPoolInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworksItemPoolInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IFlyingObjectEffectDidFinishEvent
#include "GlobalNamespace/IFlyingObjectEffectDidFinishEvent.hpp"
// Including type: FlyingObjectEffect
#include "GlobalNamespace/FlyingObjectEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IFlyingObjectEffectDidFinishEvent.HandleFlyingObjectEffectDidFinish
void GlobalNamespace::IFlyingObjectEffectDidFinishEvent::HandleFlyingObjectEffectDidFinish(GlobalNamespace::FlyingObjectEffect* flyingObjectEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IFlyingObjectEffectDidFinishEvent::HandleFlyingObjectEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFlyingObjectEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flyingObjectEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flyingObjectEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingObjectEffect
#include "GlobalNamespace/FlyingObjectEffect.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: IFlyingObjectEffectDidFinishEvent
#include "GlobalNamespace/IFlyingObjectEffectDidFinishEvent.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _moveAnimationCurve
UnityEngine::AnimationCurve*& GlobalNamespace::FlyingObjectEffect::dyn__moveAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__moveAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveAnimationCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shakeFrequency
float& GlobalNamespace::FlyingObjectEffect::dyn__shakeFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__shakeFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shakeFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shakeStrength
float& GlobalNamespace::FlyingObjectEffect::dyn__shakeStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__shakeStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shakeStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _shakeStrengthAnimationCurve
UnityEngine::AnimationCurve*& GlobalNamespace::FlyingObjectEffect::dyn__shakeStrengthAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__shakeStrengthAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shakeStrengthAnimationCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::FlyingObjectEffect::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _shakeRotation
UnityEngine::Quaternion& GlobalNamespace::FlyingObjectEffect::dyn__shakeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__shakeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shakeRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotation
UnityEngine::Quaternion& GlobalNamespace::FlyingObjectEffect::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _elapsedTime
float& GlobalNamespace::FlyingObjectEffect::dyn__elapsedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__elapsedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elapsedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPos
UnityEngine::Vector3& GlobalNamespace::FlyingObjectEffect::dyn__startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _targetPos
UnityEngine::Vector3& GlobalNamespace::FlyingObjectEffect::dyn__targetPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__targetPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float& GlobalNamespace::FlyingObjectEffect::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shake
bool& GlobalNamespace::FlyingObjectEffect::dyn__shake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__shake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<IFlyingObjectEffectDidFinishEvent> _didFinishEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>*& GlobalNamespace::FlyingObjectEffect::dyn__didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::dyn__didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingObjectEffect.get_didFinishEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>* GlobalNamespace::FlyingObjectEffect::get_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::get_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlyingObjectEffect.InitAndPresent
void GlobalNamespace::FlyingObjectEffect::InitAndPresent(float duration, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion rotation, bool shake) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(shake)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, duration, targetPos, rotation, shake);
}
// Autogenerated method: FlyingObjectEffect.Update
void GlobalNamespace::FlyingObjectEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlyingObjectEffect.ManualUpdate
void GlobalNamespace::FlyingObjectEffect::ManualUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingObjectEffect::ManualUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlyingScoreEffect
#include "GlobalNamespace/FlyingScoreEffect.hpp"
// Including type: FlyingScoreEffect/Pool
#include "GlobalNamespace/FlyingScoreEffect_Pool.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _fadeAnimationCurve
UnityEngine::AnimationCurve*& GlobalNamespace::FlyingScoreEffect::dyn__fadeAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::dyn__fadeAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeAnimationCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _maxCutDistanceScoreIndicator
UnityEngine::SpriteRenderer*& GlobalNamespace::FlyingScoreEffect::dyn__maxCutDistanceScoreIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::dyn__maxCutDistanceScoreIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCutDistanceScoreIndicator"))->offset;
  return *reinterpret_cast<UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _text
TMPro::TextMeshPro*& GlobalNamespace::FlyingScoreEffect::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::FlyingScoreEffect::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _colorAMultiplier
float& GlobalNamespace::FlyingScoreEffect::dyn__colorAMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::dyn__colorAMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorAMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ISaberSwingRatingCounter _saberSwingRatingCounter
GlobalNamespace::ISaberSwingRatingCounter*& GlobalNamespace::FlyingScoreEffect::dyn__saberSwingRatingCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::dyn__saberSwingRatingCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberSwingRatingCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::ISaberSwingRatingCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutDistanceToCenter
float& GlobalNamespace::FlyingScoreEffect::dyn__cutDistanceToCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::dyn__cutDistanceToCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutDistanceToCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _registeredToCallbacks
bool& GlobalNamespace::FlyingScoreEffect::dyn__registeredToCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::dyn__registeredToCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_registeredToCallbacks"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingScoreEffect.InitAndPresent
void GlobalNamespace::FlyingScoreEffect::InitAndPresent(ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo, int multiplier, float duration, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion rotation, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(multiplier), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(noteCutInfo), multiplier, duration, targetPos, rotation, color);
}
// Autogenerated method: FlyingScoreEffect.HandleSaberSwingRatingCounterDidChange
void GlobalNamespace::FlyingScoreEffect::HandleSaberSwingRatingCounterDidChange(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter, float rating) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::HandleSaberSwingRatingCounterDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberSwingRatingCounter), ::il2cpp_utils::ExtractType(rating)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saberSwingRatingCounter, rating);
}
// Autogenerated method: FlyingScoreEffect.GetScoreText
::Il2CppString* GlobalNamespace::FlyingScoreEffect::GetScoreText(int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::GetScoreText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScoreText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, score);
}
// Autogenerated method: FlyingScoreEffect.HandleSaberSwingRatingCounterDidFinish
void GlobalNamespace::FlyingScoreEffect::HandleSaberSwingRatingCounterDidFinish(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::HandleSaberSwingRatingCounterDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberSwingRatingCounter)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saberSwingRatingCounter);
}
// Autogenerated method: FlyingScoreEffect.UnregisterCallbacksIfNeeded
void GlobalNamespace::FlyingScoreEffect::UnregisterCallbacksIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::UnregisterCallbacksIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterCallbacksIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FlyingScoreEffect.ManualUpdate
void GlobalNamespace::FlyingScoreEffect::ManualUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FlyingScoreEffect::ManualUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t);
}
